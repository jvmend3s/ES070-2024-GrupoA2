
Carro Seguidor.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001d8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000f03c  080001e0  080001e0  000011e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000438  0800f220  0800f220  00010220  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800f658  0800f658  00011210  2**0
                  CONTENTS
  4 .ARM          00000008  0800f658  0800f658  00010658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800f660  0800f660  00011210  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800f660  0800f660  00010660  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800f664  0800f664  00010664  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000210  20000000  0800f668  00011000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000ba8  20000210  0800f878  00011210  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000db8  0800f878  00011db8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00011210  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001d536  00000000  00000000  00011240  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000040ed  00000000  00000000  0002e776  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001790  00000000  00000000  00032868  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000123d  00000000  00000000  00033ff8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002a273  00000000  00000000  00035235  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00020020  00000000  00000000  0005f4a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0010261f  00000000  00000000  0007f4c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00181ae7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00007544  00000000  00000000  00181b2c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000098  00000000  00000000  00189070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e0 <__do_global_dtors_aux>:
 80001e0:	b510      	push	{r4, lr}
 80001e2:	4c05      	ldr	r4, [pc, #20]	@ (80001f8 <__do_global_dtors_aux+0x18>)
 80001e4:	7823      	ldrb	r3, [r4, #0]
 80001e6:	b933      	cbnz	r3, 80001f6 <__do_global_dtors_aux+0x16>
 80001e8:	4b04      	ldr	r3, [pc, #16]	@ (80001fc <__do_global_dtors_aux+0x1c>)
 80001ea:	b113      	cbz	r3, 80001f2 <__do_global_dtors_aux+0x12>
 80001ec:	4804      	ldr	r0, [pc, #16]	@ (8000200 <__do_global_dtors_aux+0x20>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	2301      	movs	r3, #1
 80001f4:	7023      	strb	r3, [r4, #0]
 80001f6:	bd10      	pop	{r4, pc}
 80001f8:	20000210 	.word	0x20000210
 80001fc:	00000000 	.word	0x00000000
 8000200:	0800f204 	.word	0x0800f204

08000204 <frame_dummy>:
 8000204:	b508      	push	{r3, lr}
 8000206:	4b03      	ldr	r3, [pc, #12]	@ (8000214 <frame_dummy+0x10>)
 8000208:	b11b      	cbz	r3, 8000212 <frame_dummy+0xe>
 800020a:	4903      	ldr	r1, [pc, #12]	@ (8000218 <frame_dummy+0x14>)
 800020c:	4803      	ldr	r0, [pc, #12]	@ (800021c <frame_dummy+0x18>)
 800020e:	f3af 8000 	nop.w
 8000212:	bd08      	pop	{r3, pc}
 8000214:	00000000 	.word	0x00000000
 8000218:	20000214 	.word	0x20000214
 800021c:	0800f204 	.word	0x0800f204

08000220 <strlen>:
 8000220:	4603      	mov	r3, r0
 8000222:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000226:	2a00      	cmp	r2, #0
 8000228:	d1fb      	bne.n	8000222 <strlen+0x2>
 800022a:	1a18      	subs	r0, r3, r0
 800022c:	3801      	subs	r0, #1
 800022e:	4770      	bx	lr

08000230 <memchr>:
 8000230:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000234:	2a10      	cmp	r2, #16
 8000236:	db2b      	blt.n	8000290 <memchr+0x60>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	d008      	beq.n	8000250 <memchr+0x20>
 800023e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000242:	3a01      	subs	r2, #1
 8000244:	428b      	cmp	r3, r1
 8000246:	d02d      	beq.n	80002a4 <memchr+0x74>
 8000248:	f010 0f07 	tst.w	r0, #7
 800024c:	b342      	cbz	r2, 80002a0 <memchr+0x70>
 800024e:	d1f6      	bne.n	800023e <memchr+0xe>
 8000250:	b4f0      	push	{r4, r5, r6, r7}
 8000252:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000256:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800025a:	f022 0407 	bic.w	r4, r2, #7
 800025e:	f07f 0700 	mvns.w	r7, #0
 8000262:	2300      	movs	r3, #0
 8000264:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000268:	3c08      	subs	r4, #8
 800026a:	ea85 0501 	eor.w	r5, r5, r1
 800026e:	ea86 0601 	eor.w	r6, r6, r1
 8000272:	fa85 f547 	uadd8	r5, r5, r7
 8000276:	faa3 f587 	sel	r5, r3, r7
 800027a:	fa86 f647 	uadd8	r6, r6, r7
 800027e:	faa5 f687 	sel	r6, r5, r7
 8000282:	b98e      	cbnz	r6, 80002a8 <memchr+0x78>
 8000284:	d1ee      	bne.n	8000264 <memchr+0x34>
 8000286:	bcf0      	pop	{r4, r5, r6, r7}
 8000288:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800028c:	f002 0207 	and.w	r2, r2, #7
 8000290:	b132      	cbz	r2, 80002a0 <memchr+0x70>
 8000292:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000296:	3a01      	subs	r2, #1
 8000298:	ea83 0301 	eor.w	r3, r3, r1
 800029c:	b113      	cbz	r3, 80002a4 <memchr+0x74>
 800029e:	d1f8      	bne.n	8000292 <memchr+0x62>
 80002a0:	2000      	movs	r0, #0
 80002a2:	4770      	bx	lr
 80002a4:	3801      	subs	r0, #1
 80002a6:	4770      	bx	lr
 80002a8:	2d00      	cmp	r5, #0
 80002aa:	bf06      	itte	eq
 80002ac:	4635      	moveq	r5, r6
 80002ae:	3803      	subeq	r0, #3
 80002b0:	3807      	subne	r0, #7
 80002b2:	f015 0f01 	tst.w	r5, #1
 80002b6:	d107      	bne.n	80002c8 <memchr+0x98>
 80002b8:	3001      	adds	r0, #1
 80002ba:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80002be:	bf02      	ittt	eq
 80002c0:	3001      	addeq	r0, #1
 80002c2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002c6:	3001      	addeq	r0, #1
 80002c8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ca:	3801      	subs	r0, #1
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop

080002d0 <__aeabi_drsub>:
 80002d0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002d4:	e002      	b.n	80002dc <__adddf3>
 80002d6:	bf00      	nop

080002d8 <__aeabi_dsub>:
 80002d8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002dc <__adddf3>:
 80002dc:	b530      	push	{r4, r5, lr}
 80002de:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002e2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002e6:	ea94 0f05 	teq	r4, r5
 80002ea:	bf08      	it	eq
 80002ec:	ea90 0f02 	teqeq	r0, r2
 80002f0:	bf1f      	itttt	ne
 80002f2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002f6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002fa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002fe:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000302:	f000 80e2 	beq.w	80004ca <__adddf3+0x1ee>
 8000306:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800030a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800030e:	bfb8      	it	lt
 8000310:	426d      	neglt	r5, r5
 8000312:	dd0c      	ble.n	800032e <__adddf3+0x52>
 8000314:	442c      	add	r4, r5
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	ea82 0000 	eor.w	r0, r2, r0
 8000322:	ea83 0101 	eor.w	r1, r3, r1
 8000326:	ea80 0202 	eor.w	r2, r0, r2
 800032a:	ea81 0303 	eor.w	r3, r1, r3
 800032e:	2d36      	cmp	r5, #54	@ 0x36
 8000330:	bf88      	it	hi
 8000332:	bd30      	pophi	{r4, r5, pc}
 8000334:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000338:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800033c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000340:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000344:	d002      	beq.n	800034c <__adddf3+0x70>
 8000346:	4240      	negs	r0, r0
 8000348:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800034c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000350:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000354:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000358:	d002      	beq.n	8000360 <__adddf3+0x84>
 800035a:	4252      	negs	r2, r2
 800035c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000360:	ea94 0f05 	teq	r4, r5
 8000364:	f000 80a7 	beq.w	80004b6 <__adddf3+0x1da>
 8000368:	f1a4 0401 	sub.w	r4, r4, #1
 800036c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000370:	db0d      	blt.n	800038e <__adddf3+0xb2>
 8000372:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000376:	fa22 f205 	lsr.w	r2, r2, r5
 800037a:	1880      	adds	r0, r0, r2
 800037c:	f141 0100 	adc.w	r1, r1, #0
 8000380:	fa03 f20e 	lsl.w	r2, r3, lr
 8000384:	1880      	adds	r0, r0, r2
 8000386:	fa43 f305 	asr.w	r3, r3, r5
 800038a:	4159      	adcs	r1, r3
 800038c:	e00e      	b.n	80003ac <__adddf3+0xd0>
 800038e:	f1a5 0520 	sub.w	r5, r5, #32
 8000392:	f10e 0e20 	add.w	lr, lr, #32
 8000396:	2a01      	cmp	r2, #1
 8000398:	fa03 fc0e 	lsl.w	ip, r3, lr
 800039c:	bf28      	it	cs
 800039e:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003a2:	fa43 f305 	asr.w	r3, r3, r5
 80003a6:	18c0      	adds	r0, r0, r3
 80003a8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003ac:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003b0:	d507      	bpl.n	80003c2 <__adddf3+0xe6>
 80003b2:	f04f 0e00 	mov.w	lr, #0
 80003b6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003ba:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003be:	eb6e 0101 	sbc.w	r1, lr, r1
 80003c2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003c6:	d31b      	bcc.n	8000400 <__adddf3+0x124>
 80003c8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003cc:	d30c      	bcc.n	80003e8 <__adddf3+0x10c>
 80003ce:	0849      	lsrs	r1, r1, #1
 80003d0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003d4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003d8:	f104 0401 	add.w	r4, r4, #1
 80003dc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003e0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003e4:	f080 809a 	bcs.w	800051c <__adddf3+0x240>
 80003e8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ec:	bf08      	it	eq
 80003ee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003f2:	f150 0000 	adcs.w	r0, r0, #0
 80003f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003fa:	ea41 0105 	orr.w	r1, r1, r5
 80003fe:	bd30      	pop	{r4, r5, pc}
 8000400:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000404:	4140      	adcs	r0, r0
 8000406:	eb41 0101 	adc.w	r1, r1, r1
 800040a:	3c01      	subs	r4, #1
 800040c:	bf28      	it	cs
 800040e:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000412:	d2e9      	bcs.n	80003e8 <__adddf3+0x10c>
 8000414:	f091 0f00 	teq	r1, #0
 8000418:	bf04      	itt	eq
 800041a:	4601      	moveq	r1, r0
 800041c:	2000      	moveq	r0, #0
 800041e:	fab1 f381 	clz	r3, r1
 8000422:	bf08      	it	eq
 8000424:	3320      	addeq	r3, #32
 8000426:	f1a3 030b 	sub.w	r3, r3, #11
 800042a:	f1b3 0220 	subs.w	r2, r3, #32
 800042e:	da0c      	bge.n	800044a <__adddf3+0x16e>
 8000430:	320c      	adds	r2, #12
 8000432:	dd08      	ble.n	8000446 <__adddf3+0x16a>
 8000434:	f102 0c14 	add.w	ip, r2, #20
 8000438:	f1c2 020c 	rsb	r2, r2, #12
 800043c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000440:	fa21 f102 	lsr.w	r1, r1, r2
 8000444:	e00c      	b.n	8000460 <__adddf3+0x184>
 8000446:	f102 0214 	add.w	r2, r2, #20
 800044a:	bfd8      	it	le
 800044c:	f1c2 0c20 	rsble	ip, r2, #32
 8000450:	fa01 f102 	lsl.w	r1, r1, r2
 8000454:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000458:	bfdc      	itt	le
 800045a:	ea41 010c 	orrle.w	r1, r1, ip
 800045e:	4090      	lslle	r0, r2
 8000460:	1ae4      	subs	r4, r4, r3
 8000462:	bfa2      	ittt	ge
 8000464:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000468:	4329      	orrge	r1, r5
 800046a:	bd30      	popge	{r4, r5, pc}
 800046c:	ea6f 0404 	mvn.w	r4, r4
 8000470:	3c1f      	subs	r4, #31
 8000472:	da1c      	bge.n	80004ae <__adddf3+0x1d2>
 8000474:	340c      	adds	r4, #12
 8000476:	dc0e      	bgt.n	8000496 <__adddf3+0x1ba>
 8000478:	f104 0414 	add.w	r4, r4, #20
 800047c:	f1c4 0220 	rsb	r2, r4, #32
 8000480:	fa20 f004 	lsr.w	r0, r0, r4
 8000484:	fa01 f302 	lsl.w	r3, r1, r2
 8000488:	ea40 0003 	orr.w	r0, r0, r3
 800048c:	fa21 f304 	lsr.w	r3, r1, r4
 8000490:	ea45 0103 	orr.w	r1, r5, r3
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f1c4 040c 	rsb	r4, r4, #12
 800049a:	f1c4 0220 	rsb	r2, r4, #32
 800049e:	fa20 f002 	lsr.w	r0, r0, r2
 80004a2:	fa01 f304 	lsl.w	r3, r1, r4
 80004a6:	ea40 0003 	orr.w	r0, r0, r3
 80004aa:	4629      	mov	r1, r5
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	fa21 f004 	lsr.w	r0, r1, r4
 80004b2:	4629      	mov	r1, r5
 80004b4:	bd30      	pop	{r4, r5, pc}
 80004b6:	f094 0f00 	teq	r4, #0
 80004ba:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004be:	bf06      	itte	eq
 80004c0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004c4:	3401      	addeq	r4, #1
 80004c6:	3d01      	subne	r5, #1
 80004c8:	e74e      	b.n	8000368 <__adddf3+0x8c>
 80004ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ce:	bf18      	it	ne
 80004d0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004d4:	d029      	beq.n	800052a <__adddf3+0x24e>
 80004d6:	ea94 0f05 	teq	r4, r5
 80004da:	bf08      	it	eq
 80004dc:	ea90 0f02 	teqeq	r0, r2
 80004e0:	d005      	beq.n	80004ee <__adddf3+0x212>
 80004e2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004e6:	bf04      	itt	eq
 80004e8:	4619      	moveq	r1, r3
 80004ea:	4610      	moveq	r0, r2
 80004ec:	bd30      	pop	{r4, r5, pc}
 80004ee:	ea91 0f03 	teq	r1, r3
 80004f2:	bf1e      	ittt	ne
 80004f4:	2100      	movne	r1, #0
 80004f6:	2000      	movne	r0, #0
 80004f8:	bd30      	popne	{r4, r5, pc}
 80004fa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004fe:	d105      	bne.n	800050c <__adddf3+0x230>
 8000500:	0040      	lsls	r0, r0, #1
 8000502:	4149      	adcs	r1, r1
 8000504:	bf28      	it	cs
 8000506:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 800050a:	bd30      	pop	{r4, r5, pc}
 800050c:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000510:	bf3c      	itt	cc
 8000512:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000516:	bd30      	popcc	{r4, r5, pc}
 8000518:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800051c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000520:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000524:	f04f 0000 	mov.w	r0, #0
 8000528:	bd30      	pop	{r4, r5, pc}
 800052a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800052e:	bf1a      	itte	ne
 8000530:	4619      	movne	r1, r3
 8000532:	4610      	movne	r0, r2
 8000534:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000538:	bf1c      	itt	ne
 800053a:	460b      	movne	r3, r1
 800053c:	4602      	movne	r2, r0
 800053e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000542:	bf06      	itte	eq
 8000544:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000548:	ea91 0f03 	teqeq	r1, r3
 800054c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000550:	bd30      	pop	{r4, r5, pc}
 8000552:	bf00      	nop

08000554 <__aeabi_ui2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f04f 0500 	mov.w	r5, #0
 800056c:	f04f 0100 	mov.w	r1, #0
 8000570:	e750      	b.n	8000414 <__adddf3+0x138>
 8000572:	bf00      	nop

08000574 <__aeabi_i2d>:
 8000574:	f090 0f00 	teq	r0, #0
 8000578:	bf04      	itt	eq
 800057a:	2100      	moveq	r1, #0
 800057c:	4770      	bxeq	lr
 800057e:	b530      	push	{r4, r5, lr}
 8000580:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000584:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000588:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800058c:	bf48      	it	mi
 800058e:	4240      	negmi	r0, r0
 8000590:	f04f 0100 	mov.w	r1, #0
 8000594:	e73e      	b.n	8000414 <__adddf3+0x138>
 8000596:	bf00      	nop

08000598 <__aeabi_f2d>:
 8000598:	0042      	lsls	r2, r0, #1
 800059a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800059e:	ea4f 0131 	mov.w	r1, r1, rrx
 80005a2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005a6:	bf1f      	itttt	ne
 80005a8:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80005ac:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005b0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005b4:	4770      	bxne	lr
 80005b6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005ba:	bf08      	it	eq
 80005bc:	4770      	bxeq	lr
 80005be:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005c2:	bf04      	itt	eq
 80005c4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005c8:	4770      	bxeq	lr
 80005ca:	b530      	push	{r4, r5, lr}
 80005cc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005d0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005d4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005d8:	e71c      	b.n	8000414 <__adddf3+0x138>
 80005da:	bf00      	nop

080005dc <__aeabi_ul2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f04f 0500 	mov.w	r5, #0
 80005ea:	e00a      	b.n	8000602 <__aeabi_l2d+0x16>

080005ec <__aeabi_l2d>:
 80005ec:	ea50 0201 	orrs.w	r2, r0, r1
 80005f0:	bf08      	it	eq
 80005f2:	4770      	bxeq	lr
 80005f4:	b530      	push	{r4, r5, lr}
 80005f6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005fa:	d502      	bpl.n	8000602 <__aeabi_l2d+0x16>
 80005fc:	4240      	negs	r0, r0
 80005fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000602:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000606:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 800060a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800060e:	f43f aed8 	beq.w	80003c2 <__adddf3+0xe6>
 8000612:	f04f 0203 	mov.w	r2, #3
 8000616:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800061a:	bf18      	it	ne
 800061c:	3203      	addne	r2, #3
 800061e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000622:	bf18      	it	ne
 8000624:	3203      	addne	r2, #3
 8000626:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800062a:	f1c2 0320 	rsb	r3, r2, #32
 800062e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000632:	fa20 f002 	lsr.w	r0, r0, r2
 8000636:	fa01 fe03 	lsl.w	lr, r1, r3
 800063a:	ea40 000e 	orr.w	r0, r0, lr
 800063e:	fa21 f102 	lsr.w	r1, r1, r2
 8000642:	4414      	add	r4, r2
 8000644:	e6bd      	b.n	80003c2 <__adddf3+0xe6>
 8000646:	bf00      	nop

08000648 <__aeabi_dmul>:
 8000648:	b570      	push	{r4, r5, r6, lr}
 800064a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800064e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000652:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000656:	bf1d      	ittte	ne
 8000658:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800065c:	ea94 0f0c 	teqne	r4, ip
 8000660:	ea95 0f0c 	teqne	r5, ip
 8000664:	f000 f8de 	bleq	8000824 <__aeabi_dmul+0x1dc>
 8000668:	442c      	add	r4, r5
 800066a:	ea81 0603 	eor.w	r6, r1, r3
 800066e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000672:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000676:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800067a:	bf18      	it	ne
 800067c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000680:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000684:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000688:	d038      	beq.n	80006fc <__aeabi_dmul+0xb4>
 800068a:	fba0 ce02 	umull	ip, lr, r0, r2
 800068e:	f04f 0500 	mov.w	r5, #0
 8000692:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000696:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800069a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800069e:	f04f 0600 	mov.w	r6, #0
 80006a2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006a6:	f09c 0f00 	teq	ip, #0
 80006aa:	bf18      	it	ne
 80006ac:	f04e 0e01 	orrne.w	lr, lr, #1
 80006b0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006b4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006b8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006bc:	d204      	bcs.n	80006c8 <__aeabi_dmul+0x80>
 80006be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006c2:	416d      	adcs	r5, r5
 80006c4:	eb46 0606 	adc.w	r6, r6, r6
 80006c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006dc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006e0:	bf88      	it	hi
 80006e2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006e6:	d81e      	bhi.n	8000726 <__aeabi_dmul+0xde>
 80006e8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ec:	bf08      	it	eq
 80006ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006f2:	f150 0000 	adcs.w	r0, r0, #0
 80006f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	pop	{r4, r5, r6, pc}
 80006fc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000700:	ea46 0101 	orr.w	r1, r6, r1
 8000704:	ea40 0002 	orr.w	r0, r0, r2
 8000708:	ea81 0103 	eor.w	r1, r1, r3
 800070c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000710:	bfc2      	ittt	gt
 8000712:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000716:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800071a:	bd70      	popgt	{r4, r5, r6, pc}
 800071c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000720:	f04f 0e00 	mov.w	lr, #0
 8000724:	3c01      	subs	r4, #1
 8000726:	f300 80ab 	bgt.w	8000880 <__aeabi_dmul+0x238>
 800072a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800072e:	bfde      	ittt	le
 8000730:	2000      	movle	r0, #0
 8000732:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000736:	bd70      	pople	{r4, r5, r6, pc}
 8000738:	f1c4 0400 	rsb	r4, r4, #0
 800073c:	3c20      	subs	r4, #32
 800073e:	da35      	bge.n	80007ac <__aeabi_dmul+0x164>
 8000740:	340c      	adds	r4, #12
 8000742:	dc1b      	bgt.n	800077c <__aeabi_dmul+0x134>
 8000744:	f104 0414 	add.w	r4, r4, #20
 8000748:	f1c4 0520 	rsb	r5, r4, #32
 800074c:	fa00 f305 	lsl.w	r3, r0, r5
 8000750:	fa20 f004 	lsr.w	r0, r0, r4
 8000754:	fa01 f205 	lsl.w	r2, r1, r5
 8000758:	ea40 0002 	orr.w	r0, r0, r2
 800075c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000760:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000764:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000768:	fa21 f604 	lsr.w	r6, r1, r4
 800076c:	eb42 0106 	adc.w	r1, r2, r6
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 040c 	rsb	r4, r4, #12
 8000780:	f1c4 0520 	rsb	r5, r4, #32
 8000784:	fa00 f304 	lsl.w	r3, r0, r4
 8000788:	fa20 f005 	lsr.w	r0, r0, r5
 800078c:	fa01 f204 	lsl.w	r2, r1, r4
 8000790:	ea40 0002 	orr.w	r0, r0, r2
 8000794:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000798:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800079c:	f141 0100 	adc.w	r1, r1, #0
 80007a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007a4:	bf08      	it	eq
 80007a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007aa:	bd70      	pop	{r4, r5, r6, pc}
 80007ac:	f1c4 0520 	rsb	r5, r4, #32
 80007b0:	fa00 f205 	lsl.w	r2, r0, r5
 80007b4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007b8:	fa20 f304 	lsr.w	r3, r0, r4
 80007bc:	fa01 f205 	lsl.w	r2, r1, r5
 80007c0:	ea43 0302 	orr.w	r3, r3, r2
 80007c4:	fa21 f004 	lsr.w	r0, r1, r4
 80007c8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007cc:	fa21 f204 	lsr.w	r2, r1, r4
 80007d0:	ea20 0002 	bic.w	r0, r0, r2
 80007d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007dc:	bf08      	it	eq
 80007de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007e2:	bd70      	pop	{r4, r5, r6, pc}
 80007e4:	f094 0f00 	teq	r4, #0
 80007e8:	d10f      	bne.n	800080a <__aeabi_dmul+0x1c2>
 80007ea:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ee:	0040      	lsls	r0, r0, #1
 80007f0:	eb41 0101 	adc.w	r1, r1, r1
 80007f4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3c01      	subeq	r4, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1a6>
 80007fe:	ea41 0106 	orr.w	r1, r1, r6
 8000802:	f095 0f00 	teq	r5, #0
 8000806:	bf18      	it	ne
 8000808:	4770      	bxne	lr
 800080a:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 800080e:	0052      	lsls	r2, r2, #1
 8000810:	eb43 0303 	adc.w	r3, r3, r3
 8000814:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000818:	bf08      	it	eq
 800081a:	3d01      	subeq	r5, #1
 800081c:	d0f7      	beq.n	800080e <__aeabi_dmul+0x1c6>
 800081e:	ea43 0306 	orr.w	r3, r3, r6
 8000822:	4770      	bx	lr
 8000824:	ea94 0f0c 	teq	r4, ip
 8000828:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800082c:	bf18      	it	ne
 800082e:	ea95 0f0c 	teqne	r5, ip
 8000832:	d00c      	beq.n	800084e <__aeabi_dmul+0x206>
 8000834:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000838:	bf18      	it	ne
 800083a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083e:	d1d1      	bne.n	80007e4 <__aeabi_dmul+0x19c>
 8000840:	ea81 0103 	eor.w	r1, r1, r3
 8000844:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000848:	f04f 0000 	mov.w	r0, #0
 800084c:	bd70      	pop	{r4, r5, r6, pc}
 800084e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000852:	bf06      	itte	eq
 8000854:	4610      	moveq	r0, r2
 8000856:	4619      	moveq	r1, r3
 8000858:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800085c:	d019      	beq.n	8000892 <__aeabi_dmul+0x24a>
 800085e:	ea94 0f0c 	teq	r4, ip
 8000862:	d102      	bne.n	800086a <__aeabi_dmul+0x222>
 8000864:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000868:	d113      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800086a:	ea95 0f0c 	teq	r5, ip
 800086e:	d105      	bne.n	800087c <__aeabi_dmul+0x234>
 8000870:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000874:	bf1c      	itt	ne
 8000876:	4610      	movne	r0, r2
 8000878:	4619      	movne	r1, r3
 800087a:	d10a      	bne.n	8000892 <__aeabi_dmul+0x24a>
 800087c:	ea81 0103 	eor.w	r1, r1, r3
 8000880:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000884:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000888:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800088c:	f04f 0000 	mov.w	r0, #0
 8000890:	bd70      	pop	{r4, r5, r6, pc}
 8000892:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000896:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800089a:	bd70      	pop	{r4, r5, r6, pc}

0800089c <__aeabi_ddiv>:
 800089c:	b570      	push	{r4, r5, r6, lr}
 800089e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80008a2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80008a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008aa:	bf1d      	ittte	ne
 80008ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008b0:	ea94 0f0c 	teqne	r4, ip
 80008b4:	ea95 0f0c 	teqne	r5, ip
 80008b8:	f000 f8a7 	bleq	8000a0a <__aeabi_ddiv+0x16e>
 80008bc:	eba4 0405 	sub.w	r4, r4, r5
 80008c0:	ea81 0e03 	eor.w	lr, r1, r3
 80008c4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008cc:	f000 8088 	beq.w	80009e0 <__aeabi_ddiv+0x144>
 80008d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008d4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008d8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008dc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008e0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008e4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008e8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ec:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008f0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008f4:	429d      	cmp	r5, r3
 80008f6:	bf08      	it	eq
 80008f8:	4296      	cmpeq	r6, r2
 80008fa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008fe:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 8000902:	d202      	bcs.n	800090a <__aeabi_ddiv+0x6e>
 8000904:	085b      	lsrs	r3, r3, #1
 8000906:	ea4f 0232 	mov.w	r2, r2, rrx
 800090a:	1ab6      	subs	r6, r6, r2
 800090c:	eb65 0503 	sbc.w	r5, r5, r3
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800091a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000948:	085b      	lsrs	r3, r3, #1
 800094a:	ea4f 0232 	mov.w	r2, r2, rrx
 800094e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000952:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000956:	bf22      	ittt	cs
 8000958:	1ab6      	subcs	r6, r6, r2
 800095a:	4675      	movcs	r5, lr
 800095c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000960:	085b      	lsrs	r3, r3, #1
 8000962:	ea4f 0232 	mov.w	r2, r2, rrx
 8000966:	ebb6 0e02 	subs.w	lr, r6, r2
 800096a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800096e:	bf22      	ittt	cs
 8000970:	1ab6      	subcs	r6, r6, r2
 8000972:	4675      	movcs	r5, lr
 8000974:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000978:	ea55 0e06 	orrs.w	lr, r5, r6
 800097c:	d018      	beq.n	80009b0 <__aeabi_ddiv+0x114>
 800097e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000982:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000986:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800098a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800098e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000992:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000996:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800099a:	d1c0      	bne.n	800091e <__aeabi_ddiv+0x82>
 800099c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a0:	d10b      	bne.n	80009ba <__aeabi_ddiv+0x11e>
 80009a2:	ea41 0100 	orr.w	r1, r1, r0
 80009a6:	f04f 0000 	mov.w	r0, #0
 80009aa:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80009ae:	e7b6      	b.n	800091e <__aeabi_ddiv+0x82>
 80009b0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009b4:	bf04      	itt	eq
 80009b6:	4301      	orreq	r1, r0
 80009b8:	2000      	moveq	r0, #0
 80009ba:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009be:	bf88      	it	hi
 80009c0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009c4:	f63f aeaf 	bhi.w	8000726 <__aeabi_dmul+0xde>
 80009c8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009cc:	bf04      	itt	eq
 80009ce:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009d6:	f150 0000 	adcs.w	r0, r0, #0
 80009da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009de:	bd70      	pop	{r4, r5, r6, pc}
 80009e0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ec:	bfc2      	ittt	gt
 80009ee:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009f6:	bd70      	popgt	{r4, r5, r6, pc}
 80009f8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009fc:	f04f 0e00 	mov.w	lr, #0
 8000a00:	3c01      	subs	r4, #1
 8000a02:	e690      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a04:	ea45 0e06 	orr.w	lr, r5, r6
 8000a08:	e68d      	b.n	8000726 <__aeabi_dmul+0xde>
 8000a0a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a0e:	ea94 0f0c 	teq	r4, ip
 8000a12:	bf08      	it	eq
 8000a14:	ea95 0f0c 	teqeq	r5, ip
 8000a18:	f43f af3b 	beq.w	8000892 <__aeabi_dmul+0x24a>
 8000a1c:	ea94 0f0c 	teq	r4, ip
 8000a20:	d10a      	bne.n	8000a38 <__aeabi_ddiv+0x19c>
 8000a22:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a26:	f47f af34 	bne.w	8000892 <__aeabi_dmul+0x24a>
 8000a2a:	ea95 0f0c 	teq	r5, ip
 8000a2e:	f47f af25 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a32:	4610      	mov	r0, r2
 8000a34:	4619      	mov	r1, r3
 8000a36:	e72c      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a38:	ea95 0f0c 	teq	r5, ip
 8000a3c:	d106      	bne.n	8000a4c <__aeabi_ddiv+0x1b0>
 8000a3e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a42:	f43f aefd 	beq.w	8000840 <__aeabi_dmul+0x1f8>
 8000a46:	4610      	mov	r0, r2
 8000a48:	4619      	mov	r1, r3
 8000a4a:	e722      	b.n	8000892 <__aeabi_dmul+0x24a>
 8000a4c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a56:	f47f aec5 	bne.w	80007e4 <__aeabi_dmul+0x19c>
 8000a5a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a5e:	f47f af0d 	bne.w	800087c <__aeabi_dmul+0x234>
 8000a62:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a66:	f47f aeeb 	bne.w	8000840 <__aeabi_dmul+0x1f8>
 8000a6a:	e712      	b.n	8000892 <__aeabi_dmul+0x24a>

08000a6c <__gedf2>:
 8000a6c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a70:	e006      	b.n	8000a80 <__cmpdf2+0x4>
 8000a72:	bf00      	nop

08000a74 <__ledf2>:
 8000a74:	f04f 0c01 	mov.w	ip, #1
 8000a78:	e002      	b.n	8000a80 <__cmpdf2+0x4>
 8000a7a:	bf00      	nop

08000a7c <__cmpdf2>:
 8000a7c:	f04f 0c01 	mov.w	ip, #1
 8000a80:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a90:	bf18      	it	ne
 8000a92:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a96:	d01b      	beq.n	8000ad0 <__cmpdf2+0x54>
 8000a98:	b001      	add	sp, #4
 8000a9a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a9e:	bf0c      	ite	eq
 8000aa0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000aa4:	ea91 0f03 	teqne	r1, r3
 8000aa8:	bf02      	ittt	eq
 8000aaa:	ea90 0f02 	teqeq	r0, r2
 8000aae:	2000      	moveq	r0, #0
 8000ab0:	4770      	bxeq	lr
 8000ab2:	f110 0f00 	cmn.w	r0, #0
 8000ab6:	ea91 0f03 	teq	r1, r3
 8000aba:	bf58      	it	pl
 8000abc:	4299      	cmppl	r1, r3
 8000abe:	bf08      	it	eq
 8000ac0:	4290      	cmpeq	r0, r2
 8000ac2:	bf2c      	ite	cs
 8000ac4:	17d8      	asrcs	r0, r3, #31
 8000ac6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aca:	f040 0001 	orr.w	r0, r0, #1
 8000ace:	4770      	bx	lr
 8000ad0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d102      	bne.n	8000ae0 <__cmpdf2+0x64>
 8000ada:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ade:	d107      	bne.n	8000af0 <__cmpdf2+0x74>
 8000ae0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae8:	d1d6      	bne.n	8000a98 <__cmpdf2+0x1c>
 8000aea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aee:	d0d3      	beq.n	8000a98 <__cmpdf2+0x1c>
 8000af0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000af4:	4770      	bx	lr
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdrcmple>:
 8000af8:	4684      	mov	ip, r0
 8000afa:	4610      	mov	r0, r2
 8000afc:	4662      	mov	r2, ip
 8000afe:	468c      	mov	ip, r1
 8000b00:	4619      	mov	r1, r3
 8000b02:	4663      	mov	r3, ip
 8000b04:	e000      	b.n	8000b08 <__aeabi_cdcmpeq>
 8000b06:	bf00      	nop

08000b08 <__aeabi_cdcmpeq>:
 8000b08:	b501      	push	{r0, lr}
 8000b0a:	f7ff ffb7 	bl	8000a7c <__cmpdf2>
 8000b0e:	2800      	cmp	r0, #0
 8000b10:	bf48      	it	mi
 8000b12:	f110 0f00 	cmnmi.w	r0, #0
 8000b16:	bd01      	pop	{r0, pc}

08000b18 <__aeabi_dcmpeq>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff fff4 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b20:	bf0c      	ite	eq
 8000b22:	2001      	moveq	r0, #1
 8000b24:	2000      	movne	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmplt>:
 8000b2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b30:	f7ff ffea 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b34:	bf34      	ite	cc
 8000b36:	2001      	movcc	r0, #1
 8000b38:	2000      	movcs	r0, #0
 8000b3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3e:	bf00      	nop

08000b40 <__aeabi_dcmple>:
 8000b40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b44:	f7ff ffe0 	bl	8000b08 <__aeabi_cdcmpeq>
 8000b48:	bf94      	ite	ls
 8000b4a:	2001      	movls	r0, #1
 8000b4c:	2000      	movhi	r0, #0
 8000b4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b52:	bf00      	nop

08000b54 <__aeabi_dcmpge>:
 8000b54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b58:	f7ff ffce 	bl	8000af8 <__aeabi_cdrcmple>
 8000b5c:	bf94      	ite	ls
 8000b5e:	2001      	movls	r0, #1
 8000b60:	2000      	movhi	r0, #0
 8000b62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b66:	bf00      	nop

08000b68 <__aeabi_dcmpgt>:
 8000b68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b6c:	f7ff ffc4 	bl	8000af8 <__aeabi_cdrcmple>
 8000b70:	bf34      	ite	cc
 8000b72:	2001      	movcc	r0, #1
 8000b74:	2000      	movcs	r0, #0
 8000b76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7a:	bf00      	nop

08000b7c <__aeabi_dcmpun>:
 8000b7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x10>
 8000b86:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b8a:	d10a      	bne.n	8000ba2 <__aeabi_dcmpun+0x26>
 8000b8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b94:	d102      	bne.n	8000b9c <__aeabi_dcmpun+0x20>
 8000b96:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b9a:	d102      	bne.n	8000ba2 <__aeabi_dcmpun+0x26>
 8000b9c:	f04f 0000 	mov.w	r0, #0
 8000ba0:	4770      	bx	lr
 8000ba2:	f04f 0001 	mov.w	r0, #1
 8000ba6:	4770      	bx	lr

08000ba8 <__aeabi_d2iz>:
 8000ba8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bb0:	d215      	bcs.n	8000bde <__aeabi_d2iz+0x36>
 8000bb2:	d511      	bpl.n	8000bd8 <__aeabi_d2iz+0x30>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d912      	bls.n	8000be4 <__aeabi_d2iz+0x3c>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bce:	fa23 f002 	lsr.w	r0, r3, r2
 8000bd2:	bf18      	it	ne
 8000bd4:	4240      	negne	r0, r0
 8000bd6:	4770      	bx	lr
 8000bd8:	f04f 0000 	mov.w	r0, #0
 8000bdc:	4770      	bx	lr
 8000bde:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000be2:	d105      	bne.n	8000bf0 <__aeabi_d2iz+0x48>
 8000be4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000be8:	bf08      	it	eq
 8000bea:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_d2uiz>:
 8000bf8:	004a      	lsls	r2, r1, #1
 8000bfa:	d211      	bcs.n	8000c20 <__aeabi_d2uiz+0x28>
 8000bfc:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000c00:	d211      	bcs.n	8000c26 <__aeabi_d2uiz+0x2e>
 8000c02:	d50d      	bpl.n	8000c20 <__aeabi_d2uiz+0x28>
 8000c04:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000c08:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000c0c:	d40e      	bmi.n	8000c2c <__aeabi_d2uiz+0x34>
 8000c0e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c12:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c16:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000c1a:	fa23 f002 	lsr.w	r0, r3, r2
 8000c1e:	4770      	bx	lr
 8000c20:	f04f 0000 	mov.w	r0, #0
 8000c24:	4770      	bx	lr
 8000c26:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000c2a:	d102      	bne.n	8000c32 <__aeabi_d2uiz+0x3a>
 8000c2c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c30:	4770      	bx	lr
 8000c32:	f04f 0000 	mov.w	r0, #0
 8000c36:	4770      	bx	lr

08000c38 <__aeabi_d2f>:
 8000c38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c3c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000c40:	bf24      	itt	cs
 8000c42:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000c46:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000c4a:	d90d      	bls.n	8000c68 <__aeabi_d2f+0x30>
 8000c4c:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c50:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c54:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c58:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c5c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c60:	bf08      	it	eq
 8000c62:	f020 0001 	biceq.w	r0, r0, #1
 8000c66:	4770      	bx	lr
 8000c68:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c6c:	d121      	bne.n	8000cb2 <__aeabi_d2f+0x7a>
 8000c6e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c72:	bfbc      	itt	lt
 8000c74:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c78:	4770      	bxlt	lr
 8000c7a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c7e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c82:	f1c2 0218 	rsb	r2, r2, #24
 8000c86:	f1c2 0c20 	rsb	ip, r2, #32
 8000c8a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c8e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c92:	bf18      	it	ne
 8000c94:	f040 0001 	orrne.w	r0, r0, #1
 8000c98:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c9c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000ca0:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000ca4:	ea40 000c 	orr.w	r0, r0, ip
 8000ca8:	fa23 f302 	lsr.w	r3, r3, r2
 8000cac:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000cb0:	e7cc      	b.n	8000c4c <__aeabi_d2f+0x14>
 8000cb2:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000cb6:	d107      	bne.n	8000cc8 <__aeabi_d2f+0x90>
 8000cb8:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000cbc:	bf1e      	ittt	ne
 8000cbe:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000cc2:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000cc6:	4770      	bxne	lr
 8000cc8:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000ccc:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000cd0:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000cd4:	4770      	bx	lr
 8000cd6:	bf00      	nop

08000cd8 <__aeabi_frsub>:
 8000cd8:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000cdc:	e002      	b.n	8000ce4 <__addsf3>
 8000cde:	bf00      	nop

08000ce0 <__aeabi_fsub>:
 8000ce0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000ce4 <__addsf3>:
 8000ce4:	0042      	lsls	r2, r0, #1
 8000ce6:	bf1f      	itttt	ne
 8000ce8:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000cec:	ea92 0f03 	teqne	r2, r3
 8000cf0:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000cf4:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000cf8:	d06a      	beq.n	8000dd0 <__addsf3+0xec>
 8000cfa:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000cfe:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000d02:	bfc1      	itttt	gt
 8000d04:	18d2      	addgt	r2, r2, r3
 8000d06:	4041      	eorgt	r1, r0
 8000d08:	4048      	eorgt	r0, r1
 8000d0a:	4041      	eorgt	r1, r0
 8000d0c:	bfb8      	it	lt
 8000d0e:	425b      	neglt	r3, r3
 8000d10:	2b19      	cmp	r3, #25
 8000d12:	bf88      	it	hi
 8000d14:	4770      	bxhi	lr
 8000d16:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000d1a:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d1e:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000d22:	bf18      	it	ne
 8000d24:	4240      	negne	r0, r0
 8000d26:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000d2a:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000d2e:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000d32:	bf18      	it	ne
 8000d34:	4249      	negne	r1, r1
 8000d36:	ea92 0f03 	teq	r2, r3
 8000d3a:	d03f      	beq.n	8000dbc <__addsf3+0xd8>
 8000d3c:	f1a2 0201 	sub.w	r2, r2, #1
 8000d40:	fa41 fc03 	asr.w	ip, r1, r3
 8000d44:	eb10 000c 	adds.w	r0, r0, ip
 8000d48:	f1c3 0320 	rsb	r3, r3, #32
 8000d4c:	fa01 f103 	lsl.w	r1, r1, r3
 8000d50:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d54:	d502      	bpl.n	8000d5c <__addsf3+0x78>
 8000d56:	4249      	negs	r1, r1
 8000d58:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000d5c:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000d60:	d313      	bcc.n	8000d8a <__addsf3+0xa6>
 8000d62:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000d66:	d306      	bcc.n	8000d76 <__addsf3+0x92>
 8000d68:	0840      	lsrs	r0, r0, #1
 8000d6a:	ea4f 0131 	mov.w	r1, r1, rrx
 8000d6e:	f102 0201 	add.w	r2, r2, #1
 8000d72:	2afe      	cmp	r2, #254	@ 0xfe
 8000d74:	d251      	bcs.n	8000e1a <__addsf3+0x136>
 8000d76:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000d7a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000d7e:	bf08      	it	eq
 8000d80:	f020 0001 	biceq.w	r0, r0, #1
 8000d84:	ea40 0003 	orr.w	r0, r0, r3
 8000d88:	4770      	bx	lr
 8000d8a:	0049      	lsls	r1, r1, #1
 8000d8c:	eb40 0000 	adc.w	r0, r0, r0
 8000d90:	3a01      	subs	r2, #1
 8000d92:	bf28      	it	cs
 8000d94:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000d98:	d2ed      	bcs.n	8000d76 <__addsf3+0x92>
 8000d9a:	fab0 fc80 	clz	ip, r0
 8000d9e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000da2:	ebb2 020c 	subs.w	r2, r2, ip
 8000da6:	fa00 f00c 	lsl.w	r0, r0, ip
 8000daa:	bfaa      	itet	ge
 8000dac:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000db0:	4252      	neglt	r2, r2
 8000db2:	4318      	orrge	r0, r3
 8000db4:	bfbc      	itt	lt
 8000db6:	40d0      	lsrlt	r0, r2
 8000db8:	4318      	orrlt	r0, r3
 8000dba:	4770      	bx	lr
 8000dbc:	f092 0f00 	teq	r2, #0
 8000dc0:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000dc4:	bf06      	itte	eq
 8000dc6:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000dca:	3201      	addeq	r2, #1
 8000dcc:	3b01      	subne	r3, #1
 8000dce:	e7b5      	b.n	8000d3c <__addsf3+0x58>
 8000dd0:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000dd4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000dd8:	bf18      	it	ne
 8000dda:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000dde:	d021      	beq.n	8000e24 <__addsf3+0x140>
 8000de0:	ea92 0f03 	teq	r2, r3
 8000de4:	d004      	beq.n	8000df0 <__addsf3+0x10c>
 8000de6:	f092 0f00 	teq	r2, #0
 8000dea:	bf08      	it	eq
 8000dec:	4608      	moveq	r0, r1
 8000dee:	4770      	bx	lr
 8000df0:	ea90 0f01 	teq	r0, r1
 8000df4:	bf1c      	itt	ne
 8000df6:	2000      	movne	r0, #0
 8000df8:	4770      	bxne	lr
 8000dfa:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000dfe:	d104      	bne.n	8000e0a <__addsf3+0x126>
 8000e00:	0040      	lsls	r0, r0, #1
 8000e02:	bf28      	it	cs
 8000e04:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000e08:	4770      	bx	lr
 8000e0a:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000e0e:	bf3c      	itt	cc
 8000e10:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000e14:	4770      	bxcc	lr
 8000e16:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000e1a:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000e1e:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000e22:	4770      	bx	lr
 8000e24:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000e28:	bf16      	itet	ne
 8000e2a:	4608      	movne	r0, r1
 8000e2c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000e30:	4601      	movne	r1, r0
 8000e32:	0242      	lsls	r2, r0, #9
 8000e34:	bf06      	itte	eq
 8000e36:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000e3a:	ea90 0f01 	teqeq	r0, r1
 8000e3e:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000e42:	4770      	bx	lr

08000e44 <__aeabi_ui2f>:
 8000e44:	f04f 0300 	mov.w	r3, #0
 8000e48:	e004      	b.n	8000e54 <__aeabi_i2f+0x8>
 8000e4a:	bf00      	nop

08000e4c <__aeabi_i2f>:
 8000e4c:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000e50:	bf48      	it	mi
 8000e52:	4240      	negmi	r0, r0
 8000e54:	ea5f 0c00 	movs.w	ip, r0
 8000e58:	bf08      	it	eq
 8000e5a:	4770      	bxeq	lr
 8000e5c:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000e60:	4601      	mov	r1, r0
 8000e62:	f04f 0000 	mov.w	r0, #0
 8000e66:	e01c      	b.n	8000ea2 <__aeabi_l2f+0x2a>

08000e68 <__aeabi_ul2f>:
 8000e68:	ea50 0201 	orrs.w	r2, r0, r1
 8000e6c:	bf08      	it	eq
 8000e6e:	4770      	bxeq	lr
 8000e70:	f04f 0300 	mov.w	r3, #0
 8000e74:	e00a      	b.n	8000e8c <__aeabi_l2f+0x14>
 8000e76:	bf00      	nop

08000e78 <__aeabi_l2f>:
 8000e78:	ea50 0201 	orrs.w	r2, r0, r1
 8000e7c:	bf08      	it	eq
 8000e7e:	4770      	bxeq	lr
 8000e80:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000e84:	d502      	bpl.n	8000e8c <__aeabi_l2f+0x14>
 8000e86:	4240      	negs	r0, r0
 8000e88:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000e8c:	ea5f 0c01 	movs.w	ip, r1
 8000e90:	bf02      	ittt	eq
 8000e92:	4684      	moveq	ip, r0
 8000e94:	4601      	moveq	r1, r0
 8000e96:	2000      	moveq	r0, #0
 8000e98:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000e9c:	bf08      	it	eq
 8000e9e:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000ea2:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000ea6:	fabc f28c 	clz	r2, ip
 8000eaa:	3a08      	subs	r2, #8
 8000eac:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000eb0:	db10      	blt.n	8000ed4 <__aeabi_l2f+0x5c>
 8000eb2:	fa01 fc02 	lsl.w	ip, r1, r2
 8000eb6:	4463      	add	r3, ip
 8000eb8:	fa00 fc02 	lsl.w	ip, r0, r2
 8000ebc:	f1c2 0220 	rsb	r2, r2, #32
 8000ec0:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000ec4:	fa20 f202 	lsr.w	r2, r0, r2
 8000ec8:	eb43 0002 	adc.w	r0, r3, r2
 8000ecc:	bf08      	it	eq
 8000ece:	f020 0001 	biceq.w	r0, r0, #1
 8000ed2:	4770      	bx	lr
 8000ed4:	f102 0220 	add.w	r2, r2, #32
 8000ed8:	fa01 fc02 	lsl.w	ip, r1, r2
 8000edc:	f1c2 0220 	rsb	r2, r2, #32
 8000ee0:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000ee4:	fa21 f202 	lsr.w	r2, r1, r2
 8000ee8:	eb43 0002 	adc.w	r0, r3, r2
 8000eec:	bf08      	it	eq
 8000eee:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ef2:	4770      	bx	lr

08000ef4 <__aeabi_uldivmod>:
 8000ef4:	b953      	cbnz	r3, 8000f0c <__aeabi_uldivmod+0x18>
 8000ef6:	b94a      	cbnz	r2, 8000f0c <__aeabi_uldivmod+0x18>
 8000ef8:	2900      	cmp	r1, #0
 8000efa:	bf08      	it	eq
 8000efc:	2800      	cmpeq	r0, #0
 8000efe:	bf1c      	itt	ne
 8000f00:	f04f 31ff 	movne.w	r1, #4294967295
 8000f04:	f04f 30ff 	movne.w	r0, #4294967295
 8000f08:	f000 b9a0 	b.w	800124c <__aeabi_idiv0>
 8000f0c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000f10:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000f14:	f000 f83c 	bl	8000f90 <__udivmoddi4>
 8000f18:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000f1c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000f20:	b004      	add	sp, #16
 8000f22:	4770      	bx	lr

08000f24 <__aeabi_d2lz>:
 8000f24:	b538      	push	{r3, r4, r5, lr}
 8000f26:	2200      	movs	r2, #0
 8000f28:	2300      	movs	r3, #0
 8000f2a:	4604      	mov	r4, r0
 8000f2c:	460d      	mov	r5, r1
 8000f2e:	f7ff fdfd 	bl	8000b2c <__aeabi_dcmplt>
 8000f32:	b928      	cbnz	r0, 8000f40 <__aeabi_d2lz+0x1c>
 8000f34:	4620      	mov	r0, r4
 8000f36:	4629      	mov	r1, r5
 8000f38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000f3c:	f000 b80a 	b.w	8000f54 <__aeabi_d2ulz>
 8000f40:	4620      	mov	r0, r4
 8000f42:	f105 4100 	add.w	r1, r5, #2147483648	@ 0x80000000
 8000f46:	f000 f805 	bl	8000f54 <__aeabi_d2ulz>
 8000f4a:	4240      	negs	r0, r0
 8000f4c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000f50:	bd38      	pop	{r3, r4, r5, pc}
 8000f52:	bf00      	nop

08000f54 <__aeabi_d2ulz>:
 8000f54:	b5d0      	push	{r4, r6, r7, lr}
 8000f56:	4b0c      	ldr	r3, [pc, #48]	@ (8000f88 <__aeabi_d2ulz+0x34>)
 8000f58:	2200      	movs	r2, #0
 8000f5a:	4606      	mov	r6, r0
 8000f5c:	460f      	mov	r7, r1
 8000f5e:	f7ff fb73 	bl	8000648 <__aeabi_dmul>
 8000f62:	f7ff fe49 	bl	8000bf8 <__aeabi_d2uiz>
 8000f66:	4604      	mov	r4, r0
 8000f68:	f7ff faf4 	bl	8000554 <__aeabi_ui2d>
 8000f6c:	4b07      	ldr	r3, [pc, #28]	@ (8000f8c <__aeabi_d2ulz+0x38>)
 8000f6e:	2200      	movs	r2, #0
 8000f70:	f7ff fb6a 	bl	8000648 <__aeabi_dmul>
 8000f74:	4602      	mov	r2, r0
 8000f76:	460b      	mov	r3, r1
 8000f78:	4630      	mov	r0, r6
 8000f7a:	4639      	mov	r1, r7
 8000f7c:	f7ff f9ac 	bl	80002d8 <__aeabi_dsub>
 8000f80:	f7ff fe3a 	bl	8000bf8 <__aeabi_d2uiz>
 8000f84:	4621      	mov	r1, r4
 8000f86:	bdd0      	pop	{r4, r6, r7, pc}
 8000f88:	3df00000 	.word	0x3df00000
 8000f8c:	41f00000 	.word	0x41f00000

08000f90 <__udivmoddi4>:
 8000f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f94:	9d08      	ldr	r5, [sp, #32]
 8000f96:	460c      	mov	r4, r1
 8000f98:	2b00      	cmp	r3, #0
 8000f9a:	d14e      	bne.n	800103a <__udivmoddi4+0xaa>
 8000f9c:	4694      	mov	ip, r2
 8000f9e:	458c      	cmp	ip, r1
 8000fa0:	4686      	mov	lr, r0
 8000fa2:	fab2 f282 	clz	r2, r2
 8000fa6:	d962      	bls.n	800106e <__udivmoddi4+0xde>
 8000fa8:	b14a      	cbz	r2, 8000fbe <__udivmoddi4+0x2e>
 8000faa:	f1c2 0320 	rsb	r3, r2, #32
 8000fae:	4091      	lsls	r1, r2
 8000fb0:	fa20 f303 	lsr.w	r3, r0, r3
 8000fb4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000fb8:	4319      	orrs	r1, r3
 8000fba:	fa00 fe02 	lsl.w	lr, r0, r2
 8000fbe:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000fc2:	fa1f f68c 	uxth.w	r6, ip
 8000fc6:	fbb1 f4f7 	udiv	r4, r1, r7
 8000fca:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000fce:	fb07 1114 	mls	r1, r7, r4, r1
 8000fd2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000fd6:	fb04 f106 	mul.w	r1, r4, r6
 8000fda:	4299      	cmp	r1, r3
 8000fdc:	d90a      	bls.n	8000ff4 <__udivmoddi4+0x64>
 8000fde:	eb1c 0303 	adds.w	r3, ip, r3
 8000fe2:	f104 30ff 	add.w	r0, r4, #4294967295
 8000fe6:	f080 8112 	bcs.w	800120e <__udivmoddi4+0x27e>
 8000fea:	4299      	cmp	r1, r3
 8000fec:	f240 810f 	bls.w	800120e <__udivmoddi4+0x27e>
 8000ff0:	3c02      	subs	r4, #2
 8000ff2:	4463      	add	r3, ip
 8000ff4:	1a59      	subs	r1, r3, r1
 8000ff6:	fa1f f38e 	uxth.w	r3, lr
 8000ffa:	fbb1 f0f7 	udiv	r0, r1, r7
 8000ffe:	fb07 1110 	mls	r1, r7, r0, r1
 8001002:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8001006:	fb00 f606 	mul.w	r6, r0, r6
 800100a:	429e      	cmp	r6, r3
 800100c:	d90a      	bls.n	8001024 <__udivmoddi4+0x94>
 800100e:	eb1c 0303 	adds.w	r3, ip, r3
 8001012:	f100 31ff 	add.w	r1, r0, #4294967295
 8001016:	f080 80fc 	bcs.w	8001212 <__udivmoddi4+0x282>
 800101a:	429e      	cmp	r6, r3
 800101c:	f240 80f9 	bls.w	8001212 <__udivmoddi4+0x282>
 8001020:	4463      	add	r3, ip
 8001022:	3802      	subs	r0, #2
 8001024:	1b9b      	subs	r3, r3, r6
 8001026:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800102a:	2100      	movs	r1, #0
 800102c:	b11d      	cbz	r5, 8001036 <__udivmoddi4+0xa6>
 800102e:	40d3      	lsrs	r3, r2
 8001030:	2200      	movs	r2, #0
 8001032:	e9c5 3200 	strd	r3, r2, [r5]
 8001036:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800103a:	428b      	cmp	r3, r1
 800103c:	d905      	bls.n	800104a <__udivmoddi4+0xba>
 800103e:	b10d      	cbz	r5, 8001044 <__udivmoddi4+0xb4>
 8001040:	e9c5 0100 	strd	r0, r1, [r5]
 8001044:	2100      	movs	r1, #0
 8001046:	4608      	mov	r0, r1
 8001048:	e7f5      	b.n	8001036 <__udivmoddi4+0xa6>
 800104a:	fab3 f183 	clz	r1, r3
 800104e:	2900      	cmp	r1, #0
 8001050:	d146      	bne.n	80010e0 <__udivmoddi4+0x150>
 8001052:	42a3      	cmp	r3, r4
 8001054:	d302      	bcc.n	800105c <__udivmoddi4+0xcc>
 8001056:	4290      	cmp	r0, r2
 8001058:	f0c0 80f0 	bcc.w	800123c <__udivmoddi4+0x2ac>
 800105c:	1a86      	subs	r6, r0, r2
 800105e:	eb64 0303 	sbc.w	r3, r4, r3
 8001062:	2001      	movs	r0, #1
 8001064:	2d00      	cmp	r5, #0
 8001066:	d0e6      	beq.n	8001036 <__udivmoddi4+0xa6>
 8001068:	e9c5 6300 	strd	r6, r3, [r5]
 800106c:	e7e3      	b.n	8001036 <__udivmoddi4+0xa6>
 800106e:	2a00      	cmp	r2, #0
 8001070:	f040 8090 	bne.w	8001194 <__udivmoddi4+0x204>
 8001074:	eba1 040c 	sub.w	r4, r1, ip
 8001078:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800107c:	fa1f f78c 	uxth.w	r7, ip
 8001080:	2101      	movs	r1, #1
 8001082:	fbb4 f6f8 	udiv	r6, r4, r8
 8001086:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800108a:	fb08 4416 	mls	r4, r8, r6, r4
 800108e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8001092:	fb07 f006 	mul.w	r0, r7, r6
 8001096:	4298      	cmp	r0, r3
 8001098:	d908      	bls.n	80010ac <__udivmoddi4+0x11c>
 800109a:	eb1c 0303 	adds.w	r3, ip, r3
 800109e:	f106 34ff 	add.w	r4, r6, #4294967295
 80010a2:	d202      	bcs.n	80010aa <__udivmoddi4+0x11a>
 80010a4:	4298      	cmp	r0, r3
 80010a6:	f200 80cd 	bhi.w	8001244 <__udivmoddi4+0x2b4>
 80010aa:	4626      	mov	r6, r4
 80010ac:	1a1c      	subs	r4, r3, r0
 80010ae:	fa1f f38e 	uxth.w	r3, lr
 80010b2:	fbb4 f0f8 	udiv	r0, r4, r8
 80010b6:	fb08 4410 	mls	r4, r8, r0, r4
 80010ba:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80010be:	fb00 f707 	mul.w	r7, r0, r7
 80010c2:	429f      	cmp	r7, r3
 80010c4:	d908      	bls.n	80010d8 <__udivmoddi4+0x148>
 80010c6:	eb1c 0303 	adds.w	r3, ip, r3
 80010ca:	f100 34ff 	add.w	r4, r0, #4294967295
 80010ce:	d202      	bcs.n	80010d6 <__udivmoddi4+0x146>
 80010d0:	429f      	cmp	r7, r3
 80010d2:	f200 80b0 	bhi.w	8001236 <__udivmoddi4+0x2a6>
 80010d6:	4620      	mov	r0, r4
 80010d8:	1bdb      	subs	r3, r3, r7
 80010da:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80010de:	e7a5      	b.n	800102c <__udivmoddi4+0x9c>
 80010e0:	f1c1 0620 	rsb	r6, r1, #32
 80010e4:	408b      	lsls	r3, r1
 80010e6:	fa22 f706 	lsr.w	r7, r2, r6
 80010ea:	431f      	orrs	r7, r3
 80010ec:	fa20 fc06 	lsr.w	ip, r0, r6
 80010f0:	fa04 f301 	lsl.w	r3, r4, r1
 80010f4:	ea43 030c 	orr.w	r3, r3, ip
 80010f8:	40f4      	lsrs	r4, r6
 80010fa:	fa00 f801 	lsl.w	r8, r0, r1
 80010fe:	0c38      	lsrs	r0, r7, #16
 8001100:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8001104:	fbb4 fef0 	udiv	lr, r4, r0
 8001108:	fa1f fc87 	uxth.w	ip, r7
 800110c:	fb00 441e 	mls	r4, r0, lr, r4
 8001110:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8001114:	fb0e f90c 	mul.w	r9, lr, ip
 8001118:	45a1      	cmp	r9, r4
 800111a:	fa02 f201 	lsl.w	r2, r2, r1
 800111e:	d90a      	bls.n	8001136 <__udivmoddi4+0x1a6>
 8001120:	193c      	adds	r4, r7, r4
 8001122:	f10e 3aff 	add.w	sl, lr, #4294967295
 8001126:	f080 8084 	bcs.w	8001232 <__udivmoddi4+0x2a2>
 800112a:	45a1      	cmp	r9, r4
 800112c:	f240 8081 	bls.w	8001232 <__udivmoddi4+0x2a2>
 8001130:	f1ae 0e02 	sub.w	lr, lr, #2
 8001134:	443c      	add	r4, r7
 8001136:	eba4 0409 	sub.w	r4, r4, r9
 800113a:	fa1f f983 	uxth.w	r9, r3
 800113e:	fbb4 f3f0 	udiv	r3, r4, r0
 8001142:	fb00 4413 	mls	r4, r0, r3, r4
 8001146:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800114a:	fb03 fc0c 	mul.w	ip, r3, ip
 800114e:	45a4      	cmp	ip, r4
 8001150:	d907      	bls.n	8001162 <__udivmoddi4+0x1d2>
 8001152:	193c      	adds	r4, r7, r4
 8001154:	f103 30ff 	add.w	r0, r3, #4294967295
 8001158:	d267      	bcs.n	800122a <__udivmoddi4+0x29a>
 800115a:	45a4      	cmp	ip, r4
 800115c:	d965      	bls.n	800122a <__udivmoddi4+0x29a>
 800115e:	3b02      	subs	r3, #2
 8001160:	443c      	add	r4, r7
 8001162:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8001166:	fba0 9302 	umull	r9, r3, r0, r2
 800116a:	eba4 040c 	sub.w	r4, r4, ip
 800116e:	429c      	cmp	r4, r3
 8001170:	46ce      	mov	lr, r9
 8001172:	469c      	mov	ip, r3
 8001174:	d351      	bcc.n	800121a <__udivmoddi4+0x28a>
 8001176:	d04e      	beq.n	8001216 <__udivmoddi4+0x286>
 8001178:	b155      	cbz	r5, 8001190 <__udivmoddi4+0x200>
 800117a:	ebb8 030e 	subs.w	r3, r8, lr
 800117e:	eb64 040c 	sbc.w	r4, r4, ip
 8001182:	fa04 f606 	lsl.w	r6, r4, r6
 8001186:	40cb      	lsrs	r3, r1
 8001188:	431e      	orrs	r6, r3
 800118a:	40cc      	lsrs	r4, r1
 800118c:	e9c5 6400 	strd	r6, r4, [r5]
 8001190:	2100      	movs	r1, #0
 8001192:	e750      	b.n	8001036 <__udivmoddi4+0xa6>
 8001194:	f1c2 0320 	rsb	r3, r2, #32
 8001198:	fa20 f103 	lsr.w	r1, r0, r3
 800119c:	fa0c fc02 	lsl.w	ip, ip, r2
 80011a0:	fa24 f303 	lsr.w	r3, r4, r3
 80011a4:	4094      	lsls	r4, r2
 80011a6:	430c      	orrs	r4, r1
 80011a8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80011ac:	fa00 fe02 	lsl.w	lr, r0, r2
 80011b0:	fa1f f78c 	uxth.w	r7, ip
 80011b4:	fbb3 f0f8 	udiv	r0, r3, r8
 80011b8:	fb08 3110 	mls	r1, r8, r0, r3
 80011bc:	0c23      	lsrs	r3, r4, #16
 80011be:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80011c2:	fb00 f107 	mul.w	r1, r0, r7
 80011c6:	4299      	cmp	r1, r3
 80011c8:	d908      	bls.n	80011dc <__udivmoddi4+0x24c>
 80011ca:	eb1c 0303 	adds.w	r3, ip, r3
 80011ce:	f100 36ff 	add.w	r6, r0, #4294967295
 80011d2:	d22c      	bcs.n	800122e <__udivmoddi4+0x29e>
 80011d4:	4299      	cmp	r1, r3
 80011d6:	d92a      	bls.n	800122e <__udivmoddi4+0x29e>
 80011d8:	3802      	subs	r0, #2
 80011da:	4463      	add	r3, ip
 80011dc:	1a5b      	subs	r3, r3, r1
 80011de:	b2a4      	uxth	r4, r4
 80011e0:	fbb3 f1f8 	udiv	r1, r3, r8
 80011e4:	fb08 3311 	mls	r3, r8, r1, r3
 80011e8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80011ec:	fb01 f307 	mul.w	r3, r1, r7
 80011f0:	42a3      	cmp	r3, r4
 80011f2:	d908      	bls.n	8001206 <__udivmoddi4+0x276>
 80011f4:	eb1c 0404 	adds.w	r4, ip, r4
 80011f8:	f101 36ff 	add.w	r6, r1, #4294967295
 80011fc:	d213      	bcs.n	8001226 <__udivmoddi4+0x296>
 80011fe:	42a3      	cmp	r3, r4
 8001200:	d911      	bls.n	8001226 <__udivmoddi4+0x296>
 8001202:	3902      	subs	r1, #2
 8001204:	4464      	add	r4, ip
 8001206:	1ae4      	subs	r4, r4, r3
 8001208:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800120c:	e739      	b.n	8001082 <__udivmoddi4+0xf2>
 800120e:	4604      	mov	r4, r0
 8001210:	e6f0      	b.n	8000ff4 <__udivmoddi4+0x64>
 8001212:	4608      	mov	r0, r1
 8001214:	e706      	b.n	8001024 <__udivmoddi4+0x94>
 8001216:	45c8      	cmp	r8, r9
 8001218:	d2ae      	bcs.n	8001178 <__udivmoddi4+0x1e8>
 800121a:	ebb9 0e02 	subs.w	lr, r9, r2
 800121e:	eb63 0c07 	sbc.w	ip, r3, r7
 8001222:	3801      	subs	r0, #1
 8001224:	e7a8      	b.n	8001178 <__udivmoddi4+0x1e8>
 8001226:	4631      	mov	r1, r6
 8001228:	e7ed      	b.n	8001206 <__udivmoddi4+0x276>
 800122a:	4603      	mov	r3, r0
 800122c:	e799      	b.n	8001162 <__udivmoddi4+0x1d2>
 800122e:	4630      	mov	r0, r6
 8001230:	e7d4      	b.n	80011dc <__udivmoddi4+0x24c>
 8001232:	46d6      	mov	lr, sl
 8001234:	e77f      	b.n	8001136 <__udivmoddi4+0x1a6>
 8001236:	4463      	add	r3, ip
 8001238:	3802      	subs	r0, #2
 800123a:	e74d      	b.n	80010d8 <__udivmoddi4+0x148>
 800123c:	4606      	mov	r6, r0
 800123e:	4623      	mov	r3, r4
 8001240:	4608      	mov	r0, r1
 8001242:	e70f      	b.n	8001064 <__udivmoddi4+0xd4>
 8001244:	3e02      	subs	r6, #2
 8001246:	4463      	add	r3, ip
 8001248:	e730      	b.n	80010ac <__udivmoddi4+0x11c>
 800124a:	bf00      	nop

0800124c <__aeabi_idiv0>:
 800124c:	4770      	bx	lr
 800124e:	bf00      	nop

08001250 <vBleCmdMotorForward>:
//-----------------------------------------------------------------------------------------------------//
//	 Description	:	This function command the robot to go forward								   //
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	n/a																			   //
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vBleCmdMotorForward(){
 8001250:	b580      	push	{r7, lr}
 8001252:	af00      	add	r7, sp, #0
	vMotorsSetPWMTimer(left, 0.8, 1, 300);
 8001254:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001258:	2101      	movs	r1, #1
 800125a:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 8001278 <vBleCmdMotorForward+0x28>
 800125e:	2000      	movs	r0, #0
 8001260:	f001 fc92 	bl	8002b88 <vMotorsSetPWMTimer>
	vMotorsSetPWMTimer(right, 0.8, 1, 300);
 8001264:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001268:	2101      	movs	r1, #1
 800126a:	ed9f 0a03 	vldr	s0, [pc, #12]	@ 8001278 <vBleCmdMotorForward+0x28>
 800126e:	2001      	movs	r0, #1
 8001270:	f001 fc8a 	bl	8002b88 <vMotorsSetPWMTimer>
}
 8001274:	bf00      	nop
 8001276:	bd80      	pop	{r7, pc}
 8001278:	3f4ccccd 	.word	0x3f4ccccd

0800127c <vBleCmdMotorLeftward>:
//-----------------------------------------------------------------------------------------------------//
//	 Description	:	This function command the robot to go leftward								   //
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	n/a																			   //
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vBleCmdMotorLeftward(){
 800127c:	b580      	push	{r7, lr}
 800127e:	af00      	add	r7, sp, #0
	vMotorsSetPWMTimer(left, 0.5, 1, 300);
 8001280:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001284:	2101      	movs	r1, #1
 8001286:	eeb6 0a00 	vmov.f32	s0, #96	@ 0x3f000000  0.5
 800128a:	2000      	movs	r0, #0
 800128c:	f001 fc7c 	bl	8002b88 <vMotorsSetPWMTimer>
	vMotorsSetPWMTimer(right, 0.8, 1, 300);
 8001290:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8001294:	2101      	movs	r1, #1
 8001296:	ed9f 0a03 	vldr	s0, [pc, #12]	@ 80012a4 <vBleCmdMotorLeftward+0x28>
 800129a:	2001      	movs	r0, #1
 800129c:	f001 fc74 	bl	8002b88 <vMotorsSetPWMTimer>
}
 80012a0:	bf00      	nop
 80012a2:	bd80      	pop	{r7, pc}
 80012a4:	3f4ccccd 	.word	0x3f4ccccd

080012a8 <vBleCmdMotorRightward>:
//-----------------------------------------------------------------------------------------------------//
//	 Description	:	This function command the robot to go rightward								   //
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	n/a																			   //
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vBleCmdMotorRightward(){
 80012a8:	b580      	push	{r7, lr}
 80012aa:	af00      	add	r7, sp, #0
	vMotorsSetPWMTimer(left, 0.8, 1, 300);
 80012ac:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80012b0:	2101      	movs	r1, #1
 80012b2:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 80012d0 <vBleCmdMotorRightward+0x28>
 80012b6:	2000      	movs	r0, #0
 80012b8:	f001 fc66 	bl	8002b88 <vMotorsSetPWMTimer>
	vMotorsSetPWMTimer(right, 0.5, 1, 300);
 80012bc:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80012c0:	2101      	movs	r1, #1
 80012c2:	eeb6 0a00 	vmov.f32	s0, #96	@ 0x3f000000  0.5
 80012c6:	2001      	movs	r0, #1
 80012c8:	f001 fc5e 	bl	8002b88 <vMotorsSetPWMTimer>
}
 80012cc:	bf00      	nop
 80012ce:	bd80      	pop	{r7, pc}
 80012d0:	3f4ccccd 	.word	0x3f4ccccd

080012d4 <vBleCmdMotorBackward>:
//-----------------------------------------------------------------------------------------------------//
//	 Description	:	This function command the robot to go backward								   //
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	n/a																			   //
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vBleCmdMotorBackward(){
 80012d4:	b580      	push	{r7, lr}
 80012d6:	af00      	add	r7, sp, #0
	vMotorsSetPWMTimer(left, 0.8, 0, 300);
 80012d8:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80012dc:	2100      	movs	r1, #0
 80012de:	ed9f 0a07 	vldr	s0, [pc, #28]	@ 80012fc <vBleCmdMotorBackward+0x28>
 80012e2:	2000      	movs	r0, #0
 80012e4:	f001 fc50 	bl	8002b88 <vMotorsSetPWMTimer>
	vMotorsSetPWMTimer(right, 0.8, 0, 300);
 80012e8:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80012ec:	2100      	movs	r1, #0
 80012ee:	ed9f 0a03 	vldr	s0, [pc, #12]	@ 80012fc <vBleCmdMotorBackward+0x28>
 80012f2:	2001      	movs	r0, #1
 80012f4:	f001 fc48 	bl	8002b88 <vMotorsSetPWMTimer>
}
 80012f8:	bf00      	nop
 80012fa:	bd80      	pop	{r7, pc}
 80012fc:	3f4ccccd 	.word	0x3f4ccccd

08001300 <vCommStateMachineInit>:
UART_HandleTypeDef *pBluetoothControllerUART;

//-----------------------------------------------Functions---------------------------------------------//


void vCommStateMachineInit(UART_HandleTypeDef *huart){
 8001300:	b580      	push	{r7, lr}
 8001302:	b082      	sub	sp, #8
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
	pBluetoothControllerUART = huart;
 8001308:	4a06      	ldr	r2, [pc, #24]	@ (8001324 <vCommStateMachineInit+0x24>)
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	6013      	str	r3, [r2, #0]
	HAL_UART_Receive_IT(pBluetoothControllerUART, &ucDigit, 1);
 800130e:	4b05      	ldr	r3, [pc, #20]	@ (8001324 <vCommStateMachineInit+0x24>)
 8001310:	681b      	ldr	r3, [r3, #0]
 8001312:	2201      	movs	r2, #1
 8001314:	4904      	ldr	r1, [pc, #16]	@ (8001328 <vCommStateMachineInit+0x28>)
 8001316:	4618      	mov	r0, r3
 8001318:	f008 fd8c 	bl	8009e34 <HAL_UART_Receive_IT>
}
 800131c:	bf00      	nop
 800131e:	3708      	adds	r7, #8
 8001320:	46bd      	mov	sp, r7
 8001322:	bd80      	pop	{r7, pc}
 8001324:	2000029c 	.word	0x2000029c
 8001328:	20000235 	.word	0x20000235

0800132c <HAL_UART_RxCpltCallback>:
//	 Description	:	Makes the treatment when recieve one byte from the uart, making a
//		                state machine to pass trought any input
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	ucByte
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 800132c:	b580      	push	{r7, lr}
 800132e:	b082      	sub	sp, #8
 8001330:	af00      	add	r7, sp, #0
 8001332:	6078      	str	r0, [r7, #4]
    static unsigned char ucParam;


    if (huart == pBluetoothControllerUART){
 8001334:	4b79      	ldr	r3, [pc, #484]	@ (800151c <HAL_UART_RxCpltCallback+0x1f0>)
 8001336:	681b      	ldr	r3, [r3, #0]
 8001338:	687a      	ldr	r2, [r7, #4]
 800133a:	429a      	cmp	r2, r3
 800133c:	f040 80e2 	bne.w	8001504 <HAL_UART_RxCpltCallback+0x1d8>
//        HAL_UART_Receive_IT(huart, &ucDigit, 1);

        if('#' == ucDigit){
 8001340:	4b77      	ldr	r3, [pc, #476]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001342:	781b      	ldrb	r3, [r3, #0]
 8001344:	2b23      	cmp	r3, #35	@ 0x23
 8001346:	d103      	bne.n	8001350 <HAL_UART_RxCpltCallback+0x24>
            ucState = _READY;
 8001348:	4b76      	ldr	r3, [pc, #472]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 800134a:	2231      	movs	r2, #49	@ 0x31
 800134c:	701a      	strb	r2, [r3, #0]
 800134e:	e0d9      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>
        }
        else{
			if (ucState != _IDDLE){
 8001350:	4b74      	ldr	r3, [pc, #464]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 8001352:	781b      	ldrb	r3, [r3, #0]
 8001354:	2b30      	cmp	r3, #48	@ 0x30
 8001356:	f000 80d5 	beq.w	8001504 <HAL_UART_RxCpltCallback+0x1d8>
				switch (ucState){
 800135a:	4b72      	ldr	r3, [pc, #456]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 800135c:	781b      	ldrb	r3, [r3, #0]
 800135e:	3b31      	subs	r3, #49	@ 0x31
 8001360:	2b04      	cmp	r3, #4
 8001362:	f200 80cf 	bhi.w	8001504 <HAL_UART_RxCpltCallback+0x1d8>
 8001366:	a201      	add	r2, pc, #4	@ (adr r2, 800136c <HAL_UART_RxCpltCallback+0x40>)
 8001368:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800136c:	08001381 	.word	0x08001381
 8001370:	080013e7 	.word	0x080013e7
 8001374:	08001437 	.word	0x08001437
 8001378:	08001485 	.word	0x08001485
 800137c:	0800149f 	.word	0x0800149f
				case _READY:
					switch (ucDigit){
 8001380:	4b67      	ldr	r3, [pc, #412]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001382:	781b      	ldrb	r3, [r3, #0]
 8001384:	2b73      	cmp	r3, #115	@ 0x73
 8001386:	d019      	beq.n	80013bc <HAL_UART_RxCpltCallback+0x90>
 8001388:	2b73      	cmp	r3, #115	@ 0x73
 800138a:	dc27      	bgt.n	80013dc <HAL_UART_RxCpltCallback+0xb0>
 800138c:	2b34      	cmp	r3, #52	@ 0x34
 800138e:	dc0f      	bgt.n	80013b0 <HAL_UART_RxCpltCallback+0x84>
 8001390:	2b31      	cmp	r3, #49	@ 0x31
 8001392:	db23      	blt.n	80013dc <HAL_UART_RxCpltCallback+0xb0>
 8001394:	3b31      	subs	r3, #49	@ 0x31
 8001396:	2b03      	cmp	r3, #3
 8001398:	d820      	bhi.n	80013dc <HAL_UART_RxCpltCallback+0xb0>
 800139a:	a201      	add	r2, pc, #4	@ (adr r2, 80013a0 <HAL_UART_RxCpltCallback+0x74>)
 800139c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80013a0:	080013c5 	.word	0x080013c5
 80013a4:	080013d7 	.word	0x080013d7
 80013a8:	080013d1 	.word	0x080013d1
 80013ac:	080013cb 	.word	0x080013cb
 80013b0:	2b67      	cmp	r3, #103	@ 0x67
 80013b2:	d113      	bne.n	80013dc <HAL_UART_RxCpltCallback+0xb0>
					case 'g':
						ucState = _GET;
 80013b4:	4b5b      	ldr	r3, [pc, #364]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 80013b6:	2232      	movs	r2, #50	@ 0x32
 80013b8:	701a      	strb	r2, [r3, #0]
						break;
 80013ba:	e013      	b.n	80013e4 <HAL_UART_RxCpltCallback+0xb8>
					case 's':
						ucState = _SET;
 80013bc:	4b59      	ldr	r3, [pc, #356]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 80013be:	2233      	movs	r2, #51	@ 0x33
 80013c0:	701a      	strb	r2, [r3, #0]
						break;
 80013c2:	e00f      	b.n	80013e4 <HAL_UART_RxCpltCallback+0xb8>
					case '1':
						vBleCmdMotorForward();
 80013c4:	f7ff ff44 	bl	8001250 <vBleCmdMotorForward>
						break;
 80013c8:	e00c      	b.n	80013e4 <HAL_UART_RxCpltCallback+0xb8>
					case '4':
						vBleCmdMotorLeftward();
 80013ca:	f7ff ff57 	bl	800127c <vBleCmdMotorLeftward>
						break;
 80013ce:	e009      	b.n	80013e4 <HAL_UART_RxCpltCallback+0xb8>
					case '3':
						vBleCmdMotorRightward();
 80013d0:	f7ff ff6a 	bl	80012a8 <vBleCmdMotorRightward>
						break;
 80013d4:	e006      	b.n	80013e4 <HAL_UART_RxCpltCallback+0xb8>
					case '2':
						vBleCmdMotorBackward();
 80013d6:	f7ff ff7d 	bl	80012d4 <vBleCmdMotorBackward>
						break;
 80013da:	e003      	b.n	80013e4 <HAL_UART_RxCpltCallback+0xb8>
					default:
						ucState = _IDDLE;
 80013dc:	4b51      	ldr	r3, [pc, #324]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 80013de:	2230      	movs	r2, #48	@ 0x30
 80013e0:	701a      	strb	r2, [r3, #0]
					}
					break;
 80013e2:	e08f      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>
 80013e4:	e08e      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>

				case _GET:
//					if ('t' == ucDigit || 'r' == ucDigit || 'h' == ucDigit || 'c' == ucDigit || 'p' == ucDigit || 'i' == ucDigit
//							|| 'd' == ucDigit || 's' == ucDigit || 'l' == ucDigit || 'o' == ucDigit){
					if ('v' == ucDigit || 'a' == ucDigit || 'b' == ucDigit || 'c' == ucDigit || 'd' == ucDigit || 'e' == ucDigit || 'f' == ucDigit){
 80013e6:	4b4e      	ldr	r3, [pc, #312]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80013e8:	781b      	ldrb	r3, [r3, #0]
 80013ea:	2b76      	cmp	r3, #118	@ 0x76
 80013ec:	d017      	beq.n	800141e <HAL_UART_RxCpltCallback+0xf2>
 80013ee:	4b4c      	ldr	r3, [pc, #304]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80013f0:	781b      	ldrb	r3, [r3, #0]
 80013f2:	2b61      	cmp	r3, #97	@ 0x61
 80013f4:	d013      	beq.n	800141e <HAL_UART_RxCpltCallback+0xf2>
 80013f6:	4b4a      	ldr	r3, [pc, #296]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80013f8:	781b      	ldrb	r3, [r3, #0]
 80013fa:	2b62      	cmp	r3, #98	@ 0x62
 80013fc:	d00f      	beq.n	800141e <HAL_UART_RxCpltCallback+0xf2>
 80013fe:	4b48      	ldr	r3, [pc, #288]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001400:	781b      	ldrb	r3, [r3, #0]
 8001402:	2b63      	cmp	r3, #99	@ 0x63
 8001404:	d00b      	beq.n	800141e <HAL_UART_RxCpltCallback+0xf2>
 8001406:	4b46      	ldr	r3, [pc, #280]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001408:	781b      	ldrb	r3, [r3, #0]
 800140a:	2b64      	cmp	r3, #100	@ 0x64
 800140c:	d007      	beq.n	800141e <HAL_UART_RxCpltCallback+0xf2>
 800140e:	4b44      	ldr	r3, [pc, #272]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001410:	781b      	ldrb	r3, [r3, #0]
 8001412:	2b65      	cmp	r3, #101	@ 0x65
 8001414:	d003      	beq.n	800141e <HAL_UART_RxCpltCallback+0xf2>
 8001416:	4b42      	ldr	r3, [pc, #264]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001418:	781b      	ldrb	r3, [r3, #0]
 800141a:	2b66      	cmp	r3, #102	@ 0x66
 800141c:	d107      	bne.n	800142e <HAL_UART_RxCpltCallback+0x102>
					ucParam = ucDigit;
 800141e:	4b40      	ldr	r3, [pc, #256]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001420:	781a      	ldrb	r2, [r3, #0]
 8001422:	4b41      	ldr	r3, [pc, #260]	@ (8001528 <HAL_UART_RxCpltCallback+0x1fc>)
 8001424:	701a      	strb	r2, [r3, #0]
					ucState = _PARAM;
 8001426:	4b3f      	ldr	r3, [pc, #252]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 8001428:	2234      	movs	r2, #52	@ 0x34
 800142a:	701a      	strb	r2, [r3, #0]
					}
					else
					ucState = _IDDLE;
					break;
 800142c:	e06a      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>
					ucState = _IDDLE;
 800142e:	4b3d      	ldr	r3, [pc, #244]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 8001430:	2230      	movs	r2, #48	@ 0x30
 8001432:	701a      	strb	r2, [r3, #0]
					break;
 8001434:	e066      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>

				case _SET:
//					if ('r' == ucDigit || 'h' == ucDigit || 'c' == ucDigit || 'p' == ucDigit || 'i' == ucDigit || 'd' == ucDigit
//							|| 'l' == ucDigit || 'o' == ucDigit){
					if ('a' == ucDigit || 'b' == ucDigit || 'c' == ucDigit || 'd' == ucDigit || 'e' == ucDigit || 'f' == ucDigit){
 8001436:	4b3a      	ldr	r3, [pc, #232]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001438:	781b      	ldrb	r3, [r3, #0]
 800143a:	2b61      	cmp	r3, #97	@ 0x61
 800143c:	d013      	beq.n	8001466 <HAL_UART_RxCpltCallback+0x13a>
 800143e:	4b38      	ldr	r3, [pc, #224]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001440:	781b      	ldrb	r3, [r3, #0]
 8001442:	2b62      	cmp	r3, #98	@ 0x62
 8001444:	d00f      	beq.n	8001466 <HAL_UART_RxCpltCallback+0x13a>
 8001446:	4b36      	ldr	r3, [pc, #216]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001448:	781b      	ldrb	r3, [r3, #0]
 800144a:	2b63      	cmp	r3, #99	@ 0x63
 800144c:	d00b      	beq.n	8001466 <HAL_UART_RxCpltCallback+0x13a>
 800144e:	4b34      	ldr	r3, [pc, #208]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001450:	781b      	ldrb	r3, [r3, #0]
 8001452:	2b64      	cmp	r3, #100	@ 0x64
 8001454:	d007      	beq.n	8001466 <HAL_UART_RxCpltCallback+0x13a>
 8001456:	4b32      	ldr	r3, [pc, #200]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001458:	781b      	ldrb	r3, [r3, #0]
 800145a:	2b65      	cmp	r3, #101	@ 0x65
 800145c:	d003      	beq.n	8001466 <HAL_UART_RxCpltCallback+0x13a>
 800145e:	4b30      	ldr	r3, [pc, #192]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001460:	781b      	ldrb	r3, [r3, #0]
 8001462:	2b66      	cmp	r3, #102	@ 0x66
 8001464:	d10a      	bne.n	800147c <HAL_UART_RxCpltCallback+0x150>
					ucParam = ucDigit;
 8001466:	4b2e      	ldr	r3, [pc, #184]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001468:	781a      	ldrb	r2, [r3, #0]
 800146a:	4b2f      	ldr	r3, [pc, #188]	@ (8001528 <HAL_UART_RxCpltCallback+0x1fc>)
 800146c:	701a      	strb	r2, [r3, #0]
					ucValueCount = 0;
 800146e:	4b2f      	ldr	r3, [pc, #188]	@ (800152c <HAL_UART_RxCpltCallback+0x200>)
 8001470:	2200      	movs	r2, #0
 8001472:	701a      	strb	r2, [r3, #0]
					ucState = _VALUE;
 8001474:	4b2b      	ldr	r3, [pc, #172]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 8001476:	2235      	movs	r2, #53	@ 0x35
 8001478:	701a      	strb	r2, [r3, #0]
					}
					else
					ucState = _IDDLE;
					break;
 800147a:	e043      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>
					ucState = _IDDLE;
 800147c:	4b29      	ldr	r3, [pc, #164]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 800147e:	2230      	movs	r2, #48	@ 0x30
 8001480:	701a      	strb	r2, [r3, #0]
					break;
 8001482:	e03f      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>

				case _PARAM:
					if (';' == ucDigit){
 8001484:	4b26      	ldr	r3, [pc, #152]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 8001486:	781b      	ldrb	r3, [r3, #0]
 8001488:	2b3b      	cmp	r3, #59	@ 0x3b
 800148a:	d104      	bne.n	8001496 <HAL_UART_RxCpltCallback+0x16a>
						vCommStateMachineReturnParam(ucParam);
 800148c:	4b26      	ldr	r3, [pc, #152]	@ (8001528 <HAL_UART_RxCpltCallback+0x1fc>)
 800148e:	781b      	ldrb	r3, [r3, #0]
 8001490:	4618      	mov	r0, r3
 8001492:	f000 f84f 	bl	8001534 <vCommStateMachineReturnParam>
					}
					ucState = _IDDLE;
 8001496:	4b23      	ldr	r3, [pc, #140]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 8001498:	2230      	movs	r2, #48	@ 0x30
 800149a:	701a      	strb	r2, [r3, #0]
					break;
 800149c:	e032      	b.n	8001504 <HAL_UART_RxCpltCallback+0x1d8>

				case _VALUE:
					if ((ucDigit >= '0' && ucDigit <= '9') || ',' == ucDigit){
 800149e:	4b20      	ldr	r3, [pc, #128]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80014a0:	781b      	ldrb	r3, [r3, #0]
 80014a2:	2b2f      	cmp	r3, #47	@ 0x2f
 80014a4:	d903      	bls.n	80014ae <HAL_UART_RxCpltCallback+0x182>
 80014a6:	4b1e      	ldr	r3, [pc, #120]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80014a8:	781b      	ldrb	r3, [r3, #0]
 80014aa:	2b39      	cmp	r3, #57	@ 0x39
 80014ac:	d903      	bls.n	80014b6 <HAL_UART_RxCpltCallback+0x18a>
 80014ae:	4b1c      	ldr	r3, [pc, #112]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80014b0:	781b      	ldrb	r3, [r3, #0]
 80014b2:	2b2c      	cmp	r3, #44	@ 0x2c
 80014b4:	d10f      	bne.n	80014d6 <HAL_UART_RxCpltCallback+0x1aa>
						if (ucValueCount < MAX_VALUE_LENGTH){
 80014b6:	4b1d      	ldr	r3, [pc, #116]	@ (800152c <HAL_UART_RxCpltCallback+0x200>)
 80014b8:	781b      	ldrb	r3, [r3, #0]
 80014ba:	2b06      	cmp	r3, #6
 80014bc:	d821      	bhi.n	8001502 <HAL_UART_RxCpltCallback+0x1d6>
							ucValue[ucValueCount++] = ucDigit;
 80014be:	4b1b      	ldr	r3, [pc, #108]	@ (800152c <HAL_UART_RxCpltCallback+0x200>)
 80014c0:	781b      	ldrb	r3, [r3, #0]
 80014c2:	1c5a      	adds	r2, r3, #1
 80014c4:	b2d1      	uxtb	r1, r2
 80014c6:	4a19      	ldr	r2, [pc, #100]	@ (800152c <HAL_UART_RxCpltCallback+0x200>)
 80014c8:	7011      	strb	r1, [r2, #0]
 80014ca:	461a      	mov	r2, r3
 80014cc:	4b14      	ldr	r3, [pc, #80]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80014ce:	7819      	ldrb	r1, [r3, #0]
 80014d0:	4b17      	ldr	r3, [pc, #92]	@ (8001530 <HAL_UART_RxCpltCallback+0x204>)
 80014d2:	5499      	strb	r1, [r3, r2]
						if (ucValueCount < MAX_VALUE_LENGTH){
 80014d4:	e015      	b.n	8001502 <HAL_UART_RxCpltCallback+0x1d6>
						}
					}
					else{
						if (';' == ucDigit){
 80014d6:	4b12      	ldr	r3, [pc, #72]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 80014d8:	781b      	ldrb	r3, [r3, #0]
 80014da:	2b3b      	cmp	r3, #59	@ 0x3b
 80014dc:	d10d      	bne.n	80014fa <HAL_UART_RxCpltCallback+0x1ce>
							ucValue[ucValueCount] = '\0';
 80014de:	4b13      	ldr	r3, [pc, #76]	@ (800152c <HAL_UART_RxCpltCallback+0x200>)
 80014e0:	781b      	ldrb	r3, [r3, #0]
 80014e2:	461a      	mov	r2, r3
 80014e4:	4b12      	ldr	r3, [pc, #72]	@ (8001530 <HAL_UART_RxCpltCallback+0x204>)
 80014e6:	2100      	movs	r1, #0
 80014e8:	5499      	strb	r1, [r3, r2]
							vCommStateMachineSetParam(ucParam, ucValue);
 80014ea:	4b0f      	ldr	r3, [pc, #60]	@ (8001528 <HAL_UART_RxCpltCallback+0x1fc>)
 80014ec:	781b      	ldrb	r3, [r3, #0]
 80014ee:	4a10      	ldr	r2, [pc, #64]	@ (8001530 <HAL_UART_RxCpltCallback+0x204>)
 80014f0:	b2d2      	uxtb	r2, r2
 80014f2:	4611      	mov	r1, r2
 80014f4:	4618      	mov	r0, r3
 80014f6:	f000 f941 	bl	800177c <vCommStateMachineSetParam>
						}
						ucState = _IDDLE;
 80014fa:	4b0a      	ldr	r3, [pc, #40]	@ (8001524 <HAL_UART_RxCpltCallback+0x1f8>)
 80014fc:	2230      	movs	r2, #48	@ 0x30
 80014fe:	701a      	strb	r2, [r3, #0]
					}
					break;
 8001500:	e7ff      	b.n	8001502 <HAL_UART_RxCpltCallback+0x1d6>
 8001502:	bf00      	nop
				}
			}
		}
    }
    HAL_UART_Receive_IT(pBluetoothControllerUART, &ucDigit, 1);
 8001504:	4b05      	ldr	r3, [pc, #20]	@ (800151c <HAL_UART_RxCpltCallback+0x1f0>)
 8001506:	681b      	ldr	r3, [r3, #0]
 8001508:	2201      	movs	r2, #1
 800150a:	4905      	ldr	r1, [pc, #20]	@ (8001520 <HAL_UART_RxCpltCallback+0x1f4>)
 800150c:	4618      	mov	r0, r3
 800150e:	f008 fc91 	bl	8009e34 <HAL_UART_Receive_IT>
}
 8001512:	bf00      	nop
 8001514:	3708      	adds	r7, #8
 8001516:	46bd      	mov	sp, r7
 8001518:	bd80      	pop	{r7, pc}
 800151a:	bf00      	nop
 800151c:	2000029c 	.word	0x2000029c
 8001520:	20000235 	.word	0x20000235
 8001524:	20000000 	.word	0x20000000
 8001528:	200002a0 	.word	0x200002a0
 800152c:	20000234 	.word	0x20000234
 8001530:	2000022c 	.word	0x2000022c

08001534 <vCommStateMachineReturnParam>:
//-----------------------------------------------------------------------------------------------------//
//	 Description	:	Returns the parameter indicated by the ucParam variable
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	ucParam
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vCommStateMachineReturnParam(unsigned char ucParam){
 8001534:	b580      	push	{r7, lr}
 8001536:	b084      	sub	sp, #16
 8001538:	af00      	add	r7, sp, #0
 800153a:	4603      	mov	r3, r0
 800153c:	71fb      	strb	r3, [r7, #7]
	unsigned char ucValue[MAX_VALUE_LENGTH];
    switch (ucParam){
 800153e:	79fb      	ldrb	r3, [r7, #7]
 8001540:	3b61      	subs	r3, #97	@ 0x61
 8001542:	2b15      	cmp	r3, #21
 8001544:	f200 8102 	bhi.w	800174c <vCommStateMachineReturnParam+0x218>
 8001548:	a201      	add	r2, pc, #4	@ (adr r2, 8001550 <vCommStateMachineReturnParam+0x1c>)
 800154a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800154e:	bf00      	nop
 8001550:	080015e5 	.word	0x080015e5
 8001554:	08001621 	.word	0x08001621
 8001558:	0800165d 	.word	0x0800165d
 800155c:	08001699 	.word	0x08001699
 8001560:	080016d5 	.word	0x080016d5
 8001564:	08001711 	.word	0x08001711
 8001568:	0800174d 	.word	0x0800174d
 800156c:	0800174d 	.word	0x0800174d
 8001570:	0800174d 	.word	0x0800174d
 8001574:	0800174d 	.word	0x0800174d
 8001578:	0800174d 	.word	0x0800174d
 800157c:	0800174d 	.word	0x0800174d
 8001580:	0800174d 	.word	0x0800174d
 8001584:	0800174d 	.word	0x0800174d
 8001588:	0800174d 	.word	0x0800174d
 800158c:	0800174d 	.word	0x0800174d
 8001590:	0800174d 	.word	0x0800174d
 8001594:	0800174d 	.word	0x0800174d
 8001598:	0800174d 	.word	0x0800174d
 800159c:	0800174d 	.word	0x0800174d
 80015a0:	0800174d 	.word	0x0800174d
 80015a4:	080015a9 	.word	0x080015a9
        case 'v': //temp
        	vCommStateMachineFloatToString(fSpeed, 5, ucValue);
 80015a8:	4b6a      	ldr	r3, [pc, #424]	@ (8001754 <vCommStateMachineReturnParam+0x220>)
 80015aa:	edd3 7a00 	vldr	s15, [r3]
 80015ae:	f107 0308 	add.w	r3, r7, #8
 80015b2:	4619      	mov	r1, r3
 80015b4:	2005      	movs	r0, #5
 80015b6:	eeb0 0a67 	vmov.f32	s0, s15
 80015ba:	f000 f9a5 	bl	8001908 <vCommStateMachineFloatToString>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucValue);
 80015be:	4b66      	ldr	r3, [pc, #408]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 80015c0:	681b      	ldr	r3, [r3, #0]
 80015c2:	f107 0208 	add.w	r2, r7, #8
 80015c6:	4611      	mov	r1, r2
 80015c8:	4618      	mov	r0, r3
 80015ca:	f000 fa4b 	bl	8001a64 <vCommStateMachineSendMessage>
            sprintf(ucTransmitVector, "\r\n");
 80015ce:	4963      	ldr	r1, [pc, #396]	@ (800175c <vCommStateMachineReturnParam+0x228>)
 80015d0:	4863      	ldr	r0, [pc, #396]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 80015d2:	f00b fb73 	bl	800ccbc <siprintf>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucTransmitVector);
 80015d6:	4b60      	ldr	r3, [pc, #384]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	4961      	ldr	r1, [pc, #388]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 80015dc:	4618      	mov	r0, r3
 80015de:	f000 fa41 	bl	8001a64 <vCommStateMachineSendMessage>
            break;
 80015e2:	e0b3      	b.n	800174c <vCommStateMachineReturnParam+0x218>
        case 'a': //kp left
        	vCommStateMachineFloatToString(fLeftMotorKp, 5, ucValue);
 80015e4:	4b5f      	ldr	r3, [pc, #380]	@ (8001764 <vCommStateMachineReturnParam+0x230>)
 80015e6:	edd3 7a00 	vldr	s15, [r3]
 80015ea:	f107 0308 	add.w	r3, r7, #8
 80015ee:	4619      	mov	r1, r3
 80015f0:	2005      	movs	r0, #5
 80015f2:	eeb0 0a67 	vmov.f32	s0, s15
 80015f6:	f000 f987 	bl	8001908 <vCommStateMachineFloatToString>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucValue);
 80015fa:	4b57      	ldr	r3, [pc, #348]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	f107 0208 	add.w	r2, r7, #8
 8001602:	4611      	mov	r1, r2
 8001604:	4618      	mov	r0, r3
 8001606:	f000 fa2d 	bl	8001a64 <vCommStateMachineSendMessage>
            sprintf(ucTransmitVector, "\r\n");
 800160a:	4954      	ldr	r1, [pc, #336]	@ (800175c <vCommStateMachineReturnParam+0x228>)
 800160c:	4854      	ldr	r0, [pc, #336]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 800160e:	f00b fb55 	bl	800ccbc <siprintf>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucTransmitVector);
 8001612:	4b51      	ldr	r3, [pc, #324]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 8001614:	681b      	ldr	r3, [r3, #0]
 8001616:	4952      	ldr	r1, [pc, #328]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 8001618:	4618      	mov	r0, r3
 800161a:	f000 fa23 	bl	8001a64 <vCommStateMachineSendMessage>
            break;
 800161e:	e095      	b.n	800174c <vCommStateMachineReturnParam+0x218>
        case 'b': //ki left
        	vCommStateMachineFloatToString(fLeftMotorKi, 5, ucValue);
 8001620:	4b51      	ldr	r3, [pc, #324]	@ (8001768 <vCommStateMachineReturnParam+0x234>)
 8001622:	edd3 7a00 	vldr	s15, [r3]
 8001626:	f107 0308 	add.w	r3, r7, #8
 800162a:	4619      	mov	r1, r3
 800162c:	2005      	movs	r0, #5
 800162e:	eeb0 0a67 	vmov.f32	s0, s15
 8001632:	f000 f969 	bl	8001908 <vCommStateMachineFloatToString>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucValue);
 8001636:	4b48      	ldr	r3, [pc, #288]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	f107 0208 	add.w	r2, r7, #8
 800163e:	4611      	mov	r1, r2
 8001640:	4618      	mov	r0, r3
 8001642:	f000 fa0f 	bl	8001a64 <vCommStateMachineSendMessage>
            sprintf(ucTransmitVector, "\r\n");
 8001646:	4945      	ldr	r1, [pc, #276]	@ (800175c <vCommStateMachineReturnParam+0x228>)
 8001648:	4845      	ldr	r0, [pc, #276]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 800164a:	f00b fb37 	bl	800ccbc <siprintf>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucTransmitVector);
 800164e:	4b42      	ldr	r3, [pc, #264]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 8001650:	681b      	ldr	r3, [r3, #0]
 8001652:	4943      	ldr	r1, [pc, #268]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 8001654:	4618      	mov	r0, r3
 8001656:	f000 fa05 	bl	8001a64 <vCommStateMachineSendMessage>
            break;
 800165a:	e077      	b.n	800174c <vCommStateMachineReturnParam+0x218>
        case 'c': //kp right
        	vCommStateMachineFloatToString(fRightMotorKp, 5, ucValue);
 800165c:	4b43      	ldr	r3, [pc, #268]	@ (800176c <vCommStateMachineReturnParam+0x238>)
 800165e:	edd3 7a00 	vldr	s15, [r3]
 8001662:	f107 0308 	add.w	r3, r7, #8
 8001666:	4619      	mov	r1, r3
 8001668:	2005      	movs	r0, #5
 800166a:	eeb0 0a67 	vmov.f32	s0, s15
 800166e:	f000 f94b 	bl	8001908 <vCommStateMachineFloatToString>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucValue);
 8001672:	4b39      	ldr	r3, [pc, #228]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	f107 0208 	add.w	r2, r7, #8
 800167a:	4611      	mov	r1, r2
 800167c:	4618      	mov	r0, r3
 800167e:	f000 f9f1 	bl	8001a64 <vCommStateMachineSendMessage>
            sprintf(ucTransmitVector, "\r\n");
 8001682:	4936      	ldr	r1, [pc, #216]	@ (800175c <vCommStateMachineReturnParam+0x228>)
 8001684:	4836      	ldr	r0, [pc, #216]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 8001686:	f00b fb19 	bl	800ccbc <siprintf>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucTransmitVector);
 800168a:	4b33      	ldr	r3, [pc, #204]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 800168c:	681b      	ldr	r3, [r3, #0]
 800168e:	4934      	ldr	r1, [pc, #208]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 8001690:	4618      	mov	r0, r3
 8001692:	f000 f9e7 	bl	8001a64 <vCommStateMachineSendMessage>
            break;
 8001696:	e059      	b.n	800174c <vCommStateMachineReturnParam+0x218>
        case 'd': //ki left
        	vCommStateMachineFloatToString(fRightMotorKi, 5, ucValue);
 8001698:	4b35      	ldr	r3, [pc, #212]	@ (8001770 <vCommStateMachineReturnParam+0x23c>)
 800169a:	edd3 7a00 	vldr	s15, [r3]
 800169e:	f107 0308 	add.w	r3, r7, #8
 80016a2:	4619      	mov	r1, r3
 80016a4:	2005      	movs	r0, #5
 80016a6:	eeb0 0a67 	vmov.f32	s0, s15
 80016aa:	f000 f92d 	bl	8001908 <vCommStateMachineFloatToString>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucValue);
 80016ae:	4b2a      	ldr	r3, [pc, #168]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 80016b0:	681b      	ldr	r3, [r3, #0]
 80016b2:	f107 0208 	add.w	r2, r7, #8
 80016b6:	4611      	mov	r1, r2
 80016b8:	4618      	mov	r0, r3
 80016ba:	f000 f9d3 	bl	8001a64 <vCommStateMachineSendMessage>
            sprintf(ucTransmitVector, "\r\n");
 80016be:	4927      	ldr	r1, [pc, #156]	@ (800175c <vCommStateMachineReturnParam+0x228>)
 80016c0:	4827      	ldr	r0, [pc, #156]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 80016c2:	f00b fafb 	bl	800ccbc <siprintf>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucTransmitVector);
 80016c6:	4b24      	ldr	r3, [pc, #144]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 80016c8:	681b      	ldr	r3, [r3, #0]
 80016ca:	4925      	ldr	r1, [pc, #148]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 80016cc:	4618      	mov	r0, r3
 80016ce:	f000 f9c9 	bl	8001a64 <vCommStateMachineSendMessage>
            break;
 80016d2:	e03b      	b.n	800174c <vCommStateMachineReturnParam+0x218>
        case 'e': //setpoint left
        	vCommStateMachineFloatToString(fSetPoint_left, 5, ucValue);
 80016d4:	4b27      	ldr	r3, [pc, #156]	@ (8001774 <vCommStateMachineReturnParam+0x240>)
 80016d6:	edd3 7a00 	vldr	s15, [r3]
 80016da:	f107 0308 	add.w	r3, r7, #8
 80016de:	4619      	mov	r1, r3
 80016e0:	2005      	movs	r0, #5
 80016e2:	eeb0 0a67 	vmov.f32	s0, s15
 80016e6:	f000 f90f 	bl	8001908 <vCommStateMachineFloatToString>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucValue);
 80016ea:	4b1b      	ldr	r3, [pc, #108]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 80016ec:	681b      	ldr	r3, [r3, #0]
 80016ee:	f107 0208 	add.w	r2, r7, #8
 80016f2:	4611      	mov	r1, r2
 80016f4:	4618      	mov	r0, r3
 80016f6:	f000 f9b5 	bl	8001a64 <vCommStateMachineSendMessage>
            sprintf(ucTransmitVector, "\r\n");
 80016fa:	4918      	ldr	r1, [pc, #96]	@ (800175c <vCommStateMachineReturnParam+0x228>)
 80016fc:	4818      	ldr	r0, [pc, #96]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 80016fe:	f00b fadd 	bl	800ccbc <siprintf>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucTransmitVector);
 8001702:	4b15      	ldr	r3, [pc, #84]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	4916      	ldr	r1, [pc, #88]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 8001708:	4618      	mov	r0, r3
 800170a:	f000 f9ab 	bl	8001a64 <vCommStateMachineSendMessage>
            break;
 800170e:	e01d      	b.n	800174c <vCommStateMachineReturnParam+0x218>
        case 'f': //setpoint right
        	vCommStateMachineFloatToString(fSetPoint_right, 5, ucValue);
 8001710:	4b19      	ldr	r3, [pc, #100]	@ (8001778 <vCommStateMachineReturnParam+0x244>)
 8001712:	edd3 7a00 	vldr	s15, [r3]
 8001716:	f107 0308 	add.w	r3, r7, #8
 800171a:	4619      	mov	r1, r3
 800171c:	2005      	movs	r0, #5
 800171e:	eeb0 0a67 	vmov.f32	s0, s15
 8001722:	f000 f8f1 	bl	8001908 <vCommStateMachineFloatToString>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucValue);
 8001726:	4b0c      	ldr	r3, [pc, #48]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	f107 0208 	add.w	r2, r7, #8
 800172e:	4611      	mov	r1, r2
 8001730:	4618      	mov	r0, r3
 8001732:	f000 f997 	bl	8001a64 <vCommStateMachineSendMessage>
            sprintf(ucTransmitVector, "\r\n");
 8001736:	4909      	ldr	r1, [pc, #36]	@ (800175c <vCommStateMachineReturnParam+0x228>)
 8001738:	4809      	ldr	r0, [pc, #36]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 800173a:	f00b fabf 	bl	800ccbc <siprintf>
            vCommStateMachineSendMessage(pBluetoothControllerUART, &ucTransmitVector);
 800173e:	4b06      	ldr	r3, [pc, #24]	@ (8001758 <vCommStateMachineReturnParam+0x224>)
 8001740:	681b      	ldr	r3, [r3, #0]
 8001742:	4907      	ldr	r1, [pc, #28]	@ (8001760 <vCommStateMachineReturnParam+0x22c>)
 8001744:	4618      	mov	r0, r3
 8001746:	f000 f98d 	bl	8001a64 <vCommStateMachineSendMessage>
            break;
 800174a:	bf00      	nop

    }
}
 800174c:	bf00      	nop
 800174e:	3710      	adds	r7, #16
 8001750:	46bd      	mov	sp, r7
 8001752:	bd80      	pop	{r7, pc}
 8001754:	20000788 	.word	0x20000788
 8001758:	2000029c 	.word	0x2000029c
 800175c:	0800f220 	.word	0x0800f220
 8001760:	20000238 	.word	0x20000238
 8001764:	20000024 	.word	0x20000024
 8001768:	20000028 	.word	0x20000028
 800176c:	2000002c 	.word	0x2000002c
 8001770:	20000030 	.word	0x20000030
 8001774:	20000034 	.word	0x20000034
 8001778:	20000038 	.word	0x20000038

0800177c <vCommStateMachineSetParam>:
//	 Description	:	set the parameter indicated by the ucParam by ucValue
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	ucParam
//		                ucValue
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vCommStateMachineSetParam(unsigned char ucParam, unsigned char ucValue){
 800177c:	b580      	push	{r7, lr}
 800177e:	b084      	sub	sp, #16
 8001780:	af00      	add	r7, sp, #0
 8001782:	4603      	mov	r3, r0
 8001784:	460a      	mov	r2, r1
 8001786:	71fb      	strb	r3, [r7, #7]
 8001788:	4613      	mov	r3, r2
 800178a:	71bb      	strb	r3, [r7, #6]
	float fValue;
    switch (ucParam){
 800178c:	79fb      	ldrb	r3, [r7, #7]
 800178e:	3b61      	subs	r3, #97	@ 0x61
 8001790:	2b05      	cmp	r3, #5
 8001792:	d86f      	bhi.n	8001874 <vCommStateMachineSetParam+0xf8>
 8001794:	a201      	add	r2, pc, #4	@ (adr r2, 800179c <vCommStateMachineSetParam+0x20>)
 8001796:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800179a:	bf00      	nop
 800179c:	080017b5 	.word	0x080017b5
 80017a0:	080017c9 	.word	0x080017c9
 80017a4:	080017dd 	.word	0x080017dd
 80017a8:	080017f1 	.word	0x080017f1
 80017ac:	08001805 	.word	0x08001805
 80017b0:	0800183d 	.word	0x0800183d
        case 'a': //left kp
        	fLeftMotorKp = fCommStateMachineStringToFloat(&ucValue);
 80017b4:	1dbb      	adds	r3, r7, #6
 80017b6:	4618      	mov	r0, r3
 80017b8:	f000 f86e 	bl	8001898 <fCommStateMachineStringToFloat>
 80017bc:	eef0 7a40 	vmov.f32	s15, s0
 80017c0:	4b2e      	ldr	r3, [pc, #184]	@ (800187c <vCommStateMachineSetParam+0x100>)
 80017c2:	edc3 7a00 	vstr	s15, [r3]
            break;
 80017c6:	e055      	b.n	8001874 <vCommStateMachineSetParam+0xf8>
        case 'b': //left ki
        	fLeftMotorKi = fCommStateMachineStringToFloat(&ucValue);
 80017c8:	1dbb      	adds	r3, r7, #6
 80017ca:	4618      	mov	r0, r3
 80017cc:	f000 f864 	bl	8001898 <fCommStateMachineStringToFloat>
 80017d0:	eef0 7a40 	vmov.f32	s15, s0
 80017d4:	4b2a      	ldr	r3, [pc, #168]	@ (8001880 <vCommStateMachineSetParam+0x104>)
 80017d6:	edc3 7a00 	vstr	s15, [r3]
            break;
 80017da:	e04b      	b.n	8001874 <vCommStateMachineSetParam+0xf8>
        case 'c': //right kp
    		fRightMotorKp = fCommStateMachineStringToFloat(&ucValue);
 80017dc:	1dbb      	adds	r3, r7, #6
 80017de:	4618      	mov	r0, r3
 80017e0:	f000 f85a 	bl	8001898 <fCommStateMachineStringToFloat>
 80017e4:	eef0 7a40 	vmov.f32	s15, s0
 80017e8:	4b26      	ldr	r3, [pc, #152]	@ (8001884 <vCommStateMachineSetParam+0x108>)
 80017ea:	edc3 7a00 	vstr	s15, [r3]
        	break;
 80017ee:	e041      	b.n	8001874 <vCommStateMachineSetParam+0xf8>
        case 'd': //left ki
        	fRightMotorKi=fCommStateMachineStringToFloat(&ucValue);
 80017f0:	1dbb      	adds	r3, r7, #6
 80017f2:	4618      	mov	r0, r3
 80017f4:	f000 f850 	bl	8001898 <fCommStateMachineStringToFloat>
 80017f8:	eef0 7a40 	vmov.f32	s15, s0
 80017fc:	4b22      	ldr	r3, [pc, #136]	@ (8001888 <vCommStateMachineSetParam+0x10c>)
 80017fe:	edc3 7a00 	vstr	s15, [r3]
            break;
 8001802:	e037      	b.n	8001874 <vCommStateMachineSetParam+0xf8>
        case 'e': //set left
        	fValue = fCommStateMachineStringToFloat(&ucValue);
 8001804:	1dbb      	adds	r3, r7, #6
 8001806:	4618      	mov	r0, r3
 8001808:	f000 f846 	bl	8001898 <fCommStateMachineStringToFloat>
 800180c:	ed87 0a03 	vstr	s0, [r7, #12]
        	if (fValue >= 0 && fValue<= 700){
 8001810:	edd7 7a03 	vldr	s15, [r7, #12]
 8001814:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800181c:	da00      	bge.n	8001820 <vCommStateMachineSetParam+0xa4>
				fSetPoint_left=fValue;
        	}
            break;
 800181e:	e029      	b.n	8001874 <vCommStateMachineSetParam+0xf8>
        	if (fValue >= 0 && fValue<= 700){
 8001820:	edd7 7a03 	vldr	s15, [r7, #12]
 8001824:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 800188c <vCommStateMachineSetParam+0x110>
 8001828:	eef4 7ac7 	vcmpe.f32	s15, s14
 800182c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001830:	d900      	bls.n	8001834 <vCommStateMachineSetParam+0xb8>
            break;
 8001832:	e01f      	b.n	8001874 <vCommStateMachineSetParam+0xf8>
				fSetPoint_left=fValue;
 8001834:	4a16      	ldr	r2, [pc, #88]	@ (8001890 <vCommStateMachineSetParam+0x114>)
 8001836:	68fb      	ldr	r3, [r7, #12]
 8001838:	6013      	str	r3, [r2, #0]
            break;
 800183a:	e01b      	b.n	8001874 <vCommStateMachineSetParam+0xf8>
        case 'f': //set right
        	fValue = fCommStateMachineStringToFloat(&ucValue);
 800183c:	1dbb      	adds	r3, r7, #6
 800183e:	4618      	mov	r0, r3
 8001840:	f000 f82a 	bl	8001898 <fCommStateMachineStringToFloat>
 8001844:	ed87 0a03 	vstr	s0, [r7, #12]
        	if (fValue >= 0 && fValue<= 700){
 8001848:	edd7 7a03 	vldr	s15, [r7, #12]
 800184c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001854:	da00      	bge.n	8001858 <vCommStateMachineSetParam+0xdc>
				fSetPoint_right=fValue;
        	}
            break;
 8001856:	e00c      	b.n	8001872 <vCommStateMachineSetParam+0xf6>
        	if (fValue >= 0 && fValue<= 700){
 8001858:	edd7 7a03 	vldr	s15, [r7, #12]
 800185c:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 800188c <vCommStateMachineSetParam+0x110>
 8001860:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001868:	d900      	bls.n	800186c <vCommStateMachineSetParam+0xf0>
            break;
 800186a:	e002      	b.n	8001872 <vCommStateMachineSetParam+0xf6>
				fSetPoint_right=fValue;
 800186c:	4a09      	ldr	r2, [pc, #36]	@ (8001894 <vCommStateMachineSetParam+0x118>)
 800186e:	68fb      	ldr	r3, [r7, #12]
 8001870:	6013      	str	r3, [r2, #0]
            break;
 8001872:	bf00      	nop
    }
}
 8001874:	bf00      	nop
 8001876:	3710      	adds	r7, #16
 8001878:	46bd      	mov	sp, r7
 800187a:	bd80      	pop	{r7, pc}
 800187c:	20000024 	.word	0x20000024
 8001880:	20000028 	.word	0x20000028
 8001884:	2000002c 	.word	0x2000002c
 8001888:	20000030 	.word	0x20000030
 800188c:	442f0000 	.word	0x442f0000
 8001890:	20000034 	.word	0x20000034
 8001894:	20000038 	.word	0x20000038

08001898 <fCommStateMachineStringToFloat>:
//	 Description	:	Turns Strings to float using atof functon and set a "." instead a ","
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	unsigned char * ucInputNumber
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
//float fCommunicationStateMachineStringToFloat(unsigned char * ucValue){
float fCommStateMachineStringToFloat(){
 8001898:	b580      	push	{r7, lr}
 800189a:	b082      	sub	sp, #8
 800189c:	af00      	add	r7, sp, #0
	float fInputNumber=0;
 800189e:	f04f 0300 	mov.w	r3, #0
 80018a2:	603b      	str	r3, [r7, #0]
	int iPos=0;
 80018a4:	2300      	movs	r3, #0
 80018a6:	607b      	str	r3, [r7, #4]
	while (iPos >= 0){
 80018a8:	e017      	b.n	80018da <fCommStateMachineStringToFloat+0x42>
		if ('\0'!=ucValue[iPos]){
 80018aa:	4a16      	ldr	r2, [pc, #88]	@ (8001904 <fCommStateMachineStringToFloat+0x6c>)
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	4413      	add	r3, r2
 80018b0:	781b      	ldrb	r3, [r3, #0]
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d00e      	beq.n	80018d4 <fCommStateMachineStringToFloat+0x3c>
			if (ucValue[iPos] == ','){
 80018b6:	4a13      	ldr	r2, [pc, #76]	@ (8001904 <fCommStateMachineStringToFloat+0x6c>)
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	4413      	add	r3, r2
 80018bc:	781b      	ldrb	r3, [r3, #0]
 80018be:	2b2c      	cmp	r3, #44	@ 0x2c
 80018c0:	d104      	bne.n	80018cc <fCommStateMachineStringToFloat+0x34>
				ucValue[iPos] = '.';
 80018c2:	4a10      	ldr	r2, [pc, #64]	@ (8001904 <fCommStateMachineStringToFloat+0x6c>)
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	4413      	add	r3, r2
 80018c8:	222e      	movs	r2, #46	@ 0x2e
 80018ca:	701a      	strb	r2, [r3, #0]
			}
			iPos++;
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	3301      	adds	r3, #1
 80018d0:	607b      	str	r3, [r7, #4]
 80018d2:	e002      	b.n	80018da <fCommStateMachineStringToFloat+0x42>
		}
		else{
			iPos = -1;
 80018d4:	f04f 33ff 	mov.w	r3, #4294967295
 80018d8:	607b      	str	r3, [r7, #4]
	while (iPos >= 0){
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	2b00      	cmp	r3, #0
 80018de:	dae4      	bge.n	80018aa <fCommStateMachineStringToFloat+0x12>
		}
	}
	fInputNumber = atof (ucValue);
 80018e0:	4808      	ldr	r0, [pc, #32]	@ (8001904 <fCommStateMachineStringToFloat+0x6c>)
 80018e2:	f00a fb17 	bl	800bf14 <atof>
 80018e6:	ee07 0a90 	vmov	s15, r0
 80018ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018ee:	edc7 7a00 	vstr	s15, [r7]
	return fInputNumber;
 80018f2:	683b      	ldr	r3, [r7, #0]
 80018f4:	ee07 3a90 	vmov	s15, r3
}
 80018f8:	eeb0 0a67 	vmov.f32	s0, s15
 80018fc:	3708      	adds	r7, #8
 80018fe:	46bd      	mov	sp, r7
 8001900:	bd80      	pop	{r7, pc}
 8001902:	bf00      	nop
 8001904:	2000022c 	.word	0x2000022c

08001908 <vCommStateMachineFloatToString>:
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	float fInputNumber
//		                int iDigits
//		                unsigned char * ucOutputNumber
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vCommStateMachineFloatToString(float num, int nCasasDec, unsigned char * pOutputString){
 8001908:	b580      	push	{r7, lr}
 800190a:	b08c      	sub	sp, #48	@ 0x30
 800190c:	af00      	add	r7, sp, #0
 800190e:	ed87 0a03 	vstr	s0, [r7, #12]
 8001912:	60b8      	str	r0, [r7, #8]
 8001914:	6079      	str	r1, [r7, #4]
		float fAux = num;
 8001916:	68fb      	ldr	r3, [r7, #12]
 8001918:	62fb      	str	r3, [r7, #44]	@ 0x2c
		// Utilizado na quantidade de casas que a string vai ter
		int iN = nCasasDec;
 800191a:	68bb      	ldr	r3, [r7, #8]
 800191c:	62bb      	str	r3, [r7, #40]	@ 0x28
		int iPos = 0;
 800191e:	2300      	movs	r3, #0
 8001920:	627b      	str	r3, [r7, #36]	@ 0x24
		// "mapping" para facilitar na adicao de char na string
		char pNumberToChar[10] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
 8001922:	4a4f      	ldr	r2, [pc, #316]	@ (8001a60 <vCommStateMachineFloatToString+0x158>)
 8001924:	f107 0310 	add.w	r3, r7, #16
 8001928:	ca07      	ldmia	r2, {r0, r1, r2}
 800192a:	c303      	stmia	r3!, {r0, r1}
 800192c:	801a      	strh	r2, [r3, #0]

		// Limpa a string global
		for (int i = 0; i < 100; i++)
 800192e:	2300      	movs	r3, #0
 8001930:	623b      	str	r3, [r7, #32]
 8001932:	e007      	b.n	8001944 <vCommStateMachineFloatToString+0x3c>
			pOutputString[i] = 0;
 8001934:	6a3b      	ldr	r3, [r7, #32]
 8001936:	687a      	ldr	r2, [r7, #4]
 8001938:	4413      	add	r3, r2
 800193a:	2200      	movs	r2, #0
 800193c:	701a      	strb	r2, [r3, #0]
		for (int i = 0; i < 100; i++)
 800193e:	6a3b      	ldr	r3, [r7, #32]
 8001940:	3301      	adds	r3, #1
 8001942:	623b      	str	r3, [r7, #32]
 8001944:	6a3b      	ldr	r3, [r7, #32]
 8001946:	2b63      	cmp	r3, #99	@ 0x63
 8001948:	ddf4      	ble.n	8001934 <vCommStateMachineFloatToString+0x2c>

		// Caso float negativo, adiciona '-' na string
		if (fAux < 0) {
 800194a:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800194e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001956:	d50d      	bpl.n	8001974 <vCommStateMachineFloatToString+0x6c>
			fAux = fAux*-1;
 8001958:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 800195c:	eef1 7a67 	vneg.f32	s15, s15
 8001960:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c
			pOutputString[iPos] = '-';
 8001964:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001966:	687a      	ldr	r2, [r7, #4]
 8001968:	4413      	add	r3, r2
 800196a:	222d      	movs	r2, #45	@ 0x2d
 800196c:	701a      	strb	r2, [r3, #0]
			iPos++;
 800196e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001970:	3301      	adds	r3, #1
 8001972:	627b      	str	r3, [r7, #36]	@ 0x24
		}

		// Caso menor que 1, adiciona 0 na string
		if (fAux < 1) {
 8001974:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 8001978:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800197c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001980:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001984:	d507      	bpl.n	8001996 <vCommStateMachineFloatToString+0x8e>
			pOutputString[iPos] = '0';
 8001986:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001988:	687a      	ldr	r2, [r7, #4]
 800198a:	4413      	add	r3, r2
 800198c:	2230      	movs	r2, #48	@ 0x30
 800198e:	701a      	strb	r2, [r3, #0]
			iPos++;
 8001990:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001992:	3301      	adds	r3, #1
 8001994:	627b      	str	r3, [r7, #36]	@ 0x24
		}

		// Move a virgula do numero ate que fique menor que 1
		while (fAux >= 1) {
 8001996:	e00a      	b.n	80019ae <vCommStateMachineFloatToString+0xa6>
			fAux = fAux/10;
 8001998:	ed97 7a0b 	vldr	s14, [r7, #44]	@ 0x2c
 800199c:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 80019a0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80019a4:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c
			iN++;
 80019a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80019aa:	3301      	adds	r3, #1
 80019ac:	62bb      	str	r3, [r7, #40]	@ 0x28
		while (fAux >= 1) {
 80019ae:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80019b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80019b6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80019ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019be:	daeb      	bge.n	8001998 <vCommStateMachineFloatToString+0x90>
		}

		// Enquanto ainda nao tiver preenchido o numero de casas desejadas
		while (iN > 0) {
 80019c0:	e03f      	b.n	8001a42 <vCommStateMachineFloatToString+0x13a>
			fAux = fAux*10;
 80019c2:	edd7 7a0b 	vldr	s15, [r7, #44]	@ 0x2c
 80019c6:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 80019ca:	ee67 7a87 	vmul.f32	s15, s15, s14
 80019ce:	edc7 7a0b 	vstr	s15, [r7, #44]	@ 0x2c
			// Seleciona o numero da enesima posicao
			int iNumber = floor(fmod(fAux, 10));
 80019d2:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
 80019d4:	f7fe fde0 	bl	8000598 <__aeabi_f2d>
 80019d8:	4602      	mov	r2, r0
 80019da:	460b      	mov	r3, r1
 80019dc:	ed9f 1b1e 	vldr	d1, [pc, #120]	@ 8001a58 <vCommStateMachineFloatToString+0x150>
 80019e0:	ec43 2b10 	vmov	d0, r2, r3
 80019e4:	f00d fa58 	bl	800ee98 <fmod>
 80019e8:	eeb0 7a40 	vmov.f32	s14, s0
 80019ec:	eef0 7a60 	vmov.f32	s15, s1
 80019f0:	eeb0 0a47 	vmov.f32	s0, s14
 80019f4:	eef0 0a67 	vmov.f32	s1, s15
 80019f8:	f00d fa7e 	bl	800eef8 <floor>
 80019fc:	ec53 2b10 	vmov	r2, r3, d0
 8001a00:	4610      	mov	r0, r2
 8001a02:	4619      	mov	r1, r3
 8001a04:	f7ff f8d0 	bl	8000ba8 <__aeabi_d2iz>
 8001a08:	4603      	mov	r3, r0
 8001a0a:	61fb      	str	r3, [r7, #28]
			// Adiciona virgula na posicao correta
			if (iN == nCasasDec) {
 8001a0c:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8001a0e:	68bb      	ldr	r3, [r7, #8]
 8001a10:	429a      	cmp	r2, r3
 8001a12:	d107      	bne.n	8001a24 <vCommStateMachineFloatToString+0x11c>
				pOutputString[iPos] = ',';
 8001a14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a16:	687a      	ldr	r2, [r7, #4]
 8001a18:	4413      	add	r3, r2
 8001a1a:	222c      	movs	r2, #44	@ 0x2c
 8001a1c:	701a      	strb	r2, [r3, #0]
				iPos++;
 8001a1e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a20:	3301      	adds	r3, #1
 8001a22:	627b      	str	r3, [r7, #36]	@ 0x24
			}

			// Adiciona char igual ao numero, na string de retorno
			pOutputString[iPos] = pNumberToChar[iNumber];
 8001a24:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a26:	687a      	ldr	r2, [r7, #4]
 8001a28:	4413      	add	r3, r2
 8001a2a:	f107 0110 	add.w	r1, r7, #16
 8001a2e:	69fa      	ldr	r2, [r7, #28]
 8001a30:	440a      	add	r2, r1
 8001a32:	7812      	ldrb	r2, [r2, #0]
 8001a34:	701a      	strb	r2, [r3, #0]
			iPos++;
 8001a36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001a38:	3301      	adds	r3, #1
 8001a3a:	627b      	str	r3, [r7, #36]	@ 0x24
			iN--;
 8001a3c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001a3e:	3b01      	subs	r3, #1
 8001a40:	62bb      	str	r3, [r7, #40]	@ 0x28
		while (iN > 0) {
 8001a42:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8001a44:	2b00      	cmp	r3, #0
 8001a46:	dcbc      	bgt.n	80019c2 <vCommStateMachineFloatToString+0xba>
		}
	}
 8001a48:	bf00      	nop
 8001a4a:	bf00      	nop
 8001a4c:	3730      	adds	r7, #48	@ 0x30
 8001a4e:	46bd      	mov	sp, r7
 8001a50:	bd80      	pop	{r7, pc}
 8001a52:	bf00      	nop
 8001a54:	f3af 8000 	nop.w
 8001a58:	00000000 	.word	0x00000000
 8001a5c:	40240000 	.word	0x40240000
 8001a60:	0800f224 	.word	0x0800f224

08001a64 <vCommStateMachineSendMessage>:
//	 Description	:	Send message to putty from HAL_UART_Transmit
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	UART_HandleTypeDef * huart
//		                unsigned char* ucMessage
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vCommStateMachineSendMessage (UART_HandleTypeDef * huart, unsigned char* ucMessage){
 8001a64:	b580      	push	{r7, lr}
 8001a66:	b084      	sub	sp, #16
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	6078      	str	r0, [r7, #4]
 8001a6c:	6039      	str	r1, [r7, #0]
	if(huart == pBluetoothControllerUART){
 8001a6e:	4b1c      	ldr	r3, [pc, #112]	@ (8001ae0 <vCommStateMachineSendMessage+0x7c>)
 8001a70:	681b      	ldr	r3, [r3, #0]
 8001a72:	687a      	ldr	r2, [r7, #4]
 8001a74:	429a      	cmp	r2, r3
 8001a76:	d12f      	bne.n	8001ad8 <vCommStateMachineSendMessage+0x74>
		int iPos = 0;
 8001a78:	2300      	movs	r3, #0
 8001a7a:	60fb      	str	r3, [r7, #12]
		while(iPos >= 0 && iPos < _MAX_NUMBER_OF_CHARS){
 8001a7c:	e026      	b.n	8001acc <vCommStateMachineSendMessage+0x68>
			if(ucMessage[iPos] =='\000'){
 8001a7e:	68fb      	ldr	r3, [r7, #12]
 8001a80:	683a      	ldr	r2, [r7, #0]
 8001a82:	4413      	add	r3, r2
 8001a84:	781b      	ldrb	r3, [r3, #0]
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	d103      	bne.n	8001a92 <vCommStateMachineSendMessage+0x2e>
				iPos = -1;
 8001a8a:	f04f 33ff 	mov.w	r3, #4294967295
 8001a8e:	60fb      	str	r3, [r7, #12]
 8001a90:	e01c      	b.n	8001acc <vCommStateMachineSendMessage+0x68>
			}
			else if(ucMessage[iPos] =='\n'){
 8001a92:	68fb      	ldr	r3, [r7, #12]
 8001a94:	683a      	ldr	r2, [r7, #0]
 8001a96:	4413      	add	r3, r2
 8001a98:	781b      	ldrb	r3, [r3, #0]
 8001a9a:	2b0a      	cmp	r3, #10
 8001a9c:	d10b      	bne.n	8001ab6 <vCommStateMachineSendMessage+0x52>
				HAL_UART_Transmit(&hlpuart1, &ucMessage[iPos], 1, 100);
 8001a9e:	68fb      	ldr	r3, [r7, #12]
 8001aa0:	683a      	ldr	r2, [r7, #0]
 8001aa2:	18d1      	adds	r1, r2, r3
 8001aa4:	2364      	movs	r3, #100	@ 0x64
 8001aa6:	2201      	movs	r2, #1
 8001aa8:	480e      	ldr	r0, [pc, #56]	@ (8001ae4 <vCommStateMachineSendMessage+0x80>)
 8001aaa:	f008 f935 	bl	8009d18 <HAL_UART_Transmit>
				iPos = -1;
 8001aae:	f04f 33ff 	mov.w	r3, #4294967295
 8001ab2:	60fb      	str	r3, [r7, #12]
 8001ab4:	e00a      	b.n	8001acc <vCommStateMachineSendMessage+0x68>
			}
			else{
				HAL_UART_Transmit(&hlpuart1, &ucMessage[iPos], 1, 100);
 8001ab6:	68fb      	ldr	r3, [r7, #12]
 8001ab8:	683a      	ldr	r2, [r7, #0]
 8001aba:	18d1      	adds	r1, r2, r3
 8001abc:	2364      	movs	r3, #100	@ 0x64
 8001abe:	2201      	movs	r2, #1
 8001ac0:	4808      	ldr	r0, [pc, #32]	@ (8001ae4 <vCommStateMachineSendMessage+0x80>)
 8001ac2:	f008 f929 	bl	8009d18 <HAL_UART_Transmit>
				iPos ++;
 8001ac6:	68fb      	ldr	r3, [r7, #12]
 8001ac8:	3301      	adds	r3, #1
 8001aca:	60fb      	str	r3, [r7, #12]
		while(iPos >= 0 && iPos < _MAX_NUMBER_OF_CHARS){
 8001acc:	68fb      	ldr	r3, [r7, #12]
 8001ace:	2b00      	cmp	r3, #0
 8001ad0:	db02      	blt.n	8001ad8 <vCommStateMachineSendMessage+0x74>
 8001ad2:	68fb      	ldr	r3, [r7, #12]
 8001ad4:	2b63      	cmp	r3, #99	@ 0x63
 8001ad6:	ddd2      	ble.n	8001a7e <vCommStateMachineSendMessage+0x1a>
			}
		}
	}
}
 8001ad8:	bf00      	nop
 8001ada:	3710      	adds	r7, #16
 8001adc:	46bd      	mov	sp, r7
 8001ade:	bd80      	pop	{r7, pc}
 8001ae0:	2000029c 	.word	0x2000029c
 8001ae4:	20000aac 	.word	0x20000aac

08001ae8 <vCommunicationInit>:
//
// INPUT PARAMS: n/a
//
// OUTPUT PARAMS: n/a
// ********************************************** //
void vCommunicationInit() {
 8001ae8:	b480      	push	{r7}
 8001aea:	b083      	sub	sp, #12
 8001aec:	af00      	add	r7, sp, #0

	for (int i = 0; i < 10; i++)
 8001aee:	2300      	movs	r3, #0
 8001af0:	607b      	str	r3, [r7, #4]
 8001af2:	e007      	b.n	8001b04 <vCommunicationInit+0x1c>
		cNumeroString[i] = 0;
 8001af4:	4a09      	ldr	r2, [pc, #36]	@ (8001b1c <vCommunicationInit+0x34>)
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	4413      	add	r3, r2
 8001afa:	2200      	movs	r2, #0
 8001afc:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < 10; i++)
 8001afe:	687b      	ldr	r3, [r7, #4]
 8001b00:	3301      	adds	r3, #1
 8001b02:	607b      	str	r3, [r7, #4]
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	2b09      	cmp	r3, #9
 8001b08:	ddf4      	ble.n	8001af4 <vCommunicationInit+0xc>

	ucInputChar = 0;
 8001b0a:	4b05      	ldr	r3, [pc, #20]	@ (8001b20 <vCommunicationInit+0x38>)
 8001b0c:	2200      	movs	r2, #0
 8001b0e:	701a      	strb	r2, [r3, #0]
}
 8001b10:	bf00      	nop
 8001b12:	370c      	adds	r7, #12
 8001b14:	46bd      	mov	sp, r7
 8001b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b1a:	4770      	bx	lr
 8001b1c:	200002a4 	.word	0x200002a4
 8001b20:	200002a1 	.word	0x200002a1

08001b24 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 8001b24:	b580      	push	{r7, lr}
 8001b26:	b082      	sub	sp, #8
 8001b28:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
 8001b2a:	4b16      	ldr	r3, [pc, #88]	@ (8001b84 <MX_DMA_Init+0x60>)
 8001b2c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001b2e:	4a15      	ldr	r2, [pc, #84]	@ (8001b84 <MX_DMA_Init+0x60>)
 8001b30:	f043 0304 	orr.w	r3, r3, #4
 8001b34:	6493      	str	r3, [r2, #72]	@ 0x48
 8001b36:	4b13      	ldr	r3, [pc, #76]	@ (8001b84 <MX_DMA_Init+0x60>)
 8001b38:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001b3a:	f003 0304 	and.w	r3, r3, #4
 8001b3e:	607b      	str	r3, [r7, #4]
 8001b40:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001b42:	4b10      	ldr	r3, [pc, #64]	@ (8001b84 <MX_DMA_Init+0x60>)
 8001b44:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001b46:	4a0f      	ldr	r2, [pc, #60]	@ (8001b84 <MX_DMA_Init+0x60>)
 8001b48:	f043 0301 	orr.w	r3, r3, #1
 8001b4c:	6493      	str	r3, [r2, #72]	@ 0x48
 8001b4e:	4b0d      	ldr	r3, [pc, #52]	@ (8001b84 <MX_DMA_Init+0x60>)
 8001b50:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001b52:	f003 0301 	and.w	r3, r3, #1
 8001b56:	603b      	str	r3, [r7, #0]
 8001b58:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Channel3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 5, 0);
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	2105      	movs	r1, #5
 8001b5e:	200d      	movs	r0, #13
 8001b60:	f002 fcdf 	bl	8004522 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 8001b64:	200d      	movs	r0, #13
 8001b66:	f002 fcf6 	bl	8004556 <HAL_NVIC_EnableIRQ>
  /* DMA1_Channel4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel4_IRQn, 5, 0);
 8001b6a:	2200      	movs	r2, #0
 8001b6c:	2105      	movs	r1, #5
 8001b6e:	200e      	movs	r0, #14
 8001b70:	f002 fcd7 	bl	8004522 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel4_IRQn);
 8001b74:	200e      	movs	r0, #14
 8001b76:	f002 fcee 	bl	8004556 <HAL_NVIC_EnableIRQ>

}
 8001b7a:	bf00      	nop
 8001b7c:	3708      	adds	r7, #8
 8001b7e:	46bd      	mov	sp, r7
 8001b80:	bd80      	pop	{r7, pc}
 8001b82:	bf00      	nop
 8001b84:	40021000 	.word	0x40021000

08001b88 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b08a      	sub	sp, #40	@ 0x28
 8001b8c:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b8e:	f107 0314 	add.w	r3, r7, #20
 8001b92:	2200      	movs	r2, #0
 8001b94:	601a      	str	r2, [r3, #0]
 8001b96:	605a      	str	r2, [r3, #4]
 8001b98:	609a      	str	r2, [r3, #8]
 8001b9a:	60da      	str	r2, [r3, #12]
 8001b9c:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b9e:	4b3b      	ldr	r3, [pc, #236]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001ba0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001ba2:	4a3a      	ldr	r2, [pc, #232]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001ba4:	f043 0304 	orr.w	r3, r3, #4
 8001ba8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001baa:	4b38      	ldr	r3, [pc, #224]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bae:	f003 0304 	and.w	r3, r3, #4
 8001bb2:	613b      	str	r3, [r7, #16]
 8001bb4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001bb6:	4b35      	ldr	r3, [pc, #212]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bb8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bba:	4a34      	ldr	r2, [pc, #208]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bbc:	f043 0320 	orr.w	r3, r3, #32
 8001bc0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001bc2:	4b32      	ldr	r3, [pc, #200]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bc6:	f003 0320 	and.w	r3, r3, #32
 8001bca:	60fb      	str	r3, [r7, #12]
 8001bcc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001bce:	4b2f      	ldr	r3, [pc, #188]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bd0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bd2:	4a2e      	ldr	r2, [pc, #184]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bd4:	f043 0301 	orr.w	r3, r3, #1
 8001bd8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001bda:	4b2c      	ldr	r3, [pc, #176]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bdc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bde:	f003 0301 	and.w	r3, r3, #1
 8001be2:	60bb      	str	r3, [r7, #8]
 8001be4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001be6:	4b29      	ldr	r3, [pc, #164]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001be8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bea:	4a28      	ldr	r2, [pc, #160]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bec:	f043 0302 	orr.w	r3, r3, #2
 8001bf0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001bf2:	4b26      	ldr	r3, [pc, #152]	@ (8001c8c <MX_GPIO_Init+0x104>)
 8001bf4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001bf6:	f003 0302 	and.w	r3, r3, #2
 8001bfa:	607b      	str	r3, [r7, #4]
 8001bfc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|Motor_Dir_IN2_Pin|RED_LED_Pin, GPIO_PIN_RESET);
 8001bfe:	2200      	movs	r2, #0
 8001c00:	f44f 6142 	mov.w	r1, #3104	@ 0xc20
 8001c04:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001c08:	f003 f990 	bl	8004f2c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, Motor_Esq_IN3_Pin|Motor_Dir_IN1_Pin|Motor_Esq_IN4_Pin, GPIO_PIN_RESET);
 8001c0c:	2200      	movs	r2, #0
 8001c0e:	f44f 5194 	mov.w	r1, #4736	@ 0x1280
 8001c12:	481f      	ldr	r0, [pc, #124]	@ (8001c90 <MX_GPIO_Init+0x108>)
 8001c14:	f003 f98a 	bl	8004f2c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001c18:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001c1c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001c1e:	f44f 1388 	mov.w	r3, #1114112	@ 0x110000
 8001c22:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c24:	2300      	movs	r3, #0
 8001c26:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001c28:	f107 0314 	add.w	r3, r7, #20
 8001c2c:	4619      	mov	r1, r3
 8001c2e:	4819      	ldr	r0, [pc, #100]	@ (8001c94 <MX_GPIO_Init+0x10c>)
 8001c30:	f002 fffa 	bl	8004c28 <HAL_GPIO_Init>

  /*Configure GPIO pins : PAPin PAPin PAPin */
  GPIO_InitStruct.Pin = LD2_Pin|Motor_Dir_IN2_Pin|RED_LED_Pin;
 8001c34:	f44f 6342 	mov.w	r3, #3104	@ 0xc20
 8001c38:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c3a:	2301      	movs	r3, #1
 8001c3c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c3e:	2300      	movs	r3, #0
 8001c40:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c42:	2300      	movs	r3, #0
 8001c44:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c46:	f107 0314 	add.w	r3, r7, #20
 8001c4a:	4619      	mov	r1, r3
 8001c4c:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001c50:	f002 ffea 	bl	8004c28 <HAL_GPIO_Init>

  /*Configure GPIO pins : PBPin PBPin PBPin */
  GPIO_InitStruct.Pin = Motor_Esq_IN3_Pin|Motor_Dir_IN1_Pin|Motor_Esq_IN4_Pin;
 8001c54:	f44f 5394 	mov.w	r3, #4736	@ 0x1280
 8001c58:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c5a:	2301      	movs	r3, #1
 8001c5c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c5e:	2300      	movs	r3, #0
 8001c60:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c62:	2300      	movs	r3, #0
 8001c64:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c66:	f107 0314 	add.w	r3, r7, #20
 8001c6a:	4619      	mov	r1, r3
 8001c6c:	4808      	ldr	r0, [pc, #32]	@ (8001c90 <MX_GPIO_Init+0x108>)
 8001c6e:	f002 ffdb 	bl	8004c28 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 3, 0);
 8001c72:	2200      	movs	r2, #0
 8001c74:	2103      	movs	r1, #3
 8001c76:	2028      	movs	r0, #40	@ 0x28
 8001c78:	f002 fc53 	bl	8004522 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001c7c:	2028      	movs	r0, #40	@ 0x28
 8001c7e:	f002 fc6a 	bl	8004556 <HAL_NVIC_EnableIRQ>

}
 8001c82:	bf00      	nop
 8001c84:	3728      	adds	r7, #40	@ 0x28
 8001c86:	46bd      	mov	sp, r7
 8001c88:	bd80      	pop	{r7, pc}
 8001c8a:	bf00      	nop
 8001c8c:	40021000 	.word	0x40021000
 8001c90:	48000400 	.word	0x48000400
 8001c94:	48000800 	.word	0x48000800

08001c98 <MX_I2C2_Init>:
DMA_HandleTypeDef hdma_i2c2_rx;
DMA_HandleTypeDef hdma_i2c2_tx;

/* I2C2 init function */
void MX_I2C2_Init(void)
{
 8001c98:	b580      	push	{r7, lr}
 8001c9a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8001c9c:	4b1b      	ldr	r3, [pc, #108]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001c9e:	4a1c      	ldr	r2, [pc, #112]	@ (8001d10 <MX_I2C2_Init+0x78>)
 8001ca0:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x30A0A7FB;
 8001ca2:	4b1a      	ldr	r3, [pc, #104]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001ca4:	4a1b      	ldr	r2, [pc, #108]	@ (8001d14 <MX_I2C2_Init+0x7c>)
 8001ca6:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 8001ca8:	4b18      	ldr	r3, [pc, #96]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001caa:	2200      	movs	r2, #0
 8001cac:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001cae:	4b17      	ldr	r3, [pc, #92]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cb0:	2201      	movs	r2, #1
 8001cb2:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001cb4:	4b15      	ldr	r3, [pc, #84]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cb6:	2200      	movs	r2, #0
 8001cb8:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8001cba:	4b14      	ldr	r3, [pc, #80]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cbc:	2200      	movs	r2, #0
 8001cbe:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001cc0:	4b12      	ldr	r3, [pc, #72]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001cc6:	4b11      	ldr	r3, [pc, #68]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cc8:	2200      	movs	r2, #0
 8001cca:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001ccc:	4b0f      	ldr	r3, [pc, #60]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cce:	2200      	movs	r2, #0
 8001cd0:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8001cd2:	480e      	ldr	r0, [pc, #56]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cd4:	f003 f95a 	bl	8004f8c <HAL_I2C_Init>
 8001cd8:	4603      	mov	r3, r0
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d001      	beq.n	8001ce2 <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 8001cde:	f000 fea2 	bl	8002a26 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8001ce2:	2100      	movs	r1, #0
 8001ce4:	4809      	ldr	r0, [pc, #36]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001ce6:	f004 ff61 	bl	8006bac <HAL_I2CEx_ConfigAnalogFilter>
 8001cea:	4603      	mov	r3, r0
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	d001      	beq.n	8001cf4 <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 8001cf0:	f000 fe99 	bl	8002a26 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8001cf4:	2100      	movs	r1, #0
 8001cf6:	4805      	ldr	r0, [pc, #20]	@ (8001d0c <MX_I2C2_Init+0x74>)
 8001cf8:	f004 ffa3 	bl	8006c42 <HAL_I2CEx_ConfigDigitalFilter>
 8001cfc:	4603      	mov	r3, r0
 8001cfe:	2b00      	cmp	r3, #0
 8001d00:	d001      	beq.n	8001d06 <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 8001d02:	f000 fe90 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8001d06:	bf00      	nop
 8001d08:	bd80      	pop	{r7, pc}
 8001d0a:	bf00      	nop
 8001d0c:	200002b0 	.word	0x200002b0
 8001d10:	40005800 	.word	0x40005800
 8001d14:	30a0a7fb 	.word	0x30a0a7fb

08001d18 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001d18:	b580      	push	{r7, lr}
 8001d1a:	b0a0      	sub	sp, #128	@ 0x80
 8001d1c:	af00      	add	r7, sp, #0
 8001d1e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d20:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 8001d24:	2200      	movs	r2, #0
 8001d26:	601a      	str	r2, [r3, #0]
 8001d28:	605a      	str	r2, [r3, #4]
 8001d2a:	609a      	str	r2, [r3, #8]
 8001d2c:	60da      	str	r2, [r3, #12]
 8001d2e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001d30:	f107 0318 	add.w	r3, r7, #24
 8001d34:	2254      	movs	r2, #84	@ 0x54
 8001d36:	2100      	movs	r1, #0
 8001d38:	4618      	mov	r0, r3
 8001d3a:	f00b f822 	bl	800cd82 <memset>
  if(i2cHandle->Instance==I2C2)
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	4a5f      	ldr	r2, [pc, #380]	@ (8001ec0 <HAL_I2C_MspInit+0x1a8>)
 8001d44:	4293      	cmp	r3, r2
 8001d46:	f040 80b6 	bne.w	8001eb6 <HAL_I2C_MspInit+0x19e>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8001d4a:	2380      	movs	r3, #128	@ 0x80
 8001d4c:	61bb      	str	r3, [r7, #24]
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 8001d4e:	2300      	movs	r3, #0
 8001d50:	63bb      	str	r3, [r7, #56]	@ 0x38
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001d52:	f107 0318 	add.w	r3, r7, #24
 8001d56:	4618      	mov	r0, r3
 8001d58:	f005 fda2 	bl	80078a0 <HAL_RCCEx_PeriphCLKConfig>
 8001d5c:	4603      	mov	r3, r0
 8001d5e:	2b00      	cmp	r3, #0
 8001d60:	d001      	beq.n	8001d66 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 8001d62:	f000 fe60 	bl	8002a26 <Error_Handler>
    }

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001d66:	4b57      	ldr	r3, [pc, #348]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001d68:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d6a:	4a56      	ldr	r2, [pc, #344]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001d6c:	f043 0304 	orr.w	r3, r3, #4
 8001d70:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001d72:	4b54      	ldr	r3, [pc, #336]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001d74:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d76:	f003 0304 	and.w	r3, r3, #4
 8001d7a:	617b      	str	r3, [r7, #20]
 8001d7c:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d7e:	4b51      	ldr	r3, [pc, #324]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001d80:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d82:	4a50      	ldr	r2, [pc, #320]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001d84:	f043 0301 	orr.w	r3, r3, #1
 8001d88:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001d8a:	4b4e      	ldr	r3, [pc, #312]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001d8c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d8e:	f003 0301 	and.w	r3, r3, #1
 8001d92:	613b      	str	r3, [r7, #16]
 8001d94:	693b      	ldr	r3, [r7, #16]
    /**I2C2 GPIO Configuration
    PC4     ------> I2C2_SCL
    PA8     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001d96:	2310      	movs	r3, #16
 8001d98:	66fb      	str	r3, [r7, #108]	@ 0x6c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d9a:	2312      	movs	r3, #18
 8001d9c:	673b      	str	r3, [r7, #112]	@ 0x70
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d9e:	2300      	movs	r3, #0
 8001da0:	677b      	str	r3, [r7, #116]	@ 0x74
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001da2:	2300      	movs	r3, #0
 8001da4:	67bb      	str	r3, [r7, #120]	@ 0x78
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001da6:	2304      	movs	r3, #4
 8001da8:	67fb      	str	r3, [r7, #124]	@ 0x7c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001daa:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 8001dae:	4619      	mov	r1, r3
 8001db0:	4845      	ldr	r0, [pc, #276]	@ (8001ec8 <HAL_I2C_MspInit+0x1b0>)
 8001db2:	f002 ff39 	bl	8004c28 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001db6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001dba:	66fb      	str	r3, [r7, #108]	@ 0x6c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001dbc:	2312      	movs	r3, #18
 8001dbe:	673b      	str	r3, [r7, #112]	@ 0x70
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dc0:	2300      	movs	r3, #0
 8001dc2:	677b      	str	r3, [r7, #116]	@ 0x74
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001dc4:	2300      	movs	r3, #0
 8001dc6:	67bb      	str	r3, [r7, #120]	@ 0x78
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001dc8:	2304      	movs	r3, #4
 8001dca:	67fb      	str	r3, [r7, #124]	@ 0x7c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dcc:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 8001dd0:	4619      	mov	r1, r3
 8001dd2:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001dd6:	f002 ff27 	bl	8004c28 <HAL_GPIO_Init>

    /* I2C2 clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001dda:	4b3a      	ldr	r3, [pc, #232]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001ddc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001dde:	4a39      	ldr	r2, [pc, #228]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001de0:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001de4:	6593      	str	r3, [r2, #88]	@ 0x58
 8001de6:	4b37      	ldr	r3, [pc, #220]	@ (8001ec4 <HAL_I2C_MspInit+0x1ac>)
 8001de8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001dea:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001dee:	60fb      	str	r3, [r7, #12]
 8001df0:	68fb      	ldr	r3, [r7, #12]

    /* I2C2 DMA Init */
    /* I2C2_RX Init */
    hdma_i2c2_rx.Instance = DMA1_Channel3;
 8001df2:	4b36      	ldr	r3, [pc, #216]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001df4:	4a36      	ldr	r2, [pc, #216]	@ (8001ed0 <HAL_I2C_MspInit+0x1b8>)
 8001df6:	601a      	str	r2, [r3, #0]
    hdma_i2c2_rx.Init.Request = DMA_REQUEST_I2C2_RX;
 8001df8:	4b34      	ldr	r3, [pc, #208]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001dfa:	2212      	movs	r2, #18
 8001dfc:	605a      	str	r2, [r3, #4]
    hdma_i2c2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001dfe:	4b33      	ldr	r3, [pc, #204]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e00:	2200      	movs	r2, #0
 8001e02:	609a      	str	r2, [r3, #8]
    hdma_i2c2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001e04:	4b31      	ldr	r3, [pc, #196]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e06:	2200      	movs	r2, #0
 8001e08:	60da      	str	r2, [r3, #12]
    hdma_i2c2_rx.Init.MemInc = DMA_MINC_ENABLE;
 8001e0a:	4b30      	ldr	r3, [pc, #192]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e0c:	2280      	movs	r2, #128	@ 0x80
 8001e0e:	611a      	str	r2, [r3, #16]
    hdma_i2c2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001e10:	4b2e      	ldr	r3, [pc, #184]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e12:	2200      	movs	r2, #0
 8001e14:	615a      	str	r2, [r3, #20]
    hdma_i2c2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001e16:	4b2d      	ldr	r3, [pc, #180]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e18:	2200      	movs	r2, #0
 8001e1a:	619a      	str	r2, [r3, #24]
    hdma_i2c2_rx.Init.Mode = DMA_NORMAL;
 8001e1c:	4b2b      	ldr	r3, [pc, #172]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e1e:	2200      	movs	r2, #0
 8001e20:	61da      	str	r2, [r3, #28]
    hdma_i2c2_rx.Init.Priority = DMA_PRIORITY_LOW;
 8001e22:	4b2a      	ldr	r3, [pc, #168]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e24:	2200      	movs	r2, #0
 8001e26:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_i2c2_rx) != HAL_OK)
 8001e28:	4828      	ldr	r0, [pc, #160]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e2a:	f002 fbbd 	bl	80045a8 <HAL_DMA_Init>
 8001e2e:	4603      	mov	r3, r0
 8001e30:	2b00      	cmp	r3, #0
 8001e32:	d001      	beq.n	8001e38 <HAL_I2C_MspInit+0x120>
    {
      Error_Handler();
 8001e34:	f000 fdf7 	bl	8002a26 <Error_Handler>
    }

    __HAL_LINKDMA(i2cHandle,hdmarx,hdma_i2c2_rx);
 8001e38:	687b      	ldr	r3, [r7, #4]
 8001e3a:	4a24      	ldr	r2, [pc, #144]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e3c:	63da      	str	r2, [r3, #60]	@ 0x3c
 8001e3e:	4a23      	ldr	r2, [pc, #140]	@ (8001ecc <HAL_I2C_MspInit+0x1b4>)
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	6293      	str	r3, [r2, #40]	@ 0x28

    /* I2C2_TX Init */
    hdma_i2c2_tx.Instance = DMA1_Channel4;
 8001e44:	4b23      	ldr	r3, [pc, #140]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e46:	4a24      	ldr	r2, [pc, #144]	@ (8001ed8 <HAL_I2C_MspInit+0x1c0>)
 8001e48:	601a      	str	r2, [r3, #0]
    hdma_i2c2_tx.Init.Request = DMA_REQUEST_I2C2_TX;
 8001e4a:	4b22      	ldr	r3, [pc, #136]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e4c:	2213      	movs	r2, #19
 8001e4e:	605a      	str	r2, [r3, #4]
    hdma_i2c2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001e50:	4b20      	ldr	r3, [pc, #128]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e52:	2210      	movs	r2, #16
 8001e54:	609a      	str	r2, [r3, #8]
    hdma_i2c2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001e56:	4b1f      	ldr	r3, [pc, #124]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e58:	2200      	movs	r2, #0
 8001e5a:	60da      	str	r2, [r3, #12]
    hdma_i2c2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001e5c:	4b1d      	ldr	r3, [pc, #116]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e5e:	2280      	movs	r2, #128	@ 0x80
 8001e60:	611a      	str	r2, [r3, #16]
    hdma_i2c2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001e62:	4b1c      	ldr	r3, [pc, #112]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e64:	2200      	movs	r2, #0
 8001e66:	615a      	str	r2, [r3, #20]
    hdma_i2c2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001e68:	4b1a      	ldr	r3, [pc, #104]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e6a:	2200      	movs	r2, #0
 8001e6c:	619a      	str	r2, [r3, #24]
    hdma_i2c2_tx.Init.Mode = DMA_NORMAL;
 8001e6e:	4b19      	ldr	r3, [pc, #100]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e70:	2200      	movs	r2, #0
 8001e72:	61da      	str	r2, [r3, #28]
    hdma_i2c2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001e74:	4b17      	ldr	r3, [pc, #92]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e76:	2200      	movs	r2, #0
 8001e78:	621a      	str	r2, [r3, #32]
    if (HAL_DMA_Init(&hdma_i2c2_tx) != HAL_OK)
 8001e7a:	4816      	ldr	r0, [pc, #88]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e7c:	f002 fb94 	bl	80045a8 <HAL_DMA_Init>
 8001e80:	4603      	mov	r3, r0
 8001e82:	2b00      	cmp	r3, #0
 8001e84:	d001      	beq.n	8001e8a <HAL_I2C_MspInit+0x172>
    {
      Error_Handler();
 8001e86:	f000 fdce 	bl	8002a26 <Error_Handler>
    }

    __HAL_LINKDMA(i2cHandle,hdmatx,hdma_i2c2_tx);
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	4a11      	ldr	r2, [pc, #68]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e8e:	639a      	str	r2, [r3, #56]	@ 0x38
 8001e90:	4a10      	ldr	r2, [pc, #64]	@ (8001ed4 <HAL_I2C_MspInit+0x1bc>)
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	6293      	str	r3, [r2, #40]	@ 0x28

    /* I2C2 interrupt Init */
    HAL_NVIC_SetPriority(I2C2_EV_IRQn, 5, 0);
 8001e96:	2200      	movs	r2, #0
 8001e98:	2105      	movs	r1, #5
 8001e9a:	2021      	movs	r0, #33	@ 0x21
 8001e9c:	f002 fb41 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C2_EV_IRQn);
 8001ea0:	2021      	movs	r0, #33	@ 0x21
 8001ea2:	f002 fb58 	bl	8004556 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(I2C2_ER_IRQn, 5, 0);
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	2105      	movs	r1, #5
 8001eaa:	2022      	movs	r0, #34	@ 0x22
 8001eac:	f002 fb39 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C2_ER_IRQn);
 8001eb0:	2022      	movs	r0, #34	@ 0x22
 8001eb2:	f002 fb50 	bl	8004556 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }
}
 8001eb6:	bf00      	nop
 8001eb8:	3780      	adds	r7, #128	@ 0x80
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	bd80      	pop	{r7, pc}
 8001ebe:	bf00      	nop
 8001ec0:	40005800 	.word	0x40005800
 8001ec4:	40021000 	.word	0x40021000
 8001ec8:	48000800 	.word	0x48000800
 8001ecc:	20000304 	.word	0x20000304
 8001ed0:	40020030 	.word	0x40020030
 8001ed4:	20000364 	.word	0x20000364
 8001ed8:	40020044 	.word	0x40020044

08001edc <lcdInit>:
 * @param  address Display I2C 7-bit address
 * @param  lines   Number of lines of display
 * @param  columns Number of colums
 * @return         0 if success
 */
char lcdInit(I2C_HandleTypeDef *hi2c, uint8_t address, uint8_t lines, uint8_t columns) {
 8001edc:	b580      	push	{r7, lr}
 8001ede:	b084      	sub	sp, #16
 8001ee0:	af00      	add	r7, sp, #0
 8001ee2:	6078      	str	r0, [r7, #4]
 8001ee4:	4608      	mov	r0, r1
 8001ee6:	4611      	mov	r1, r2
 8001ee8:	461a      	mov	r2, r3
 8001eea:	4603      	mov	r3, r0
 8001eec:	70fb      	strb	r3, [r7, #3]
 8001eee:	460b      	mov	r3, r1
 8001ef0:	70bb      	strb	r3, [r7, #2]
 8001ef2:	4613      	mov	r3, r2
 8001ef4:	707b      	strb	r3, [r7, #1]

    uint8_t lcdData = LCD_BIT_5x8DOTS;
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	733b      	strb	r3, [r7, #12]
    unsigned short usCont;

    lcdParams.hi2c      = hi2c;
 8001efa:	4a53      	ldr	r2, [pc, #332]	@ (8002048 <lcdInit+0x16c>)
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	6013      	str	r3, [r2, #0]
    lcdParams.address   = address << 1;
 8001f00:	78fb      	ldrb	r3, [r7, #3]
 8001f02:	005b      	lsls	r3, r3, #1
 8001f04:	b2da      	uxtb	r2, r3
 8001f06:	4b50      	ldr	r3, [pc, #320]	@ (8002048 <lcdInit+0x16c>)
 8001f08:	719a      	strb	r2, [r3, #6]
    lcdParams.lines     = lines;
 8001f0a:	4a4f      	ldr	r2, [pc, #316]	@ (8002048 <lcdInit+0x16c>)
 8001f0c:	78bb      	ldrb	r3, [r7, #2]
 8001f0e:	7113      	strb	r3, [r2, #4]
    lcdParams.columns   = columns;
 8001f10:	4a4d      	ldr	r2, [pc, #308]	@ (8002048 <lcdInit+0x16c>)
 8001f12:	787b      	ldrb	r3, [r7, #1]
 8001f14:	7153      	strb	r3, [r2, #5]
    lcdParams.backlight = LCD_BIT_BACKIGHT_ON;
 8001f16:	4b4c      	ldr	r3, [pc, #304]	@ (8002048 <lcdInit+0x16c>)
 8001f18:	2208      	movs	r2, #8
 8001f1a:	71da      	strb	r2, [r3, #7]

    lcdCommandBuffer[0] = LCD_BIT_E | (0x03 << 4);
 8001f1c:	4b4b      	ldr	r3, [pc, #300]	@ (800204c <lcdInit+0x170>)
 8001f1e:	2234      	movs	r2, #52	@ 0x34
 8001f20:	701a      	strb	r2, [r3, #0]
    lcdCommandBuffer[1] = lcdCommandBuffer[0];
 8001f22:	4b4a      	ldr	r3, [pc, #296]	@ (800204c <lcdInit+0x170>)
 8001f24:	781a      	ldrb	r2, [r3, #0]
 8001f26:	4b49      	ldr	r3, [pc, #292]	@ (800204c <lcdInit+0x170>)
 8001f28:	705a      	strb	r2, [r3, #1]
    lcdCommandBuffer[2] = (0x03 << 4);
 8001f2a:	4b48      	ldr	r3, [pc, #288]	@ (800204c <lcdInit+0x170>)
 8001f2c:	2230      	movs	r2, #48	@ 0x30
 8001f2e:	709a      	strb	r2, [r3, #2]

    /* First 3 steps of init cycles. They are the same. */
    for (uint8_t i = 0; i < 3; ++i) {
 8001f30:	2300      	movs	r3, #0
 8001f32:	737b      	strb	r3, [r7, #13]
 8001f34:	e02f      	b.n	8001f96 <lcdInit+0xba>
        if (HAL_I2C_Master_Transmit_DMA(lcdParams.hi2c, lcdParams.address, (uint8_t*)lcdCommandBuffer, 3) != HAL_OK) {
 8001f36:	4b44      	ldr	r3, [pc, #272]	@ (8002048 <lcdInit+0x16c>)
 8001f38:	6818      	ldr	r0, [r3, #0]
 8001f3a:	4b43      	ldr	r3, [pc, #268]	@ (8002048 <lcdInit+0x16c>)
 8001f3c:	799b      	ldrb	r3, [r3, #6]
 8001f3e:	4619      	mov	r1, r3
 8001f40:	2303      	movs	r3, #3
 8001f42:	4a42      	ldr	r2, [pc, #264]	@ (800204c <lcdInit+0x170>)
 8001f44:	f003 f8be 	bl	80050c4 <HAL_I2C_Master_Transmit_DMA>
 8001f48:	4603      	mov	r3, r0
 8001f4a:	2b00      	cmp	r3, #0
 8001f4c:	d001      	beq.n	8001f52 <lcdInit+0x76>
            return -1;
 8001f4e:	23ff      	movs	r3, #255	@ 0xff
 8001f50:	e076      	b.n	8002040 <lcdInit+0x164>
        }

        usCont = 0;
 8001f52:	2300      	movs	r3, #0
 8001f54:	81fb      	strh	r3, [r7, #14]
        while (HAL_I2C_GetState(lcdParams.hi2c) != HAL_I2C_STATE_READY) {
 8001f56:	e009      	b.n	8001f6c <lcdInit+0x90>
        	if(usCont++ == LCD_COMM_TIMEOUT)
 8001f58:	89fb      	ldrh	r3, [r7, #14]
 8001f5a:	1c5a      	adds	r2, r3, #1
 8001f5c:	81fa      	strh	r2, [r7, #14]
 8001f5e:	2bc8      	cmp	r3, #200	@ 0xc8
 8001f60:	d101      	bne.n	8001f66 <lcdInit+0x8a>
        		return -1;
 8001f62:	23ff      	movs	r3, #255	@ 0xff
 8001f64:	e06c      	b.n	8002040 <lcdInit+0x164>
        	HAL_Delay(5);
 8001f66:	2005      	movs	r0, #5
 8001f68:	f002 f9ba 	bl	80042e0 <HAL_Delay>
        while (HAL_I2C_GetState(lcdParams.hi2c) != HAL_I2C_STATE_READY) {
 8001f6c:	4b36      	ldr	r3, [pc, #216]	@ (8002048 <lcdInit+0x16c>)
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	4618      	mov	r0, r3
 8001f72:	f003 fa98 	bl	80054a6 <HAL_I2C_GetState>
 8001f76:	4603      	mov	r3, r0
 8001f78:	2b20      	cmp	r3, #32
 8001f7a:	d1ed      	bne.n	8001f58 <lcdInit+0x7c>
        }

        if (i == 2) {
 8001f7c:	7b7b      	ldrb	r3, [r7, #13]
 8001f7e:	2b02      	cmp	r3, #2
 8001f80:	d103      	bne.n	8001f8a <lcdInit+0xae>
            // For the last cycle delay is less then 1 ms (100us by datasheet)
        	HAL_Delay(5);
 8001f82:	2005      	movs	r0, #5
 8001f84:	f002 f9ac 	bl	80042e0 <HAL_Delay>
 8001f88:	e002      	b.n	8001f90 <lcdInit+0xb4>
        } else {
            // For first 2 cycles delay is less then 5ms (4100us by datasheet)
        	HAL_Delay(5);
 8001f8a:	2005      	movs	r0, #5
 8001f8c:	f002 f9a8 	bl	80042e0 <HAL_Delay>
    for (uint8_t i = 0; i < 3; ++i) {
 8001f90:	7b7b      	ldrb	r3, [r7, #13]
 8001f92:	3301      	adds	r3, #1
 8001f94:	737b      	strb	r3, [r7, #13]
 8001f96:	7b7b      	ldrb	r3, [r7, #13]
 8001f98:	2b02      	cmp	r3, #2
 8001f9a:	d9cc      	bls.n	8001f36 <lcdInit+0x5a>
        }
    }

    /* Lets turn to 4-bit at least */
    lcdCommandBuffer[0] = LCD_BIT_BACKIGHT_ON | LCD_BIT_E | (LCD_MODE_4BITS << 4);
 8001f9c:	4b2b      	ldr	r3, [pc, #172]	@ (800204c <lcdInit+0x170>)
 8001f9e:	222c      	movs	r2, #44	@ 0x2c
 8001fa0:	701a      	strb	r2, [r3, #0]
    lcdCommandBuffer[1] = lcdCommandBuffer[0];
 8001fa2:	4b2a      	ldr	r3, [pc, #168]	@ (800204c <lcdInit+0x170>)
 8001fa4:	781a      	ldrb	r2, [r3, #0]
 8001fa6:	4b29      	ldr	r3, [pc, #164]	@ (800204c <lcdInit+0x170>)
 8001fa8:	705a      	strb	r2, [r3, #1]
    lcdCommandBuffer[2] = LCD_BIT_BACKIGHT_ON | (LCD_MODE_4BITS << 4);
 8001faa:	4b28      	ldr	r3, [pc, #160]	@ (800204c <lcdInit+0x170>)
 8001fac:	2228      	movs	r2, #40	@ 0x28
 8001fae:	709a      	strb	r2, [r3, #2]

    if (HAL_I2C_Master_Transmit_DMA(lcdParams.hi2c, lcdParams.address, (uint8_t*)lcdCommandBuffer, 3) != HAL_OK) {
 8001fb0:	4b25      	ldr	r3, [pc, #148]	@ (8002048 <lcdInit+0x16c>)
 8001fb2:	6818      	ldr	r0, [r3, #0]
 8001fb4:	4b24      	ldr	r3, [pc, #144]	@ (8002048 <lcdInit+0x16c>)
 8001fb6:	799b      	ldrb	r3, [r3, #6]
 8001fb8:	4619      	mov	r1, r3
 8001fba:	2303      	movs	r3, #3
 8001fbc:	4a23      	ldr	r2, [pc, #140]	@ (800204c <lcdInit+0x170>)
 8001fbe:	f003 f881 	bl	80050c4 <HAL_I2C_Master_Transmit_DMA>
 8001fc2:	4603      	mov	r3, r0
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d001      	beq.n	8001fcc <lcdInit+0xf0>
        return -1;
 8001fc8:	23ff      	movs	r3, #255	@ 0xff
 8001fca:	e039      	b.n	8002040 <lcdInit+0x164>
    }

    usCont = 0;
 8001fcc:	2300      	movs	r3, #0
 8001fce:	81fb      	strh	r3, [r7, #14]
    while (HAL_I2C_GetState(lcdParams.hi2c) != HAL_I2C_STATE_READY) {
 8001fd0:	e009      	b.n	8001fe6 <lcdInit+0x10a>
    	if(usCont++ == LCD_COMM_TIMEOUT)
 8001fd2:	89fb      	ldrh	r3, [r7, #14]
 8001fd4:	1c5a      	adds	r2, r3, #1
 8001fd6:	81fa      	strh	r2, [r7, #14]
 8001fd8:	2bc8      	cmp	r3, #200	@ 0xc8
 8001fda:	d101      	bne.n	8001fe0 <lcdInit+0x104>
    		return -1;
 8001fdc:	23ff      	movs	r3, #255	@ 0xff
 8001fde:	e02f      	b.n	8002040 <lcdInit+0x164>
    	HAL_Delay(5);
 8001fe0:	2005      	movs	r0, #5
 8001fe2:	f002 f97d 	bl	80042e0 <HAL_Delay>
    while (HAL_I2C_GetState(lcdParams.hi2c) != HAL_I2C_STATE_READY) {
 8001fe6:	4b18      	ldr	r3, [pc, #96]	@ (8002048 <lcdInit+0x16c>)
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	4618      	mov	r0, r3
 8001fec:	f003 fa5b 	bl	80054a6 <HAL_I2C_GetState>
 8001ff0:	4603      	mov	r3, r0
 8001ff2:	2b20      	cmp	r3, #32
 8001ff4:	d1ed      	bne.n	8001fd2 <lcdInit+0xf6>
    }

    /* Lets set display params */
    /* First of all lets set display size */
    lcdData |= LCD_MODE_4BITS;
 8001ff6:	7b3b      	ldrb	r3, [r7, #12]
 8001ff8:	f043 0302 	orr.w	r3, r3, #2
 8001ffc:	b2db      	uxtb	r3, r3
 8001ffe:	733b      	strb	r3, [r7, #12]

    if (lcdParams.lines > 1) {
 8002000:	4b11      	ldr	r3, [pc, #68]	@ (8002048 <lcdInit+0x16c>)
 8002002:	791b      	ldrb	r3, [r3, #4]
 8002004:	2b01      	cmp	r3, #1
 8002006:	d904      	bls.n	8002012 <lcdInit+0x136>
        lcdData |= LCD_BIT_2LINE;
 8002008:	7b3b      	ldrb	r3, [r7, #12]
 800200a:	f043 0308 	orr.w	r3, r3, #8
 800200e:	b2db      	uxtb	r3, r3
 8002010:	733b      	strb	r3, [r7, #12]
    }

    lcdWriteByte((uint8_t)0x00, &lcdData);  // TODO: Make 5x10 dots font usable for some 1-line display
 8002012:	f107 030c 	add.w	r3, r7, #12
 8002016:	4619      	mov	r1, r3
 8002018:	2000      	movs	r0, #0
 800201a:	f000 f945 	bl	80022a8 <lcdWriteByte>

    /* Now lets set display, cursor and blink all on */
    lcdDisplayOn();
 800201e:	2101      	movs	r1, #1
 8002020:	2001      	movs	r0, #1
 8002022:	f000 f815 	bl	8002050 <lcdCommand>

    /* Set cursor moving to the right */
    lcdCursorDirToRight();
 8002026:	2101      	movs	r1, #1
 8002028:	2007      	movs	r0, #7
 800202a:	f000 f811 	bl	8002050 <lcdCommand>

    /* Clear display and Set cursor at Home */
    lcdDisplayClear();
 800202e:	2101      	movs	r1, #1
 8002030:	2002      	movs	r0, #2
 8002032:	f000 f80d 	bl	8002050 <lcdCommand>
    lcdCursorHome();
 8002036:	2101      	movs	r1, #1
 8002038:	2005      	movs	r0, #5
 800203a:	f000 f809 	bl	8002050 <lcdCommand>

    return 0;
 800203e:	2300      	movs	r3, #0
}
 8002040:	4618      	mov	r0, r3
 8002042:	3710      	adds	r7, #16
 8002044:	46bd      	mov	sp, r7
 8002046:	bd80      	pop	{r7, pc}
 8002048:	200003cc 	.word	0x200003cc
 800204c:	200003c4 	.word	0x200003c4

08002050 <lcdCommand>:
 * @brief  Send command to display
 * @param  command  One of listed in LCDCommands enum
 * @param  action   LCD_PARAM_SET or LCD_PARAM_UNSET
 * @return          0 if success
 */
char lcdCommand(LCDCommands command, LCDParamsActions action) {
 8002050:	b580      	push	{r7, lr}
 8002052:	b084      	sub	sp, #16
 8002054:	af00      	add	r7, sp, #0
 8002056:	4603      	mov	r3, r0
 8002058:	460a      	mov	r2, r1
 800205a:	71fb      	strb	r3, [r7, #7]
 800205c:	4613      	mov	r3, r2
 800205e:	71bb      	strb	r3, [r7, #6]
    uint8_t lcdData = 0x00;
 8002060:	2300      	movs	r3, #0
 8002062:	73fb      	strb	r3, [r7, #15]

    /* First of all lest store the command */
    switch (action) {
 8002064:	79bb      	ldrb	r3, [r7, #6]
 8002066:	2b00      	cmp	r3, #0
 8002068:	d064      	beq.n	8002134 <lcdCommand+0xe4>
 800206a:	2b01      	cmp	r3, #1
 800206c:	f040 80aa 	bne.w	80021c4 <lcdCommand+0x174>
        case LCD_PARAM_SET:
            switch (command) {
 8002070:	79fb      	ldrb	r3, [r7, #7]
 8002072:	3b01      	subs	r3, #1
 8002074:	2b07      	cmp	r3, #7
 8002076:	d85a      	bhi.n	800212e <lcdCommand+0xde>
 8002078:	a201      	add	r2, pc, #4	@ (adr r2, 8002080 <lcdCommand+0x30>)
 800207a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800207e:	bf00      	nop
 8002080:	080020a1 	.word	0x080020a1
 8002084:	080020d1 	.word	0x080020d1
 8002088:	080020b1 	.word	0x080020b1
 800208c:	080020c1 	.word	0x080020c1
 8002090:	080020eb 	.word	0x080020eb
 8002094:	08002115 	.word	0x08002115
 8002098:	08002105 	.word	0x08002105
 800209c:	0800211f 	.word	0x0800211f
                case LCD_DISPLAY:
                    lcdParams.modeBits |=  LCD_BIT_DISPLAY_ON;
 80020a0:	4b5c      	ldr	r3, [pc, #368]	@ (8002214 <lcdCommand+0x1c4>)
 80020a2:	7a1b      	ldrb	r3, [r3, #8]
 80020a4:	f043 0304 	orr.w	r3, r3, #4
 80020a8:	b2da      	uxtb	r2, r3
 80020aa:	4b5a      	ldr	r3, [pc, #360]	@ (8002214 <lcdCommand+0x1c4>)
 80020ac:	721a      	strb	r2, [r3, #8]
                    break;
 80020ae:	e040      	b.n	8002132 <lcdCommand+0xe2>

                case LCD_CURSOR:
                    lcdParams.modeBits |= LCD_BIT_CURSOR_ON;
 80020b0:	4b58      	ldr	r3, [pc, #352]	@ (8002214 <lcdCommand+0x1c4>)
 80020b2:	7a1b      	ldrb	r3, [r3, #8]
 80020b4:	f043 0302 	orr.w	r3, r3, #2
 80020b8:	b2da      	uxtb	r2, r3
 80020ba:	4b56      	ldr	r3, [pc, #344]	@ (8002214 <lcdCommand+0x1c4>)
 80020bc:	721a      	strb	r2, [r3, #8]
                    break;
 80020be:	e038      	b.n	8002132 <lcdCommand+0xe2>

                case LCD_CURSOR_BLINK:
                    lcdParams.modeBits |= LCD_BIT_BLINK_ON;
 80020c0:	4b54      	ldr	r3, [pc, #336]	@ (8002214 <lcdCommand+0x1c4>)
 80020c2:	7a1b      	ldrb	r3, [r3, #8]
 80020c4:	f043 0301 	orr.w	r3, r3, #1
 80020c8:	b2da      	uxtb	r2, r3
 80020ca:	4b52      	ldr	r3, [pc, #328]	@ (8002214 <lcdCommand+0x1c4>)
 80020cc:	721a      	strb	r2, [r3, #8]
                    break;
 80020ce:	e030      	b.n	8002132 <lcdCommand+0xe2>

                case LCD_CLEAR:
                    lcdData = LCD_BIT_DISP_CLEAR;
 80020d0:	2301      	movs	r3, #1
 80020d2:	73fb      	strb	r3, [r7, #15]

                    if (lcdWriteByte((uint8_t)0x00, &lcdData) == -1) {
 80020d4:	f107 030f 	add.w	r3, r7, #15
 80020d8:	4619      	mov	r1, r3
 80020da:	2000      	movs	r0, #0
 80020dc:	f000 f8e4 	bl	80022a8 <lcdWriteByte>
                        return -1;
                    } else {
                    	HAL_Delay(5);
 80020e0:	2005      	movs	r0, #5
 80020e2:	f002 f8fd 	bl	80042e0 <HAL_Delay>
                        return 0;
 80020e6:	2300      	movs	r3, #0
 80020e8:	e090      	b.n	800220c <lcdCommand+0x1bc>
                    }

                case LCD_CURSOR_HOME:
                    lcdData = LCD_BIT_CURSOR_HOME;
 80020ea:	2302      	movs	r3, #2
 80020ec:	73fb      	strb	r3, [r7, #15]

                    if (lcdWriteByte((uint8_t)0x00, &lcdData) == -1) {
 80020ee:	f107 030f 	add.w	r3, r7, #15
 80020f2:	4619      	mov	r1, r3
 80020f4:	2000      	movs	r0, #0
 80020f6:	f000 f8d7 	bl	80022a8 <lcdWriteByte>
                        return -1;
                    } else {
                    	HAL_Delay(5);
 80020fa:	2005      	movs	r0, #5
 80020fc:	f002 f8f0 	bl	80042e0 <HAL_Delay>
                        return 0;
 8002100:	2300      	movs	r3, #0
 8002102:	e083      	b.n	800220c <lcdCommand+0x1bc>
                    }

                case LCD_CURSOR_DIR_RIGHT:
                    lcdParams.entryBits |= LCD_BIT_CURSOR_DIR_RIGHT;
 8002104:	4b43      	ldr	r3, [pc, #268]	@ (8002214 <lcdCommand+0x1c4>)
 8002106:	7a5b      	ldrb	r3, [r3, #9]
 8002108:	f043 0302 	orr.w	r3, r3, #2
 800210c:	b2da      	uxtb	r2, r3
 800210e:	4b41      	ldr	r3, [pc, #260]	@ (8002214 <lcdCommand+0x1c4>)
 8002110:	725a      	strb	r2, [r3, #9]
                    break;
 8002112:	e00e      	b.n	8002132 <lcdCommand+0xe2>

                case LCD_CURSOR_DIR_LEFT:
                    lcdParams.entryBits |= LCD_BIT_CURSOR_DIR_LEFT;
 8002114:	4b3f      	ldr	r3, [pc, #252]	@ (8002214 <lcdCommand+0x1c4>)
 8002116:	7a5a      	ldrb	r2, [r3, #9]
 8002118:	4b3e      	ldr	r3, [pc, #248]	@ (8002214 <lcdCommand+0x1c4>)
 800211a:	725a      	strb	r2, [r3, #9]
                    break;
 800211c:	e009      	b.n	8002132 <lcdCommand+0xe2>

                case LCD_DISPLAY_SHIFT:
                    lcdParams.entryBits |= LCD_BIT_DISPLAY_SHIFT;
 800211e:	4b3d      	ldr	r3, [pc, #244]	@ (8002214 <lcdCommand+0x1c4>)
 8002120:	7a5b      	ldrb	r3, [r3, #9]
 8002122:	f043 0301 	orr.w	r3, r3, #1
 8002126:	b2da      	uxtb	r2, r3
 8002128:	4b3a      	ldr	r3, [pc, #232]	@ (8002214 <lcdCommand+0x1c4>)
 800212a:	725a      	strb	r2, [r3, #9]
                    break;
 800212c:	e001      	b.n	8002132 <lcdCommand+0xe2>

                default:
                    return -1;
 800212e:	23ff      	movs	r3, #255	@ 0xff
 8002130:	e06c      	b.n	800220c <lcdCommand+0x1bc>
            }

            break;
 8002132:	e049      	b.n	80021c8 <lcdCommand+0x178>

        case LCD_PARAM_UNSET:
            switch (command) {
 8002134:	79fb      	ldrb	r3, [r7, #7]
 8002136:	3b01      	subs	r3, #1
 8002138:	2b07      	cmp	r3, #7
 800213a:	d840      	bhi.n	80021be <lcdCommand+0x16e>
 800213c:	a201      	add	r2, pc, #4	@ (adr r2, 8002144 <lcdCommand+0xf4>)
 800213e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002142:	bf00      	nop
 8002144:	08002165 	.word	0x08002165
 8002148:	080021bf 	.word	0x080021bf
 800214c:	08002175 	.word	0x08002175
 8002150:	08002185 	.word	0x08002185
 8002154:	080021bf 	.word	0x080021bf
 8002158:	080021a5 	.word	0x080021a5
 800215c:	08002195 	.word	0x08002195
 8002160:	080021af 	.word	0x080021af
                case LCD_DISPLAY:
                    lcdParams.modeBits &= ~LCD_BIT_DISPLAY_ON;
 8002164:	4b2b      	ldr	r3, [pc, #172]	@ (8002214 <lcdCommand+0x1c4>)
 8002166:	7a1b      	ldrb	r3, [r3, #8]
 8002168:	f023 0304 	bic.w	r3, r3, #4
 800216c:	b2da      	uxtb	r2, r3
 800216e:	4b29      	ldr	r3, [pc, #164]	@ (8002214 <lcdCommand+0x1c4>)
 8002170:	721a      	strb	r2, [r3, #8]
                    break;
 8002172:	e026      	b.n	80021c2 <lcdCommand+0x172>

                case LCD_CURSOR:
                    lcdParams.modeBits &= ~LCD_BIT_CURSOR_ON;
 8002174:	4b27      	ldr	r3, [pc, #156]	@ (8002214 <lcdCommand+0x1c4>)
 8002176:	7a1b      	ldrb	r3, [r3, #8]
 8002178:	f023 0302 	bic.w	r3, r3, #2
 800217c:	b2da      	uxtb	r2, r3
 800217e:	4b25      	ldr	r3, [pc, #148]	@ (8002214 <lcdCommand+0x1c4>)
 8002180:	721a      	strb	r2, [r3, #8]
                    break;
 8002182:	e01e      	b.n	80021c2 <lcdCommand+0x172>

                case LCD_CURSOR_BLINK:
                    lcdParams.modeBits &= ~LCD_BIT_BLINK_ON;
 8002184:	4b23      	ldr	r3, [pc, #140]	@ (8002214 <lcdCommand+0x1c4>)
 8002186:	7a1b      	ldrb	r3, [r3, #8]
 8002188:	f023 0301 	bic.w	r3, r3, #1
 800218c:	b2da      	uxtb	r2, r3
 800218e:	4b21      	ldr	r3, [pc, #132]	@ (8002214 <lcdCommand+0x1c4>)
 8002190:	721a      	strb	r2, [r3, #8]
                    break;
 8002192:	e016      	b.n	80021c2 <lcdCommand+0x172>

                case LCD_CURSOR_DIR_RIGHT:
                    lcdParams.entryBits &= ~LCD_BIT_CURSOR_DIR_RIGHT;
 8002194:	4b1f      	ldr	r3, [pc, #124]	@ (8002214 <lcdCommand+0x1c4>)
 8002196:	7a5b      	ldrb	r3, [r3, #9]
 8002198:	f023 0302 	bic.w	r3, r3, #2
 800219c:	b2da      	uxtb	r2, r3
 800219e:	4b1d      	ldr	r3, [pc, #116]	@ (8002214 <lcdCommand+0x1c4>)
 80021a0:	725a      	strb	r2, [r3, #9]
                    break;
 80021a2:	e00e      	b.n	80021c2 <lcdCommand+0x172>

                case LCD_CURSOR_DIR_LEFT:
                    lcdParams.entryBits &= ~LCD_BIT_CURSOR_DIR_LEFT;
 80021a4:	4b1b      	ldr	r3, [pc, #108]	@ (8002214 <lcdCommand+0x1c4>)
 80021a6:	7a5a      	ldrb	r2, [r3, #9]
 80021a8:	4b1a      	ldr	r3, [pc, #104]	@ (8002214 <lcdCommand+0x1c4>)
 80021aa:	725a      	strb	r2, [r3, #9]
                    break;
 80021ac:	e009      	b.n	80021c2 <lcdCommand+0x172>

                case LCD_DISPLAY_SHIFT:
                    lcdParams.entryBits &= ~LCD_BIT_DISPLAY_SHIFT;
 80021ae:	4b19      	ldr	r3, [pc, #100]	@ (8002214 <lcdCommand+0x1c4>)
 80021b0:	7a5b      	ldrb	r3, [r3, #9]
 80021b2:	f023 0301 	bic.w	r3, r3, #1
 80021b6:	b2da      	uxtb	r2, r3
 80021b8:	4b16      	ldr	r3, [pc, #88]	@ (8002214 <lcdCommand+0x1c4>)
 80021ba:	725a      	strb	r2, [r3, #9]
                    break;
 80021bc:	e001      	b.n	80021c2 <lcdCommand+0x172>

                default:
                    return -1;
 80021be:	23ff      	movs	r3, #255	@ 0xff
 80021c0:	e024      	b.n	800220c <lcdCommand+0x1bc>
            }

            break;
 80021c2:	e001      	b.n	80021c8 <lcdCommand+0x178>

        default:
            return -1;
 80021c4:	23ff      	movs	r3, #255	@ 0xff
 80021c6:	e021      	b.n	800220c <lcdCommand+0x1bc>
    }

    /* Now lets send the command */
    switch (command) {
 80021c8:	79fb      	ldrb	r3, [r7, #7]
 80021ca:	2b08      	cmp	r3, #8
 80021cc:	dc16      	bgt.n	80021fc <lcdCommand+0x1ac>
 80021ce:	2b06      	cmp	r3, #6
 80021d0:	da0d      	bge.n	80021ee <lcdCommand+0x19e>
 80021d2:	2b01      	cmp	r3, #1
 80021d4:	d004      	beq.n	80021e0 <lcdCommand+0x190>
 80021d6:	2b00      	cmp	r3, #0
 80021d8:	dd10      	ble.n	80021fc <lcdCommand+0x1ac>
 80021da:	3b03      	subs	r3, #3
 80021dc:	2b01      	cmp	r3, #1
 80021de:	d80d      	bhi.n	80021fc <lcdCommand+0x1ac>
        case LCD_DISPLAY:
        case LCD_CURSOR:
        case LCD_CURSOR_BLINK:
            lcdData = LCD_BIT_DISPLAY_CONTROL | lcdParams.modeBits;
 80021e0:	4b0c      	ldr	r3, [pc, #48]	@ (8002214 <lcdCommand+0x1c4>)
 80021e2:	7a1b      	ldrb	r3, [r3, #8]
 80021e4:	f043 0308 	orr.w	r3, r3, #8
 80021e8:	b2db      	uxtb	r3, r3
 80021ea:	73fb      	strb	r3, [r7, #15]
            break;
 80021ec:	e007      	b.n	80021fe <lcdCommand+0x1ae>

        case LCD_CURSOR_DIR_RIGHT:
        case LCD_CURSOR_DIR_LEFT:
        case LCD_DISPLAY_SHIFT:
            lcdData = LCD_BIT_ENTRY_MODE | lcdParams.entryBits;
 80021ee:	4b09      	ldr	r3, [pc, #36]	@ (8002214 <lcdCommand+0x1c4>)
 80021f0:	7a5b      	ldrb	r3, [r3, #9]
 80021f2:	f043 0304 	orr.w	r3, r3, #4
 80021f6:	b2db      	uxtb	r3, r3
 80021f8:	73fb      	strb	r3, [r7, #15]
            break;
 80021fa:	e000      	b.n	80021fe <lcdCommand+0x1ae>

        default:
            break;
 80021fc:	bf00      	nop
    }

    return lcdWriteByte((uint8_t)0x00, &lcdData);
 80021fe:	f107 030f 	add.w	r3, r7, #15
 8002202:	4619      	mov	r1, r3
 8002204:	2000      	movs	r0, #0
 8002206:	f000 f84f 	bl	80022a8 <lcdWriteByte>
 800220a:	4603      	mov	r3, r0
}
 800220c:	4618      	mov	r0, r3
 800220e:	3710      	adds	r7, #16
 8002210:	46bd      	mov	sp, r7
 8002212:	bd80      	pop	{r7, pc}
 8002214:	200003cc 	.word	0x200003cc

08002218 <lcdSetCursorPosition>:
 * @brief  Set cursor position on the display
 * @param  column counting from 0
 * @param  line   counting from 0
 * @return        0 if success
 */
char lcdSetCursorPosition(uint8_t column, uint8_t line) {
 8002218:	b580      	push	{r7, lr}
 800221a:	b084      	sub	sp, #16
 800221c:	af00      	add	r7, sp, #0
 800221e:	4603      	mov	r3, r0
 8002220:	460a      	mov	r2, r1
 8002222:	71fb      	strb	r3, [r7, #7]
 8002224:	4613      	mov	r3, r2
 8002226:	71bb      	strb	r3, [r7, #6]
    // We will setup offsets for 4 lines maximum
    static const uint8_t lineOffsets[4] = { 0x00, 0x40, 0x14, 0x54 };

    if ( line >= lcdParams.lines ) {
 8002228:	4b0f      	ldr	r3, [pc, #60]	@ (8002268 <lcdSetCursorPosition+0x50>)
 800222a:	791b      	ldrb	r3, [r3, #4]
 800222c:	79ba      	ldrb	r2, [r7, #6]
 800222e:	429a      	cmp	r2, r3
 8002230:	d303      	bcc.n	800223a <lcdSetCursorPosition+0x22>
        line = lcdParams.lines - 1;
 8002232:	4b0d      	ldr	r3, [pc, #52]	@ (8002268 <lcdSetCursorPosition+0x50>)
 8002234:	791b      	ldrb	r3, [r3, #4]
 8002236:	3b01      	subs	r3, #1
 8002238:	71bb      	strb	r3, [r7, #6]
    }

    uint8_t lcdCommand = LCD_BIT_SETDDRAMADDR | (column + lineOffsets[line]);
 800223a:	79bb      	ldrb	r3, [r7, #6]
 800223c:	4a0b      	ldr	r2, [pc, #44]	@ (800226c <lcdSetCursorPosition+0x54>)
 800223e:	5cd2      	ldrb	r2, [r2, r3]
 8002240:	79fb      	ldrb	r3, [r7, #7]
 8002242:	4413      	add	r3, r2
 8002244:	b2db      	uxtb	r3, r3
 8002246:	b25b      	sxtb	r3, r3
 8002248:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 800224c:	b25b      	sxtb	r3, r3
 800224e:	b2db      	uxtb	r3, r3
 8002250:	73fb      	strb	r3, [r7, #15]

    return lcdWriteByte(0x00, &lcdCommand);
 8002252:	f107 030f 	add.w	r3, r7, #15
 8002256:	4619      	mov	r1, r3
 8002258:	2000      	movs	r0, #0
 800225a:	f000 f825 	bl	80022a8 <lcdWriteByte>
 800225e:	4603      	mov	r3, r0
}
 8002260:	4618      	mov	r0, r3
 8002262:	3710      	adds	r7, #16
 8002264:	46bd      	mov	sp, r7
 8002266:	bd80      	pop	{r7, pc}
 8002268:	200003cc 	.word	0x200003cc
 800226c:	0800f248 	.word	0x0800f248

08002270 <lcdPrintStr>:
 * @brief  Print string from cursor position
 * @param  data   Pointer to string
 * @param  length Number of symbols to print
 * @return        0 if success
 */
char lcdPrintStr(uint8_t * data, uint8_t length) {
 8002270:	b580      	push	{r7, lr}
 8002272:	b084      	sub	sp, #16
 8002274:	af00      	add	r7, sp, #0
 8002276:	6078      	str	r0, [r7, #4]
 8002278:	460b      	mov	r3, r1
 800227a:	70fb      	strb	r3, [r7, #3]
    for (uint8_t i = 0; i < length; ++i) {
 800227c:	2300      	movs	r3, #0
 800227e:	73fb      	strb	r3, [r7, #15]
 8002280:	e009      	b.n	8002296 <lcdPrintStr+0x26>
        if (lcdWriteByte(LCD_BIT_RS, &data[i]) == -1) {
 8002282:	7bfb      	ldrb	r3, [r7, #15]
 8002284:	687a      	ldr	r2, [r7, #4]
 8002286:	4413      	add	r3, r2
 8002288:	4619      	mov	r1, r3
 800228a:	2001      	movs	r0, #1
 800228c:	f000 f80c 	bl	80022a8 <lcdWriteByte>
    for (uint8_t i = 0; i < length; ++i) {
 8002290:	7bfb      	ldrb	r3, [r7, #15]
 8002292:	3301      	adds	r3, #1
 8002294:	73fb      	strb	r3, [r7, #15]
 8002296:	7bfa      	ldrb	r2, [r7, #15]
 8002298:	78fb      	ldrb	r3, [r7, #3]
 800229a:	429a      	cmp	r2, r3
 800229c:	d3f1      	bcc.n	8002282 <lcdPrintStr+0x12>
            return -1;
        }
    }

    return 0;
 800229e:	2300      	movs	r3, #0
}
 80022a0:	4618      	mov	r0, r3
 80022a2:	3710      	adds	r7, #16
 80022a4:	46bd      	mov	sp, r7
 80022a6:	bd80      	pop	{r7, pc}

080022a8 <lcdWriteByte>:
 * @brief  Local function to send data to display
 * @param  rsRwBits State of RS and R/W bits
 * @param  data     Pointer to byte to send
 * @return          0 if success
 */
static char lcdWriteByte(uint8_t rsRwBits, uint8_t * data) {
 80022a8:	b580      	push	{r7, lr}
 80022aa:	b084      	sub	sp, #16
 80022ac:	af00      	add	r7, sp, #0
 80022ae:	4603      	mov	r3, r0
 80022b0:	6039      	str	r1, [r7, #0]
 80022b2:	71fb      	strb	r3, [r7, #7]
	unsigned short usCont;

    /* Higher 4 bits*/
    lcdCommandBuffer[0] = rsRwBits | LCD_BIT_E | lcdParams.backlight | (*data & 0xF0);  // Send data and set strobe
 80022b4:	4b38      	ldr	r3, [pc, #224]	@ (8002398 <lcdWriteByte+0xf0>)
 80022b6:	79da      	ldrb	r2, [r3, #7]
 80022b8:	79fb      	ldrb	r3, [r7, #7]
 80022ba:	4313      	orrs	r3, r2
 80022bc:	b2da      	uxtb	r2, r3
 80022be:	683b      	ldr	r3, [r7, #0]
 80022c0:	781b      	ldrb	r3, [r3, #0]
 80022c2:	f023 030f 	bic.w	r3, r3, #15
 80022c6:	b2db      	uxtb	r3, r3
 80022c8:	4313      	orrs	r3, r2
 80022ca:	b2db      	uxtb	r3, r3
 80022cc:	f043 0304 	orr.w	r3, r3, #4
 80022d0:	b2da      	uxtb	r2, r3
 80022d2:	4b32      	ldr	r3, [pc, #200]	@ (800239c <lcdWriteByte+0xf4>)
 80022d4:	701a      	strb	r2, [r3, #0]
    lcdCommandBuffer[1] = lcdCommandBuffer[0];                                          // Strobe turned on
 80022d6:	4b31      	ldr	r3, [pc, #196]	@ (800239c <lcdWriteByte+0xf4>)
 80022d8:	781a      	ldrb	r2, [r3, #0]
 80022da:	4b30      	ldr	r3, [pc, #192]	@ (800239c <lcdWriteByte+0xf4>)
 80022dc:	705a      	strb	r2, [r3, #1]
    lcdCommandBuffer[2] = rsRwBits | lcdParams.backlight | (*data & 0xF0);              // Turning strobe off
 80022de:	4b2e      	ldr	r3, [pc, #184]	@ (8002398 <lcdWriteByte+0xf0>)
 80022e0:	79da      	ldrb	r2, [r3, #7]
 80022e2:	79fb      	ldrb	r3, [r7, #7]
 80022e4:	4313      	orrs	r3, r2
 80022e6:	b2db      	uxtb	r3, r3
 80022e8:	b25a      	sxtb	r2, r3
 80022ea:	683b      	ldr	r3, [r7, #0]
 80022ec:	781b      	ldrb	r3, [r3, #0]
 80022ee:	b25b      	sxtb	r3, r3
 80022f0:	f023 030f 	bic.w	r3, r3, #15
 80022f4:	b25b      	sxtb	r3, r3
 80022f6:	4313      	orrs	r3, r2
 80022f8:	b25b      	sxtb	r3, r3
 80022fa:	b2da      	uxtb	r2, r3
 80022fc:	4b27      	ldr	r3, [pc, #156]	@ (800239c <lcdWriteByte+0xf4>)
 80022fe:	709a      	strb	r2, [r3, #2]

    /* Lower 4 bits*/
    lcdCommandBuffer[3] = rsRwBits | LCD_BIT_E | lcdParams.backlight | ((*data << 4) & 0xF0);  // Send data and set strobe
 8002300:	4b25      	ldr	r3, [pc, #148]	@ (8002398 <lcdWriteByte+0xf0>)
 8002302:	79da      	ldrb	r2, [r3, #7]
 8002304:	79fb      	ldrb	r3, [r7, #7]
 8002306:	4313      	orrs	r3, r2
 8002308:	b2da      	uxtb	r2, r3
 800230a:	683b      	ldr	r3, [r7, #0]
 800230c:	781b      	ldrb	r3, [r3, #0]
 800230e:	011b      	lsls	r3, r3, #4
 8002310:	b2db      	uxtb	r3, r3
 8002312:	4313      	orrs	r3, r2
 8002314:	b2db      	uxtb	r3, r3
 8002316:	f043 0304 	orr.w	r3, r3, #4
 800231a:	b2da      	uxtb	r2, r3
 800231c:	4b1f      	ldr	r3, [pc, #124]	@ (800239c <lcdWriteByte+0xf4>)
 800231e:	70da      	strb	r2, [r3, #3]
    lcdCommandBuffer[4] = lcdCommandBuffer[3];                                                 // Strobe turned on
 8002320:	4b1e      	ldr	r3, [pc, #120]	@ (800239c <lcdWriteByte+0xf4>)
 8002322:	78da      	ldrb	r2, [r3, #3]
 8002324:	4b1d      	ldr	r3, [pc, #116]	@ (800239c <lcdWriteByte+0xf4>)
 8002326:	711a      	strb	r2, [r3, #4]
    lcdCommandBuffer[5] = rsRwBits | lcdParams.backlight | ((*data << 4) & 0xF0);              // Turning strobe off
 8002328:	4b1b      	ldr	r3, [pc, #108]	@ (8002398 <lcdWriteByte+0xf0>)
 800232a:	79da      	ldrb	r2, [r3, #7]
 800232c:	79fb      	ldrb	r3, [r7, #7]
 800232e:	4313      	orrs	r3, r2
 8002330:	b2db      	uxtb	r3, r3
 8002332:	b25a      	sxtb	r2, r3
 8002334:	683b      	ldr	r3, [r7, #0]
 8002336:	781b      	ldrb	r3, [r3, #0]
 8002338:	011b      	lsls	r3, r3, #4
 800233a:	b25b      	sxtb	r3, r3
 800233c:	4313      	orrs	r3, r2
 800233e:	b25b      	sxtb	r3, r3
 8002340:	b2da      	uxtb	r2, r3
 8002342:	4b16      	ldr	r3, [pc, #88]	@ (800239c <lcdWriteByte+0xf4>)
 8002344:	715a      	strb	r2, [r3, #5]


    if (HAL_I2C_Master_Transmit_DMA(lcdParams.hi2c, lcdParams.address, (uint8_t*)lcdCommandBuffer, 6) != HAL_OK) {
 8002346:	4b14      	ldr	r3, [pc, #80]	@ (8002398 <lcdWriteByte+0xf0>)
 8002348:	6818      	ldr	r0, [r3, #0]
 800234a:	4b13      	ldr	r3, [pc, #76]	@ (8002398 <lcdWriteByte+0xf0>)
 800234c:	799b      	ldrb	r3, [r3, #6]
 800234e:	4619      	mov	r1, r3
 8002350:	2306      	movs	r3, #6
 8002352:	4a12      	ldr	r2, [pc, #72]	@ (800239c <lcdWriteByte+0xf4>)
 8002354:	f002 feb6 	bl	80050c4 <HAL_I2C_Master_Transmit_DMA>
 8002358:	4603      	mov	r3, r0
 800235a:	2b00      	cmp	r3, #0
 800235c:	d001      	beq.n	8002362 <lcdWriteByte+0xba>
        return -1;
 800235e:	23ff      	movs	r3, #255	@ 0xff
 8002360:	e015      	b.n	800238e <lcdWriteByte+0xe6>
    }

    usCont = 0;
 8002362:	2300      	movs	r3, #0
 8002364:	81fb      	strh	r3, [r7, #14]
    while (HAL_I2C_GetState(lcdParams.hi2c) != HAL_I2C_STATE_READY) {
 8002366:	e009      	b.n	800237c <lcdWriteByte+0xd4>
    	if(usCont++ == LCD_COMM_TIMEOUT)
 8002368:	89fb      	ldrh	r3, [r7, #14]
 800236a:	1c5a      	adds	r2, r3, #1
 800236c:	81fa      	strh	r2, [r7, #14]
 800236e:	2bc8      	cmp	r3, #200	@ 0xc8
 8002370:	d101      	bne.n	8002376 <lcdWriteByte+0xce>
    		return -1;
 8002372:	23ff      	movs	r3, #255	@ 0xff
 8002374:	e00b      	b.n	800238e <lcdWriteByte+0xe6>
    	HAL_Delay(1);
 8002376:	2001      	movs	r0, #1
 8002378:	f001 ffb2 	bl	80042e0 <HAL_Delay>
    while (HAL_I2C_GetState(lcdParams.hi2c) != HAL_I2C_STATE_READY) {
 800237c:	4b06      	ldr	r3, [pc, #24]	@ (8002398 <lcdWriteByte+0xf0>)
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	4618      	mov	r0, r3
 8002382:	f003 f890 	bl	80054a6 <HAL_I2C_GetState>
 8002386:	4603      	mov	r3, r0
 8002388:	2b20      	cmp	r3, #32
 800238a:	d1ed      	bne.n	8002368 <lcdWriteByte+0xc0>
    }

    return 0;
 800238c:	2300      	movs	r3, #0
}
 800238e:	4618      	mov	r0, r3
 8002390:	3710      	adds	r7, #16
 8002392:	46bd      	mov	sp, r7
 8002394:	bd80      	pop	{r7, pc}
 8002396:	bf00      	nop
 8002398:	200003cc 	.word	0x200003cc
 800239c:	200003c4 	.word	0x200003c4

080023a0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80023a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023a2:	ed2d 8b02 	vpush	{d8}
 80023a6:	f5ad 7d69 	sub.w	sp, sp, #932	@ 0x3a4
 80023aa:	af6e      	add	r7, sp, #440	@ 0x1b8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80023ac:	f001 ff27 	bl	80041fe <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80023b0:	f000 f908 	bl	80025c4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80023b4:	f7ff fbe8 	bl	8001b88 <MX_GPIO_Init>
  MX_DMA_Init();
 80023b8:	f7ff fbb4 	bl	8001b24 <MX_DMA_Init>
  MX_LPUART1_UART_Init();
 80023bc:	f001 fcfe 	bl	8003dbc <MX_LPUART1_UART_Init>
  MX_TIM3_Init();
 80023c0:	f001 f87c 	bl	80034bc <MX_TIM3_Init>
  MX_TIM20_Init();
 80023c4:	f001 fa06 	bl	80037d4 <MX_TIM20_Init>
  MX_I2C2_Init();
 80023c8:	f7ff fc66 	bl	8001c98 <MX_I2C2_Init>
  MX_TIM1_Init();
 80023cc:	f000 ff88 	bl	80032e0 <MX_TIM1_Init>
  MX_USART3_UART_Init();
 80023d0:	f001 fd8a 	bl	8003ee8 <MX_USART3_UART_Init>
  MX_TIM5_Init();
 80023d4:	f001 f8e4 	bl	80035a0 <MX_TIM5_Init>
  MX_TIM16_Init();
 80023d8:	f001 f968 	bl	80036ac <MX_TIM16_Init>
  MX_TIM17_Init();
 80023dc:	f001 f9b0 	bl	8003740 <MX_TIM17_Init>
  MX_TIM6_Init();
 80023e0:	f001 f92c 	bl	800363c <MX_TIM6_Init>
  MX_TIM2_Init();
 80023e4:	f001 f81c 	bl	8003420 <MX_TIM2_Init>
  MX_USART1_UART_Init();
 80023e8:	f001 fd32 	bl	8003e50 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */

  lcdInit(&hi2c2, (uint8_t)0x27, (uint8_t)2, (uint8_t)16);
 80023ec:	2310      	movs	r3, #16
 80023ee:	2202      	movs	r2, #2
 80023f0:	2127      	movs	r1, #39	@ 0x27
 80023f2:	4862      	ldr	r0, [pc, #392]	@ (800257c <main+0x1dc>)
 80023f4:	f7ff fd72 	bl	8001edc <lcdInit>
  vUltrassonicoInit(pTimerEcoUltrassonicoFrontal,pTimerPWMTrigger) ;
 80023f8:	4b61      	ldr	r3, [pc, #388]	@ (8002580 <main+0x1e0>)
 80023fa:	681b      	ldr	r3, [r3, #0]
 80023fc:	4a61      	ldr	r2, [pc, #388]	@ (8002584 <main+0x1e4>)
 80023fe:	6812      	ldr	r2, [r2, #0]
 8002400:	4611      	mov	r1, r2
 8002402:	4618      	mov	r0, r3
 8002404:	f001 fcb4 	bl	8003d70 <vUltrassonicoInit>
  vCommunicationInit();
 8002408:	f7ff fb6e 	bl	8001ae8 <vCommunicationInit>

  vMotorsInit(pTimPWMMotor, pTimDurationMotor);
 800240c:	4b5e      	ldr	r3, [pc, #376]	@ (8002588 <main+0x1e8>)
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	4a5e      	ldr	r2, [pc, #376]	@ (800258c <main+0x1ec>)
 8002412:	6812      	ldr	r2, [r2, #0]
 8002414:	4611      	mov	r1, r2
 8002416:	4618      	mov	r0, r3
 8002418:	f000 fb0c 	bl	8002a34 <vMotorsInit>
  vCommStateMachineInit(pBleCtrlMain);
 800241c:	4b5c      	ldr	r3, [pc, #368]	@ (8002590 <main+0x1f0>)
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	4618      	mov	r0, r3
 8002422:	f7fe ff6d 	bl	8001300 <vCommStateMachineInit>

  vTimerInit();
 8002426:	f001 fc37 	bl	8003c98 <vTimerInit>
  iSetTimer(100);
 800242a:	2064      	movs	r0, #100	@ 0x64
 800242c:	f001 fc5a 	bl	8003ce4 <iSetTimer>

// lider
//  xPidMotorLeft = vPidInit(xPidMotorLeft, 0.005, 0.06, 0, 100, 1);
//  xPidMotorRight = vPidInit(xPidMotorRight, 0.005, 0.06, 0, 100, 1);
// seguidor
   xPidMotorLeft = vPidInit(xPidMotorLeft, fLeftMotorKp, fLeftMotorKi, 0, 100, 1);
 8002430:	4b58      	ldr	r3, [pc, #352]	@ (8002594 <main+0x1f4>)
 8002432:	ed93 8a00 	vldr	s16, [r3]
 8002436:	4b58      	ldr	r3, [pc, #352]	@ (8002598 <main+0x1f8>)
 8002438:	edd3 8a00 	vldr	s17, [r3]
 800243c:	4e57      	ldr	r6, [pc, #348]	@ (800259c <main+0x1fc>)
 800243e:	463d      	mov	r5, r7
 8002440:	4c56      	ldr	r4, [pc, #344]	@ (800259c <main+0x1fc>)
 8002442:	2364      	movs	r3, #100	@ 0x64
 8002444:	936c      	str	r3, [sp, #432]	@ 0x1b0
 8002446:	4668      	mov	r0, sp
 8002448:	f104 030c 	add.w	r3, r4, #12
 800244c:	f44f 72d8 	mov.w	r2, #432	@ 0x1b0
 8002450:	4619      	mov	r1, r3
 8002452:	f00a fd24 	bl	800ce9e <memcpy>
 8002456:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 800245a:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 800245e:	ed9f 1a50 	vldr	s2, [pc, #320]	@ 80025a0 <main+0x200>
 8002462:	eef0 0a68 	vmov.f32	s1, s17
 8002466:	eeb0 0a48 	vmov.f32	s0, s16
 800246a:	4628      	mov	r0, r5
 800246c:	f000 fc78 	bl	8002d60 <vPidInit>
 8002470:	f507 73f4 	add.w	r3, r7, #488	@ 0x1e8
 8002474:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 8002478:	4630      	mov	r0, r6
 800247a:	4619      	mov	r1, r3
 800247c:	f44f 73de 	mov.w	r3, #444	@ 0x1bc
 8002480:	461a      	mov	r2, r3
 8002482:	f00a fd0c 	bl	800ce9e <memcpy>
   xPidMotorRight = vPidInit(xPidMotorRight, fRightMotorKp, fRightMotorKi, 0, 100, 1);
 8002486:	4b47      	ldr	r3, [pc, #284]	@ (80025a4 <main+0x204>)
 8002488:	ed93 8a00 	vldr	s16, [r3]
 800248c:	4b46      	ldr	r3, [pc, #280]	@ (80025a8 <main+0x208>)
 800248e:	edd3 8a00 	vldr	s17, [r3]
 8002492:	4e46      	ldr	r6, [pc, #280]	@ (80025ac <main+0x20c>)
 8002494:	463d      	mov	r5, r7
 8002496:	4c45      	ldr	r4, [pc, #276]	@ (80025ac <main+0x20c>)
 8002498:	2364      	movs	r3, #100	@ 0x64
 800249a:	936c      	str	r3, [sp, #432]	@ 0x1b0
 800249c:	4668      	mov	r0, sp
 800249e:	f104 030c 	add.w	r3, r4, #12
 80024a2:	f44f 72d8 	mov.w	r2, #432	@ 0x1b0
 80024a6:	4619      	mov	r1, r3
 80024a8:	f00a fcf9 	bl	800ce9e <memcpy>
 80024ac:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
 80024b0:	eef7 1a00 	vmov.f32	s3, #112	@ 0x3f800000  1.0
 80024b4:	ed9f 1a3a 	vldr	s2, [pc, #232]	@ 80025a0 <main+0x200>
 80024b8:	eef0 0a68 	vmov.f32	s1, s17
 80024bc:	eeb0 0a48 	vmov.f32	s0, s16
 80024c0:	4628      	mov	r0, r5
 80024c2:	f000 fc4d 	bl	8002d60 <vPidInit>
 80024c6:	f507 73f4 	add.w	r3, r7, #488	@ 0x1e8
 80024ca:	f5a3 73f4 	sub.w	r3, r3, #488	@ 0x1e8
 80024ce:	4630      	mov	r0, r6
 80024d0:	4619      	mov	r1, r3
 80024d2:	f44f 73de 	mov.w	r3, #444	@ 0x1bc
 80024d6:	461a      	mov	r2, r3
 80024d8:	f00a fce1 	bl	800ce9e <memcpy>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */

  HAL_TIM_Base_Start_IT(pTimDurationMotor);
 80024dc:	4b2b      	ldr	r3, [pc, #172]	@ (800258c <main+0x1ec>)
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	4618      	mov	r0, r3
 80024e2:	f005 fc83 	bl	8007dec <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(pTimFreqFixa_esq);
 80024e6:	4b32      	ldr	r3, [pc, #200]	@ (80025b0 <main+0x210>)
 80024e8:	681b      	ldr	r3, [r3, #0]
 80024ea:	4618      	mov	r0, r3
 80024ec:	f005 fc7e 	bl	8007dec <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(pTimFreqFixa_dir);
 80024f0:	4b30      	ldr	r3, [pc, #192]	@ (80025b4 <main+0x214>)
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	4618      	mov	r0, r3
 80024f6:	f005 fc79 	bl	8007dec <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(pTimerGeral);
 80024fa:	4b2f      	ldr	r3, [pc, #188]	@ (80025b8 <main+0x218>)
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	4618      	mov	r0, r3
 8002500:	f005 fc74 	bl	8007dec <HAL_TIM_Base_Start_IT>
  HAL_TIM_IC_Start_IT(pTimFreqFixa_esq, TIM_CHANNEL_1);
 8002504:	4b2a      	ldr	r3, [pc, #168]	@ (80025b0 <main+0x210>)
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	2100      	movs	r1, #0
 800250a:	4618      	mov	r0, r3
 800250c:	f005 feb2 	bl	8008274 <HAL_TIM_IC_Start_IT>
  HAL_TIM_IC_Start_IT(pTimFreqFixa_dir, TIM_CHANNEL_1);
 8002510:	4b28      	ldr	r3, [pc, #160]	@ (80025b4 <main+0x214>)
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	2100      	movs	r1, #0
 8002516:	4618      	mov	r0, r3
 8002518:	f005 feac 	bl	8008274 <HAL_TIM_IC_Start_IT>

  lcdSetCursorPosition(0, 0);
 800251c:	2100      	movs	r1, #0
 800251e:	2000      	movs	r0, #0
 8002520:	f7ff fe7a 	bl	8002218 <lcdSetCursorPosition>
  sprintf((char *)ucLCD0Msg, "Esq(mm/s):");
 8002524:	f507 73ea 	add.w	r3, r7, #468	@ 0x1d4
 8002528:	4924      	ldr	r1, [pc, #144]	@ (80025bc <main+0x21c>)
 800252a:	4618      	mov	r0, r3
 800252c:	f00a fbc6 	bl	800ccbc <siprintf>
  lcdPrintStr((uint8_t*)ucLCD0Msg, strlen((char *)ucLCD0Msg));
 8002530:	f507 73ea 	add.w	r3, r7, #468	@ 0x1d4
 8002534:	4618      	mov	r0, r3
 8002536:	f7fd fe73 	bl	8000220 <strlen>
 800253a:	4603      	mov	r3, r0
 800253c:	b2da      	uxtb	r2, r3
 800253e:	f507 73ea 	add.w	r3, r7, #468	@ 0x1d4
 8002542:	4611      	mov	r1, r2
 8002544:	4618      	mov	r0, r3
 8002546:	f7ff fe93 	bl	8002270 <lcdPrintStr>
  lcdSetCursorPosition(0, 1);
 800254a:	2101      	movs	r1, #1
 800254c:	2000      	movs	r0, #0
 800254e:	f7ff fe63 	bl	8002218 <lcdSetCursorPosition>
  sprintf((char *)ucLCD0Msg, "Dir(mm/s):");
 8002552:	f507 73ea 	add.w	r3, r7, #468	@ 0x1d4
 8002556:	491a      	ldr	r1, [pc, #104]	@ (80025c0 <main+0x220>)
 8002558:	4618      	mov	r0, r3
 800255a:	f00a fbaf 	bl	800ccbc <siprintf>
  lcdPrintStr((uint8_t*)ucLCD0Msg, strlen((char *)ucLCD0Msg));
 800255e:	f507 73ea 	add.w	r3, r7, #468	@ 0x1d4
 8002562:	4618      	mov	r0, r3
 8002564:	f7fd fe5c 	bl	8000220 <strlen>
 8002568:	4603      	mov	r3, r0
 800256a:	b2da      	uxtb	r2, r3
 800256c:	f507 73ea 	add.w	r3, r7, #468	@ 0x1d4
 8002570:	4611      	mov	r1, r2
 8002572:	4618      	mov	r0, r3
 8002574:	f7ff fe7c 	bl	8002270 <lcdPrintStr>

  while (1)
 8002578:	bf00      	nop
 800257a:	e7fd      	b.n	8002578 <main+0x1d8>
 800257c:	200002b0 	.word	0x200002b0
 8002580:	20000008 	.word	0x20000008
 8002584:	20000004 	.word	0x20000004
 8002588:	20000014 	.word	0x20000014
 800258c:	20000010 	.word	0x20000010
 8002590:	2000000c 	.word	0x2000000c
 8002594:	20000024 	.word	0x20000024
 8002598:	20000028 	.word	0x20000028
 800259c:	200005bc 	.word	0x200005bc
 80025a0:	00000000 	.word	0x00000000
 80025a4:	2000002c 	.word	0x2000002c
 80025a8:	20000030 	.word	0x20000030
 80025ac:	20000400 	.word	0x20000400
 80025b0:	2000001c 	.word	0x2000001c
 80025b4:	20000020 	.word	0x20000020
 80025b8:	20000018 	.word	0x20000018
 80025bc:	0800f230 	.word	0x0800f230
 80025c0:	0800f23c 	.word	0x0800f23c

080025c4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80025c4:	b580      	push	{r7, lr}
 80025c6:	b094      	sub	sp, #80	@ 0x50
 80025c8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80025ca:	f107 0318 	add.w	r3, r7, #24
 80025ce:	2238      	movs	r2, #56	@ 0x38
 80025d0:	2100      	movs	r1, #0
 80025d2:	4618      	mov	r0, r3
 80025d4:	f00a fbd5 	bl	800cd82 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80025d8:	1d3b      	adds	r3, r7, #4
 80025da:	2200      	movs	r2, #0
 80025dc:	601a      	str	r2, [r3, #0]
 80025de:	605a      	str	r2, [r3, #4]
 80025e0:	609a      	str	r2, [r3, #8]
 80025e2:	60da      	str	r2, [r3, #12]
 80025e4:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 80025e6:	2000      	movs	r0, #0
 80025e8:	f004 fb78 	bl	8006cdc <HAL_PWREx_ControlVoltageScaling>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80025ec:	2302      	movs	r3, #2
 80025ee:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80025f0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80025f4:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80025f6:	2340      	movs	r3, #64	@ 0x40
 80025f8:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80025fa:	2302      	movs	r3, #2
 80025fc:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80025fe:	2302      	movs	r3, #2
 8002600:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 8002602:	2304      	movs	r3, #4
 8002604:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 85;
 8002606:	2355      	movs	r3, #85	@ 0x55
 8002608:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800260a:	2302      	movs	r3, #2
 800260c:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 800260e:	2302      	movs	r3, #2
 8002610:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8002612:	2302      	movs	r3, #2
 8002614:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002616:	f107 0318 	add.w	r3, r7, #24
 800261a:	4618      	mov	r0, r3
 800261c:	f004 fc12 	bl	8006e44 <HAL_RCC_OscConfig>
 8002620:	4603      	mov	r3, r0
 8002622:	2b00      	cmp	r3, #0
 8002624:	d001      	beq.n	800262a <SystemClock_Config+0x66>
  {
    Error_Handler();
 8002626:	f000 f9fe 	bl	8002a26 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800262a:	230f      	movs	r3, #15
 800262c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800262e:	2303      	movs	r3, #3
 8002630:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002632:	2300      	movs	r3, #0
 8002634:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002636:	2300      	movs	r3, #0
 8002638:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800263a:	2300      	movs	r3, #0
 800263c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 800263e:	1d3b      	adds	r3, r7, #4
 8002640:	2104      	movs	r1, #4
 8002642:	4618      	mov	r0, r3
 8002644:	f004 ff10 	bl	8007468 <HAL_RCC_ClockConfig>
 8002648:	4603      	mov	r3, r0
 800264a:	2b00      	cmp	r3, #0
 800264c:	d001      	beq.n	8002652 <SystemClock_Config+0x8e>
  {
    Error_Handler();
 800264e:	f000 f9ea 	bl	8002a26 <Error_Handler>
  }
}
 8002652:	bf00      	nop
 8002654:	3750      	adds	r7, #80	@ 0x50
 8002656:	46bd      	mov	sp, r7
 8002658:	bd80      	pop	{r7, pc}
 800265a:	0000      	movs	r0, r0
 800265c:	0000      	movs	r0, r0
	...

08002660 <vPeriodicControlTask>:

/* USER CODE BEGIN 4 */


void vPeriodicControlTask(){
 8002660:	b590      	push	{r4, r7, lr}
 8002662:	ed2d 8b02 	vpush	{d8}
 8002666:	b0ed      	sub	sp, #436	@ 0x1b4
 8002668:	af6c      	add	r7, sp, #432	@ 0x1b0
//
//	  fActuatorValue_right = fPidUpdateData(xPidMotorRight, fRightSpeed, 400);
//	  fActuatorValue_right = 0.46 + fActuatorValue_right*0.5;
//	  vMotorsSetPWM(right, fActuatorValue_right, 1);
	   //seguidor
	  fActuatorValue_left = fPidUpdateData(xPidMotorLeft,fRightSpeed, 400);
 800266a:	4b43      	ldr	r3, [pc, #268]	@ (8002778 <vPeriodicControlTask+0x118>)
 800266c:	ed93 8a00 	vldr	s16, [r3]
 8002670:	4c42      	ldr	r4, [pc, #264]	@ (800277c <vPeriodicControlTask+0x11c>)
 8002672:	4668      	mov	r0, sp
 8002674:	f104 0310 	add.w	r3, r4, #16
 8002678:	f44f 72d6 	mov.w	r2, #428	@ 0x1ac
 800267c:	4619      	mov	r1, r3
 800267e:	f00a fc0e 	bl	800ce9e <memcpy>
 8002682:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8002686:	eddf 0a3e 	vldr	s1, [pc, #248]	@ 8002780 <vPeriodicControlTask+0x120>
 800268a:	eeb0 0a48 	vmov.f32	s0, s16
 800268e:	f000 fbc3 	bl	8002e18 <fPidUpdateData>
 8002692:	eef0 7a40 	vmov.f32	s15, s0
 8002696:	4b3b      	ldr	r3, [pc, #236]	@ (8002784 <vPeriodicControlTask+0x124>)
 8002698:	edc3 7a00 	vstr	s15, [r3]
	  fActuatorValue_left = 0.48 + fActuatorValue_left*0.5;
 800269c:	4b39      	ldr	r3, [pc, #228]	@ (8002784 <vPeriodicControlTask+0x124>)
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	4618      	mov	r0, r3
 80026a2:	f7fd ff79 	bl	8000598 <__aeabi_f2d>
 80026a6:	f04f 0200 	mov.w	r2, #0
 80026aa:	4b37      	ldr	r3, [pc, #220]	@ (8002788 <vPeriodicControlTask+0x128>)
 80026ac:	f7fd ffcc 	bl	8000648 <__aeabi_dmul>
 80026b0:	4602      	mov	r2, r0
 80026b2:	460b      	mov	r3, r1
 80026b4:	4610      	mov	r0, r2
 80026b6:	4619      	mov	r1, r3
 80026b8:	a32d      	add	r3, pc, #180	@ (adr r3, 8002770 <vPeriodicControlTask+0x110>)
 80026ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026be:	f7fd fe0d 	bl	80002dc <__adddf3>
 80026c2:	4602      	mov	r2, r0
 80026c4:	460b      	mov	r3, r1
 80026c6:	4610      	mov	r0, r2
 80026c8:	4619      	mov	r1, r3
 80026ca:	f7fe fab5 	bl	8000c38 <__aeabi_d2f>
 80026ce:	4603      	mov	r3, r0
 80026d0:	4a2c      	ldr	r2, [pc, #176]	@ (8002784 <vPeriodicControlTask+0x124>)
 80026d2:	6013      	str	r3, [r2, #0]
	  vMotorsSetPWM(left, fActuatorValue_left, 1);
 80026d4:	4b2b      	ldr	r3, [pc, #172]	@ (8002784 <vPeriodicControlTask+0x124>)
 80026d6:	edd3 7a00 	vldr	s15, [r3]
 80026da:	2101      	movs	r1, #1
 80026dc:	eeb0 0a67 	vmov.f32	s0, s15
 80026e0:	2000      	movs	r0, #0
 80026e2:	f000 f9d3 	bl	8002a8c <vMotorsSetPWM>

	  fActuatorValue_right = fPidUpdateData(xPidMotorRight, fLeftSpeed, 400);
 80026e6:	4b29      	ldr	r3, [pc, #164]	@ (800278c <vPeriodicControlTask+0x12c>)
 80026e8:	ed93 8a00 	vldr	s16, [r3]
 80026ec:	4c28      	ldr	r4, [pc, #160]	@ (8002790 <vPeriodicControlTask+0x130>)
 80026ee:	4668      	mov	r0, sp
 80026f0:	f104 0310 	add.w	r3, r4, #16
 80026f4:	f44f 72d6 	mov.w	r2, #428	@ 0x1ac
 80026f8:	4619      	mov	r1, r3
 80026fa:	f00a fbd0 	bl	800ce9e <memcpy>
 80026fe:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8002702:	eddf 0a1f 	vldr	s1, [pc, #124]	@ 8002780 <vPeriodicControlTask+0x120>
 8002706:	eeb0 0a48 	vmov.f32	s0, s16
 800270a:	f000 fb85 	bl	8002e18 <fPidUpdateData>
 800270e:	eef0 7a40 	vmov.f32	s15, s0
 8002712:	4b20      	ldr	r3, [pc, #128]	@ (8002794 <vPeriodicControlTask+0x134>)
 8002714:	edc3 7a00 	vstr	s15, [r3]
	  fActuatorValue_right = 0.48 + fActuatorValue_right*0.5;
 8002718:	4b1e      	ldr	r3, [pc, #120]	@ (8002794 <vPeriodicControlTask+0x134>)
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	4618      	mov	r0, r3
 800271e:	f7fd ff3b 	bl	8000598 <__aeabi_f2d>
 8002722:	f04f 0200 	mov.w	r2, #0
 8002726:	4b18      	ldr	r3, [pc, #96]	@ (8002788 <vPeriodicControlTask+0x128>)
 8002728:	f7fd ff8e 	bl	8000648 <__aeabi_dmul>
 800272c:	4602      	mov	r2, r0
 800272e:	460b      	mov	r3, r1
 8002730:	4610      	mov	r0, r2
 8002732:	4619      	mov	r1, r3
 8002734:	a30e      	add	r3, pc, #56	@ (adr r3, 8002770 <vPeriodicControlTask+0x110>)
 8002736:	e9d3 2300 	ldrd	r2, r3, [r3]
 800273a:	f7fd fdcf 	bl	80002dc <__adddf3>
 800273e:	4602      	mov	r2, r0
 8002740:	460b      	mov	r3, r1
 8002742:	4610      	mov	r0, r2
 8002744:	4619      	mov	r1, r3
 8002746:	f7fe fa77 	bl	8000c38 <__aeabi_d2f>
 800274a:	4603      	mov	r3, r0
 800274c:	4a11      	ldr	r2, [pc, #68]	@ (8002794 <vPeriodicControlTask+0x134>)
 800274e:	6013      	str	r3, [r2, #0]
	  vMotorsSetPWM(right, fActuatorValue_right, 1);
 8002750:	4b10      	ldr	r3, [pc, #64]	@ (8002794 <vPeriodicControlTask+0x134>)
 8002752:	edd3 7a00 	vldr	s15, [r3]
 8002756:	2101      	movs	r1, #1
 8002758:	eeb0 0a67 	vmov.f32	s0, s15
 800275c:	2001      	movs	r0, #1
 800275e:	f000 f995 	bl	8002a8c <vMotorsSetPWM>
}
 8002762:	bf00      	nop
 8002764:	3704      	adds	r7, #4
 8002766:	46bd      	mov	sp, r7
 8002768:	ecbd 8b02 	vpop	{d8}
 800276c:	bd90      	pop	{r4, r7, pc}
 800276e:	bf00      	nop
 8002770:	eb851eb8 	.word	0xeb851eb8
 8002774:	3fdeb851 	.word	0x3fdeb851
 8002778:	200003fc 	.word	0x200003fc
 800277c:	200005bc 	.word	0x200005bc
 8002780:	43c80000 	.word	0x43c80000
 8002784:	20000778 	.word	0x20000778
 8002788:	3fe00000 	.word	0x3fe00000
 800278c:	200003f8 	.word	0x200003f8
 8002790:	20000400 	.word	0x20000400
 8002794:	2000077c 	.word	0x2000077c

08002798 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 8002798:	b580      	push	{r7, lr}
 800279a:	b082      	sub	sp, #8
 800279c:	af00      	add	r7, sp, #0
 800279e:	6078      	str	r0, [r7, #4]
	if (htim == pTimDurationMotor)
 80027a0:	4b31      	ldr	r3, [pc, #196]	@ (8002868 <HAL_TIM_PeriodElapsedCallback+0xd0>)
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	687a      	ldr	r2, [r7, #4]
 80027a6:	429a      	cmp	r2, r3
 80027a8:	d101      	bne.n	80027ae <HAL_TIM_PeriodElapsedCallback+0x16>
	{
	vMotorsDurationCallback();
 80027aa:	f000 faaf 	bl	8002d0c <vMotorsDurationCallback>
	}

	//conta 10 ms
	if (htim == pTimerGeral) {
 80027ae:	4b2f      	ldr	r3, [pc, #188]	@ (800286c <HAL_TIM_PeriodElapsedCallback+0xd4>)
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	687a      	ldr	r2, [r7, #4]
 80027b4:	429a      	cmp	r2, r3
 80027b6:	d126      	bne.n	8002806 <HAL_TIM_PeriodElapsedCallback+0x6e>

		if (fRightSpeed > 700) {
 80027b8:	4b2d      	ldr	r3, [pc, #180]	@ (8002870 <HAL_TIM_PeriodElapsedCallback+0xd8>)
 80027ba:	edd3 7a00 	vldr	s15, [r3]
 80027be:	ed9f 7a2d 	vldr	s14, [pc, #180]	@ 8002874 <HAL_TIM_PeriodElapsedCallback+0xdc>
 80027c2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027ca:	dd04      	ble.n	80027d6 <HAL_TIM_PeriodElapsedCallback+0x3e>
			iContaOutlier_right++;
 80027cc:	4b2a      	ldr	r3, [pc, #168]	@ (8002878 <HAL_TIM_PeriodElapsedCallback+0xe0>)
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	3301      	adds	r3, #1
 80027d2:	4a29      	ldr	r2, [pc, #164]	@ (8002878 <HAL_TIM_PeriodElapsedCallback+0xe0>)
 80027d4:	6013      	str	r3, [r2, #0]
		}

		if (fLeftSpeed > 700) {
 80027d6:	4b29      	ldr	r3, [pc, #164]	@ (800287c <HAL_TIM_PeriodElapsedCallback+0xe4>)
 80027d8:	edd3 7a00 	vldr	s15, [r3]
 80027dc:	ed9f 7a25 	vldr	s14, [pc, #148]	@ 8002874 <HAL_TIM_PeriodElapsedCallback+0xdc>
 80027e0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80027e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027e8:	dd04      	ble.n	80027f4 <HAL_TIM_PeriodElapsedCallback+0x5c>
			iContaOutlier_left++;
 80027ea:	4b25      	ldr	r3, [pc, #148]	@ (8002880 <HAL_TIM_PeriodElapsedCallback+0xe8>)
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	3301      	adds	r3, #1
 80027f0:	4a23      	ldr	r2, [pc, #140]	@ (8002880 <HAL_TIM_PeriodElapsedCallback+0xe8>)
 80027f2:	6013      	str	r3, [r2, #0]
		}

		//conta 100 ms
		if (cCountTime(10, 0)) {
 80027f4:	2100      	movs	r1, #0
 80027f6:	200a      	movs	r0, #10
 80027f8:	f001 fa90 	bl	8003d1c <cCountTime>
 80027fc:	4603      	mov	r3, r0
 80027fe:	2b00      	cmp	r3, #0
 8002800:	d001      	beq.n	8002806 <HAL_TIM_PeriodElapsedCallback+0x6e>
			vPeriodicControlTask();
 8002802:	f7ff ff2d 	bl	8002660 <vPeriodicControlTask>
		}

	}

	if (htim == pTimFreqFixa_esq){
 8002806:	4b1f      	ldr	r3, [pc, #124]	@ (8002884 <HAL_TIM_PeriodElapsedCallback+0xec>)
 8002808:	681b      	ldr	r3, [r3, #0]
 800280a:	687a      	ldr	r2, [r7, #4]
 800280c:	429a      	cmp	r2, r3
 800280e:	d110      	bne.n	8002832 <HAL_TIM_PeriodElapsedCallback+0x9a>
		if(uiLeftTimeBurst > 200){
 8002810:	4b1d      	ldr	r3, [pc, #116]	@ (8002888 <HAL_TIM_PeriodElapsedCallback+0xf0>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	2bc8      	cmp	r3, #200	@ 0xc8
 8002816:	d907      	bls.n	8002828 <HAL_TIM_PeriodElapsedCallback+0x90>
			uiLeftTimeBurst = 1;
 8002818:	4b1b      	ldr	r3, [pc, #108]	@ (8002888 <HAL_TIM_PeriodElapsedCallback+0xf0>)
 800281a:	2201      	movs	r2, #1
 800281c:	601a      	str	r2, [r3, #0]
			fLeftSpeed = 0;
 800281e:	4b17      	ldr	r3, [pc, #92]	@ (800287c <HAL_TIM_PeriodElapsedCallback+0xe4>)
 8002820:	f04f 0200 	mov.w	r2, #0
 8002824:	601a      	str	r2, [r3, #0]
 8002826:	e004      	b.n	8002832 <HAL_TIM_PeriodElapsedCallback+0x9a>
		}else{
		uiLeftTimeBurst++;
 8002828:	4b17      	ldr	r3, [pc, #92]	@ (8002888 <HAL_TIM_PeriodElapsedCallback+0xf0>)
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	3301      	adds	r3, #1
 800282e:	4a16      	ldr	r2, [pc, #88]	@ (8002888 <HAL_TIM_PeriodElapsedCallback+0xf0>)
 8002830:	6013      	str	r3, [r2, #0]
		}
	}

	if (htim == pTimFreqFixa_dir){
 8002832:	4b16      	ldr	r3, [pc, #88]	@ (800288c <HAL_TIM_PeriodElapsedCallback+0xf4>)
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	687a      	ldr	r2, [r7, #4]
 8002838:	429a      	cmp	r2, r3
 800283a:	d110      	bne.n	800285e <HAL_TIM_PeriodElapsedCallback+0xc6>
		if(uiRightTimeBurst > 200){
 800283c:	4b14      	ldr	r3, [pc, #80]	@ (8002890 <HAL_TIM_PeriodElapsedCallback+0xf8>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	2bc8      	cmp	r3, #200	@ 0xc8
 8002842:	d907      	bls.n	8002854 <HAL_TIM_PeriodElapsedCallback+0xbc>
			uiRightTimeBurst = 1;
 8002844:	4b12      	ldr	r3, [pc, #72]	@ (8002890 <HAL_TIM_PeriodElapsedCallback+0xf8>)
 8002846:	2201      	movs	r2, #1
 8002848:	601a      	str	r2, [r3, #0]
			fRightSpeed = 0;
 800284a:	4b09      	ldr	r3, [pc, #36]	@ (8002870 <HAL_TIM_PeriodElapsedCallback+0xd8>)
 800284c:	f04f 0200 	mov.w	r2, #0
 8002850:	601a      	str	r2, [r3, #0]
 8002852:	e004      	b.n	800285e <HAL_TIM_PeriodElapsedCallback+0xc6>
		}else{
		uiRightTimeBurst++;
 8002854:	4b0e      	ldr	r3, [pc, #56]	@ (8002890 <HAL_TIM_PeriodElapsedCallback+0xf8>)
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	3301      	adds	r3, #1
 800285a:	4a0d      	ldr	r2, [pc, #52]	@ (8002890 <HAL_TIM_PeriodElapsedCallback+0xf8>)
 800285c:	6013      	str	r3, [r2, #0]
	}

	if (htim == pTimerBuzzer){
//		vBuzzerStop();
	}
}
 800285e:	bf00      	nop
 8002860:	3708      	adds	r7, #8
 8002862:	46bd      	mov	sp, r7
 8002864:	bd80      	pop	{r7, pc}
 8002866:	bf00      	nop
 8002868:	20000010 	.word	0x20000010
 800286c:	20000018 	.word	0x20000018
 8002870:	200003fc 	.word	0x200003fc
 8002874:	442f0000 	.word	0x442f0000
 8002878:	20000784 	.word	0x20000784
 800287c:	200003f8 	.word	0x200003f8
 8002880:	20000780 	.word	0x20000780
 8002884:	2000001c 	.word	0x2000001c
 8002888:	200003e0 	.word	0x200003e0
 800288c:	20000020 	.word	0x20000020
 8002890:	200003e4 	.word	0x200003e4

08002894 <HAL_TIM_IC_CaptureCallback>:

void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef * htim){
 8002894:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002898:	b084      	sub	sp, #16
 800289a:	af00      	add	r7, sp, #0
 800289c:	60f8      	str	r0, [r7, #12]
//ENCODERS
  if (htim == pTimFreqFixa_esq)
 800289e:	4b46      	ldr	r3, [pc, #280]	@ (80029b8 <HAL_TIM_IC_CaptureCallback+0x124>)
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	68fa      	ldr	r2, [r7, #12]
 80028a4:	429a      	cmp	r2, r3
 80028a6:	d13f      	bne.n	8002928 <HAL_TIM_IC_CaptureCallback+0x94>
  	{
  		uiLeftCapturedTime =  HAL_TIM_ReadCapturedValue(htim,  TIM_CHANNEL_1);
 80028a8:	2100      	movs	r1, #0
 80028aa:	68f8      	ldr	r0, [r7, #12]
 80028ac:	f006 fa48 	bl	8008d40 <HAL_TIM_ReadCapturedValue>
 80028b0:	4603      	mov	r3, r0
 80028b2:	4a42      	ldr	r2, [pc, #264]	@ (80029bc <HAL_TIM_IC_CaptureCallback+0x128>)
 80028b4:	6013      	str	r3, [r2, #0]
  		if (uiLeftTimeBurst != 0)
 80028b6:	4b42      	ldr	r3, [pc, #264]	@ (80029c0 <HAL_TIM_IC_CaptureCallback+0x12c>)
 80028b8:	681b      	ldr	r3, [r3, #0]
 80028ba:	2b00      	cmp	r3, #0
 80028bc:	d011      	beq.n	80028e2 <HAL_TIM_IC_CaptureCallback+0x4e>
  			ullLeftTimeRan = uiLeftCapturedTime + uiLeftTimeBurst*10000;
 80028be:	4b40      	ldr	r3, [pc, #256]	@ (80029c0 <HAL_TIM_IC_CaptureCallback+0x12c>)
 80028c0:	681b      	ldr	r3, [r3, #0]
 80028c2:	f242 7210 	movw	r2, #10000	@ 0x2710
 80028c6:	fb03 f202 	mul.w	r2, r3, r2
 80028ca:	4b3c      	ldr	r3, [pc, #240]	@ (80029bc <HAL_TIM_IC_CaptureCallback+0x128>)
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	4413      	add	r3, r2
 80028d0:	2200      	movs	r2, #0
 80028d2:	603b      	str	r3, [r7, #0]
 80028d4:	607a      	str	r2, [r7, #4]
 80028d6:	4b3b      	ldr	r3, [pc, #236]	@ (80029c4 <HAL_TIM_IC_CaptureCallback+0x130>)
 80028d8:	e9d7 1200 	ldrd	r1, r2, [r7]
 80028dc:	e9c3 1200 	strd	r1, r2, [r3]
 80028e0:	e007      	b.n	80028f2 <HAL_TIM_IC_CaptureCallback+0x5e>
  		else
  			ullLeftTimeRan = uiLeftCapturedTime;
 80028e2:	4b36      	ldr	r3, [pc, #216]	@ (80029bc <HAL_TIM_IC_CaptureCallback+0x128>)
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	2200      	movs	r2, #0
 80028e8:	469a      	mov	sl, r3
 80028ea:	4693      	mov	fp, r2
 80028ec:	4b35      	ldr	r3, [pc, #212]	@ (80029c4 <HAL_TIM_IC_CaptureCallback+0x130>)
 80028ee:	e9c3 ab00 	strd	sl, fp, [r3]
  		__HAL_TIM_SET_COUNTER(htim, 0);
 80028f2:	68fb      	ldr	r3, [r7, #12]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	2200      	movs	r2, #0
 80028f8:	625a      	str	r2, [r3, #36]	@ 0x24
  		uiLeftTimeBurst = 0;
 80028fa:	4b31      	ldr	r3, [pc, #196]	@ (80029c0 <HAL_TIM_IC_CaptureCallback+0x12c>)
 80028fc:	2200      	movs	r2, #0
 80028fe:	601a      	str	r2, [r3, #0]
  		fLeftSpeed = 10.0f/(ullLeftTimeRan/1000000.0f); //velocidade em mm/s
 8002900:	4b30      	ldr	r3, [pc, #192]	@ (80029c4 <HAL_TIM_IC_CaptureCallback+0x130>)
 8002902:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002906:	4610      	mov	r0, r2
 8002908:	4619      	mov	r1, r3
 800290a:	f7fe faad 	bl	8000e68 <__aeabi_ul2f>
 800290e:	ee06 0a90 	vmov	s13, r0
 8002912:	eddf 7a2d 	vldr	s15, [pc, #180]	@ 80029c8 <HAL_TIM_IC_CaptureCallback+0x134>
 8002916:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800291a:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 800291e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002922:	4b2a      	ldr	r3, [pc, #168]	@ (80029cc <HAL_TIM_IC_CaptureCallback+0x138>)
 8002924:	edc3 7a00 	vstr	s15, [r3]
  	}

  if (htim == pTimFreqFixa_dir)
 8002928:	4b29      	ldr	r3, [pc, #164]	@ (80029d0 <HAL_TIM_IC_CaptureCallback+0x13c>)
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	68fa      	ldr	r2, [r7, #12]
 800292e:	429a      	cmp	r2, r3
 8002930:	d13d      	bne.n	80029ae <HAL_TIM_IC_CaptureCallback+0x11a>
  	{
  		uiRightCapturedTime =  HAL_TIM_ReadCapturedValue(htim,  TIM_CHANNEL_1);
 8002932:	2100      	movs	r1, #0
 8002934:	68f8      	ldr	r0, [r7, #12]
 8002936:	f006 fa03 	bl	8008d40 <HAL_TIM_ReadCapturedValue>
 800293a:	4603      	mov	r3, r0
 800293c:	4a25      	ldr	r2, [pc, #148]	@ (80029d4 <HAL_TIM_IC_CaptureCallback+0x140>)
 800293e:	6013      	str	r3, [r2, #0]
  		if (uiRightTimeBurst != 0)
 8002940:	4b25      	ldr	r3, [pc, #148]	@ (80029d8 <HAL_TIM_IC_CaptureCallback+0x144>)
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	2b00      	cmp	r3, #0
 8002946:	d00f      	beq.n	8002968 <HAL_TIM_IC_CaptureCallback+0xd4>
  		{
  			ullRightTimeRan = uiRightCapturedTime + uiRightTimeBurst*10000;
 8002948:	4b23      	ldr	r3, [pc, #140]	@ (80029d8 <HAL_TIM_IC_CaptureCallback+0x144>)
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	f242 7210 	movw	r2, #10000	@ 0x2710
 8002950:	fb03 f202 	mul.w	r2, r3, r2
 8002954:	4b1f      	ldr	r3, [pc, #124]	@ (80029d4 <HAL_TIM_IC_CaptureCallback+0x140>)
 8002956:	681b      	ldr	r3, [r3, #0]
 8002958:	4413      	add	r3, r2
 800295a:	2200      	movs	r2, #0
 800295c:	4698      	mov	r8, r3
 800295e:	4691      	mov	r9, r2
 8002960:	4b1e      	ldr	r3, [pc, #120]	@ (80029dc <HAL_TIM_IC_CaptureCallback+0x148>)
 8002962:	e9c3 8900 	strd	r8, r9, [r3]
 8002966:	e007      	b.n	8002978 <HAL_TIM_IC_CaptureCallback+0xe4>
  		}
  		else
  		{
  			ullRightTimeRan = uiRightCapturedTime;
 8002968:	4b1a      	ldr	r3, [pc, #104]	@ (80029d4 <HAL_TIM_IC_CaptureCallback+0x140>)
 800296a:	681b      	ldr	r3, [r3, #0]
 800296c:	2200      	movs	r2, #0
 800296e:	461c      	mov	r4, r3
 8002970:	4615      	mov	r5, r2
 8002972:	4b1a      	ldr	r3, [pc, #104]	@ (80029dc <HAL_TIM_IC_CaptureCallback+0x148>)
 8002974:	e9c3 4500 	strd	r4, r5, [r3]
  		}
  		__HAL_TIM_SET_COUNTER(htim, 0);
 8002978:	68fb      	ldr	r3, [r7, #12]
 800297a:	681b      	ldr	r3, [r3, #0]
 800297c:	2200      	movs	r2, #0
 800297e:	625a      	str	r2, [r3, #36]	@ 0x24
  		uiRightTimeBurst = 0;
 8002980:	4b15      	ldr	r3, [pc, #84]	@ (80029d8 <HAL_TIM_IC_CaptureCallback+0x144>)
 8002982:	2200      	movs	r2, #0
 8002984:	601a      	str	r2, [r3, #0]
  		fRightSpeed = 10.0f/(ullRightTimeRan/1000000.0f); //velocidade em mm/s
 8002986:	4b15      	ldr	r3, [pc, #84]	@ (80029dc <HAL_TIM_IC_CaptureCallback+0x148>)
 8002988:	e9d3 2300 	ldrd	r2, r3, [r3]
 800298c:	4610      	mov	r0, r2
 800298e:	4619      	mov	r1, r3
 8002990:	f7fe fa6a 	bl	8000e68 <__aeabi_ul2f>
 8002994:	ee06 0a90 	vmov	s13, r0
 8002998:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 80029c8 <HAL_TIM_IC_CaptureCallback+0x134>
 800299c:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80029a0:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 80029a4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80029a8:	4b0d      	ldr	r3, [pc, #52]	@ (80029e0 <HAL_TIM_IC_CaptureCallback+0x14c>)
 80029aa:	edc3 7a00 	vstr	s15, [r3]
  	}
}
 80029ae:	bf00      	nop
 80029b0:	3710      	adds	r7, #16
 80029b2:	46bd      	mov	sp, r7
 80029b4:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80029b8:	2000001c 	.word	0x2000001c
 80029bc:	200003d8 	.word	0x200003d8
 80029c0:	200003e0 	.word	0x200003e0
 80029c4:	200003e8 	.word	0x200003e8
 80029c8:	49742400 	.word	0x49742400
 80029cc:	200003f8 	.word	0x200003f8
 80029d0:	20000020 	.word	0x20000020
 80029d4:	200003dc 	.word	0x200003dc
 80029d8:	200003e4 	.word	0x200003e4
 80029dc:	200003f0 	.word	0x200003f0
 80029e0:	200003fc 	.word	0x200003fc

080029e4 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80029e4:	b580      	push	{r7, lr}
 80029e6:	b082      	sub	sp, #8
 80029e8:	af00      	add	r7, sp, #0
 80029ea:	4603      	mov	r3, r0
 80029ec:	80fb      	strh	r3, [r7, #6]

	if(GPIO_Pin==GPIO_PIN_7){
 80029ee:	88fb      	ldrh	r3, [r7, #6]
 80029f0:	2b80      	cmp	r3, #128	@ 0x80
 80029f2:	d10b      	bne.n	8002a0c <HAL_GPIO_EXTI_Callback+0x28>
		vMotorsSetPWM(left, 1, 1);
 80029f4:	2101      	movs	r1, #1
 80029f6:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80029fa:	2000      	movs	r0, #0
 80029fc:	f000 f846 	bl	8002a8c <vMotorsSetPWM>
		vMotorsSetPWM(right, 1, 0);
 8002a00:	2100      	movs	r1, #0
 8002a02:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 8002a06:	2001      	movs	r0, #1
 8002a08:	f000 f840 	bl	8002a8c <vMotorsSetPWM>
	}

	if(GPIO_Pin==GPIO_PIN_5){
 8002a0c:	88fb      	ldrh	r3, [r7, #6]
 8002a0e:	2b20      	cmp	r3, #32
 8002a10:	d105      	bne.n	8002a1e <HAL_GPIO_EXTI_Callback+0x3a>
		vMotorsSetOff(left);
 8002a12:	2000      	movs	r0, #0
 8002a14:	f000 f944 	bl	8002ca0 <vMotorsSetOff>
		vMotorsSetOff(right);
 8002a18:	2001      	movs	r0, #1
 8002a1a:	f000 f941 	bl	8002ca0 <vMotorsSetOff>
	}

}
 8002a1e:	bf00      	nop
 8002a20:	3708      	adds	r7, #8
 8002a22:	46bd      	mov	sp, r7
 8002a24:	bd80      	pop	{r7, pc}

08002a26 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002a26:	b480      	push	{r7}
 8002a28:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002a2a:	b672      	cpsid	i
}
 8002a2c:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002a2e:	bf00      	nop
 8002a30:	e7fd      	b.n	8002a2e <Error_Handler+0x8>
	...

08002a34 <vMotorsInit>:
TIM_HandleTypeDef* pTimPWM;
TIM_HandleTypeDef* pTimDuration;
unsigned char ucDurationCounter;
unsigned short int usTimeOn;

void vMotorsInit(TIM_HandleTypeDef* htimPWM, TIM_HandleTypeDef* htimTimer) {
 8002a34:	b580      	push	{r7, lr}
 8002a36:	b082      	sub	sp, #8
 8002a38:	af00      	add	r7, sp, #0
 8002a3a:	6078      	str	r0, [r7, #4]
 8002a3c:	6039      	str	r1, [r7, #0]
	pTimPWM = htimPWM;
 8002a3e:	4a0f      	ldr	r2, [pc, #60]	@ (8002a7c <vMotorsInit+0x48>)
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	6013      	str	r3, [r2, #0]
	pTimDuration =htimPWM;
 8002a44:	4a0e      	ldr	r2, [pc, #56]	@ (8002a80 <vMotorsInit+0x4c>)
 8002a46:	687b      	ldr	r3, [r7, #4]
 8002a48:	6013      	str	r3, [r2, #0]
	HAL_TIM_PWM_Start(pTimPWM, TIM_CHANNEL_1);
 8002a4a:	4b0c      	ldr	r3, [pc, #48]	@ (8002a7c <vMotorsInit+0x48>)
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	2100      	movs	r1, #0
 8002a50:	4618      	mov	r0, r3
 8002a52:	f005 fa9b 	bl	8007f8c <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(pTimPWM, TIM_CHANNEL_2);
 8002a56:	4b09      	ldr	r3, [pc, #36]	@ (8002a7c <vMotorsInit+0x48>)
 8002a58:	681b      	ldr	r3, [r3, #0]
 8002a5a:	2104      	movs	r1, #4
 8002a5c:	4618      	mov	r0, r3
 8002a5e:	f005 fa95 	bl	8007f8c <HAL_TIM_PWM_Start>
	//pTimPWM->Instance->CCR1 = 0;
	HAL_NVIC_DisableIRQ(TIM5_IRQn);
 8002a62:	2032      	movs	r0, #50	@ 0x32
 8002a64:	f001 fd85 	bl	8004572 <HAL_NVIC_DisableIRQ>

	ucDurationCounter = 0;
 8002a68:	4b06      	ldr	r3, [pc, #24]	@ (8002a84 <vMotorsInit+0x50>)
 8002a6a:	2200      	movs	r2, #0
 8002a6c:	701a      	strb	r2, [r3, #0]
	usTimeOn =0;
 8002a6e:	4b06      	ldr	r3, [pc, #24]	@ (8002a88 <vMotorsInit+0x54>)
 8002a70:	2200      	movs	r2, #0
 8002a72:	801a      	strh	r2, [r3, #0]

}
 8002a74:	bf00      	nop
 8002a76:	3708      	adds	r7, #8
 8002a78:	46bd      	mov	sp, r7
 8002a7a:	bd80      	pop	{r7, pc}
 8002a7c:	2000078c 	.word	0x2000078c
 8002a80:	20000790 	.word	0x20000790
 8002a84:	20000794 	.word	0x20000794
 8002a88:	20000796 	.word	0x20000796

08002a8c <vMotorsSetPWM>:

//char: motor da direita ou esquerda
//float: PWM de 0 a 1
void vMotorsSetPWM(char motor, float PWM, char rotation) {
 8002a8c:	b580      	push	{r7, lr}
 8002a8e:	b082      	sub	sp, #8
 8002a90:	af00      	add	r7, sp, #0
 8002a92:	4603      	mov	r3, r0
 8002a94:	ed87 0a00 	vstr	s0, [r7]
 8002a98:	460a      	mov	r2, r1
 8002a9a:	71fb      	strb	r3, [r7, #7]
 8002a9c:	4613      	mov	r3, r2
 8002a9e:	71bb      	strb	r3, [r7, #6]
	if (motor == left) {
 8002aa0:	79fb      	ldrb	r3, [r7, #7]
 8002aa2:	2b00      	cmp	r3, #0
 8002aa4:	d131      	bne.n	8002b0a <vMotorsSetPWM+0x7e>
		pTimPWM->Instance->CCR2 = (PWM*1000) - 1;
 8002aa6:	edd7 7a00 	vldr	s15, [r7]
 8002aaa:	ed9f 7a34 	vldr	s14, [pc, #208]	@ 8002b7c <vMotorsSetPWM+0xf0>
 8002aae:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002ab2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002ab6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002aba:	4b31      	ldr	r3, [pc, #196]	@ (8002b80 <vMotorsSetPWM+0xf4>)
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002ac4:	ee17 2a90 	vmov	r2, s15
 8002ac8:	639a      	str	r2, [r3, #56]	@ 0x38

		if (rotation) {
 8002aca:	79bb      	ldrb	r3, [r7, #6]
 8002acc:	2b00      	cmp	r3, #0
 8002ace:	d00c      	beq.n	8002aea <vMotorsSetPWM+0x5e>
			HAL_GPIO_WritePin(Motor_Esq_IN3_GPIO_Port,Motor_Esq_IN3_Pin, 1);
 8002ad0:	2201      	movs	r2, #1
 8002ad2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002ad6:	482b      	ldr	r0, [pc, #172]	@ (8002b84 <vMotorsSetPWM+0xf8>)
 8002ad8:	f002 fa28 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Esq_IN4_GPIO_Port,Motor_Esq_IN4_Pin, 0);
 8002adc:	2200      	movs	r2, #0
 8002ade:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002ae2:	4828      	ldr	r0, [pc, #160]	@ (8002b84 <vMotorsSetPWM+0xf8>)
 8002ae4:	f002 fa22 	bl	8004f2c <HAL_GPIO_WritePin>
		} else if (!rotation) {
			HAL_GPIO_WritePin(Motor_Dir_IN1_GPIO_Port,Motor_Dir_IN1_Pin, 0);
			HAL_GPIO_WritePin(Motor_Dir_IN2_GPIO_Port,Motor_Dir_IN2_Pin, 1);
		}
	}
}
 8002ae8:	e043      	b.n	8002b72 <vMotorsSetPWM+0xe6>
		} else if (!rotation) {
 8002aea:	79bb      	ldrb	r3, [r7, #6]
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d140      	bne.n	8002b72 <vMotorsSetPWM+0xe6>
			HAL_GPIO_WritePin(Motor_Esq_IN3_GPIO_Port,Motor_Esq_IN3_Pin, 0);
 8002af0:	2200      	movs	r2, #0
 8002af2:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002af6:	4823      	ldr	r0, [pc, #140]	@ (8002b84 <vMotorsSetPWM+0xf8>)
 8002af8:	f002 fa18 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Esq_IN4_GPIO_Port,Motor_Esq_IN4_Pin, 1);
 8002afc:	2201      	movs	r2, #1
 8002afe:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002b02:	4820      	ldr	r0, [pc, #128]	@ (8002b84 <vMotorsSetPWM+0xf8>)
 8002b04:	f002 fa12 	bl	8004f2c <HAL_GPIO_WritePin>
}
 8002b08:	e033      	b.n	8002b72 <vMotorsSetPWM+0xe6>
	} else if (motor == right) {
 8002b0a:	79fb      	ldrb	r3, [r7, #7]
 8002b0c:	2b01      	cmp	r3, #1
 8002b0e:	d130      	bne.n	8002b72 <vMotorsSetPWM+0xe6>
		pTimPWM->Instance->CCR1 = (PWM*1000) - 1;
 8002b10:	edd7 7a00 	vldr	s15, [r7]
 8002b14:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8002b7c <vMotorsSetPWM+0xf0>
 8002b18:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002b1c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002b20:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002b24:	4b16      	ldr	r3, [pc, #88]	@ (8002b80 <vMotorsSetPWM+0xf4>)
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	681b      	ldr	r3, [r3, #0]
 8002b2a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002b2e:	ee17 2a90 	vmov	r2, s15
 8002b32:	635a      	str	r2, [r3, #52]	@ 0x34
		if (rotation) {
 8002b34:	79bb      	ldrb	r3, [r7, #6]
 8002b36:	2b00      	cmp	r3, #0
 8002b38:	d00c      	beq.n	8002b54 <vMotorsSetPWM+0xc8>
			HAL_GPIO_WritePin(Motor_Dir_IN1_GPIO_Port,Motor_Dir_IN1_Pin, 1);
 8002b3a:	2201      	movs	r2, #1
 8002b3c:	2180      	movs	r1, #128	@ 0x80
 8002b3e:	4811      	ldr	r0, [pc, #68]	@ (8002b84 <vMotorsSetPWM+0xf8>)
 8002b40:	f002 f9f4 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Dir_IN2_GPIO_Port,Motor_Dir_IN2_Pin, 0);
 8002b44:	2200      	movs	r2, #0
 8002b46:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002b4a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002b4e:	f002 f9ed 	bl	8004f2c <HAL_GPIO_WritePin>
}
 8002b52:	e00e      	b.n	8002b72 <vMotorsSetPWM+0xe6>
		} else if (!rotation) {
 8002b54:	79bb      	ldrb	r3, [r7, #6]
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d10b      	bne.n	8002b72 <vMotorsSetPWM+0xe6>
			HAL_GPIO_WritePin(Motor_Dir_IN1_GPIO_Port,Motor_Dir_IN1_Pin, 0);
 8002b5a:	2200      	movs	r2, #0
 8002b5c:	2180      	movs	r1, #128	@ 0x80
 8002b5e:	4809      	ldr	r0, [pc, #36]	@ (8002b84 <vMotorsSetPWM+0xf8>)
 8002b60:	f002 f9e4 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Dir_IN2_GPIO_Port,Motor_Dir_IN2_Pin, 1);
 8002b64:	2201      	movs	r2, #1
 8002b66:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002b6a:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002b6e:	f002 f9dd 	bl	8004f2c <HAL_GPIO_WritePin>
}
 8002b72:	bf00      	nop
 8002b74:	3708      	adds	r7, #8
 8002b76:	46bd      	mov	sp, r7
 8002b78:	bd80      	pop	{r7, pc}
 8002b7a:	bf00      	nop
 8002b7c:	447a0000 	.word	0x447a0000
 8002b80:	2000078c 	.word	0x2000078c
 8002b84:	48000400 	.word	0x48000400

08002b88 <vMotorsSetPWMTimer>:
//						a pre-set time, it enable the interrupion that after some cycles defined by    //
//						duration input will stop the motor in vMotorsDurationCallback function         //
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	char motor, float PWM, char rotation, unsigned int duration					   //
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vMotorsSetPWMTimer(char motor, float PWM, char rotation, unsigned int duration) {
 8002b88:	b580      	push	{r7, lr}
 8002b8a:	b084      	sub	sp, #16
 8002b8c:	af00      	add	r7, sp, #0
 8002b8e:	4603      	mov	r3, r0
 8002b90:	ed87 0a02 	vstr	s0, [r7, #8]
 8002b94:	607a      	str	r2, [r7, #4]
 8002b96:	73fb      	strb	r3, [r7, #15]
 8002b98:	460b      	mov	r3, r1
 8002b9a:	73bb      	strb	r3, [r7, #14]
	if (motor == left) {
 8002b9c:	7bfb      	ldrb	r3, [r7, #15]
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d131      	bne.n	8002c06 <vMotorsSetPWMTimer+0x7e>
		pTimPWM->Instance->CCR2 = (PWM*1000) - 1;
 8002ba2:	edd7 7a02 	vldr	s15, [r7, #8]
 8002ba6:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 8002c8c <vMotorsSetPWMTimer+0x104>
 8002baa:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002bae:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002bb2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002bb6:	4b36      	ldr	r3, [pc, #216]	@ (8002c90 <vMotorsSetPWMTimer+0x108>)
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002bc0:	ee17 2a90 	vmov	r2, s15
 8002bc4:	639a      	str	r2, [r3, #56]	@ 0x38

		if (rotation) {
 8002bc6:	7bbb      	ldrb	r3, [r7, #14]
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d00c      	beq.n	8002be6 <vMotorsSetPWMTimer+0x5e>
			HAL_GPIO_WritePin(Motor_Esq_IN3_GPIO_Port,Motor_Esq_IN3_Pin, 1);
 8002bcc:	2201      	movs	r2, #1
 8002bce:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002bd2:	4830      	ldr	r0, [pc, #192]	@ (8002c94 <vMotorsSetPWMTimer+0x10c>)
 8002bd4:	f002 f9aa 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Esq_IN4_GPIO_Port,Motor_Esq_IN4_Pin, 0);
 8002bd8:	2200      	movs	r2, #0
 8002bda:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002bde:	482d      	ldr	r0, [pc, #180]	@ (8002c94 <vMotorsSetPWMTimer+0x10c>)
 8002be0:	f002 f9a4 	bl	8004f2c <HAL_GPIO_WritePin>
 8002be4:	e043      	b.n	8002c6e <vMotorsSetPWMTimer+0xe6>
		} else if (!rotation) {
 8002be6:	7bbb      	ldrb	r3, [r7, #14]
 8002be8:	2b00      	cmp	r3, #0
 8002bea:	d140      	bne.n	8002c6e <vMotorsSetPWMTimer+0xe6>
			HAL_GPIO_WritePin(Motor_Esq_IN3_GPIO_Port,Motor_Esq_IN3_Pin, 0);
 8002bec:	2200      	movs	r2, #0
 8002bee:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002bf2:	4828      	ldr	r0, [pc, #160]	@ (8002c94 <vMotorsSetPWMTimer+0x10c>)
 8002bf4:	f002 f99a 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Esq_IN4_GPIO_Port,Motor_Esq_IN4_Pin, 1);
 8002bf8:	2201      	movs	r2, #1
 8002bfa:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002bfe:	4825      	ldr	r0, [pc, #148]	@ (8002c94 <vMotorsSetPWMTimer+0x10c>)
 8002c00:	f002 f994 	bl	8004f2c <HAL_GPIO_WritePin>
 8002c04:	e033      	b.n	8002c6e <vMotorsSetPWMTimer+0xe6>
		}
	} else if (motor == right) {
 8002c06:	7bfb      	ldrb	r3, [r7, #15]
 8002c08:	2b01      	cmp	r3, #1
 8002c0a:	d130      	bne.n	8002c6e <vMotorsSetPWMTimer+0xe6>
		pTimPWM->Instance->CCR1 = (PWM*1000) - 1;
 8002c0c:	edd7 7a02 	vldr	s15, [r7, #8]
 8002c10:	ed9f 7a1e 	vldr	s14, [pc, #120]	@ 8002c8c <vMotorsSetPWMTimer+0x104>
 8002c14:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002c18:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002c1c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002c20:	4b1b      	ldr	r3, [pc, #108]	@ (8002c90 <vMotorsSetPWMTimer+0x108>)
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	681b      	ldr	r3, [r3, #0]
 8002c26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002c2a:	ee17 2a90 	vmov	r2, s15
 8002c2e:	635a      	str	r2, [r3, #52]	@ 0x34

		if (rotation) {
 8002c30:	7bbb      	ldrb	r3, [r7, #14]
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	d00c      	beq.n	8002c50 <vMotorsSetPWMTimer+0xc8>
			HAL_GPIO_WritePin(Motor_Dir_IN1_GPIO_Port,Motor_Dir_IN1_Pin, 1);
 8002c36:	2201      	movs	r2, #1
 8002c38:	2180      	movs	r1, #128	@ 0x80
 8002c3a:	4816      	ldr	r0, [pc, #88]	@ (8002c94 <vMotorsSetPWMTimer+0x10c>)
 8002c3c:	f002 f976 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Dir_IN2_GPIO_Port,Motor_Dir_IN2_Pin, 0);
 8002c40:	2200      	movs	r2, #0
 8002c42:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002c46:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002c4a:	f002 f96f 	bl	8004f2c <HAL_GPIO_WritePin>
 8002c4e:	e00e      	b.n	8002c6e <vMotorsSetPWMTimer+0xe6>
		} else if (!rotation) {
 8002c50:	7bbb      	ldrb	r3, [r7, #14]
 8002c52:	2b00      	cmp	r3, #0
 8002c54:	d10b      	bne.n	8002c6e <vMotorsSetPWMTimer+0xe6>
			HAL_GPIO_WritePin(Motor_Dir_IN1_GPIO_Port,Motor_Dir_IN1_Pin, 0);
 8002c56:	2200      	movs	r2, #0
 8002c58:	2180      	movs	r1, #128	@ 0x80
 8002c5a:	480e      	ldr	r0, [pc, #56]	@ (8002c94 <vMotorsSetPWMTimer+0x10c>)
 8002c5c:	f002 f966 	bl	8004f2c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(Motor_Dir_IN2_GPIO_Port,Motor_Dir_IN2_Pin, 1);
 8002c60:	2201      	movs	r2, #1
 8002c62:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002c66:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002c6a:	f002 f95f 	bl	8004f2c <HAL_GPIO_WritePin>
		}
	}
	usTimeOn = duration;
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	b29a      	uxth	r2, r3
 8002c72:	4b09      	ldr	r3, [pc, #36]	@ (8002c98 <vMotorsSetPWMTimer+0x110>)
 8002c74:	801a      	strh	r2, [r3, #0]
	ucDurationCounter = 0;
 8002c76:	4b09      	ldr	r3, [pc, #36]	@ (8002c9c <vMotorsSetPWMTimer+0x114>)
 8002c78:	2200      	movs	r2, #0
 8002c7a:	701a      	strb	r2, [r3, #0]
	HAL_NVIC_EnableIRQ(TIM5_IRQn);
 8002c7c:	2032      	movs	r0, #50	@ 0x32
 8002c7e:	f001 fc6a 	bl	8004556 <HAL_NVIC_EnableIRQ>

//	vMotorsSetOff(motor);
}
 8002c82:	bf00      	nop
 8002c84:	3710      	adds	r7, #16
 8002c86:	46bd      	mov	sp, r7
 8002c88:	bd80      	pop	{r7, pc}
 8002c8a:	bf00      	nop
 8002c8c:	447a0000 	.word	0x447a0000
 8002c90:	2000078c 	.word	0x2000078c
 8002c94:	48000400 	.word	0x48000400
 8002c98:	20000796 	.word	0x20000796
 8002c9c:	20000794 	.word	0x20000794

08002ca0 <vMotorsSetOff>:

void vMotorsSetOff(char motor) {
 8002ca0:	b580      	push	{r7, lr}
 8002ca2:	b082      	sub	sp, #8
 8002ca4:	af00      	add	r7, sp, #0
 8002ca6:	4603      	mov	r3, r0
 8002ca8:	71fb      	strb	r3, [r7, #7]
	if (motor == left) {
 8002caa:	79fb      	ldrb	r3, [r7, #7]
 8002cac:	2b00      	cmp	r3, #0
 8002cae:	d111      	bne.n	8002cd4 <vMotorsSetOff+0x34>
		pTimPWM->Instance->CCR2 = 0;
 8002cb0:	4b14      	ldr	r3, [pc, #80]	@ (8002d04 <vMotorsSetOff+0x64>)
 8002cb2:	681b      	ldr	r3, [r3, #0]
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	2200      	movs	r2, #0
 8002cb8:	639a      	str	r2, [r3, #56]	@ 0x38

		HAL_GPIO_WritePin(Motor_Esq_IN3_GPIO_Port,Motor_Esq_IN3_Pin, 0);
 8002cba:	2200      	movs	r2, #0
 8002cbc:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8002cc0:	4811      	ldr	r0, [pc, #68]	@ (8002d08 <vMotorsSetOff+0x68>)
 8002cc2:	f002 f933 	bl	8004f2c <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(Motor_Esq_IN4_GPIO_Port,Motor_Esq_IN4_Pin, 0);
 8002cc6:	2200      	movs	r2, #0
 8002cc8:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002ccc:	480e      	ldr	r0, [pc, #56]	@ (8002d08 <vMotorsSetOff+0x68>)
 8002cce:	f002 f92d 	bl	8004f2c <HAL_GPIO_WritePin>

		HAL_GPIO_WritePin(Motor_Dir_IN1_GPIO_Port,Motor_Dir_IN1_Pin, 0);
		HAL_GPIO_WritePin(Motor_Dir_IN2_GPIO_Port,Motor_Dir_IN2_Pin, 0);

	}
}
 8002cd2:	e013      	b.n	8002cfc <vMotorsSetOff+0x5c>
	} else if (motor == right) {
 8002cd4:	79fb      	ldrb	r3, [r7, #7]
 8002cd6:	2b01      	cmp	r3, #1
 8002cd8:	d110      	bne.n	8002cfc <vMotorsSetOff+0x5c>
		pTimPWM->Instance->CCR1 = 0;
 8002cda:	4b0a      	ldr	r3, [pc, #40]	@ (8002d04 <vMotorsSetOff+0x64>)
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	2200      	movs	r2, #0
 8002ce2:	635a      	str	r2, [r3, #52]	@ 0x34
		HAL_GPIO_WritePin(Motor_Dir_IN1_GPIO_Port,Motor_Dir_IN1_Pin, 0);
 8002ce4:	2200      	movs	r2, #0
 8002ce6:	2180      	movs	r1, #128	@ 0x80
 8002ce8:	4807      	ldr	r0, [pc, #28]	@ (8002d08 <vMotorsSetOff+0x68>)
 8002cea:	f002 f91f 	bl	8004f2c <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(Motor_Dir_IN2_GPIO_Port,Motor_Dir_IN2_Pin, 0);
 8002cee:	2200      	movs	r2, #0
 8002cf0:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002cf4:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8002cf8:	f002 f918 	bl	8004f2c <HAL_GPIO_WritePin>
}
 8002cfc:	bf00      	nop
 8002cfe:	3708      	adds	r7, #8
 8002d00:	46bd      	mov	sp, r7
 8002d02:	bd80      	pop	{r7, pc}
 8002d04:	2000078c 	.word	0x2000078c
 8002d08:	48000400 	.word	0x48000400

08002d0c <vMotorsDurationCallback>:
//						many interruptions for stop the motor based on usTimeOn (duration set) then	   //
//						stops the motors.															   //
//-----------------------------------------------------------------------------------------------------//
//	      Inputs	:	n/a																			   //
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
void vMotorsDurationCallback(){
 8002d0c:	b580      	push	{r7, lr}
 8002d0e:	af00      	add	r7, sp, #0
	if((ucDurationCounter*10)==usTimeOn){
 8002d10:	4b11      	ldr	r3, [pc, #68]	@ (8002d58 <vMotorsDurationCallback+0x4c>)
 8002d12:	781b      	ldrb	r3, [r3, #0]
 8002d14:	461a      	mov	r2, r3
 8002d16:	4613      	mov	r3, r2
 8002d18:	009b      	lsls	r3, r3, #2
 8002d1a:	4413      	add	r3, r2
 8002d1c:	005b      	lsls	r3, r3, #1
 8002d1e:	461a      	mov	r2, r3
 8002d20:	4b0e      	ldr	r3, [pc, #56]	@ (8002d5c <vMotorsDurationCallback+0x50>)
 8002d22:	881b      	ldrh	r3, [r3, #0]
 8002d24:	429a      	cmp	r2, r3
 8002d26:	d10f      	bne.n	8002d48 <vMotorsDurationCallback+0x3c>
		vMotorsSetOff(left);
 8002d28:	2000      	movs	r0, #0
 8002d2a:	f7ff ffb9 	bl	8002ca0 <vMotorsSetOff>
		vMotorsSetOff(right);
 8002d2e:	2001      	movs	r0, #1
 8002d30:	f7ff ffb6 	bl	8002ca0 <vMotorsSetOff>
		usTimeOn = 0;
 8002d34:	4b09      	ldr	r3, [pc, #36]	@ (8002d5c <vMotorsDurationCallback+0x50>)
 8002d36:	2200      	movs	r2, #0
 8002d38:	801a      	strh	r2, [r3, #0]
		ucDurationCounter = 0;
 8002d3a:	4b07      	ldr	r3, [pc, #28]	@ (8002d58 <vMotorsDurationCallback+0x4c>)
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_DisableIRQ(TIM5_IRQn);
 8002d40:	2032      	movs	r0, #50	@ 0x32
 8002d42:	f001 fc16 	bl	8004572 <HAL_NVIC_DisableIRQ>
	}
	else
	{
		ucDurationCounter++;
	}
}
 8002d46:	e005      	b.n	8002d54 <vMotorsDurationCallback+0x48>
		ucDurationCounter++;
 8002d48:	4b03      	ldr	r3, [pc, #12]	@ (8002d58 <vMotorsDurationCallback+0x4c>)
 8002d4a:	781b      	ldrb	r3, [r3, #0]
 8002d4c:	3301      	adds	r3, #1
 8002d4e:	b2da      	uxtb	r2, r3
 8002d50:	4b01      	ldr	r3, [pc, #4]	@ (8002d58 <vMotorsDurationCallback+0x4c>)
 8002d52:	701a      	strb	r2, [r3, #0]
}
 8002d54:	bf00      	nop
 8002d56:	bd80      	pop	{r7, pc}
 8002d58:	20000794 	.word	0x20000794
 8002d5c:	20000796 	.word	0x20000796

08002d60 <vPidInit>:
/* Method description: Initialize the PID controller*/
/* Input params:       n/a                          */
/* Output params:      n/a                          */
/* ************************************************ */
pid_data_type vPidInit(pid_data_type xPidConfig, float fKp, float fKi, float fKd, unsigned short usIntSizeMs, float fOutputSaturation)
{
 8002d60:	b084      	sub	sp, #16
 8002d62:	b580      	push	{r7, lr}
 8002d64:	b088      	sub	sp, #32
 8002d66:	af00      	add	r7, sp, #0
 8002d68:	6178      	str	r0, [r7, #20]
 8002d6a:	f107 002c 	add.w	r0, r7, #44	@ 0x2c
 8002d6e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8002d72:	ed87 0a04 	vstr	s0, [r7, #16]
 8002d76:	edc7 0a03 	vstr	s1, [r7, #12]
 8002d7a:	ed87 1a02 	vstr	s2, [r7, #8]
 8002d7e:	edc7 1a01 	vstr	s3, [r7, #4]
	xPidConfig.fKp = fKp;
 8002d82:	693b      	ldr	r3, [r7, #16]
 8002d84:	62fb      	str	r3, [r7, #44]	@ 0x2c
	xPidConfig.fKd = fKd;
 8002d86:	68bb      	ldr	r3, [r7, #8]
 8002d88:	637b      	str	r3, [r7, #52]	@ 0x34
	xPidConfig.fKi = fKi;
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	633b      	str	r3, [r7, #48]	@ 0x30
	xPidConfig.fError_previous = 0;
 8002d8e:	f04f 0300 	mov.w	r3, #0
 8002d92:	63bb      	str	r3, [r7, #56]	@ 0x38
	xPidConfig.fError_sum = 0.0;
 8002d94:	f04f 0300 	mov.w	r3, #0
 8002d98:	63fb      	str	r3, [r7, #60]	@ 0x3c

	// Saturates Integrator size (up to 10 s)
	if((usIntSizeMs/UPDATE_RATE_MS)> INTEGRATOR_MAX_SIZE)
 8002d9a:	f8b7 31e8 	ldrh.w	r3, [r7, #488]	@ 0x1e8
 8002d9e:	f242 7273 	movw	r2, #10099	@ 0x2773
 8002da2:	4293      	cmp	r3, r2
 8002da4:	d903      	bls.n	8002dae <vPidInit+0x4e>
	  usIntSizeMs = INTEGRATOR_MAX_SIZE * UPDATE_RATE_MS;
 8002da6:	f242 7310 	movw	r3, #10000	@ 0x2710
 8002daa:	f8a7 31e8 	strh.w	r3, [r7, #488]	@ 0x1e8

	xPidConfig.usIntegratorSize = usIntSizeMs/UPDATE_RATE_MS;
 8002dae:	f8b7 31e8 	ldrh.w	r3, [r7, #488]	@ 0x1e8
 8002db2:	4a17      	ldr	r2, [pc, #92]	@ (8002e10 <vPidInit+0xb0>)
 8002db4:	fba2 2303 	umull	r2, r3, r2, r3
 8002db8:	095b      	lsrs	r3, r3, #5
 8002dba:	b29b      	uxth	r3, r3
 8002dbc:	f8a7 3040 	strh.w	r3, [r7, #64]	@ 0x40

	xPidConfig.fOutputSaturation = fOutputSaturation;
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	647b      	str	r3, [r7, #68]	@ 0x44
	xPidConfig.usIntegratorCount = 0;
 8002dc4:	2300      	movs	r3, #0
 8002dc6:	f8a7 3054 	strh.w	r3, [r7, #84]	@ 0x54
	for (int i =0; i<INTEGRATOR_MAX_SIZE; i++){
 8002dca:	2300      	movs	r3, #0
 8002dcc:	61fb      	str	r3, [r7, #28]
 8002dce:	e00b      	b.n	8002de8 <vPidInit+0x88>
		xPidConfig.fIntegratorBuffer[i] = 0;
 8002dd0:	69fb      	ldr	r3, [r7, #28]
 8002dd2:	330a      	adds	r3, #10
 8002dd4:	009b      	lsls	r3, r3, #2
 8002dd6:	3328      	adds	r3, #40	@ 0x28
 8002dd8:	443b      	add	r3, r7
 8002dda:	3308      	adds	r3, #8
 8002ddc:	f04f 0200 	mov.w	r2, #0
 8002de0:	601a      	str	r2, [r3, #0]
	for (int i =0; i<INTEGRATOR_MAX_SIZE; i++){
 8002de2:	69fb      	ldr	r3, [r7, #28]
 8002de4:	3301      	adds	r3, #1
 8002de6:	61fb      	str	r3, [r7, #28]
 8002de8:	69fb      	ldr	r3, [r7, #28]
 8002dea:	2b63      	cmp	r3, #99	@ 0x63
 8002dec:	ddf0      	ble.n	8002dd0 <vPidInit+0x70>
	}
	return xPidConfig;
 8002dee:	697b      	ldr	r3, [r7, #20]
 8002df0:	4618      	mov	r0, r3
 8002df2:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8002df6:	f44f 72de 	mov.w	r2, #444	@ 0x1bc
 8002dfa:	4619      	mov	r1, r3
 8002dfc:	f00a f84f 	bl	800ce9e <memcpy>
}
 8002e00:	6978      	ldr	r0, [r7, #20]
 8002e02:	3720      	adds	r7, #32
 8002e04:	46bd      	mov	sp, r7
 8002e06:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8002e0a:	b004      	add	sp, #16
 8002e0c:	4770      	bx	lr
 8002e0e:	bf00      	nop
 8002e10:	51eb851f 	.word	0x51eb851f
 8002e14:	00000000 	.word	0x00000000

08002e18 <fPidUpdateData>:
/*                     fReferenceValue: Value used as */
/*                     control reference              */
/* Output params:      float: New Control effort      */
/* ************************************************** */
float fPidUpdateData(pid_data_type xPidConfig, float fSensorValue, float fSetValue)
{
 8002e18:	b084      	sub	sp, #16
 8002e1a:	b5b0      	push	{r4, r5, r7, lr}
 8002e1c:	b082      	sub	sp, #8
 8002e1e:	af00      	add	r7, sp, #0
 8002e20:	f107 0418 	add.w	r4, r7, #24
 8002e24:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002e28:	ed87 0a01 	vstr	s0, [r7, #4]
 8002e2c:	edc7 0a00 	vstr	s1, [r7]
//	float fError, fDifference, fOut;

	// Proportional error
	xPidConfig.fError = fSetValue - fSensorValue;
 8002e30:	ed97 7a00 	vldr	s14, [r7]
 8002e34:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e38:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002e3c:	edc7 7a0d 	vstr	s15, [r7, #52]	@ 0x34

	//Ingtegral error
	xPidConfig.fError_sum = xPidConfig.fError_sum - xPidConfig.fIntegratorBuffer[xPidConfig.usIntegratorCount] + xPidConfig.fError;
 8002e40:	ed97 7a0a 	vldr	s14, [r7, #40]	@ 0x28
 8002e44:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8002e48:	330a      	adds	r3, #10
 8002e4a:	009b      	lsls	r3, r3, #2
 8002e4c:	3318      	adds	r3, #24
 8002e4e:	443b      	add	r3, r7
 8002e50:	3304      	adds	r3, #4
 8002e52:	edd3 7a00 	vldr	s15, [r3]
 8002e56:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e5a:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8002e5e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002e62:	edc7 7a0a 	vstr	s15, [r7, #40]	@ 0x28

	xPidConfig.fIntegratorBuffer[xPidConfig.usIntegratorCount] = xPidConfig.fError;
 8002e66:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8002e6a:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8002e6c:	330a      	adds	r3, #10
 8002e6e:	009b      	lsls	r3, r3, #2
 8002e70:	3318      	adds	r3, #24
 8002e72:	443b      	add	r3, r7
 8002e74:	3304      	adds	r3, #4
 8002e76:	601a      	str	r2, [r3, #0]

	if(++xPidConfig.usIntegratorCount >= xPidConfig.usIntegratorSize)
 8002e78:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8002e7c:	3301      	adds	r3, #1
 8002e7e:	b29b      	uxth	r3, r3
 8002e80:	f8a7 3040 	strh.w	r3, [r7, #64]	@ 0x40
 8002e84:	f8b7 2040 	ldrh.w	r2, [r7, #64]	@ 0x40
 8002e88:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 8002e8a:	429a      	cmp	r2, r3
 8002e8c:	d302      	bcc.n	8002e94 <fPidUpdateData+0x7c>
		xPidConfig.usIntegratorCount = 0;
 8002e8e:	2300      	movs	r3, #0
 8002e90:	f8a7 3040 	strh.w	r3, [r7, #64]	@ 0x40

	// Differential error
	xPidConfig.fDifference = (xPidConfig.fError - xPidConfig.fError_previous);
 8002e94:	ed97 7a0d 	vldr	s14, [r7, #52]	@ 0x34
 8002e98:	edd7 7a09 	vldr	s15, [r7, #36]	@ 0x24
 8002e9c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002ea0:	edc7 7a0e 	vstr	s15, [r7, #56]	@ 0x38

	xPidConfig.fOut = xPidConfig.fKp * xPidConfig.fError
 8002ea4:	ed97 7a06 	vldr	s14, [r7, #24]
 8002ea8:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8002eac:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002eb0:	ee17 0a90 	vmov	r0, s15
 8002eb4:	f7fd fb70 	bl	8000598 <__aeabi_f2d>
 8002eb8:	4604      	mov	r4, r0
 8002eba:	460d      	mov	r5, r1
		 + xPidConfig.fKi * xPidConfig.fError_sum * UPDATE_RATE
 8002ebc:	ed97 7a07 	vldr	s14, [r7, #28]
 8002ec0:	edd7 7a0a 	vldr	s15, [r7, #40]	@ 0x28
 8002ec4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002ec8:	ee17 0a90 	vmov	r0, s15
 8002ecc:	f7fd fb64 	bl	8000598 <__aeabi_f2d>
 8002ed0:	a327      	add	r3, pc, #156	@ (adr r3, 8002f70 <fPidUpdateData+0x158>)
 8002ed2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ed6:	f7fd fbb7 	bl	8000648 <__aeabi_dmul>
 8002eda:	4602      	mov	r2, r0
 8002edc:	460b      	mov	r3, r1
 8002ede:	4620      	mov	r0, r4
 8002ee0:	4629      	mov	r1, r5
 8002ee2:	f7fd f9fb 	bl	80002dc <__adddf3>
 8002ee6:	4602      	mov	r2, r0
 8002ee8:	460b      	mov	r3, r1
 8002eea:	4614      	mov	r4, r2
 8002eec:	461d      	mov	r5, r3
		 + xPidConfig.fKd * xPidConfig.fDifference / UPDATE_RATE;
 8002eee:	ed97 7a08 	vldr	s14, [r7, #32]
 8002ef2:	edd7 7a0e 	vldr	s15, [r7, #56]	@ 0x38
 8002ef6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002efa:	ee17 0a90 	vmov	r0, s15
 8002efe:	f7fd fb4b 	bl	8000598 <__aeabi_f2d>
 8002f02:	a31b      	add	r3, pc, #108	@ (adr r3, 8002f70 <fPidUpdateData+0x158>)
 8002f04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002f08:	f7fd fcc8 	bl	800089c <__aeabi_ddiv>
 8002f0c:	4602      	mov	r2, r0
 8002f0e:	460b      	mov	r3, r1
 8002f10:	4620      	mov	r0, r4
 8002f12:	4629      	mov	r1, r5
 8002f14:	f7fd f9e2 	bl	80002dc <__adddf3>
 8002f18:	4602      	mov	r2, r0
 8002f1a:	460b      	mov	r3, r1
 8002f1c:	4610      	mov	r0, r2
 8002f1e:	4619      	mov	r1, r3
 8002f20:	f7fd fe8a 	bl	8000c38 <__aeabi_d2f>
 8002f24:	4603      	mov	r3, r0
	xPidConfig.fOut = xPidConfig.fKp * xPidConfig.fError
 8002f26:	63fb      	str	r3, [r7, #60]	@ 0x3c

	xPidConfig.fError_previous = xPidConfig.fError;
 8002f28:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8002f2a:	627b      	str	r3, [r7, #36]	@ 0x24

    // Output Saturation
//	if(isnan(fOut))
//		fOut=0;
	if(xPidConfig.fOut > xPidConfig.fOutputSaturation)
 8002f2c:	ed97 7a0f 	vldr	s14, [r7, #60]	@ 0x3c
 8002f30:	edd7 7a0c 	vldr	s15, [r7, #48]	@ 0x30
 8002f34:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002f38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f3c:	dd02      	ble.n	8002f44 <fPidUpdateData+0x12c>
		xPidConfig.fOut = xPidConfig.fOutputSaturation;
 8002f3e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8002f40:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002f42:	e009      	b.n	8002f58 <fPidUpdateData+0x140>
	else
		if (xPidConfig.fOut < 0)
 8002f44:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 8002f48:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002f4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f50:	d502      	bpl.n	8002f58 <fPidUpdateData+0x140>
			xPidConfig.fOut = 0;
 8002f52:	f04f 0300 	mov.w	r3, #0
 8002f56:	63fb      	str	r3, [r7, #60]	@ 0x3c

	return xPidConfig.fOut;
 8002f58:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002f5a:	ee07 3a90 	vmov	s15, r3
}
 8002f5e:	eeb0 0a67 	vmov.f32	s0, s15
 8002f62:	3708      	adds	r7, #8
 8002f64:	46bd      	mov	sp, r7
 8002f66:	e8bd 40b0 	ldmia.w	sp!, {r4, r5, r7, lr}
 8002f6a:	b004      	add	sp, #16
 8002f6c:	4770      	bx	lr
 8002f6e:	bf00      	nop
 8002f70:	9999999a 	.word	0x9999999a
 8002f74:	3fb99999 	.word	0x3fb99999

08002f78 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002f78:	b580      	push	{r7, lr}
 8002f7a:	b082      	sub	sp, #8
 8002f7c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002f7e:	4b0f      	ldr	r3, [pc, #60]	@ (8002fbc <HAL_MspInit+0x44>)
 8002f80:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002f82:	4a0e      	ldr	r2, [pc, #56]	@ (8002fbc <HAL_MspInit+0x44>)
 8002f84:	f043 0301 	orr.w	r3, r3, #1
 8002f88:	6613      	str	r3, [r2, #96]	@ 0x60
 8002f8a:	4b0c      	ldr	r3, [pc, #48]	@ (8002fbc <HAL_MspInit+0x44>)
 8002f8c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8002f8e:	f003 0301 	and.w	r3, r3, #1
 8002f92:	607b      	str	r3, [r7, #4]
 8002f94:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002f96:	4b09      	ldr	r3, [pc, #36]	@ (8002fbc <HAL_MspInit+0x44>)
 8002f98:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002f9a:	4a08      	ldr	r2, [pc, #32]	@ (8002fbc <HAL_MspInit+0x44>)
 8002f9c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002fa0:	6593      	str	r3, [r2, #88]	@ 0x58
 8002fa2:	4b06      	ldr	r3, [pc, #24]	@ (8002fbc <HAL_MspInit+0x44>)
 8002fa4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002fa6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8002faa:	603b      	str	r3, [r7, #0]
 8002fac:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /** Disable the internal Pull-Up in Dead Battery pins of UCPD peripheral
  */
  HAL_PWREx_DisableUCPDDeadBattery();
 8002fae:	f003 ff39 	bl	8006e24 <HAL_PWREx_DisableUCPDDeadBattery>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002fb2:	bf00      	nop
 8002fb4:	3708      	adds	r7, #8
 8002fb6:	46bd      	mov	sp, r7
 8002fb8:	bd80      	pop	{r7, pc}
 8002fba:	bf00      	nop
 8002fbc:	40021000 	.word	0x40021000

08002fc0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002fc0:	b480      	push	{r7}
 8002fc2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002fc4:	bf00      	nop
 8002fc6:	e7fd      	b.n	8002fc4 <NMI_Handler+0x4>

08002fc8 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002fc8:	b480      	push	{r7}
 8002fca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002fcc:	bf00      	nop
 8002fce:	e7fd      	b.n	8002fcc <HardFault_Handler+0x4>

08002fd0 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002fd0:	b480      	push	{r7}
 8002fd2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002fd4:	bf00      	nop
 8002fd6:	e7fd      	b.n	8002fd4 <MemManage_Handler+0x4>

08002fd8 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002fd8:	b480      	push	{r7}
 8002fda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002fdc:	bf00      	nop
 8002fde:	e7fd      	b.n	8002fdc <BusFault_Handler+0x4>

08002fe0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002fe0:	b480      	push	{r7}
 8002fe2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002fe4:	bf00      	nop
 8002fe6:	e7fd      	b.n	8002fe4 <UsageFault_Handler+0x4>

08002fe8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002fe8:	b480      	push	{r7}
 8002fea:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002fec:	bf00      	nop
 8002fee:	46bd      	mov	sp, r7
 8002ff0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ff4:	4770      	bx	lr

08002ff6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002ff6:	b480      	push	{r7}
 8002ff8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002ffa:	bf00      	nop
 8002ffc:	46bd      	mov	sp, r7
 8002ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003002:	4770      	bx	lr

08003004 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003004:	b480      	push	{r7}
 8003006:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8003008:	bf00      	nop
 800300a:	46bd      	mov	sp, r7
 800300c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003010:	4770      	bx	lr

08003012 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003012:	b580      	push	{r7, lr}
 8003014:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003016:	f001 f945 	bl	80042a4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800301a:	bf00      	nop
 800301c:	bd80      	pop	{r7, pc}
	...

08003020 <DMA1_Channel3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel3 global interrupt.
  */
void DMA1_Channel3_IRQHandler(void)
{
 8003020:	b580      	push	{r7, lr}
 8003022:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel3_IRQn 0 */

  /* USER CODE END DMA1_Channel3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c2_rx);
 8003024:	4802      	ldr	r0, [pc, #8]	@ (8003030 <DMA1_Channel3_IRQHandler+0x10>)
 8003026:	f001 fca2 	bl	800496e <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel3_IRQn 1 */

  /* USER CODE END DMA1_Channel3_IRQn 1 */
}
 800302a:	bf00      	nop
 800302c:	bd80      	pop	{r7, pc}
 800302e:	bf00      	nop
 8003030:	20000304 	.word	0x20000304

08003034 <DMA1_Channel4_IRQHandler>:

/**
  * @brief This function handles DMA1 channel4 global interrupt.
  */
void DMA1_Channel4_IRQHandler(void)
{
 8003034:	b580      	push	{r7, lr}
 8003036:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */

  /* USER CODE END DMA1_Channel4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c2_tx);
 8003038:	4802      	ldr	r0, [pc, #8]	@ (8003044 <DMA1_Channel4_IRQHandler+0x10>)
 800303a:	f001 fc98 	bl	800496e <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */

  /* USER CODE END DMA1_Channel4_IRQn 1 */
}
 800303e:	bf00      	nop
 8003040:	bd80      	pop	{r7, pc}
 8003042:	bf00      	nop
 8003044:	20000364 	.word	0x20000364

08003048 <TIM1_UP_TIM16_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM16 global interrupt.
  */
void TIM1_UP_TIM16_IRQHandler(void)
{
 8003048:	b580      	push	{r7, lr}
 800304a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 800304c:	4803      	ldr	r0, [pc, #12]	@ (800305c <TIM1_UP_TIM16_IRQHandler+0x14>)
 800304e:	f005 fa61 	bl	8008514 <HAL_TIM_IRQHandler>
  HAL_TIM_IRQHandler(&htim16);
 8003052:	4803      	ldr	r0, [pc, #12]	@ (8003060 <TIM1_UP_TIM16_IRQHandler+0x18>)
 8003054:	f005 fa5e 	bl	8008514 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
}
 8003058:	bf00      	nop
 800305a:	bd80      	pop	{r7, pc}
 800305c:	2000079c 	.word	0x2000079c
 8003060:	20000918 	.word	0x20000918

08003064 <TIM1_TRG_COM_TIM17_IRQHandler>:

/**
  * @brief This function handles TIM1 trigger and commutation interrupts and TIM17 global interrupt.
  */
void TIM1_TRG_COM_TIM17_IRQHandler(void)
{
 8003064:	b580      	push	{r7, lr}
 8003066:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8003068:	4803      	ldr	r0, [pc, #12]	@ (8003078 <TIM1_TRG_COM_TIM17_IRQHandler+0x14>)
 800306a:	f005 fa53 	bl	8008514 <HAL_TIM_IRQHandler>
  HAL_TIM_IRQHandler(&htim17);
 800306e:	4803      	ldr	r0, [pc, #12]	@ (800307c <TIM1_TRG_COM_TIM17_IRQHandler+0x18>)
 8003070:	f005 fa50 	bl	8008514 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 1 */

  /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 1 */
}
 8003074:	bf00      	nop
 8003076:	bd80      	pop	{r7, pc}
 8003078:	2000079c 	.word	0x2000079c
 800307c:	20000964 	.word	0x20000964

08003080 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8003080:	b580      	push	{r7, lr}
 8003082:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8003084:	4802      	ldr	r0, [pc, #8]	@ (8003090 <TIM2_IRQHandler+0x10>)
 8003086:	f005 fa45 	bl	8008514 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800308a:	bf00      	nop
 800308c:	bd80      	pop	{r7, pc}
 800308e:	bf00      	nop
 8003090:	200007e8 	.word	0x200007e8

08003094 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8003094:	b580      	push	{r7, lr}
 8003096:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8003098:	4802      	ldr	r0, [pc, #8]	@ (80030a4 <TIM3_IRQHandler+0x10>)
 800309a:	f005 fa3b 	bl	8008514 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 800309e:	bf00      	nop
 80030a0:	bd80      	pop	{r7, pc}
 80030a2:	bf00      	nop
 80030a4:	20000834 	.word	0x20000834

080030a8 <I2C2_EV_IRQHandler>:

/**
  * @brief This function handles I2C2 event interrupt / I2C2 wake-up interrupt through EXTI line 24.
  */
void I2C2_EV_IRQHandler(void)
{
 80030a8:	b580      	push	{r7, lr}
 80030aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C2_EV_IRQn 0 */

  /* USER CODE END I2C2_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c2);
 80030ac:	4802      	ldr	r0, [pc, #8]	@ (80030b8 <I2C2_EV_IRQHandler+0x10>)
 80030ae:	f002 f91d 	bl	80052ec <HAL_I2C_EV_IRQHandler>
  /* USER CODE BEGIN I2C2_EV_IRQn 1 */

  /* USER CODE END I2C2_EV_IRQn 1 */
}
 80030b2:	bf00      	nop
 80030b4:	bd80      	pop	{r7, pc}
 80030b6:	bf00      	nop
 80030b8:	200002b0 	.word	0x200002b0

080030bc <I2C2_ER_IRQHandler>:

/**
  * @brief This function handles I2C2 error interrupt.
  */
void I2C2_ER_IRQHandler(void)
{
 80030bc:	b580      	push	{r7, lr}
 80030be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C2_ER_IRQn 0 */

  /* USER CODE END I2C2_ER_IRQn 0 */
  HAL_I2C_ER_IRQHandler(&hi2c2);
 80030c0:	4802      	ldr	r0, [pc, #8]	@ (80030cc <I2C2_ER_IRQHandler+0x10>)
 80030c2:	f002 f92d 	bl	8005320 <HAL_I2C_ER_IRQHandler>
  /* USER CODE BEGIN I2C2_ER_IRQn 1 */

  /* USER CODE END I2C2_ER_IRQn 1 */
}
 80030c6:	bf00      	nop
 80030c8:	bd80      	pop	{r7, pc}
 80030ca:	bf00      	nop
 80030cc:	200002b0 	.word	0x200002b0

080030d0 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI line 25.
  */
void USART1_IRQHandler(void)
{
 80030d0:	b580      	push	{r7, lr}
 80030d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80030d4:	4802      	ldr	r0, [pc, #8]	@ (80030e0 <USART1_IRQHandler+0x10>)
 80030d6:	f006 fef9 	bl	8009ecc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80030da:	bf00      	nop
 80030dc:	bd80      	pop	{r7, pc}
 80030de:	bf00      	nop
 80030e0:	20000b40 	.word	0x20000b40

080030e4 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt / USART3 wake-up interrupt through EXTI line 28.
  */
void USART3_IRQHandler(void)
{
 80030e4:	b580      	push	{r7, lr}
 80030e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 80030e8:	4802      	ldr	r0, [pc, #8]	@ (80030f4 <USART3_IRQHandler+0x10>)
 80030ea:	f006 feef 	bl	8009ecc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 80030ee:	bf00      	nop
 80030f0:	bd80      	pop	{r7, pc}
 80030f2:	bf00      	nop
 80030f4:	20000bd4 	.word	0x20000bd4

080030f8 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80030f8:	b580      	push	{r7, lr}
 80030fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 80030fc:	f44f 5000 	mov.w	r0, #8192	@ 0x2000
 8003100:	f001 ff2c 	bl	8004f5c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 8003104:	bf00      	nop
 8003106:	bd80      	pop	{r7, pc}

08003108 <TIM5_IRQHandler>:

/**
  * @brief This function handles TIM5 global interrupt.
  */
void TIM5_IRQHandler(void)
{
 8003108:	b580      	push	{r7, lr}
 800310a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM5_IRQn 0 */

  /* USER CODE END TIM5_IRQn 0 */
  HAL_TIM_IRQHandler(&htim5);
 800310c:	4802      	ldr	r0, [pc, #8]	@ (8003118 <TIM5_IRQHandler+0x10>)
 800310e:	f005 fa01 	bl	8008514 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM5_IRQn 1 */

  /* USER CODE END TIM5_IRQn 1 */
}
 8003112:	bf00      	nop
 8003114:	bd80      	pop	{r7, pc}
 8003116:	bf00      	nop
 8003118:	20000880 	.word	0x20000880

0800311c <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC3 channel underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 800311c:	b580      	push	{r7, lr}
 800311e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8003120:	4802      	ldr	r0, [pc, #8]	@ (800312c <TIM6_DAC_IRQHandler+0x10>)
 8003122:	f005 f9f7 	bl	8008514 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8003126:	bf00      	nop
 8003128:	bd80      	pop	{r7, pc}
 800312a:	bf00      	nop
 800312c:	200008cc 	.word	0x200008cc

08003130 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8003130:	b480      	push	{r7}
 8003132:	af00      	add	r7, sp, #0
  return 1;
 8003134:	2301      	movs	r3, #1
}
 8003136:	4618      	mov	r0, r3
 8003138:	46bd      	mov	sp, r7
 800313a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800313e:	4770      	bx	lr

08003140 <_kill>:

int _kill(int pid, int sig)
{
 8003140:	b580      	push	{r7, lr}
 8003142:	b082      	sub	sp, #8
 8003144:	af00      	add	r7, sp, #0
 8003146:	6078      	str	r0, [r7, #4]
 8003148:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800314a:	f009 fe7b 	bl	800ce44 <__errno>
 800314e:	4603      	mov	r3, r0
 8003150:	2216      	movs	r2, #22
 8003152:	601a      	str	r2, [r3, #0]
  return -1;
 8003154:	f04f 33ff 	mov.w	r3, #4294967295
}
 8003158:	4618      	mov	r0, r3
 800315a:	3708      	adds	r7, #8
 800315c:	46bd      	mov	sp, r7
 800315e:	bd80      	pop	{r7, pc}

08003160 <_exit>:

void _exit (int status)
{
 8003160:	b580      	push	{r7, lr}
 8003162:	b082      	sub	sp, #8
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8003168:	f04f 31ff 	mov.w	r1, #4294967295
 800316c:	6878      	ldr	r0, [r7, #4]
 800316e:	f7ff ffe7 	bl	8003140 <_kill>
  while (1) {}    /* Make sure we hang here */
 8003172:	bf00      	nop
 8003174:	e7fd      	b.n	8003172 <_exit+0x12>

08003176 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003176:	b580      	push	{r7, lr}
 8003178:	b086      	sub	sp, #24
 800317a:	af00      	add	r7, sp, #0
 800317c:	60f8      	str	r0, [r7, #12]
 800317e:	60b9      	str	r1, [r7, #8]
 8003180:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003182:	2300      	movs	r3, #0
 8003184:	617b      	str	r3, [r7, #20]
 8003186:	e00a      	b.n	800319e <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8003188:	f3af 8000 	nop.w
 800318c:	4601      	mov	r1, r0
 800318e:	68bb      	ldr	r3, [r7, #8]
 8003190:	1c5a      	adds	r2, r3, #1
 8003192:	60ba      	str	r2, [r7, #8]
 8003194:	b2ca      	uxtb	r2, r1
 8003196:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003198:	697b      	ldr	r3, [r7, #20]
 800319a:	3301      	adds	r3, #1
 800319c:	617b      	str	r3, [r7, #20]
 800319e:	697a      	ldr	r2, [r7, #20]
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	429a      	cmp	r2, r3
 80031a4:	dbf0      	blt.n	8003188 <_read+0x12>
  }

  return len;
 80031a6:	687b      	ldr	r3, [r7, #4]
}
 80031a8:	4618      	mov	r0, r3
 80031aa:	3718      	adds	r7, #24
 80031ac:	46bd      	mov	sp, r7
 80031ae:	bd80      	pop	{r7, pc}

080031b0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80031b0:	b580      	push	{r7, lr}
 80031b2:	b086      	sub	sp, #24
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	60f8      	str	r0, [r7, #12]
 80031b8:	60b9      	str	r1, [r7, #8]
 80031ba:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80031bc:	2300      	movs	r3, #0
 80031be:	617b      	str	r3, [r7, #20]
 80031c0:	e009      	b.n	80031d6 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80031c2:	68bb      	ldr	r3, [r7, #8]
 80031c4:	1c5a      	adds	r2, r3, #1
 80031c6:	60ba      	str	r2, [r7, #8]
 80031c8:	781b      	ldrb	r3, [r3, #0]
 80031ca:	4618      	mov	r0, r3
 80031cc:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80031d0:	697b      	ldr	r3, [r7, #20]
 80031d2:	3301      	adds	r3, #1
 80031d4:	617b      	str	r3, [r7, #20]
 80031d6:	697a      	ldr	r2, [r7, #20]
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	429a      	cmp	r2, r3
 80031dc:	dbf1      	blt.n	80031c2 <_write+0x12>
  }
  return len;
 80031de:	687b      	ldr	r3, [r7, #4]
}
 80031e0:	4618      	mov	r0, r3
 80031e2:	3718      	adds	r7, #24
 80031e4:	46bd      	mov	sp, r7
 80031e6:	bd80      	pop	{r7, pc}

080031e8 <_close>:

int _close(int file)
{
 80031e8:	b480      	push	{r7}
 80031ea:	b083      	sub	sp, #12
 80031ec:	af00      	add	r7, sp, #0
 80031ee:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80031f0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80031f4:	4618      	mov	r0, r3
 80031f6:	370c      	adds	r7, #12
 80031f8:	46bd      	mov	sp, r7
 80031fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031fe:	4770      	bx	lr

08003200 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8003200:	b480      	push	{r7}
 8003202:	b083      	sub	sp, #12
 8003204:	af00      	add	r7, sp, #0
 8003206:	6078      	str	r0, [r7, #4]
 8003208:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800320a:	683b      	ldr	r3, [r7, #0]
 800320c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8003210:	605a      	str	r2, [r3, #4]
  return 0;
 8003212:	2300      	movs	r3, #0
}
 8003214:	4618      	mov	r0, r3
 8003216:	370c      	adds	r7, #12
 8003218:	46bd      	mov	sp, r7
 800321a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800321e:	4770      	bx	lr

08003220 <_isatty>:

int _isatty(int file)
{
 8003220:	b480      	push	{r7}
 8003222:	b083      	sub	sp, #12
 8003224:	af00      	add	r7, sp, #0
 8003226:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8003228:	2301      	movs	r3, #1
}
 800322a:	4618      	mov	r0, r3
 800322c:	370c      	adds	r7, #12
 800322e:	46bd      	mov	sp, r7
 8003230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003234:	4770      	bx	lr

08003236 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8003236:	b480      	push	{r7}
 8003238:	b085      	sub	sp, #20
 800323a:	af00      	add	r7, sp, #0
 800323c:	60f8      	str	r0, [r7, #12]
 800323e:	60b9      	str	r1, [r7, #8]
 8003240:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8003242:	2300      	movs	r3, #0
}
 8003244:	4618      	mov	r0, r3
 8003246:	3714      	adds	r7, #20
 8003248:	46bd      	mov	sp, r7
 800324a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800324e:	4770      	bx	lr

08003250 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8003250:	b580      	push	{r7, lr}
 8003252:	b086      	sub	sp, #24
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8003258:	4a14      	ldr	r2, [pc, #80]	@ (80032ac <_sbrk+0x5c>)
 800325a:	4b15      	ldr	r3, [pc, #84]	@ (80032b0 <_sbrk+0x60>)
 800325c:	1ad3      	subs	r3, r2, r3
 800325e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003260:	697b      	ldr	r3, [r7, #20]
 8003262:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003264:	4b13      	ldr	r3, [pc, #76]	@ (80032b4 <_sbrk+0x64>)
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	2b00      	cmp	r3, #0
 800326a:	d102      	bne.n	8003272 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800326c:	4b11      	ldr	r3, [pc, #68]	@ (80032b4 <_sbrk+0x64>)
 800326e:	4a12      	ldr	r2, [pc, #72]	@ (80032b8 <_sbrk+0x68>)
 8003270:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003272:	4b10      	ldr	r3, [pc, #64]	@ (80032b4 <_sbrk+0x64>)
 8003274:	681a      	ldr	r2, [r3, #0]
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	4413      	add	r3, r2
 800327a:	693a      	ldr	r2, [r7, #16]
 800327c:	429a      	cmp	r2, r3
 800327e:	d207      	bcs.n	8003290 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003280:	f009 fde0 	bl	800ce44 <__errno>
 8003284:	4603      	mov	r3, r0
 8003286:	220c      	movs	r2, #12
 8003288:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800328a:	f04f 33ff 	mov.w	r3, #4294967295
 800328e:	e009      	b.n	80032a4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003290:	4b08      	ldr	r3, [pc, #32]	@ (80032b4 <_sbrk+0x64>)
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8003296:	4b07      	ldr	r3, [pc, #28]	@ (80032b4 <_sbrk+0x64>)
 8003298:	681a      	ldr	r2, [r3, #0]
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	4413      	add	r3, r2
 800329e:	4a05      	ldr	r2, [pc, #20]	@ (80032b4 <_sbrk+0x64>)
 80032a0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80032a2:	68fb      	ldr	r3, [r7, #12]
}
 80032a4:	4618      	mov	r0, r3
 80032a6:	3718      	adds	r7, #24
 80032a8:	46bd      	mov	sp, r7
 80032aa:	bd80      	pop	{r7, pc}
 80032ac:	20020000 	.word	0x20020000
 80032b0:	00000400 	.word	0x00000400
 80032b4:	20000798 	.word	0x20000798
 80032b8:	20000db8 	.word	0x20000db8

080032bc <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
 80032bc:	b480      	push	{r7}
 80032be:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 80032c0:	4b06      	ldr	r3, [pc, #24]	@ (80032dc <SystemInit+0x20>)
 80032c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80032c6:	4a05      	ldr	r2, [pc, #20]	@ (80032dc <SystemInit+0x20>)
 80032c8:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80032cc:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80032d0:	bf00      	nop
 80032d2:	46bd      	mov	sp, r7
 80032d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032d8:	4770      	bx	lr
 80032da:	bf00      	nop
 80032dc:	e000ed00 	.word	0xe000ed00

080032e0 <MX_TIM1_Init>:
TIM_HandleTypeDef htim17;
TIM_HandleTypeDef htim20;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 80032e0:	b580      	push	{r7, lr}
 80032e2:	b098      	sub	sp, #96	@ 0x60
 80032e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80032e6:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80032ea:	2200      	movs	r2, #0
 80032ec:	601a      	str	r2, [r3, #0]
 80032ee:	605a      	str	r2, [r3, #4]
 80032f0:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80032f2:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80032f6:	2200      	movs	r2, #0
 80032f8:	601a      	str	r2, [r3, #0]
 80032fa:	605a      	str	r2, [r3, #4]
 80032fc:	609a      	str	r2, [r3, #8]
 80032fe:	60da      	str	r2, [r3, #12]
 8003300:	611a      	str	r2, [r3, #16]
 8003302:	615a      	str	r2, [r3, #20]
 8003304:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8003306:	1d3b      	adds	r3, r7, #4
 8003308:	2234      	movs	r2, #52	@ 0x34
 800330a:	2100      	movs	r1, #0
 800330c:	4618      	mov	r0, r3
 800330e:	f009 fd38 	bl	800cd82 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8003312:	4b41      	ldr	r3, [pc, #260]	@ (8003418 <MX_TIM1_Init+0x138>)
 8003314:	4a41      	ldr	r2, [pc, #260]	@ (800341c <MX_TIM1_Init+0x13c>)
 8003316:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 85-1;
 8003318:	4b3f      	ldr	r3, [pc, #252]	@ (8003418 <MX_TIM1_Init+0x138>)
 800331a:	2254      	movs	r2, #84	@ 0x54
 800331c:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800331e:	4b3e      	ldr	r3, [pc, #248]	@ (8003418 <MX_TIM1_Init+0x138>)
 8003320:	2200      	movs	r2, #0
 8003322:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 999;
 8003324:	4b3c      	ldr	r3, [pc, #240]	@ (8003418 <MX_TIM1_Init+0x138>)
 8003326:	f240 32e7 	movw	r2, #999	@ 0x3e7
 800332a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800332c:	4b3a      	ldr	r3, [pc, #232]	@ (8003418 <MX_TIM1_Init+0x138>)
 800332e:	2200      	movs	r2, #0
 8003330:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8003332:	4b39      	ldr	r3, [pc, #228]	@ (8003418 <MX_TIM1_Init+0x138>)
 8003334:	2200      	movs	r2, #0
 8003336:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003338:	4b37      	ldr	r3, [pc, #220]	@ (8003418 <MX_TIM1_Init+0x138>)
 800333a:	2280      	movs	r2, #128	@ 0x80
 800333c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800333e:	4836      	ldr	r0, [pc, #216]	@ (8003418 <MX_TIM1_Init+0x138>)
 8003340:	f004 fdcc 	bl	8007edc <HAL_TIM_PWM_Init>
 8003344:	4603      	mov	r3, r0
 8003346:	2b00      	cmp	r3, #0
 8003348:	d001      	beq.n	800334e <MX_TIM1_Init+0x6e>
  {
    Error_Handler();
 800334a:	f7ff fb6c 	bl	8002a26 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800334e:	2300      	movs	r3, #0
 8003350:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8003352:	2300      	movs	r3, #0
 8003354:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003356:	2300      	movs	r3, #0
 8003358:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 800335a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800335e:	4619      	mov	r1, r3
 8003360:	482d      	ldr	r0, [pc, #180]	@ (8003418 <MX_TIM1_Init+0x138>)
 8003362:	f006 fb19 	bl	8009998 <HAL_TIMEx_MasterConfigSynchronization>
 8003366:	4603      	mov	r3, r0
 8003368:	2b00      	cmp	r3, #0
 800336a:	d001      	beq.n	8003370 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 800336c:	f7ff fb5b 	bl	8002a26 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003370:	2360      	movs	r3, #96	@ 0x60
 8003372:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 0;
 8003374:	2300      	movs	r3, #0
 8003376:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003378:	2300      	movs	r3, #0
 800337a:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800337c:	2300      	movs	r3, #0
 800337e:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003380:	2300      	movs	r3, #0
 8003382:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8003384:	2300      	movs	r3, #0
 8003386:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8003388:	2300      	movs	r3, #0
 800338a:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800338c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8003390:	2200      	movs	r2, #0
 8003392:	4619      	mov	r1, r3
 8003394:	4820      	ldr	r0, [pc, #128]	@ (8003418 <MX_TIM1_Init+0x138>)
 8003396:	f005 faa9 	bl	80088ec <HAL_TIM_PWM_ConfigChannel>
 800339a:	4603      	mov	r3, r0
 800339c:	2b00      	cmp	r3, #0
 800339e:	d001      	beq.n	80033a4 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 80033a0:	f7ff fb41 	bl	8002a26 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80033a4:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80033a8:	2204      	movs	r2, #4
 80033aa:	4619      	mov	r1, r3
 80033ac:	481a      	ldr	r0, [pc, #104]	@ (8003418 <MX_TIM1_Init+0x138>)
 80033ae:	f005 fa9d 	bl	80088ec <HAL_TIM_PWM_ConfigChannel>
 80033b2:	4603      	mov	r3, r0
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d001      	beq.n	80033bc <MX_TIM1_Init+0xdc>
  {
    Error_Handler();
 80033b8:	f7ff fb35 	bl	8002a26 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80033bc:	2300      	movs	r3, #0
 80033be:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80033c0:	2300      	movs	r3, #0
 80033c2:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80033c4:	2300      	movs	r3, #0
 80033c6:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80033c8:	2300      	movs	r3, #0
 80033ca:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80033cc:	2300      	movs	r3, #0
 80033ce:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80033d0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80033d4:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 80033d6:	2300      	movs	r3, #0
 80033d8:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 80033da:	2300      	movs	r3, #0
 80033dc:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 80033de:	2300      	movs	r3, #0
 80033e0:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 80033e2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80033e6:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 80033e8:	2300      	movs	r3, #0
 80033ea:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 80033ec:	2300      	movs	r3, #0
 80033ee:	633b      	str	r3, [r7, #48]	@ 0x30
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80033f0:	2300      	movs	r3, #0
 80033f2:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80033f4:	1d3b      	adds	r3, r7, #4
 80033f6:	4619      	mov	r1, r3
 80033f8:	4807      	ldr	r0, [pc, #28]	@ (8003418 <MX_TIM1_Init+0x138>)
 80033fa:	f006 fb63 	bl	8009ac4 <HAL_TIMEx_ConfigBreakDeadTime>
 80033fe:	4603      	mov	r3, r0
 8003400:	2b00      	cmp	r3, #0
 8003402:	d001      	beq.n	8003408 <MX_TIM1_Init+0x128>
  {
    Error_Handler();
 8003404:	f7ff fb0f 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8003408:	4803      	ldr	r0, [pc, #12]	@ (8003418 <MX_TIM1_Init+0x138>)
 800340a:	f000 fbe7 	bl	8003bdc <HAL_TIM_MspPostInit>

}
 800340e:	bf00      	nop
 8003410:	3760      	adds	r7, #96	@ 0x60
 8003412:	46bd      	mov	sp, r7
 8003414:	bd80      	pop	{r7, pc}
 8003416:	bf00      	nop
 8003418:	2000079c 	.word	0x2000079c
 800341c:	40012c00 	.word	0x40012c00

08003420 <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8003420:	b580      	push	{r7, lr}
 8003422:	b088      	sub	sp, #32
 8003424:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003426:	f107 0310 	add.w	r3, r7, #16
 800342a:	2200      	movs	r2, #0
 800342c:	601a      	str	r2, [r3, #0]
 800342e:	605a      	str	r2, [r3, #4]
 8003430:	609a      	str	r2, [r3, #8]
 8003432:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003434:	1d3b      	adds	r3, r7, #4
 8003436:	2200      	movs	r2, #0
 8003438:	601a      	str	r2, [r3, #0]
 800343a:	605a      	str	r2, [r3, #4]
 800343c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800343e:	4b1e      	ldr	r3, [pc, #120]	@ (80034b8 <MX_TIM2_Init+0x98>)
 8003440:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003444:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 170-1;
 8003446:	4b1c      	ldr	r3, [pc, #112]	@ (80034b8 <MX_TIM2_Init+0x98>)
 8003448:	22a9      	movs	r2, #169	@ 0xa9
 800344a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800344c:	4b1a      	ldr	r3, [pc, #104]	@ (80034b8 <MX_TIM2_Init+0x98>)
 800344e:	2200      	movs	r2, #0
 8003450:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 10000;
 8003452:	4b19      	ldr	r3, [pc, #100]	@ (80034b8 <MX_TIM2_Init+0x98>)
 8003454:	f242 7210 	movw	r2, #10000	@ 0x2710
 8003458:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800345a:	4b17      	ldr	r3, [pc, #92]	@ (80034b8 <MX_TIM2_Init+0x98>)
 800345c:	2200      	movs	r2, #0
 800345e:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8003460:	4b15      	ldr	r3, [pc, #84]	@ (80034b8 <MX_TIM2_Init+0x98>)
 8003462:	2280      	movs	r2, #128	@ 0x80
 8003464:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8003466:	4814      	ldr	r0, [pc, #80]	@ (80034b8 <MX_TIM2_Init+0x98>)
 8003468:	f004 fc68 	bl	8007d3c <HAL_TIM_Base_Init>
 800346c:	4603      	mov	r3, r0
 800346e:	2b00      	cmp	r3, #0
 8003470:	d001      	beq.n	8003476 <MX_TIM2_Init+0x56>
  {
    Error_Handler();
 8003472:	f7ff fad8 	bl	8002a26 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003476:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800347a:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800347c:	f107 0310 	add.w	r3, r7, #16
 8003480:	4619      	mov	r1, r3
 8003482:	480d      	ldr	r0, [pc, #52]	@ (80034b8 <MX_TIM2_Init+0x98>)
 8003484:	f005 fb46 	bl	8008b14 <HAL_TIM_ConfigClockSource>
 8003488:	4603      	mov	r3, r0
 800348a:	2b00      	cmp	r3, #0
 800348c:	d001      	beq.n	8003492 <MX_TIM2_Init+0x72>
  {
    Error_Handler();
 800348e:	f7ff faca 	bl	8002a26 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003492:	2300      	movs	r3, #0
 8003494:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003496:	2300      	movs	r3, #0
 8003498:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800349a:	1d3b      	adds	r3, r7, #4
 800349c:	4619      	mov	r1, r3
 800349e:	4806      	ldr	r0, [pc, #24]	@ (80034b8 <MX_TIM2_Init+0x98>)
 80034a0:	f006 fa7a 	bl	8009998 <HAL_TIMEx_MasterConfigSynchronization>
 80034a4:	4603      	mov	r3, r0
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d001      	beq.n	80034ae <MX_TIM2_Init+0x8e>
  {
    Error_Handler();
 80034aa:	f7ff fabc 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80034ae:	bf00      	nop
 80034b0:	3720      	adds	r7, #32
 80034b2:	46bd      	mov	sp, r7
 80034b4:	bd80      	pop	{r7, pc}
 80034b6:	bf00      	nop
 80034b8:	200007e8 	.word	0x200007e8

080034bc <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 80034bc:	b580      	push	{r7, lr}
 80034be:	b08c      	sub	sp, #48	@ 0x30
 80034c0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80034c2:	f107 0320 	add.w	r3, r7, #32
 80034c6:	2200      	movs	r2, #0
 80034c8:	601a      	str	r2, [r3, #0]
 80034ca:	605a      	str	r2, [r3, #4]
 80034cc:	609a      	str	r2, [r3, #8]
 80034ce:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80034d0:	f107 0314 	add.w	r3, r7, #20
 80034d4:	2200      	movs	r2, #0
 80034d6:	601a      	str	r2, [r3, #0]
 80034d8:	605a      	str	r2, [r3, #4]
 80034da:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 80034dc:	1d3b      	adds	r3, r7, #4
 80034de:	2200      	movs	r2, #0
 80034e0:	601a      	str	r2, [r3, #0]
 80034e2:	605a      	str	r2, [r3, #4]
 80034e4:	609a      	str	r2, [r3, #8]
 80034e6:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80034e8:	4b2b      	ldr	r3, [pc, #172]	@ (8003598 <MX_TIM3_Init+0xdc>)
 80034ea:	4a2c      	ldr	r2, [pc, #176]	@ (800359c <MX_TIM3_Init+0xe0>)
 80034ec:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 260-1;
 80034ee:	4b2a      	ldr	r3, [pc, #168]	@ (8003598 <MX_TIM3_Init+0xdc>)
 80034f0:	f240 1203 	movw	r2, #259	@ 0x103
 80034f4:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80034f6:	4b28      	ldr	r3, [pc, #160]	@ (8003598 <MX_TIM3_Init+0xdc>)
 80034f8:	2200      	movs	r2, #0
 80034fa:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 80034fc:	4b26      	ldr	r3, [pc, #152]	@ (8003598 <MX_TIM3_Init+0xdc>)
 80034fe:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003502:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003504:	4b24      	ldr	r3, [pc, #144]	@ (8003598 <MX_TIM3_Init+0xdc>)
 8003506:	2200      	movs	r2, #0
 8003508:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800350a:	4b23      	ldr	r3, [pc, #140]	@ (8003598 <MX_TIM3_Init+0xdc>)
 800350c:	2200      	movs	r2, #0
 800350e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8003510:	4821      	ldr	r0, [pc, #132]	@ (8003598 <MX_TIM3_Init+0xdc>)
 8003512:	f004 fc13 	bl	8007d3c <HAL_TIM_Base_Init>
 8003516:	4603      	mov	r3, r0
 8003518:	2b00      	cmp	r3, #0
 800351a:	d001      	beq.n	8003520 <MX_TIM3_Init+0x64>
  {
    Error_Handler();
 800351c:	f7ff fa83 	bl	8002a26 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003520:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003524:	623b      	str	r3, [r7, #32]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8003526:	f107 0320 	add.w	r3, r7, #32
 800352a:	4619      	mov	r1, r3
 800352c:	481a      	ldr	r0, [pc, #104]	@ (8003598 <MX_TIM3_Init+0xdc>)
 800352e:	f005 faf1 	bl	8008b14 <HAL_TIM_ConfigClockSource>
 8003532:	4603      	mov	r3, r0
 8003534:	2b00      	cmp	r3, #0
 8003536:	d001      	beq.n	800353c <MX_TIM3_Init+0x80>
  {
    Error_Handler();
 8003538:	f7ff fa75 	bl	8002a26 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 800353c:	4816      	ldr	r0, [pc, #88]	@ (8003598 <MX_TIM3_Init+0xdc>)
 800353e:	f004 fe37 	bl	80081b0 <HAL_TIM_IC_Init>
 8003542:	4603      	mov	r3, r0
 8003544:	2b00      	cmp	r3, #0
 8003546:	d001      	beq.n	800354c <MX_TIM3_Init+0x90>
  {
    Error_Handler();
 8003548:	f7ff fa6d 	bl	8002a26 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800354c:	2300      	movs	r3, #0
 800354e:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003550:	2300      	movs	r3, #0
 8003552:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8003554:	f107 0314 	add.w	r3, r7, #20
 8003558:	4619      	mov	r1, r3
 800355a:	480f      	ldr	r0, [pc, #60]	@ (8003598 <MX_TIM3_Init+0xdc>)
 800355c:	f006 fa1c 	bl	8009998 <HAL_TIMEx_MasterConfigSynchronization>
 8003560:	4603      	mov	r3, r0
 8003562:	2b00      	cmp	r3, #0
 8003564:	d001      	beq.n	800356a <MX_TIM3_Init+0xae>
  {
    Error_Handler();
 8003566:	f7ff fa5e 	bl	8002a26 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 800356a:	230a      	movs	r3, #10
 800356c:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800356e:	2301      	movs	r3, #1
 8003570:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8003572:	2300      	movs	r3, #0
 8003574:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 8003576:	2300      	movs	r3, #0
 8003578:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 800357a:	1d3b      	adds	r3, r7, #4
 800357c:	2200      	movs	r2, #0
 800357e:	4619      	mov	r1, r3
 8003580:	4805      	ldr	r0, [pc, #20]	@ (8003598 <MX_TIM3_Init+0xdc>)
 8003582:	f005 f916 	bl	80087b2 <HAL_TIM_IC_ConfigChannel>
 8003586:	4603      	mov	r3, r0
 8003588:	2b00      	cmp	r3, #0
 800358a:	d001      	beq.n	8003590 <MX_TIM3_Init+0xd4>
  {
    Error_Handler();
 800358c:	f7ff fa4b 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8003590:	bf00      	nop
 8003592:	3730      	adds	r7, #48	@ 0x30
 8003594:	46bd      	mov	sp, r7
 8003596:	bd80      	pop	{r7, pc}
 8003598:	20000834 	.word	0x20000834
 800359c:	40000400 	.word	0x40000400

080035a0 <MX_TIM5_Init>:
/* TIM5 init function */
void MX_TIM5_Init(void)
{
 80035a0:	b580      	push	{r7, lr}
 80035a2:	b088      	sub	sp, #32
 80035a4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80035a6:	f107 0310 	add.w	r3, r7, #16
 80035aa:	2200      	movs	r2, #0
 80035ac:	601a      	str	r2, [r3, #0]
 80035ae:	605a      	str	r2, [r3, #4]
 80035b0:	609a      	str	r2, [r3, #8]
 80035b2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80035b4:	1d3b      	adds	r3, r7, #4
 80035b6:	2200      	movs	r2, #0
 80035b8:	601a      	str	r2, [r3, #0]
 80035ba:	605a      	str	r2, [r3, #4]
 80035bc:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 80035be:	4b1d      	ldr	r3, [pc, #116]	@ (8003634 <MX_TIM5_Init+0x94>)
 80035c0:	4a1d      	ldr	r2, [pc, #116]	@ (8003638 <MX_TIM5_Init+0x98>)
 80035c2:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 170-1;
 80035c4:	4b1b      	ldr	r3, [pc, #108]	@ (8003634 <MX_TIM5_Init+0x94>)
 80035c6:	22a9      	movs	r2, #169	@ 0xa9
 80035c8:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 80035ca:	4b1a      	ldr	r3, [pc, #104]	@ (8003634 <MX_TIM5_Init+0x94>)
 80035cc:	2200      	movs	r2, #0
 80035ce:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 9999;
 80035d0:	4b18      	ldr	r3, [pc, #96]	@ (8003634 <MX_TIM5_Init+0x94>)
 80035d2:	f242 720f 	movw	r2, #9999	@ 0x270f
 80035d6:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80035d8:	4b16      	ldr	r3, [pc, #88]	@ (8003634 <MX_TIM5_Init+0x94>)
 80035da:	2200      	movs	r2, #0
 80035dc:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80035de:	4b15      	ldr	r3, [pc, #84]	@ (8003634 <MX_TIM5_Init+0x94>)
 80035e0:	2200      	movs	r2, #0
 80035e2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 80035e4:	4813      	ldr	r0, [pc, #76]	@ (8003634 <MX_TIM5_Init+0x94>)
 80035e6:	f004 fba9 	bl	8007d3c <HAL_TIM_Base_Init>
 80035ea:	4603      	mov	r3, r0
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d001      	beq.n	80035f4 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 80035f0:	f7ff fa19 	bl	8002a26 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80035f4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80035f8:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 80035fa:	f107 0310 	add.w	r3, r7, #16
 80035fe:	4619      	mov	r1, r3
 8003600:	480c      	ldr	r0, [pc, #48]	@ (8003634 <MX_TIM5_Init+0x94>)
 8003602:	f005 fa87 	bl	8008b14 <HAL_TIM_ConfigClockSource>
 8003606:	4603      	mov	r3, r0
 8003608:	2b00      	cmp	r3, #0
 800360a:	d001      	beq.n	8003610 <MX_TIM5_Init+0x70>
  {
    Error_Handler();
 800360c:	f7ff fa0b 	bl	8002a26 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003610:	2300      	movs	r3, #0
 8003612:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003614:	2300      	movs	r3, #0
 8003616:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8003618:	1d3b      	adds	r3, r7, #4
 800361a:	4619      	mov	r1, r3
 800361c:	4805      	ldr	r0, [pc, #20]	@ (8003634 <MX_TIM5_Init+0x94>)
 800361e:	f006 f9bb 	bl	8009998 <HAL_TIMEx_MasterConfigSynchronization>
 8003622:	4603      	mov	r3, r0
 8003624:	2b00      	cmp	r3, #0
 8003626:	d001      	beq.n	800362c <MX_TIM5_Init+0x8c>
  {
    Error_Handler();
 8003628:	f7ff f9fd 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 800362c:	bf00      	nop
 800362e:	3720      	adds	r7, #32
 8003630:	46bd      	mov	sp, r7
 8003632:	bd80      	pop	{r7, pc}
 8003634:	20000880 	.word	0x20000880
 8003638:	40000c00 	.word	0x40000c00

0800363c <MX_TIM6_Init>:
/* TIM6 init function */
void MX_TIM6_Init(void)
{
 800363c:	b580      	push	{r7, lr}
 800363e:	b084      	sub	sp, #16
 8003640:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003642:	1d3b      	adds	r3, r7, #4
 8003644:	2200      	movs	r2, #0
 8003646:	601a      	str	r2, [r3, #0]
 8003648:	605a      	str	r2, [r3, #4]
 800364a:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 800364c:	4b15      	ldr	r3, [pc, #84]	@ (80036a4 <MX_TIM6_Init+0x68>)
 800364e:	4a16      	ldr	r2, [pc, #88]	@ (80036a8 <MX_TIM6_Init+0x6c>)
 8003650:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 1700-1;
 8003652:	4b14      	ldr	r3, [pc, #80]	@ (80036a4 <MX_TIM6_Init+0x68>)
 8003654:	f240 62a3 	movw	r2, #1699	@ 0x6a3
 8003658:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800365a:	4b12      	ldr	r3, [pc, #72]	@ (80036a4 <MX_TIM6_Init+0x68>)
 800365c:	2200      	movs	r2, #0
 800365e:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 8003660:	4b10      	ldr	r3, [pc, #64]	@ (80036a4 <MX_TIM6_Init+0x68>)
 8003662:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8003666:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003668:	4b0e      	ldr	r3, [pc, #56]	@ (80036a4 <MX_TIM6_Init+0x68>)
 800366a:	2200      	movs	r2, #0
 800366c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 800366e:	480d      	ldr	r0, [pc, #52]	@ (80036a4 <MX_TIM6_Init+0x68>)
 8003670:	f004 fb64 	bl	8007d3c <HAL_TIM_Base_Init>
 8003674:	4603      	mov	r3, r0
 8003676:	2b00      	cmp	r3, #0
 8003678:	d001      	beq.n	800367e <MX_TIM6_Init+0x42>
  {
    Error_Handler();
 800367a:	f7ff f9d4 	bl	8002a26 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800367e:	2300      	movs	r3, #0
 8003680:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003682:	2300      	movs	r3, #0
 8003684:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8003686:	1d3b      	adds	r3, r7, #4
 8003688:	4619      	mov	r1, r3
 800368a:	4806      	ldr	r0, [pc, #24]	@ (80036a4 <MX_TIM6_Init+0x68>)
 800368c:	f006 f984 	bl	8009998 <HAL_TIMEx_MasterConfigSynchronization>
 8003690:	4603      	mov	r3, r0
 8003692:	2b00      	cmp	r3, #0
 8003694:	d001      	beq.n	800369a <MX_TIM6_Init+0x5e>
  {
    Error_Handler();
 8003696:	f7ff f9c6 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 800369a:	bf00      	nop
 800369c:	3710      	adds	r7, #16
 800369e:	46bd      	mov	sp, r7
 80036a0:	bd80      	pop	{r7, pc}
 80036a2:	bf00      	nop
 80036a4:	200008cc 	.word	0x200008cc
 80036a8:	40001000 	.word	0x40001000

080036ac <MX_TIM16_Init>:
/* TIM16 init function */
void MX_TIM16_Init(void)
{
 80036ac:	b580      	push	{r7, lr}
 80036ae:	b084      	sub	sp, #16
 80036b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM16_Init 0 */

  /* USER CODE END TIM16_Init 0 */

  TIM_IC_InitTypeDef sConfigIC = {0};
 80036b2:	463b      	mov	r3, r7
 80036b4:	2200      	movs	r2, #0
 80036b6:	601a      	str	r2, [r3, #0]
 80036b8:	605a      	str	r2, [r3, #4]
 80036ba:	609a      	str	r2, [r3, #8]
 80036bc:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM16_Init 1 */

  /* USER CODE END TIM16_Init 1 */
  htim16.Instance = TIM16;
 80036be:	4b1e      	ldr	r3, [pc, #120]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036c0:	4a1e      	ldr	r2, [pc, #120]	@ (800373c <MX_TIM16_Init+0x90>)
 80036c2:	601a      	str	r2, [r3, #0]
  htim16.Init.Prescaler = 170-1;
 80036c4:	4b1c      	ldr	r3, [pc, #112]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036c6:	22a9      	movs	r2, #169	@ 0xa9
 80036c8:	605a      	str	r2, [r3, #4]
  htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 80036ca:	4b1b      	ldr	r3, [pc, #108]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036cc:	2200      	movs	r2, #0
 80036ce:	609a      	str	r2, [r3, #8]
  htim16.Init.Period = 10000;
 80036d0:	4b19      	ldr	r3, [pc, #100]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036d2:	f242 7210 	movw	r2, #10000	@ 0x2710
 80036d6:	60da      	str	r2, [r3, #12]
  htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80036d8:	4b17      	ldr	r3, [pc, #92]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036da:	2200      	movs	r2, #0
 80036dc:	611a      	str	r2, [r3, #16]
  htim16.Init.RepetitionCounter = 0;
 80036de:	4b16      	ldr	r3, [pc, #88]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036e0:	2200      	movs	r2, #0
 80036e2:	615a      	str	r2, [r3, #20]
  htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80036e4:	4b14      	ldr	r3, [pc, #80]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036e6:	2200      	movs	r2, #0
 80036e8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 80036ea:	4813      	ldr	r0, [pc, #76]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036ec:	f004 fb26 	bl	8007d3c <HAL_TIM_Base_Init>
 80036f0:	4603      	mov	r3, r0
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	d001      	beq.n	80036fa <MX_TIM16_Init+0x4e>
  {
    Error_Handler();
 80036f6:	f7ff f996 	bl	8002a26 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim16) != HAL_OK)
 80036fa:	480f      	ldr	r0, [pc, #60]	@ (8003738 <MX_TIM16_Init+0x8c>)
 80036fc:	f004 fd58 	bl	80081b0 <HAL_TIM_IC_Init>
 8003700:	4603      	mov	r3, r0
 8003702:	2b00      	cmp	r3, #0
 8003704:	d001      	beq.n	800370a <MX_TIM16_Init+0x5e>
  {
    Error_Handler();
 8003706:	f7ff f98e 	bl	8002a26 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 800370a:	2300      	movs	r3, #0
 800370c:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800370e:	2301      	movs	r3, #1
 8003710:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8003712:	2300      	movs	r3, #0
 8003714:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 15;
 8003716:	230f      	movs	r3, #15
 8003718:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim16, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 800371a:	463b      	mov	r3, r7
 800371c:	2200      	movs	r2, #0
 800371e:	4619      	mov	r1, r3
 8003720:	4805      	ldr	r0, [pc, #20]	@ (8003738 <MX_TIM16_Init+0x8c>)
 8003722:	f005 f846 	bl	80087b2 <HAL_TIM_IC_ConfigChannel>
 8003726:	4603      	mov	r3, r0
 8003728:	2b00      	cmp	r3, #0
 800372a:	d001      	beq.n	8003730 <MX_TIM16_Init+0x84>
  {
    Error_Handler();
 800372c:	f7ff f97b 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM16_Init 2 */

  /* USER CODE END TIM16_Init 2 */

}
 8003730:	bf00      	nop
 8003732:	3710      	adds	r7, #16
 8003734:	46bd      	mov	sp, r7
 8003736:	bd80      	pop	{r7, pc}
 8003738:	20000918 	.word	0x20000918
 800373c:	40014400 	.word	0x40014400

08003740 <MX_TIM17_Init>:
/* TIM17 init function */
void MX_TIM17_Init(void)
{
 8003740:	b580      	push	{r7, lr}
 8003742:	b084      	sub	sp, #16
 8003744:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM17_Init 0 */

  /* USER CODE END TIM17_Init 0 */

  TIM_IC_InitTypeDef sConfigIC = {0};
 8003746:	463b      	mov	r3, r7
 8003748:	2200      	movs	r2, #0
 800374a:	601a      	str	r2, [r3, #0]
 800374c:	605a      	str	r2, [r3, #4]
 800374e:	609a      	str	r2, [r3, #8]
 8003750:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 8003752:	4b1e      	ldr	r3, [pc, #120]	@ (80037cc <MX_TIM17_Init+0x8c>)
 8003754:	4a1e      	ldr	r2, [pc, #120]	@ (80037d0 <MX_TIM17_Init+0x90>)
 8003756:	601a      	str	r2, [r3, #0]
  htim17.Init.Prescaler = 170-1;
 8003758:	4b1c      	ldr	r3, [pc, #112]	@ (80037cc <MX_TIM17_Init+0x8c>)
 800375a:	22a9      	movs	r2, #169	@ 0xa9
 800375c:	605a      	str	r2, [r3, #4]
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 800375e:	4b1b      	ldr	r3, [pc, #108]	@ (80037cc <MX_TIM17_Init+0x8c>)
 8003760:	2200      	movs	r2, #0
 8003762:	609a      	str	r2, [r3, #8]
  htim17.Init.Period = 10000;
 8003764:	4b19      	ldr	r3, [pc, #100]	@ (80037cc <MX_TIM17_Init+0x8c>)
 8003766:	f242 7210 	movw	r2, #10000	@ 0x2710
 800376a:	60da      	str	r2, [r3, #12]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800376c:	4b17      	ldr	r3, [pc, #92]	@ (80037cc <MX_TIM17_Init+0x8c>)
 800376e:	2200      	movs	r2, #0
 8003770:	611a      	str	r2, [r3, #16]
  htim17.Init.RepetitionCounter = 0;
 8003772:	4b16      	ldr	r3, [pc, #88]	@ (80037cc <MX_TIM17_Init+0x8c>)
 8003774:	2200      	movs	r2, #0
 8003776:	615a      	str	r2, [r3, #20]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003778:	4b14      	ldr	r3, [pc, #80]	@ (80037cc <MX_TIM17_Init+0x8c>)
 800377a:	2200      	movs	r2, #0
 800377c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 800377e:	4813      	ldr	r0, [pc, #76]	@ (80037cc <MX_TIM17_Init+0x8c>)
 8003780:	f004 fadc 	bl	8007d3c <HAL_TIM_Base_Init>
 8003784:	4603      	mov	r3, r0
 8003786:	2b00      	cmp	r3, #0
 8003788:	d001      	beq.n	800378e <MX_TIM17_Init+0x4e>
  {
    Error_Handler();
 800378a:	f7ff f94c 	bl	8002a26 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim17) != HAL_OK)
 800378e:	480f      	ldr	r0, [pc, #60]	@ (80037cc <MX_TIM17_Init+0x8c>)
 8003790:	f004 fd0e 	bl	80081b0 <HAL_TIM_IC_Init>
 8003794:	4603      	mov	r3, r0
 8003796:	2b00      	cmp	r3, #0
 8003798:	d001      	beq.n	800379e <MX_TIM17_Init+0x5e>
  {
    Error_Handler();
 800379a:	f7ff f944 	bl	8002a26 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 800379e:	2300      	movs	r3, #0
 80037a0:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 80037a2:	2301      	movs	r3, #1
 80037a4:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 80037a6:	2300      	movs	r3, #0
 80037a8:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 15;
 80037aa:	230f      	movs	r3, #15
 80037ac:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim17, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 80037ae:	463b      	mov	r3, r7
 80037b0:	2200      	movs	r2, #0
 80037b2:	4619      	mov	r1, r3
 80037b4:	4805      	ldr	r0, [pc, #20]	@ (80037cc <MX_TIM17_Init+0x8c>)
 80037b6:	f004 fffc 	bl	80087b2 <HAL_TIM_IC_ConfigChannel>
 80037ba:	4603      	mov	r3, r0
 80037bc:	2b00      	cmp	r3, #0
 80037be:	d001      	beq.n	80037c4 <MX_TIM17_Init+0x84>
  {
    Error_Handler();
 80037c0:	f7ff f931 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 80037c4:	bf00      	nop
 80037c6:	3710      	adds	r7, #16
 80037c8:	46bd      	mov	sp, r7
 80037ca:	bd80      	pop	{r7, pc}
 80037cc:	20000964 	.word	0x20000964
 80037d0:	40014800 	.word	0x40014800

080037d4 <MX_TIM20_Init>:
/* TIM20 init function */
void MX_TIM20_Init(void)
{
 80037d4:	b580      	push	{r7, lr}
 80037d6:	b09c      	sub	sp, #112	@ 0x70
 80037d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM20_Init 0 */

  /* USER CODE END TIM20_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80037da:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 80037de:	2200      	movs	r2, #0
 80037e0:	601a      	str	r2, [r3, #0]
 80037e2:	605a      	str	r2, [r3, #4]
 80037e4:	609a      	str	r2, [r3, #8]
 80037e6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80037e8:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80037ec:	2200      	movs	r2, #0
 80037ee:	601a      	str	r2, [r3, #0]
 80037f0:	605a      	str	r2, [r3, #4]
 80037f2:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80037f4:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80037f8:	2200      	movs	r2, #0
 80037fa:	601a      	str	r2, [r3, #0]
 80037fc:	605a      	str	r2, [r3, #4]
 80037fe:	609a      	str	r2, [r3, #8]
 8003800:	60da      	str	r2, [r3, #12]
 8003802:	611a      	str	r2, [r3, #16]
 8003804:	615a      	str	r2, [r3, #20]
 8003806:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8003808:	1d3b      	adds	r3, r7, #4
 800380a:	2234      	movs	r2, #52	@ 0x34
 800380c:	2100      	movs	r1, #0
 800380e:	4618      	mov	r0, r3
 8003810:	f009 fab7 	bl	800cd82 <memset>

  /* USER CODE BEGIN TIM20_Init 1 */

  /* USER CODE END TIM20_Init 1 */
  htim20.Instance = TIM20;
 8003814:	4b46      	ldr	r3, [pc, #280]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003816:	4a47      	ldr	r2, [pc, #284]	@ (8003934 <MX_TIM20_Init+0x160>)
 8003818:	601a      	str	r2, [r3, #0]
  htim20.Init.Prescaler = 260-1;
 800381a:	4b45      	ldr	r3, [pc, #276]	@ (8003930 <MX_TIM20_Init+0x15c>)
 800381c:	f240 1203 	movw	r2, #259	@ 0x103
 8003820:	605a      	str	r2, [r3, #4]
  htim20.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003822:	4b43      	ldr	r3, [pc, #268]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003824:	2200      	movs	r2, #0
 8003826:	609a      	str	r2, [r3, #8]
  htim20.Init.Period = 65535;
 8003828:	4b41      	ldr	r3, [pc, #260]	@ (8003930 <MX_TIM20_Init+0x15c>)
 800382a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800382e:	60da      	str	r2, [r3, #12]
  htim20.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003830:	4b3f      	ldr	r3, [pc, #252]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003832:	2200      	movs	r2, #0
 8003834:	611a      	str	r2, [r3, #16]
  htim20.Init.RepetitionCounter = 0;
 8003836:	4b3e      	ldr	r3, [pc, #248]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003838:	2200      	movs	r2, #0
 800383a:	615a      	str	r2, [r3, #20]
  htim20.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800383c:	4b3c      	ldr	r3, [pc, #240]	@ (8003930 <MX_TIM20_Init+0x15c>)
 800383e:	2200      	movs	r2, #0
 8003840:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim20) != HAL_OK)
 8003842:	483b      	ldr	r0, [pc, #236]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003844:	f004 fa7a 	bl	8007d3c <HAL_TIM_Base_Init>
 8003848:	4603      	mov	r3, r0
 800384a:	2b00      	cmp	r3, #0
 800384c:	d001      	beq.n	8003852 <MX_TIM20_Init+0x7e>
  {
    Error_Handler();
 800384e:	f7ff f8ea 	bl	8002a26 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003852:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003856:	663b      	str	r3, [r7, #96]	@ 0x60
  if (HAL_TIM_ConfigClockSource(&htim20, &sClockSourceConfig) != HAL_OK)
 8003858:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800385c:	4619      	mov	r1, r3
 800385e:	4834      	ldr	r0, [pc, #208]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003860:	f005 f958 	bl	8008b14 <HAL_TIM_ConfigClockSource>
 8003864:	4603      	mov	r3, r0
 8003866:	2b00      	cmp	r3, #0
 8003868:	d001      	beq.n	800386e <MX_TIM20_Init+0x9a>
  {
    Error_Handler();
 800386a:	f7ff f8dc 	bl	8002a26 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim20) != HAL_OK)
 800386e:	4830      	ldr	r0, [pc, #192]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003870:	f004 fb34 	bl	8007edc <HAL_TIM_PWM_Init>
 8003874:	4603      	mov	r3, r0
 8003876:	2b00      	cmp	r3, #0
 8003878:	d001      	beq.n	800387e <MX_TIM20_Init+0xaa>
  {
    Error_Handler();
 800387a:	f7ff f8d4 	bl	8002a26 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800387e:	2300      	movs	r3, #0
 8003880:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8003882:	2300      	movs	r3, #0
 8003884:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003886:	2300      	movs	r3, #0
 8003888:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim20, &sMasterConfig) != HAL_OK)
 800388a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800388e:	4619      	mov	r1, r3
 8003890:	4827      	ldr	r0, [pc, #156]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003892:	f006 f881 	bl	8009998 <HAL_TIMEx_MasterConfigSynchronization>
 8003896:	4603      	mov	r3, r0
 8003898:	2b00      	cmp	r3, #0
 800389a:	d001      	beq.n	80038a0 <MX_TIM20_Init+0xcc>
  {
    Error_Handler();
 800389c:	f7ff f8c3 	bl	8002a26 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80038a0:	2360      	movs	r3, #96	@ 0x60
 80038a2:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 0;
 80038a4:	2300      	movs	r3, #0
 80038a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80038a8:	2300      	movs	r3, #0
 80038aa:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80038ac:	2300      	movs	r3, #0
 80038ae:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80038b0:	2300      	movs	r3, #0
 80038b2:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 80038b4:	2300      	movs	r3, #0
 80038b6:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 80038b8:	2300      	movs	r3, #0
 80038ba:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim20, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80038bc:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 80038c0:	2200      	movs	r2, #0
 80038c2:	4619      	mov	r1, r3
 80038c4:	481a      	ldr	r0, [pc, #104]	@ (8003930 <MX_TIM20_Init+0x15c>)
 80038c6:	f005 f811 	bl	80088ec <HAL_TIM_PWM_ConfigChannel>
 80038ca:	4603      	mov	r3, r0
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d001      	beq.n	80038d4 <MX_TIM20_Init+0x100>
  {
    Error_Handler();
 80038d0:	f7ff f8a9 	bl	8002a26 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80038d4:	2300      	movs	r3, #0
 80038d6:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80038d8:	2300      	movs	r3, #0
 80038da:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80038dc:	2300      	movs	r3, #0
 80038de:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80038e0:	2300      	movs	r3, #0
 80038e2:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80038e4:	2300      	movs	r3, #0
 80038e6:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80038e8:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80038ec:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 80038ee:	2300      	movs	r3, #0
 80038f0:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 80038f2:	2300      	movs	r3, #0
 80038f4:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 80038f6:	2300      	movs	r3, #0
 80038f8:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 80038fa:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80038fe:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 8003900:	2300      	movs	r3, #0
 8003902:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 8003904:	2300      	movs	r3, #0
 8003906:	633b      	str	r3, [r7, #48]	@ 0x30
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8003908:	2300      	movs	r3, #0
 800390a:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim20, &sBreakDeadTimeConfig) != HAL_OK)
 800390c:	1d3b      	adds	r3, r7, #4
 800390e:	4619      	mov	r1, r3
 8003910:	4807      	ldr	r0, [pc, #28]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003912:	f006 f8d7 	bl	8009ac4 <HAL_TIMEx_ConfigBreakDeadTime>
 8003916:	4603      	mov	r3, r0
 8003918:	2b00      	cmp	r3, #0
 800391a:	d001      	beq.n	8003920 <MX_TIM20_Init+0x14c>
  {
    Error_Handler();
 800391c:	f7ff f883 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN TIM20_Init 2 */

  /* USER CODE END TIM20_Init 2 */
  HAL_TIM_MspPostInit(&htim20);
 8003920:	4803      	ldr	r0, [pc, #12]	@ (8003930 <MX_TIM20_Init+0x15c>)
 8003922:	f000 f95b 	bl	8003bdc <HAL_TIM_MspPostInit>

}
 8003926:	bf00      	nop
 8003928:	3770      	adds	r7, #112	@ 0x70
 800392a:	46bd      	mov	sp, r7
 800392c:	bd80      	pop	{r7, pc}
 800392e:	bf00      	nop
 8003930:	200009b0 	.word	0x200009b0
 8003934:	40015000 	.word	0x40015000

08003938 <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 8003938:	b580      	push	{r7, lr}
 800393a:	b084      	sub	sp, #16
 800393c:	af00      	add	r7, sp, #0
 800393e:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM1)
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	4a11      	ldr	r2, [pc, #68]	@ (800398c <HAL_TIM_PWM_MspInit+0x54>)
 8003946:	4293      	cmp	r3, r2
 8003948:	d11b      	bne.n	8003982 <HAL_TIM_PWM_MspInit+0x4a>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800394a:	4b11      	ldr	r3, [pc, #68]	@ (8003990 <HAL_TIM_PWM_MspInit+0x58>)
 800394c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800394e:	4a10      	ldr	r2, [pc, #64]	@ (8003990 <HAL_TIM_PWM_MspInit+0x58>)
 8003950:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8003954:	6613      	str	r3, [r2, #96]	@ 0x60
 8003956:	4b0e      	ldr	r3, [pc, #56]	@ (8003990 <HAL_TIM_PWM_MspInit+0x58>)
 8003958:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800395a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800395e:	60fb      	str	r3, [r7, #12]
 8003960:	68fb      	ldr	r3, [r7, #12]

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 0, 0);
 8003962:	2200      	movs	r2, #0
 8003964:	2100      	movs	r1, #0
 8003966:	2019      	movs	r0, #25
 8003968:	f000 fddb 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 800396c:	2019      	movs	r0, #25
 800396e:	f000 fdf2 	bl	8004556 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 0, 0);
 8003972:	2200      	movs	r2, #0
 8003974:	2100      	movs	r1, #0
 8003976:	201a      	movs	r0, #26
 8003978:	f000 fdd3 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 800397c:	201a      	movs	r0, #26
 800397e:	f000 fdea 	bl	8004556 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8003982:	bf00      	nop
 8003984:	3710      	adds	r7, #16
 8003986:	46bd      	mov	sp, r7
 8003988:	bd80      	pop	{r7, pc}
 800398a:	bf00      	nop
 800398c:	40012c00 	.word	0x40012c00
 8003990:	40021000 	.word	0x40021000

08003994 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8003994:	b580      	push	{r7, lr}
 8003996:	b092      	sub	sp, #72	@ 0x48
 8003998:	af00      	add	r7, sp, #0
 800399a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800399c:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 80039a0:	2200      	movs	r2, #0
 80039a2:	601a      	str	r2, [r3, #0]
 80039a4:	605a      	str	r2, [r3, #4]
 80039a6:	609a      	str	r2, [r3, #8]
 80039a8:	60da      	str	r2, [r3, #12]
 80039aa:	611a      	str	r2, [r3, #16]
  if(tim_baseHandle->Instance==TIM2)
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80039b4:	d114      	bne.n	80039e0 <HAL_TIM_Base_MspInit+0x4c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80039b6:	4b80      	ldr	r3, [pc, #512]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 80039b8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039ba:	4a7f      	ldr	r2, [pc, #508]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 80039bc:	f043 0301 	orr.w	r3, r3, #1
 80039c0:	6593      	str	r3, [r2, #88]	@ 0x58
 80039c2:	4b7d      	ldr	r3, [pc, #500]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 80039c4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039c6:	f003 0301 	and.w	r3, r3, #1
 80039ca:	633b      	str	r3, [r7, #48]	@ 0x30
 80039cc:	6b3b      	ldr	r3, [r7, #48]	@ 0x30

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80039ce:	2200      	movs	r2, #0
 80039d0:	2100      	movs	r1, #0
 80039d2:	201c      	movs	r0, #28
 80039d4:	f000 fda5 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80039d8:	201c      	movs	r0, #28
 80039da:	f000 fdbc 	bl	8004556 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_TIM20_CLK_ENABLE();
  /* USER CODE BEGIN TIM20_MspInit 1 */

  /* USER CODE END TIM20_MspInit 1 */
  }
}
 80039de:	e0e6      	b.n	8003bae <HAL_TIM_Base_MspInit+0x21a>
  else if(tim_baseHandle->Instance==TIM3)
 80039e0:	687b      	ldr	r3, [r7, #4]
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	4a75      	ldr	r2, [pc, #468]	@ (8003bbc <HAL_TIM_Base_MspInit+0x228>)
 80039e6:	4293      	cmp	r3, r2
 80039e8:	d130      	bne.n	8003a4c <HAL_TIM_Base_MspInit+0xb8>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80039ea:	4b73      	ldr	r3, [pc, #460]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 80039ec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039ee:	4a72      	ldr	r2, [pc, #456]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 80039f0:	f043 0302 	orr.w	r3, r3, #2
 80039f4:	6593      	str	r3, [r2, #88]	@ 0x58
 80039f6:	4b70      	ldr	r3, [pc, #448]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 80039f8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039fa:	f003 0302 	and.w	r3, r3, #2
 80039fe:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003a00:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003a02:	4b6d      	ldr	r3, [pc, #436]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a04:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003a06:	4a6c      	ldr	r2, [pc, #432]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a08:	f043 0304 	orr.w	r3, r3, #4
 8003a0c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003a0e:	4b6a      	ldr	r3, [pc, #424]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003a12:	f003 0304 	and.w	r3, r3, #4
 8003a16:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003a18:	6abb      	ldr	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8003a1a:	2340      	movs	r3, #64	@ 0x40
 8003a1c:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003a1e:	2302      	movs	r3, #2
 8003a20:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003a22:	2300      	movs	r3, #0
 8003a24:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003a26:	2300      	movs	r3, #0
 8003a28:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8003a2a:	2302      	movs	r3, #2
 8003a2c:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003a2e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8003a32:	4619      	mov	r1, r3
 8003a34:	4862      	ldr	r0, [pc, #392]	@ (8003bc0 <HAL_TIM_Base_MspInit+0x22c>)
 8003a36:	f001 f8f7 	bl	8004c28 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM3_IRQn, 1, 0);
 8003a3a:	2200      	movs	r2, #0
 8003a3c:	2101      	movs	r1, #1
 8003a3e:	201d      	movs	r0, #29
 8003a40:	f000 fd6f 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8003a44:	201d      	movs	r0, #29
 8003a46:	f000 fd86 	bl	8004556 <HAL_NVIC_EnableIRQ>
}
 8003a4a:	e0b0      	b.n	8003bae <HAL_TIM_Base_MspInit+0x21a>
  else if(tim_baseHandle->Instance==TIM5)
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	4a5c      	ldr	r2, [pc, #368]	@ (8003bc4 <HAL_TIM_Base_MspInit+0x230>)
 8003a52:	4293      	cmp	r3, r2
 8003a54:	d114      	bne.n	8003a80 <HAL_TIM_Base_MspInit+0xec>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8003a56:	4b58      	ldr	r3, [pc, #352]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a58:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a5a:	4a57      	ldr	r2, [pc, #348]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a5c:	f043 0308 	orr.w	r3, r3, #8
 8003a60:	6593      	str	r3, [r2, #88]	@ 0x58
 8003a62:	4b55      	ldr	r3, [pc, #340]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a64:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a66:	f003 0308 	and.w	r3, r3, #8
 8003a6a:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a6c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
    HAL_NVIC_SetPriority(TIM5_IRQn, 0, 0);
 8003a6e:	2200      	movs	r2, #0
 8003a70:	2100      	movs	r1, #0
 8003a72:	2032      	movs	r0, #50	@ 0x32
 8003a74:	f000 fd55 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM5_IRQn);
 8003a78:	2032      	movs	r0, #50	@ 0x32
 8003a7a:	f000 fd6c 	bl	8004556 <HAL_NVIC_EnableIRQ>
}
 8003a7e:	e096      	b.n	8003bae <HAL_TIM_Base_MspInit+0x21a>
  else if(tim_baseHandle->Instance==TIM6)
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	4a50      	ldr	r2, [pc, #320]	@ (8003bc8 <HAL_TIM_Base_MspInit+0x234>)
 8003a86:	4293      	cmp	r3, r2
 8003a88:	d114      	bne.n	8003ab4 <HAL_TIM_Base_MspInit+0x120>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8003a8a:	4b4b      	ldr	r3, [pc, #300]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a8c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a8e:	4a4a      	ldr	r2, [pc, #296]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a90:	f043 0310 	orr.w	r3, r3, #16
 8003a94:	6593      	str	r3, [r2, #88]	@ 0x58
 8003a96:	4b48      	ldr	r3, [pc, #288]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003a98:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003a9a:	f003 0310 	and.w	r3, r3, #16
 8003a9e:	623b      	str	r3, [r7, #32]
 8003aa0:	6a3b      	ldr	r3, [r7, #32]
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 8003aa2:	2200      	movs	r2, #0
 8003aa4:	2100      	movs	r1, #0
 8003aa6:	2036      	movs	r0, #54	@ 0x36
 8003aa8:	f000 fd3b 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8003aac:	2036      	movs	r0, #54	@ 0x36
 8003aae:	f000 fd52 	bl	8004556 <HAL_NVIC_EnableIRQ>
}
 8003ab2:	e07c      	b.n	8003bae <HAL_TIM_Base_MspInit+0x21a>
  else if(tim_baseHandle->Instance==TIM16)
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	4a44      	ldr	r2, [pc, #272]	@ (8003bcc <HAL_TIM_Base_MspInit+0x238>)
 8003aba:	4293      	cmp	r3, r2
 8003abc:	d130      	bne.n	8003b20 <HAL_TIM_Base_MspInit+0x18c>
    __HAL_RCC_TIM16_CLK_ENABLE();
 8003abe:	4b3e      	ldr	r3, [pc, #248]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003ac0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ac2:	4a3d      	ldr	r2, [pc, #244]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003ac4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003ac8:	6613      	str	r3, [r2, #96]	@ 0x60
 8003aca:	4b3b      	ldr	r3, [pc, #236]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003acc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ace:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003ad2:	61fb      	str	r3, [r7, #28]
 8003ad4:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003ad6:	4b38      	ldr	r3, [pc, #224]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003ad8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003ada:	4a37      	ldr	r2, [pc, #220]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003adc:	f043 0302 	orr.w	r3, r3, #2
 8003ae0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003ae2:	4b35      	ldr	r3, [pc, #212]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003ae4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003ae6:	f003 0302 	and.w	r3, r3, #2
 8003aea:	61bb      	str	r3, [r7, #24]
 8003aec:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8003aee:	2310      	movs	r3, #16
 8003af0:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003af2:	2302      	movs	r3, #2
 8003af4:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003af6:	2300      	movs	r3, #0
 8003af8:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003afa:	2300      	movs	r3, #0
 8003afc:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM16;
 8003afe:	2301      	movs	r3, #1
 8003b00:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003b02:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8003b06:	4619      	mov	r1, r3
 8003b08:	4831      	ldr	r0, [pc, #196]	@ (8003bd0 <HAL_TIM_Base_MspInit+0x23c>)
 8003b0a:	f001 f88d 	bl	8004c28 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 0, 0);
 8003b0e:	2200      	movs	r2, #0
 8003b10:	2100      	movs	r1, #0
 8003b12:	2019      	movs	r0, #25
 8003b14:	f000 fd05 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 8003b18:	2019      	movs	r0, #25
 8003b1a:	f000 fd1c 	bl	8004556 <HAL_NVIC_EnableIRQ>
}
 8003b1e:	e046      	b.n	8003bae <HAL_TIM_Base_MspInit+0x21a>
  else if(tim_baseHandle->Instance==TIM17)
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	4a2b      	ldr	r2, [pc, #172]	@ (8003bd4 <HAL_TIM_Base_MspInit+0x240>)
 8003b26:	4293      	cmp	r3, r2
 8003b28:	d130      	bne.n	8003b8c <HAL_TIM_Base_MspInit+0x1f8>
    __HAL_RCC_TIM17_CLK_ENABLE();
 8003b2a:	4b23      	ldr	r3, [pc, #140]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b2c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003b2e:	4a22      	ldr	r2, [pc, #136]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b30:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8003b34:	6613      	str	r3, [r2, #96]	@ 0x60
 8003b36:	4b20      	ldr	r3, [pc, #128]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b38:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003b3a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003b3e:	617b      	str	r3, [r7, #20]
 8003b40:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003b42:	4b1d      	ldr	r3, [pc, #116]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b44:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003b46:	4a1c      	ldr	r2, [pc, #112]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b48:	f043 0302 	orr.w	r3, r3, #2
 8003b4c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003b4e:	4b1a      	ldr	r3, [pc, #104]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003b52:	f003 0302 	and.w	r3, r3, #2
 8003b56:	613b      	str	r3, [r7, #16]
 8003b58:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8003b5a:	2320      	movs	r3, #32
 8003b5c:	637b      	str	r3, [r7, #52]	@ 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003b5e:	2302      	movs	r3, #2
 8003b60:	63bb      	str	r3, [r7, #56]	@ 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003b62:	2300      	movs	r3, #0
 8003b64:	63fb      	str	r3, [r7, #60]	@ 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003b66:	2300      	movs	r3, #0
 8003b68:	643b      	str	r3, [r7, #64]	@ 0x40
    GPIO_InitStruct.Alternate = GPIO_AF10_TIM17;
 8003b6a:	230a      	movs	r3, #10
 8003b6c:	647b      	str	r3, [r7, #68]	@ 0x44
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003b6e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8003b72:	4619      	mov	r1, r3
 8003b74:	4816      	ldr	r0, [pc, #88]	@ (8003bd0 <HAL_TIM_Base_MspInit+0x23c>)
 8003b76:	f001 f857 	bl	8004c28 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 0, 0);
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	2100      	movs	r1, #0
 8003b7e:	201a      	movs	r0, #26
 8003b80:	f000 fccf 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 8003b84:	201a      	movs	r0, #26
 8003b86:	f000 fce6 	bl	8004556 <HAL_NVIC_EnableIRQ>
}
 8003b8a:	e010      	b.n	8003bae <HAL_TIM_Base_MspInit+0x21a>
  else if(tim_baseHandle->Instance==TIM20)
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	4a11      	ldr	r2, [pc, #68]	@ (8003bd8 <HAL_TIM_Base_MspInit+0x244>)
 8003b92:	4293      	cmp	r3, r2
 8003b94:	d10b      	bne.n	8003bae <HAL_TIM_Base_MspInit+0x21a>
    __HAL_RCC_TIM20_CLK_ENABLE();
 8003b96:	4b08      	ldr	r3, [pc, #32]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b98:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003b9a:	4a07      	ldr	r2, [pc, #28]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003b9c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003ba0:	6613      	str	r3, [r2, #96]	@ 0x60
 8003ba2:	4b05      	ldr	r3, [pc, #20]	@ (8003bb8 <HAL_TIM_Base_MspInit+0x224>)
 8003ba4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003ba6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003baa:	60fb      	str	r3, [r7, #12]
 8003bac:	68fb      	ldr	r3, [r7, #12]
}
 8003bae:	bf00      	nop
 8003bb0:	3748      	adds	r7, #72	@ 0x48
 8003bb2:	46bd      	mov	sp, r7
 8003bb4:	bd80      	pop	{r7, pc}
 8003bb6:	bf00      	nop
 8003bb8:	40021000 	.word	0x40021000
 8003bbc:	40000400 	.word	0x40000400
 8003bc0:	48000800 	.word	0x48000800
 8003bc4:	40000c00 	.word	0x40000c00
 8003bc8:	40001000 	.word	0x40001000
 8003bcc:	40014400 	.word	0x40014400
 8003bd0:	48000400 	.word	0x48000400
 8003bd4:	40014800 	.word	0x40014800
 8003bd8:	40015000 	.word	0x40015000

08003bdc <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8003bdc:	b580      	push	{r7, lr}
 8003bde:	b08a      	sub	sp, #40	@ 0x28
 8003be0:	af00      	add	r7, sp, #0
 8003be2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003be4:	f107 0314 	add.w	r3, r7, #20
 8003be8:	2200      	movs	r2, #0
 8003bea:	601a      	str	r2, [r3, #0]
 8003bec:	605a      	str	r2, [r3, #4]
 8003bee:	609a      	str	r2, [r3, #8]
 8003bf0:	60da      	str	r2, [r3, #12]
 8003bf2:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM1)
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	681b      	ldr	r3, [r3, #0]
 8003bf8:	4a22      	ldr	r2, [pc, #136]	@ (8003c84 <HAL_TIM_MspPostInit+0xa8>)
 8003bfa:	4293      	cmp	r3, r2
 8003bfc:	d11c      	bne.n	8003c38 <HAL_TIM_MspPostInit+0x5c>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8003bfe:	4b22      	ldr	r3, [pc, #136]	@ (8003c88 <HAL_TIM_MspPostInit+0xac>)
 8003c00:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c02:	4a21      	ldr	r2, [pc, #132]	@ (8003c88 <HAL_TIM_MspPostInit+0xac>)
 8003c04:	f043 0304 	orr.w	r3, r3, #4
 8003c08:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003c0a:	4b1f      	ldr	r3, [pc, #124]	@ (8003c88 <HAL_TIM_MspPostInit+0xac>)
 8003c0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c0e:	f003 0304 	and.w	r3, r3, #4
 8003c12:	613b      	str	r3, [r7, #16]
 8003c14:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PC0     ------> TIM1_CH1
    PC1     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = Motor_Esq_PWM_Pin|Motor_Dir_PWM_Pin;
 8003c16:	2303      	movs	r3, #3
 8003c18:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003c1a:	2302      	movs	r3, #2
 8003c1c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003c1e:	2300      	movs	r3, #0
 8003c20:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003c22:	2300      	movs	r3, #0
 8003c24:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 8003c26:	2302      	movs	r3, #2
 8003c28:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8003c2a:	f107 0314 	add.w	r3, r7, #20
 8003c2e:	4619      	mov	r1, r3
 8003c30:	4816      	ldr	r0, [pc, #88]	@ (8003c8c <HAL_TIM_MspPostInit+0xb0>)
 8003c32:	f000 fff9 	bl	8004c28 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM20_MspPostInit 1 */

  /* USER CODE END TIM20_MspPostInit 1 */
  }

}
 8003c36:	e020      	b.n	8003c7a <HAL_TIM_MspPostInit+0x9e>
  else if(timHandle->Instance==TIM20)
 8003c38:	687b      	ldr	r3, [r7, #4]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	4a14      	ldr	r2, [pc, #80]	@ (8003c90 <HAL_TIM_MspPostInit+0xb4>)
 8003c3e:	4293      	cmp	r3, r2
 8003c40:	d11b      	bne.n	8003c7a <HAL_TIM_MspPostInit+0x9e>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003c42:	4b11      	ldr	r3, [pc, #68]	@ (8003c88 <HAL_TIM_MspPostInit+0xac>)
 8003c44:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c46:	4a10      	ldr	r2, [pc, #64]	@ (8003c88 <HAL_TIM_MspPostInit+0xac>)
 8003c48:	f043 0302 	orr.w	r3, r3, #2
 8003c4c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003c4e:	4b0e      	ldr	r3, [pc, #56]	@ (8003c88 <HAL_TIM_MspPostInit+0xac>)
 8003c50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003c52:	f003 0302 	and.w	r3, r3, #2
 8003c56:	60fb      	str	r3, [r7, #12]
 8003c58:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8003c5a:	2304      	movs	r3, #4
 8003c5c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003c5e:	2302      	movs	r3, #2
 8003c60:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003c62:	2300      	movs	r3, #0
 8003c64:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003c66:	2300      	movs	r3, #0
 8003c68:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM20;
 8003c6a:	2303      	movs	r3, #3
 8003c6c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003c6e:	f107 0314 	add.w	r3, r7, #20
 8003c72:	4619      	mov	r1, r3
 8003c74:	4807      	ldr	r0, [pc, #28]	@ (8003c94 <HAL_TIM_MspPostInit+0xb8>)
 8003c76:	f000 ffd7 	bl	8004c28 <HAL_GPIO_Init>
}
 8003c7a:	bf00      	nop
 8003c7c:	3728      	adds	r7, #40	@ 0x28
 8003c7e:	46bd      	mov	sp, r7
 8003c80:	bd80      	pop	{r7, pc}
 8003c82:	bf00      	nop
 8003c84:	40012c00 	.word	0x40012c00
 8003c88:	40021000 	.word	0x40021000
 8003c8c:	48000800 	.word	0x48000800
 8003c90:	40015000 	.word	0x40015000
 8003c94:	48000400 	.word	0x48000400

08003c98 <vTimerInit>:
#include "timer.h"

int iIndex;
single_timer iActiveTimers[20]; //Consegue guardar 20 contadores diferentes

void vTimerInit() {
 8003c98:	b480      	push	{r7}
 8003c9a:	b083      	sub	sp, #12
 8003c9c:	af00      	add	r7, sp, #0
	iIndex = 0;
 8003c9e:	4b0f      	ldr	r3, [pc, #60]	@ (8003cdc <vTimerInit+0x44>)
 8003ca0:	2200      	movs	r2, #0
 8003ca2:	601a      	str	r2, [r3, #0]
	for (int i = 0; i < 20; i++) {
 8003ca4:	2300      	movs	r3, #0
 8003ca6:	607b      	str	r3, [r7, #4]
 8003ca8:	e00d      	b.n	8003cc6 <vTimerInit+0x2e>
		iActiveTimers[i].iCounter = 0;
 8003caa:	4a0d      	ldr	r2, [pc, #52]	@ (8003ce0 <vTimerInit+0x48>)
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	2100      	movs	r1, #0
 8003cb0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
		iActiveTimers[i].iTotalMs = 0;
 8003cb4:	4a0a      	ldr	r2, [pc, #40]	@ (8003ce0 <vTimerInit+0x48>)
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	00db      	lsls	r3, r3, #3
 8003cba:	4413      	add	r3, r2
 8003cbc:	2200      	movs	r2, #0
 8003cbe:	605a      	str	r2, [r3, #4]
	for (int i = 0; i < 20; i++) {
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	3301      	adds	r3, #1
 8003cc4:	607b      	str	r3, [r7, #4]
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	2b13      	cmp	r3, #19
 8003cca:	ddee      	ble.n	8003caa <vTimerInit+0x12>
	}
}
 8003ccc:	bf00      	nop
 8003cce:	bf00      	nop
 8003cd0:	370c      	adds	r7, #12
 8003cd2:	46bd      	mov	sp, r7
 8003cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cd8:	4770      	bx	lr
 8003cda:	bf00      	nop
 8003cdc:	200009fc 	.word	0x200009fc
 8003ce0:	20000a00 	.word	0x20000a00

08003ce4 <iSetTimer>:

//set o timer para comecar a contar, conta até total_ms, no timerCode
//Retorna o "codigo' do timer
int iSetTimer(int total_ms) {
 8003ce4:	b480      	push	{r7}
 8003ce6:	b083      	sub	sp, #12
 8003ce8:	af00      	add	r7, sp, #0
 8003cea:	6078      	str	r0, [r7, #4]
	iActiveTimers[iIndex].iTotalMs = total_ms;
 8003cec:	4b09      	ldr	r3, [pc, #36]	@ (8003d14 <iSetTimer+0x30>)
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	4a09      	ldr	r2, [pc, #36]	@ (8003d18 <iSetTimer+0x34>)
 8003cf2:	00db      	lsls	r3, r3, #3
 8003cf4:	4413      	add	r3, r2
 8003cf6:	687a      	ldr	r2, [r7, #4]
 8003cf8:	605a      	str	r2, [r3, #4]
	return ++iIndex;
 8003cfa:	4b06      	ldr	r3, [pc, #24]	@ (8003d14 <iSetTimer+0x30>)
 8003cfc:	681b      	ldr	r3, [r3, #0]
 8003cfe:	3301      	adds	r3, #1
 8003d00:	4a04      	ldr	r2, [pc, #16]	@ (8003d14 <iSetTimer+0x30>)
 8003d02:	6013      	str	r3, [r2, #0]
 8003d04:	4b03      	ldr	r3, [pc, #12]	@ (8003d14 <iSetTimer+0x30>)
 8003d06:	681b      	ldr	r3, [r3, #0]
}
 8003d08:	4618      	mov	r0, r3
 8003d0a:	370c      	adds	r7, #12
 8003d0c:	46bd      	mov	sp, r7
 8003d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d12:	4770      	bx	lr
 8003d14:	200009fc 	.word	0x200009fc
 8003d18:	20000a00 	.word	0x20000a00

08003d1c <cCountTime>:

// conta (ms) ms, funcao chamada a cada 10 ms, pela main (pTimGeral)
char cCountTime(int ms, int timerCode) {
 8003d1c:	b480      	push	{r7}
 8003d1e:	b083      	sub	sp, #12
 8003d20:	af00      	add	r7, sp, #0
 8003d22:	6078      	str	r0, [r7, #4]
 8003d24:	6039      	str	r1, [r7, #0]
	iActiveTimers[timerCode].iCounter += ms;
 8003d26:	4a11      	ldr	r2, [pc, #68]	@ (8003d6c <cCountTime+0x50>)
 8003d28:	683b      	ldr	r3, [r7, #0]
 8003d2a:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8003d2e:	687b      	ldr	r3, [r7, #4]
 8003d30:	441a      	add	r2, r3
 8003d32:	490e      	ldr	r1, [pc, #56]	@ (8003d6c <cCountTime+0x50>)
 8003d34:	683b      	ldr	r3, [r7, #0]
 8003d36:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
	if (iActiveTimers[timerCode].iCounter >= iActiveTimers[timerCode].iTotalMs) {
 8003d3a:	4a0c      	ldr	r2, [pc, #48]	@ (8003d6c <cCountTime+0x50>)
 8003d3c:	683b      	ldr	r3, [r7, #0]
 8003d3e:	f852 2033 	ldr.w	r2, [r2, r3, lsl #3]
 8003d42:	490a      	ldr	r1, [pc, #40]	@ (8003d6c <cCountTime+0x50>)
 8003d44:	683b      	ldr	r3, [r7, #0]
 8003d46:	00db      	lsls	r3, r3, #3
 8003d48:	440b      	add	r3, r1
 8003d4a:	685b      	ldr	r3, [r3, #4]
 8003d4c:	429a      	cmp	r2, r3
 8003d4e:	db06      	blt.n	8003d5e <cCountTime+0x42>
		iActiveTimers[timerCode].iCounter = 0;
 8003d50:	4a06      	ldr	r2, [pc, #24]	@ (8003d6c <cCountTime+0x50>)
 8003d52:	683b      	ldr	r3, [r7, #0]
 8003d54:	2100      	movs	r1, #0
 8003d56:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
		return 1;
 8003d5a:	2301      	movs	r3, #1
 8003d5c:	e000      	b.n	8003d60 <cCountTime+0x44>
	}

	return 0;
 8003d5e:	2300      	movs	r3, #0
}
 8003d60:	4618      	mov	r0, r3
 8003d62:	370c      	adds	r7, #12
 8003d64:	46bd      	mov	sp, r7
 8003d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d6a:	4770      	bx	lr
 8003d6c:	20000a00 	.word	0x20000a00

08003d70 <vUltrassonicoInit>:
//
// INPUT PARAMS: TIM_HandleTypeDef* pTimerEcoUltrassonicoFrontal ,TIM_HandleTypeDef* TimerTrigger
//
// OUTPUT PARAMS: n/a
// ********************************************** //
void vUltrassonicoInit(TIM_HandleTypeDef* pTimerEcoUltrassonicoFrontal ,TIM_HandleTypeDef* TimerTrigger) {
 8003d70:	b580      	push	{r7, lr}
 8003d72:	b082      	sub	sp, #8
 8003d74:	af00      	add	r7, sp, #0
 8003d76:	6078      	str	r0, [r7, #4]
 8003d78:	6039      	str	r1, [r7, #0]

  xUltrassonicoData.pTimerEcoUltrassonicoFrontal=pTimerEcoUltrassonicoFrontal;
 8003d7a:	4a0f      	ldr	r2, [pc, #60]	@ (8003db8 <vUltrassonicoInit+0x48>)
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	6013      	str	r3, [r2, #0]
  xUltrassonicoData.TimerTrigger= TimerTrigger;
 8003d80:	4a0d      	ldr	r2, [pc, #52]	@ (8003db8 <vUltrassonicoInit+0x48>)
 8003d82:	683b      	ldr	r3, [r7, #0]
 8003d84:	6053      	str	r3, [r2, #4]
  xUltrassonicoData.Distance=0.0;
 8003d86:	4b0c      	ldr	r3, [pc, #48]	@ (8003db8 <vUltrassonicoInit+0x48>)
 8003d88:	f04f 0200 	mov.w	r2, #0
 8003d8c:	609a      	str	r2, [r3, #8]

  HAL_TIM_PWM_Start(xUltrassonicoData.TimerTrigger, TIM_CHANNEL_1);
 8003d8e:	4b0a      	ldr	r3, [pc, #40]	@ (8003db8 <vUltrassonicoInit+0x48>)
 8003d90:	685b      	ldr	r3, [r3, #4]
 8003d92:	2100      	movs	r1, #0
 8003d94:	4618      	mov	r0, r3
 8003d96:	f004 f8f9 	bl	8007f8c <HAL_TIM_PWM_Start>
  //Define um pulso de 10us a cada 100ms no trigger, utilizando logica pwm
  xUltrassonicoData.TimerTrigger->Instance->CCR1 = 8;
 8003d9a:	4b07      	ldr	r3, [pc, #28]	@ (8003db8 <vUltrassonicoInit+0x48>)
 8003d9c:	685b      	ldr	r3, [r3, #4]
 8003d9e:	681b      	ldr	r3, [r3, #0]
 8003da0:	2208      	movs	r2, #8
 8003da2:	635a      	str	r2, [r3, #52]	@ 0x34

  HAL_TIM_IC_Start_IT(xUltrassonicoData.pTimerEcoUltrassonicoFrontal, TIM_CHANNEL_1);
 8003da4:	4b04      	ldr	r3, [pc, #16]	@ (8003db8 <vUltrassonicoInit+0x48>)
 8003da6:	681b      	ldr	r3, [r3, #0]
 8003da8:	2100      	movs	r1, #0
 8003daa:	4618      	mov	r0, r3
 8003dac:	f004 fa62 	bl	8008274 <HAL_TIM_IC_Start_IT>

}
 8003db0:	bf00      	nop
 8003db2:	3708      	adds	r7, #8
 8003db4:	46bd      	mov	sp, r7
 8003db6:	bd80      	pop	{r7, pc}
 8003db8:	20000aa0 	.word	0x20000aa0

08003dbc <MX_LPUART1_UART_Init>:
UART_HandleTypeDef huart3;

/* LPUART1 init function */

void MX_LPUART1_UART_Init(void)
{
 8003dbc:	b580      	push	{r7, lr}
 8003dbe:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 8003dc0:	4b21      	ldr	r3, [pc, #132]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003dc2:	4a22      	ldr	r2, [pc, #136]	@ (8003e4c <MX_LPUART1_UART_Init+0x90>)
 8003dc4:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 115200;
 8003dc6:	4b20      	ldr	r3, [pc, #128]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003dc8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8003dcc:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003dce:	4b1e      	ldr	r3, [pc, #120]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003dd0:	2200      	movs	r2, #0
 8003dd2:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 8003dd4:	4b1c      	ldr	r3, [pc, #112]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003dd6:	2200      	movs	r2, #0
 8003dd8:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 8003dda:	4b1b      	ldr	r3, [pc, #108]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003ddc:	2200      	movs	r2, #0
 8003dde:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 8003de0:	4b19      	ldr	r3, [pc, #100]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003de2:	220c      	movs	r2, #12
 8003de4:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003de6:	4b18      	ldr	r3, [pc, #96]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003de8:	2200      	movs	r2, #0
 8003dea:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003dec:	4b16      	ldr	r3, [pc, #88]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003dee:	2200      	movs	r2, #0
 8003df0:	621a      	str	r2, [r3, #32]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8003df2:	4b15      	ldr	r3, [pc, #84]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003df4:	2200      	movs	r2, #0
 8003df6:	625a      	str	r2, [r3, #36]	@ 0x24
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8003df8:	4b13      	ldr	r3, [pc, #76]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003dfa:	2200      	movs	r2, #0
 8003dfc:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 8003dfe:	4812      	ldr	r0, [pc, #72]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003e00:	f005 ff3a 	bl	8009c78 <HAL_UART_Init>
 8003e04:	4603      	mov	r3, r0
 8003e06:	2b00      	cmp	r3, #0
 8003e08:	d001      	beq.n	8003e0e <MX_LPUART1_UART_Init+0x52>
  {
    Error_Handler();
 8003e0a:	f7fe fe0c 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003e0e:	2100      	movs	r1, #0
 8003e10:	480d      	ldr	r0, [pc, #52]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003e12:	f007 ffb4 	bl	800bd7e <HAL_UARTEx_SetTxFifoThreshold>
 8003e16:	4603      	mov	r3, r0
 8003e18:	2b00      	cmp	r3, #0
 8003e1a:	d001      	beq.n	8003e20 <MX_LPUART1_UART_Init+0x64>
  {
    Error_Handler();
 8003e1c:	f7fe fe03 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003e20:	2100      	movs	r1, #0
 8003e22:	4809      	ldr	r0, [pc, #36]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003e24:	f007 ffe9 	bl	800bdfa <HAL_UARTEx_SetRxFifoThreshold>
 8003e28:	4603      	mov	r3, r0
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	d001      	beq.n	8003e32 <MX_LPUART1_UART_Init+0x76>
  {
    Error_Handler();
 8003e2e:	f7fe fdfa 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 8003e32:	4805      	ldr	r0, [pc, #20]	@ (8003e48 <MX_LPUART1_UART_Init+0x8c>)
 8003e34:	f007 ff6a 	bl	800bd0c <HAL_UARTEx_DisableFifoMode>
 8003e38:	4603      	mov	r3, r0
 8003e3a:	2b00      	cmp	r3, #0
 8003e3c:	d001      	beq.n	8003e42 <MX_LPUART1_UART_Init+0x86>
  {
    Error_Handler();
 8003e3e:	f7fe fdf2 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 8003e42:	bf00      	nop
 8003e44:	bd80      	pop	{r7, pc}
 8003e46:	bf00      	nop
 8003e48:	20000aac 	.word	0x20000aac
 8003e4c:	40008000 	.word	0x40008000

08003e50 <MX_USART1_UART_Init>:
/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8003e50:	b580      	push	{r7, lr}
 8003e52:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8003e54:	4b22      	ldr	r3, [pc, #136]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e56:	4a23      	ldr	r2, [pc, #140]	@ (8003ee4 <MX_USART1_UART_Init+0x94>)
 8003e58:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8003e5a:	4b21      	ldr	r3, [pc, #132]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e5c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8003e60:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003e62:	4b1f      	ldr	r3, [pc, #124]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e64:	2200      	movs	r2, #0
 8003e66:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8003e68:	4b1d      	ldr	r3, [pc, #116]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e6a:	2200      	movs	r2, #0
 8003e6c:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8003e6e:	4b1c      	ldr	r3, [pc, #112]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e70:	2200      	movs	r2, #0
 8003e72:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8003e74:	4b1a      	ldr	r3, [pc, #104]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e76:	220c      	movs	r2, #12
 8003e78:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003e7a:	4b19      	ldr	r3, [pc, #100]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e7c:	2200      	movs	r2, #0
 8003e7e:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8003e80:	4b17      	ldr	r3, [pc, #92]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e82:	2200      	movs	r2, #0
 8003e84:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003e86:	4b16      	ldr	r3, [pc, #88]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e88:	2200      	movs	r2, #0
 8003e8a:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8003e8c:	4b14      	ldr	r3, [pc, #80]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e8e:	2200      	movs	r2, #0
 8003e90:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8003e92:	4b13      	ldr	r3, [pc, #76]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e94:	2200      	movs	r2, #0
 8003e96:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8003e98:	4811      	ldr	r0, [pc, #68]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003e9a:	f005 feed 	bl	8009c78 <HAL_UART_Init>
 8003e9e:	4603      	mov	r3, r0
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d001      	beq.n	8003ea8 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8003ea4:	f7fe fdbf 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003ea8:	2100      	movs	r1, #0
 8003eaa:	480d      	ldr	r0, [pc, #52]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003eac:	f007 ff67 	bl	800bd7e <HAL_UARTEx_SetTxFifoThreshold>
 8003eb0:	4603      	mov	r3, r0
 8003eb2:	2b00      	cmp	r3, #0
 8003eb4:	d001      	beq.n	8003eba <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8003eb6:	f7fe fdb6 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003eba:	2100      	movs	r1, #0
 8003ebc:	4808      	ldr	r0, [pc, #32]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003ebe:	f007 ff9c 	bl	800bdfa <HAL_UARTEx_SetRxFifoThreshold>
 8003ec2:	4603      	mov	r3, r0
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	d001      	beq.n	8003ecc <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8003ec8:	f7fe fdad 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8003ecc:	4804      	ldr	r0, [pc, #16]	@ (8003ee0 <MX_USART1_UART_Init+0x90>)
 8003ece:	f007 ff1d 	bl	800bd0c <HAL_UARTEx_DisableFifoMode>
 8003ed2:	4603      	mov	r3, r0
 8003ed4:	2b00      	cmp	r3, #0
 8003ed6:	d001      	beq.n	8003edc <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8003ed8:	f7fe fda5 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8003edc:	bf00      	nop
 8003ede:	bd80      	pop	{r7, pc}
 8003ee0:	20000b40 	.word	0x20000b40
 8003ee4:	40013800 	.word	0x40013800

08003ee8 <MX_USART3_UART_Init>:
/* USART3 init function */

void MX_USART3_UART_Init(void)
{
 8003ee8:	b580      	push	{r7, lr}
 8003eea:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8003eec:	4b22      	ldr	r3, [pc, #136]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003eee:	4a23      	ldr	r2, [pc, #140]	@ (8003f7c <MX_USART3_UART_Init+0x94>)
 8003ef0:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 38400;
 8003ef2:	4b21      	ldr	r3, [pc, #132]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003ef4:	f44f 4216 	mov.w	r2, #38400	@ 0x9600
 8003ef8:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8003efa:	4b1f      	ldr	r3, [pc, #124]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003efc:	2200      	movs	r2, #0
 8003efe:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8003f00:	4b1d      	ldr	r3, [pc, #116]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f02:	2200      	movs	r2, #0
 8003f04:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8003f06:	4b1c      	ldr	r3, [pc, #112]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f08:	2200      	movs	r2, #0
 8003f0a:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8003f0c:	4b1a      	ldr	r3, [pc, #104]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f0e:	220c      	movs	r2, #12
 8003f10:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003f12:	4b19      	ldr	r3, [pc, #100]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f14:	2200      	movs	r2, #0
 8003f16:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8003f18:	4b17      	ldr	r3, [pc, #92]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f1a:	2200      	movs	r2, #0
 8003f1c:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003f1e:	4b16      	ldr	r3, [pc, #88]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f20:	2200      	movs	r2, #0
 8003f22:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8003f24:	4b14      	ldr	r3, [pc, #80]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f26:	2200      	movs	r2, #0
 8003f28:	625a      	str	r2, [r3, #36]	@ 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8003f2a:	4b13      	ldr	r3, [pc, #76]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f2c:	2200      	movs	r2, #0
 8003f2e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8003f30:	4811      	ldr	r0, [pc, #68]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f32:	f005 fea1 	bl	8009c78 <HAL_UART_Init>
 8003f36:	4603      	mov	r3, r0
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	d001      	beq.n	8003f40 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 8003f3c:	f7fe fd73 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003f40:	2100      	movs	r1, #0
 8003f42:	480d      	ldr	r0, [pc, #52]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f44:	f007 ff1b 	bl	800bd7e <HAL_UARTEx_SetTxFifoThreshold>
 8003f48:	4603      	mov	r3, r0
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d001      	beq.n	8003f52 <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 8003f4e:	f7fe fd6a 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8003f52:	2100      	movs	r1, #0
 8003f54:	4808      	ldr	r0, [pc, #32]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f56:	f007 ff50 	bl	800bdfa <HAL_UARTEx_SetRxFifoThreshold>
 8003f5a:	4603      	mov	r3, r0
 8003f5c:	2b00      	cmp	r3, #0
 8003f5e:	d001      	beq.n	8003f64 <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 8003f60:	f7fe fd61 	bl	8002a26 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 8003f64:	4804      	ldr	r0, [pc, #16]	@ (8003f78 <MX_USART3_UART_Init+0x90>)
 8003f66:	f007 fed1 	bl	800bd0c <HAL_UARTEx_DisableFifoMode>
 8003f6a:	4603      	mov	r3, r0
 8003f6c:	2b00      	cmp	r3, #0
 8003f6e:	d001      	beq.n	8003f74 <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 8003f70:	f7fe fd59 	bl	8002a26 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8003f74:	bf00      	nop
 8003f76:	bd80      	pop	{r7, pc}
 8003f78:	20000bd4 	.word	0x20000bd4
 8003f7c:	40004800 	.word	0x40004800

08003f80 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8003f80:	b580      	push	{r7, lr}
 8003f82:	b0a4      	sub	sp, #144	@ 0x90
 8003f84:	af00      	add	r7, sp, #0
 8003f86:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003f88:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 8003f8c:	2200      	movs	r2, #0
 8003f8e:	601a      	str	r2, [r3, #0]
 8003f90:	605a      	str	r2, [r3, #4]
 8003f92:	609a      	str	r2, [r3, #8]
 8003f94:	60da      	str	r2, [r3, #12]
 8003f96:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8003f98:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8003f9c:	2254      	movs	r2, #84	@ 0x54
 8003f9e:	2100      	movs	r1, #0
 8003fa0:	4618      	mov	r0, r3
 8003fa2:	f008 feee 	bl	800cd82 <memset>
  if(uartHandle->Instance==LPUART1)
 8003fa6:	687b      	ldr	r3, [r7, #4]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	4a7a      	ldr	r2, [pc, #488]	@ (8004194 <HAL_UART_MspInit+0x214>)
 8003fac:	4293      	cmp	r3, r2
 8003fae:	d13b      	bne.n	8004028 <HAL_UART_MspInit+0xa8>

  /* USER CODE END LPUART1_MspInit 0 */

  /** Initializes the peripherals clocks
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 8003fb0:	2320      	movs	r3, #32
 8003fb2:	62bb      	str	r3, [r7, #40]	@ 0x28
    PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 8003fb4:	2300      	movs	r3, #0
 8003fb6:	643b      	str	r3, [r7, #64]	@ 0x40
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8003fb8:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8003fbc:	4618      	mov	r0, r3
 8003fbe:	f003 fc6f 	bl	80078a0 <HAL_RCCEx_PeriphCLKConfig>
 8003fc2:	4603      	mov	r3, r0
 8003fc4:	2b00      	cmp	r3, #0
 8003fc6:	d001      	beq.n	8003fcc <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8003fc8:	f7fe fd2d 	bl	8002a26 <Error_Handler>
    }

    /* LPUART1 clock enable */
    __HAL_RCC_LPUART1_CLK_ENABLE();
 8003fcc:	4b72      	ldr	r3, [pc, #456]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8003fce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003fd0:	4a71      	ldr	r2, [pc, #452]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8003fd2:	f043 0301 	orr.w	r3, r3, #1
 8003fd6:	65d3      	str	r3, [r2, #92]	@ 0x5c
 8003fd8:	4b6f      	ldr	r3, [pc, #444]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8003fda:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003fdc:	f003 0301 	and.w	r3, r3, #1
 8003fe0:	627b      	str	r3, [r7, #36]	@ 0x24
 8003fe2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003fe4:	4b6c      	ldr	r3, [pc, #432]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8003fe6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003fe8:	4a6b      	ldr	r2, [pc, #428]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8003fea:	f043 0301 	orr.w	r3, r3, #1
 8003fee:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8003ff0:	4b69      	ldr	r3, [pc, #420]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8003ff2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003ff4:	f003 0301 	and.w	r3, r3, #1
 8003ff8:	623b      	str	r3, [r7, #32]
 8003ffa:	6a3b      	ldr	r3, [r7, #32]
    /**LPUART1 GPIO Configuration
    PA2     ------> LPUART1_TX
    PA3     ------> LPUART1_RX
    */
    GPIO_InitStruct.Pin = LPUART1_TX_Pin|LPUART1_RX_Pin;
 8003ffc:	230c      	movs	r3, #12
 8003ffe:	67fb      	str	r3, [r7, #124]	@ 0x7c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004000:	2302      	movs	r3, #2
 8004002:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004006:	2300      	movs	r3, #0
 8004008:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800400c:	2300      	movs	r3, #0
 800400e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Alternate = GPIO_AF12_LPUART1;
 8004012:	230c      	movs	r3, #12
 8004014:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004018:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800401c:	4619      	mov	r1, r3
 800401e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8004022:	f000 fe01 	bl	8004c28 <HAL_GPIO_Init>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }
}
 8004026:	e0b1      	b.n	800418c <HAL_UART_MspInit+0x20c>
  else if(uartHandle->Instance==USART1)
 8004028:	687b      	ldr	r3, [r7, #4]
 800402a:	681b      	ldr	r3, [r3, #0]
 800402c:	4a5b      	ldr	r2, [pc, #364]	@ (800419c <HAL_UART_MspInit+0x21c>)
 800402e:	4293      	cmp	r3, r2
 8004030:	d164      	bne.n	80040fc <HAL_UART_MspInit+0x17c>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8004032:	2301      	movs	r3, #1
 8004034:	62bb      	str	r3, [r7, #40]	@ 0x28
    PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8004036:	2300      	movs	r3, #0
 8004038:	62fb      	str	r3, [r7, #44]	@ 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800403a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800403e:	4618      	mov	r0, r3
 8004040:	f003 fc2e 	bl	80078a0 <HAL_RCCEx_PeriphCLKConfig>
 8004044:	4603      	mov	r3, r0
 8004046:	2b00      	cmp	r3, #0
 8004048:	d001      	beq.n	800404e <HAL_UART_MspInit+0xce>
      Error_Handler();
 800404a:	f7fe fcec 	bl	8002a26 <Error_Handler>
    __HAL_RCC_USART1_CLK_ENABLE();
 800404e:	4b52      	ldr	r3, [pc, #328]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004050:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004052:	4a51      	ldr	r2, [pc, #324]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004054:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004058:	6613      	str	r3, [r2, #96]	@ 0x60
 800405a:	4b4f      	ldr	r3, [pc, #316]	@ (8004198 <HAL_UART_MspInit+0x218>)
 800405c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800405e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004062:	61fb      	str	r3, [r7, #28]
 8004064:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004066:	4b4c      	ldr	r3, [pc, #304]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004068:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800406a:	4a4b      	ldr	r2, [pc, #300]	@ (8004198 <HAL_UART_MspInit+0x218>)
 800406c:	f043 0304 	orr.w	r3, r3, #4
 8004070:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8004072:	4b49      	ldr	r3, [pc, #292]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004074:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004076:	f003 0304 	and.w	r3, r3, #4
 800407a:	61bb      	str	r3, [r7, #24]
 800407c:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800407e:	4b46      	ldr	r3, [pc, #280]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004080:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004082:	4a45      	ldr	r2, [pc, #276]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004084:	f043 0301 	orr.w	r3, r3, #1
 8004088:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800408a:	4b43      	ldr	r3, [pc, #268]	@ (8004198 <HAL_UART_MspInit+0x218>)
 800408c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800408e:	f003 0301 	and.w	r3, r3, #1
 8004092:	617b      	str	r3, [r7, #20]
 8004094:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8004096:	2320      	movs	r3, #32
 8004098:	67fb      	str	r3, [r7, #124]	@ 0x7c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800409a:	2302      	movs	r3, #2
 800409c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80040a0:	2300      	movs	r3, #0
 80040a2:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80040a6:	2300      	movs	r3, #0
 80040a8:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80040ac:	2307      	movs	r3, #7
 80040ae:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80040b2:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 80040b6:	4619      	mov	r1, r3
 80040b8:	4839      	ldr	r0, [pc, #228]	@ (80041a0 <HAL_UART_MspInit+0x220>)
 80040ba:	f000 fdb5 	bl	8004c28 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 80040be:	f44f 7300 	mov.w	r3, #512	@ 0x200
 80040c2:	67fb      	str	r3, [r7, #124]	@ 0x7c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80040c4:	2302      	movs	r3, #2
 80040c6:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80040ca:	2300      	movs	r3, #0
 80040cc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80040d0:	2300      	movs	r3, #0
 80040d2:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80040d6:	2307      	movs	r3, #7
 80040d8:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80040dc:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 80040e0:	4619      	mov	r1, r3
 80040e2:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80040e6:	f000 fd9f 	bl	8004c28 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 80040ea:	2200      	movs	r2, #0
 80040ec:	2100      	movs	r1, #0
 80040ee:	2025      	movs	r0, #37	@ 0x25
 80040f0:	f000 fa17 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 80040f4:	2025      	movs	r0, #37	@ 0x25
 80040f6:	f000 fa2e 	bl	8004556 <HAL_NVIC_EnableIRQ>
}
 80040fa:	e047      	b.n	800418c <HAL_UART_MspInit+0x20c>
  else if(uartHandle->Instance==USART3)
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4a28      	ldr	r2, [pc, #160]	@ (80041a4 <HAL_UART_MspInit+0x224>)
 8004102:	4293      	cmp	r3, r2
 8004104:	d142      	bne.n	800418c <HAL_UART_MspInit+0x20c>
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8004106:	2304      	movs	r3, #4
 8004108:	62bb      	str	r3, [r7, #40]	@ 0x28
    PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 800410a:	2300      	movs	r3, #0
 800410c:	637b      	str	r3, [r7, #52]	@ 0x34
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800410e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8004112:	4618      	mov	r0, r3
 8004114:	f003 fbc4 	bl	80078a0 <HAL_RCCEx_PeriphCLKConfig>
 8004118:	4603      	mov	r3, r0
 800411a:	2b00      	cmp	r3, #0
 800411c:	d001      	beq.n	8004122 <HAL_UART_MspInit+0x1a2>
      Error_Handler();
 800411e:	f7fe fc82 	bl	8002a26 <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 8004122:	4b1d      	ldr	r3, [pc, #116]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004124:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004126:	4a1c      	ldr	r2, [pc, #112]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004128:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800412c:	6593      	str	r3, [r2, #88]	@ 0x58
 800412e:	4b1a      	ldr	r3, [pc, #104]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004130:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004132:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8004136:	613b      	str	r3, [r7, #16]
 8004138:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800413a:	4b17      	ldr	r3, [pc, #92]	@ (8004198 <HAL_UART_MspInit+0x218>)
 800413c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800413e:	4a16      	ldr	r2, [pc, #88]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004140:	f043 0302 	orr.w	r3, r3, #2
 8004144:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8004146:	4b14      	ldr	r3, [pc, #80]	@ (8004198 <HAL_UART_MspInit+0x218>)
 8004148:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800414a:	f003 0302 	and.w	r3, r3, #2
 800414e:	60fb      	str	r3, [r7, #12]
 8004150:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8004152:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8004156:	67fb      	str	r3, [r7, #124]	@ 0x7c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004158:	2302      	movs	r3, #2
 800415a:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800415e:	2300      	movs	r3, #0
 8004160:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004164:	2300      	movs	r3, #0
 8004166:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 800416a:	2307      	movs	r3, #7
 800416c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004170:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 8004174:	4619      	mov	r1, r3
 8004176:	480c      	ldr	r0, [pc, #48]	@ (80041a8 <HAL_UART_MspInit+0x228>)
 8004178:	f000 fd56 	bl	8004c28 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 1, 0);
 800417c:	2200      	movs	r2, #0
 800417e:	2101      	movs	r1, #1
 8004180:	2027      	movs	r0, #39	@ 0x27
 8004182:	f000 f9ce 	bl	8004522 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8004186:	2027      	movs	r0, #39	@ 0x27
 8004188:	f000 f9e5 	bl	8004556 <HAL_NVIC_EnableIRQ>
}
 800418c:	bf00      	nop
 800418e:	3790      	adds	r7, #144	@ 0x90
 8004190:	46bd      	mov	sp, r7
 8004192:	bd80      	pop	{r7, pc}
 8004194:	40008000 	.word	0x40008000
 8004198:	40021000 	.word	0x40021000
 800419c:	40013800 	.word	0x40013800
 80041a0:	48000800 	.word	0x48000800
 80041a4:	40004800 	.word	0x40004800
 80041a8:	48000400 	.word	0x48000400

080041ac <Reset_Handler>:
 80041ac:	480d      	ldr	r0, [pc, #52]	@ (80041e4 <LoopForever+0x2>)
 80041ae:	4685      	mov	sp, r0
 80041b0:	f7ff f884 	bl	80032bc <SystemInit>
 80041b4:	480c      	ldr	r0, [pc, #48]	@ (80041e8 <LoopForever+0x6>)
 80041b6:	490d      	ldr	r1, [pc, #52]	@ (80041ec <LoopForever+0xa>)
 80041b8:	4a0d      	ldr	r2, [pc, #52]	@ (80041f0 <LoopForever+0xe>)
 80041ba:	2300      	movs	r3, #0
 80041bc:	e002      	b.n	80041c4 <LoopCopyDataInit>

080041be <CopyDataInit>:
 80041be:	58d4      	ldr	r4, [r2, r3]
 80041c0:	50c4      	str	r4, [r0, r3]
 80041c2:	3304      	adds	r3, #4

080041c4 <LoopCopyDataInit>:
 80041c4:	18c4      	adds	r4, r0, r3
 80041c6:	428c      	cmp	r4, r1
 80041c8:	d3f9      	bcc.n	80041be <CopyDataInit>
 80041ca:	4a0a      	ldr	r2, [pc, #40]	@ (80041f4 <LoopForever+0x12>)
 80041cc:	4c0a      	ldr	r4, [pc, #40]	@ (80041f8 <LoopForever+0x16>)
 80041ce:	2300      	movs	r3, #0
 80041d0:	e001      	b.n	80041d6 <LoopFillZerobss>

080041d2 <FillZerobss>:
 80041d2:	6013      	str	r3, [r2, #0]
 80041d4:	3204      	adds	r2, #4

080041d6 <LoopFillZerobss>:
 80041d6:	42a2      	cmp	r2, r4
 80041d8:	d3fb      	bcc.n	80041d2 <FillZerobss>
 80041da:	f008 fe39 	bl	800ce50 <__libc_init_array>
 80041de:	f7fe f8df 	bl	80023a0 <main>

080041e2 <LoopForever>:
 80041e2:	e7fe      	b.n	80041e2 <LoopForever>
 80041e4:	20020000 	.word	0x20020000
 80041e8:	20000000 	.word	0x20000000
 80041ec:	20000210 	.word	0x20000210
 80041f0:	0800f668 	.word	0x0800f668
 80041f4:	20000210 	.word	0x20000210
 80041f8:	20000db8 	.word	0x20000db8

080041fc <ADC1_2_IRQHandler>:
 80041fc:	e7fe      	b.n	80041fc <ADC1_2_IRQHandler>

080041fe <HAL_Init>:
 80041fe:	b580      	push	{r7, lr}
 8004200:	b082      	sub	sp, #8
 8004202:	af00      	add	r7, sp, #0
 8004204:	2300      	movs	r3, #0
 8004206:	71fb      	strb	r3, [r7, #7]
 8004208:	2003      	movs	r0, #3
 800420a:	f000 f97f 	bl	800450c <HAL_NVIC_SetPriorityGrouping>
 800420e:	200f      	movs	r0, #15
 8004210:	f000 f80e 	bl	8004230 <HAL_InitTick>
 8004214:	4603      	mov	r3, r0
 8004216:	2b00      	cmp	r3, #0
 8004218:	d002      	beq.n	8004220 <HAL_Init+0x22>
 800421a:	2301      	movs	r3, #1
 800421c:	71fb      	strb	r3, [r7, #7]
 800421e:	e001      	b.n	8004224 <HAL_Init+0x26>
 8004220:	f7fe feaa 	bl	8002f78 <HAL_MspInit>
 8004224:	79fb      	ldrb	r3, [r7, #7]
 8004226:	4618      	mov	r0, r3
 8004228:	3708      	adds	r7, #8
 800422a:	46bd      	mov	sp, r7
 800422c:	bd80      	pop	{r7, pc}
	...

08004230 <HAL_InitTick>:
 8004230:	b580      	push	{r7, lr}
 8004232:	b084      	sub	sp, #16
 8004234:	af00      	add	r7, sp, #0
 8004236:	6078      	str	r0, [r7, #4]
 8004238:	2300      	movs	r3, #0
 800423a:	73fb      	strb	r3, [r7, #15]
 800423c:	4b16      	ldr	r3, [pc, #88]	@ (8004298 <HAL_InitTick+0x68>)
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	2b00      	cmp	r3, #0
 8004242:	d022      	beq.n	800428a <HAL_InitTick+0x5a>
 8004244:	4b15      	ldr	r3, [pc, #84]	@ (800429c <HAL_InitTick+0x6c>)
 8004246:	681a      	ldr	r2, [r3, #0]
 8004248:	4b13      	ldr	r3, [pc, #76]	@ (8004298 <HAL_InitTick+0x68>)
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8004250:	fbb1 f3f3 	udiv	r3, r1, r3
 8004254:	fbb2 f3f3 	udiv	r3, r2, r3
 8004258:	4618      	mov	r0, r3
 800425a:	f000 f998 	bl	800458e <HAL_SYSTICK_Config>
 800425e:	4603      	mov	r3, r0
 8004260:	2b00      	cmp	r3, #0
 8004262:	d10f      	bne.n	8004284 <HAL_InitTick+0x54>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	2b0f      	cmp	r3, #15
 8004268:	d809      	bhi.n	800427e <HAL_InitTick+0x4e>
 800426a:	2200      	movs	r2, #0
 800426c:	6879      	ldr	r1, [r7, #4]
 800426e:	f04f 30ff 	mov.w	r0, #4294967295
 8004272:	f000 f956 	bl	8004522 <HAL_NVIC_SetPriority>
 8004276:	4a0a      	ldr	r2, [pc, #40]	@ (80042a0 <HAL_InitTick+0x70>)
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	6013      	str	r3, [r2, #0]
 800427c:	e007      	b.n	800428e <HAL_InitTick+0x5e>
 800427e:	2301      	movs	r3, #1
 8004280:	73fb      	strb	r3, [r7, #15]
 8004282:	e004      	b.n	800428e <HAL_InitTick+0x5e>
 8004284:	2301      	movs	r3, #1
 8004286:	73fb      	strb	r3, [r7, #15]
 8004288:	e001      	b.n	800428e <HAL_InitTick+0x5e>
 800428a:	2301      	movs	r3, #1
 800428c:	73fb      	strb	r3, [r7, #15]
 800428e:	7bfb      	ldrb	r3, [r7, #15]
 8004290:	4618      	mov	r0, r3
 8004292:	3710      	adds	r7, #16
 8004294:	46bd      	mov	sp, r7
 8004296:	bd80      	pop	{r7, pc}
 8004298:	20000044 	.word	0x20000044
 800429c:	2000003c 	.word	0x2000003c
 80042a0:	20000040 	.word	0x20000040

080042a4 <HAL_IncTick>:
 80042a4:	b480      	push	{r7}
 80042a6:	af00      	add	r7, sp, #0
 80042a8:	4b05      	ldr	r3, [pc, #20]	@ (80042c0 <HAL_IncTick+0x1c>)
 80042aa:	681a      	ldr	r2, [r3, #0]
 80042ac:	4b05      	ldr	r3, [pc, #20]	@ (80042c4 <HAL_IncTick+0x20>)
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	4413      	add	r3, r2
 80042b2:	4a03      	ldr	r2, [pc, #12]	@ (80042c0 <HAL_IncTick+0x1c>)
 80042b4:	6013      	str	r3, [r2, #0]
 80042b6:	bf00      	nop
 80042b8:	46bd      	mov	sp, r7
 80042ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042be:	4770      	bx	lr
 80042c0:	20000c68 	.word	0x20000c68
 80042c4:	20000044 	.word	0x20000044

080042c8 <HAL_GetTick>:
 80042c8:	b480      	push	{r7}
 80042ca:	af00      	add	r7, sp, #0
 80042cc:	4b03      	ldr	r3, [pc, #12]	@ (80042dc <HAL_GetTick+0x14>)
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	4618      	mov	r0, r3
 80042d2:	46bd      	mov	sp, r7
 80042d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042d8:	4770      	bx	lr
 80042da:	bf00      	nop
 80042dc:	20000c68 	.word	0x20000c68

080042e0 <HAL_Delay>:
 80042e0:	b580      	push	{r7, lr}
 80042e2:	b084      	sub	sp, #16
 80042e4:	af00      	add	r7, sp, #0
 80042e6:	6078      	str	r0, [r7, #4]
 80042e8:	f7ff ffee 	bl	80042c8 <HAL_GetTick>
 80042ec:	60b8      	str	r0, [r7, #8]
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	60fb      	str	r3, [r7, #12]
 80042f2:	68fb      	ldr	r3, [r7, #12]
 80042f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80042f8:	d004      	beq.n	8004304 <HAL_Delay+0x24>
 80042fa:	4b09      	ldr	r3, [pc, #36]	@ (8004320 <HAL_Delay+0x40>)
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	68fa      	ldr	r2, [r7, #12]
 8004300:	4413      	add	r3, r2
 8004302:	60fb      	str	r3, [r7, #12]
 8004304:	bf00      	nop
 8004306:	f7ff ffdf 	bl	80042c8 <HAL_GetTick>
 800430a:	4602      	mov	r2, r0
 800430c:	68bb      	ldr	r3, [r7, #8]
 800430e:	1ad3      	subs	r3, r2, r3
 8004310:	68fa      	ldr	r2, [r7, #12]
 8004312:	429a      	cmp	r2, r3
 8004314:	d8f7      	bhi.n	8004306 <HAL_Delay+0x26>
 8004316:	bf00      	nop
 8004318:	bf00      	nop
 800431a:	3710      	adds	r7, #16
 800431c:	46bd      	mov	sp, r7
 800431e:	bd80      	pop	{r7, pc}
 8004320:	20000044 	.word	0x20000044

08004324 <__NVIC_SetPriorityGrouping>:
 8004324:	b480      	push	{r7}
 8004326:	b085      	sub	sp, #20
 8004328:	af00      	add	r7, sp, #0
 800432a:	6078      	str	r0, [r7, #4]
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	f003 0307 	and.w	r3, r3, #7
 8004332:	60fb      	str	r3, [r7, #12]
 8004334:	4b0c      	ldr	r3, [pc, #48]	@ (8004368 <__NVIC_SetPriorityGrouping+0x44>)
 8004336:	68db      	ldr	r3, [r3, #12]
 8004338:	60bb      	str	r3, [r7, #8]
 800433a:	68ba      	ldr	r2, [r7, #8]
 800433c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004340:	4013      	ands	r3, r2
 8004342:	60bb      	str	r3, [r7, #8]
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	021a      	lsls	r2, r3, #8
 8004348:	68bb      	ldr	r3, [r7, #8]
 800434a:	4313      	orrs	r3, r2
 800434c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8004350:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8004354:	60bb      	str	r3, [r7, #8]
 8004356:	4a04      	ldr	r2, [pc, #16]	@ (8004368 <__NVIC_SetPriorityGrouping+0x44>)
 8004358:	68bb      	ldr	r3, [r7, #8]
 800435a:	60d3      	str	r3, [r2, #12]
 800435c:	bf00      	nop
 800435e:	3714      	adds	r7, #20
 8004360:	46bd      	mov	sp, r7
 8004362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004366:	4770      	bx	lr
 8004368:	e000ed00 	.word	0xe000ed00

0800436c <__NVIC_GetPriorityGrouping>:
 800436c:	b480      	push	{r7}
 800436e:	af00      	add	r7, sp, #0
 8004370:	4b04      	ldr	r3, [pc, #16]	@ (8004384 <__NVIC_GetPriorityGrouping+0x18>)
 8004372:	68db      	ldr	r3, [r3, #12]
 8004374:	0a1b      	lsrs	r3, r3, #8
 8004376:	f003 0307 	and.w	r3, r3, #7
 800437a:	4618      	mov	r0, r3
 800437c:	46bd      	mov	sp, r7
 800437e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004382:	4770      	bx	lr
 8004384:	e000ed00 	.word	0xe000ed00

08004388 <__NVIC_EnableIRQ>:
 8004388:	b480      	push	{r7}
 800438a:	b083      	sub	sp, #12
 800438c:	af00      	add	r7, sp, #0
 800438e:	4603      	mov	r3, r0
 8004390:	71fb      	strb	r3, [r7, #7]
 8004392:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004396:	2b00      	cmp	r3, #0
 8004398:	db0b      	blt.n	80043b2 <__NVIC_EnableIRQ+0x2a>
 800439a:	79fb      	ldrb	r3, [r7, #7]
 800439c:	f003 021f 	and.w	r2, r3, #31
 80043a0:	4907      	ldr	r1, [pc, #28]	@ (80043c0 <__NVIC_EnableIRQ+0x38>)
 80043a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043a6:	095b      	lsrs	r3, r3, #5
 80043a8:	2001      	movs	r0, #1
 80043aa:	fa00 f202 	lsl.w	r2, r0, r2
 80043ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80043b2:	bf00      	nop
 80043b4:	370c      	adds	r7, #12
 80043b6:	46bd      	mov	sp, r7
 80043b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043bc:	4770      	bx	lr
 80043be:	bf00      	nop
 80043c0:	e000e100 	.word	0xe000e100

080043c4 <__NVIC_DisableIRQ>:
 80043c4:	b480      	push	{r7}
 80043c6:	b083      	sub	sp, #12
 80043c8:	af00      	add	r7, sp, #0
 80043ca:	4603      	mov	r3, r0
 80043cc:	71fb      	strb	r3, [r7, #7]
 80043ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043d2:	2b00      	cmp	r3, #0
 80043d4:	db12      	blt.n	80043fc <__NVIC_DisableIRQ+0x38>
 80043d6:	79fb      	ldrb	r3, [r7, #7]
 80043d8:	f003 021f 	and.w	r2, r3, #31
 80043dc:	490a      	ldr	r1, [pc, #40]	@ (8004408 <__NVIC_DisableIRQ+0x44>)
 80043de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80043e2:	095b      	lsrs	r3, r3, #5
 80043e4:	2001      	movs	r0, #1
 80043e6:	fa00 f202 	lsl.w	r2, r0, r2
 80043ea:	3320      	adds	r3, #32
 80043ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80043f0:	f3bf 8f4f 	dsb	sy
 80043f4:	bf00      	nop
 80043f6:	f3bf 8f6f 	isb	sy
 80043fa:	bf00      	nop
 80043fc:	bf00      	nop
 80043fe:	370c      	adds	r7, #12
 8004400:	46bd      	mov	sp, r7
 8004402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004406:	4770      	bx	lr
 8004408:	e000e100 	.word	0xe000e100

0800440c <__NVIC_SetPriority>:
 800440c:	b480      	push	{r7}
 800440e:	b083      	sub	sp, #12
 8004410:	af00      	add	r7, sp, #0
 8004412:	4603      	mov	r3, r0
 8004414:	6039      	str	r1, [r7, #0]
 8004416:	71fb      	strb	r3, [r7, #7]
 8004418:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800441c:	2b00      	cmp	r3, #0
 800441e:	db0a      	blt.n	8004436 <__NVIC_SetPriority+0x2a>
 8004420:	683b      	ldr	r3, [r7, #0]
 8004422:	b2da      	uxtb	r2, r3
 8004424:	490c      	ldr	r1, [pc, #48]	@ (8004458 <__NVIC_SetPriority+0x4c>)
 8004426:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800442a:	0112      	lsls	r2, r2, #4
 800442c:	b2d2      	uxtb	r2, r2
 800442e:	440b      	add	r3, r1
 8004430:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8004434:	e00a      	b.n	800444c <__NVIC_SetPriority+0x40>
 8004436:	683b      	ldr	r3, [r7, #0]
 8004438:	b2da      	uxtb	r2, r3
 800443a:	4908      	ldr	r1, [pc, #32]	@ (800445c <__NVIC_SetPriority+0x50>)
 800443c:	79fb      	ldrb	r3, [r7, #7]
 800443e:	f003 030f 	and.w	r3, r3, #15
 8004442:	3b04      	subs	r3, #4
 8004444:	0112      	lsls	r2, r2, #4
 8004446:	b2d2      	uxtb	r2, r2
 8004448:	440b      	add	r3, r1
 800444a:	761a      	strb	r2, [r3, #24]
 800444c:	bf00      	nop
 800444e:	370c      	adds	r7, #12
 8004450:	46bd      	mov	sp, r7
 8004452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004456:	4770      	bx	lr
 8004458:	e000e100 	.word	0xe000e100
 800445c:	e000ed00 	.word	0xe000ed00

08004460 <NVIC_EncodePriority>:
 8004460:	b480      	push	{r7}
 8004462:	b089      	sub	sp, #36	@ 0x24
 8004464:	af00      	add	r7, sp, #0
 8004466:	60f8      	str	r0, [r7, #12]
 8004468:	60b9      	str	r1, [r7, #8]
 800446a:	607a      	str	r2, [r7, #4]
 800446c:	68fb      	ldr	r3, [r7, #12]
 800446e:	f003 0307 	and.w	r3, r3, #7
 8004472:	61fb      	str	r3, [r7, #28]
 8004474:	69fb      	ldr	r3, [r7, #28]
 8004476:	f1c3 0307 	rsb	r3, r3, #7
 800447a:	2b04      	cmp	r3, #4
 800447c:	bf28      	it	cs
 800447e:	2304      	movcs	r3, #4
 8004480:	61bb      	str	r3, [r7, #24]
 8004482:	69fb      	ldr	r3, [r7, #28]
 8004484:	3304      	adds	r3, #4
 8004486:	2b06      	cmp	r3, #6
 8004488:	d902      	bls.n	8004490 <NVIC_EncodePriority+0x30>
 800448a:	69fb      	ldr	r3, [r7, #28]
 800448c:	3b03      	subs	r3, #3
 800448e:	e000      	b.n	8004492 <NVIC_EncodePriority+0x32>
 8004490:	2300      	movs	r3, #0
 8004492:	617b      	str	r3, [r7, #20]
 8004494:	f04f 32ff 	mov.w	r2, #4294967295
 8004498:	69bb      	ldr	r3, [r7, #24]
 800449a:	fa02 f303 	lsl.w	r3, r2, r3
 800449e:	43da      	mvns	r2, r3
 80044a0:	68bb      	ldr	r3, [r7, #8]
 80044a2:	401a      	ands	r2, r3
 80044a4:	697b      	ldr	r3, [r7, #20]
 80044a6:	409a      	lsls	r2, r3
 80044a8:	f04f 31ff 	mov.w	r1, #4294967295
 80044ac:	697b      	ldr	r3, [r7, #20]
 80044ae:	fa01 f303 	lsl.w	r3, r1, r3
 80044b2:	43d9      	mvns	r1, r3
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	400b      	ands	r3, r1
 80044b8:	4313      	orrs	r3, r2
 80044ba:	4618      	mov	r0, r3
 80044bc:	3724      	adds	r7, #36	@ 0x24
 80044be:	46bd      	mov	sp, r7
 80044c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044c4:	4770      	bx	lr
	...

080044c8 <SysTick_Config>:
 80044c8:	b580      	push	{r7, lr}
 80044ca:	b082      	sub	sp, #8
 80044cc:	af00      	add	r7, sp, #0
 80044ce:	6078      	str	r0, [r7, #4]
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	3b01      	subs	r3, #1
 80044d4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80044d8:	d301      	bcc.n	80044de <SysTick_Config+0x16>
 80044da:	2301      	movs	r3, #1
 80044dc:	e00f      	b.n	80044fe <SysTick_Config+0x36>
 80044de:	4a0a      	ldr	r2, [pc, #40]	@ (8004508 <SysTick_Config+0x40>)
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	3b01      	subs	r3, #1
 80044e4:	6053      	str	r3, [r2, #4]
 80044e6:	210f      	movs	r1, #15
 80044e8:	f04f 30ff 	mov.w	r0, #4294967295
 80044ec:	f7ff ff8e 	bl	800440c <__NVIC_SetPriority>
 80044f0:	4b05      	ldr	r3, [pc, #20]	@ (8004508 <SysTick_Config+0x40>)
 80044f2:	2200      	movs	r2, #0
 80044f4:	609a      	str	r2, [r3, #8]
 80044f6:	4b04      	ldr	r3, [pc, #16]	@ (8004508 <SysTick_Config+0x40>)
 80044f8:	2207      	movs	r2, #7
 80044fa:	601a      	str	r2, [r3, #0]
 80044fc:	2300      	movs	r3, #0
 80044fe:	4618      	mov	r0, r3
 8004500:	3708      	adds	r7, #8
 8004502:	46bd      	mov	sp, r7
 8004504:	bd80      	pop	{r7, pc}
 8004506:	bf00      	nop
 8004508:	e000e010 	.word	0xe000e010

0800450c <HAL_NVIC_SetPriorityGrouping>:
 800450c:	b580      	push	{r7, lr}
 800450e:	b082      	sub	sp, #8
 8004510:	af00      	add	r7, sp, #0
 8004512:	6078      	str	r0, [r7, #4]
 8004514:	6878      	ldr	r0, [r7, #4]
 8004516:	f7ff ff05 	bl	8004324 <__NVIC_SetPriorityGrouping>
 800451a:	bf00      	nop
 800451c:	3708      	adds	r7, #8
 800451e:	46bd      	mov	sp, r7
 8004520:	bd80      	pop	{r7, pc}

08004522 <HAL_NVIC_SetPriority>:
 8004522:	b580      	push	{r7, lr}
 8004524:	b086      	sub	sp, #24
 8004526:	af00      	add	r7, sp, #0
 8004528:	4603      	mov	r3, r0
 800452a:	60b9      	str	r1, [r7, #8]
 800452c:	607a      	str	r2, [r7, #4]
 800452e:	73fb      	strb	r3, [r7, #15]
 8004530:	f7ff ff1c 	bl	800436c <__NVIC_GetPriorityGrouping>
 8004534:	6178      	str	r0, [r7, #20]
 8004536:	687a      	ldr	r2, [r7, #4]
 8004538:	68b9      	ldr	r1, [r7, #8]
 800453a:	6978      	ldr	r0, [r7, #20]
 800453c:	f7ff ff90 	bl	8004460 <NVIC_EncodePriority>
 8004540:	4602      	mov	r2, r0
 8004542:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004546:	4611      	mov	r1, r2
 8004548:	4618      	mov	r0, r3
 800454a:	f7ff ff5f 	bl	800440c <__NVIC_SetPriority>
 800454e:	bf00      	nop
 8004550:	3718      	adds	r7, #24
 8004552:	46bd      	mov	sp, r7
 8004554:	bd80      	pop	{r7, pc}

08004556 <HAL_NVIC_EnableIRQ>:
 8004556:	b580      	push	{r7, lr}
 8004558:	b082      	sub	sp, #8
 800455a:	af00      	add	r7, sp, #0
 800455c:	4603      	mov	r3, r0
 800455e:	71fb      	strb	r3, [r7, #7]
 8004560:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004564:	4618      	mov	r0, r3
 8004566:	f7ff ff0f 	bl	8004388 <__NVIC_EnableIRQ>
 800456a:	bf00      	nop
 800456c:	3708      	adds	r7, #8
 800456e:	46bd      	mov	sp, r7
 8004570:	bd80      	pop	{r7, pc}

08004572 <HAL_NVIC_DisableIRQ>:
 8004572:	b580      	push	{r7, lr}
 8004574:	b082      	sub	sp, #8
 8004576:	af00      	add	r7, sp, #0
 8004578:	4603      	mov	r3, r0
 800457a:	71fb      	strb	r3, [r7, #7]
 800457c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004580:	4618      	mov	r0, r3
 8004582:	f7ff ff1f 	bl	80043c4 <__NVIC_DisableIRQ>
 8004586:	bf00      	nop
 8004588:	3708      	adds	r7, #8
 800458a:	46bd      	mov	sp, r7
 800458c:	bd80      	pop	{r7, pc}

0800458e <HAL_SYSTICK_Config>:
 800458e:	b580      	push	{r7, lr}
 8004590:	b082      	sub	sp, #8
 8004592:	af00      	add	r7, sp, #0
 8004594:	6078      	str	r0, [r7, #4]
 8004596:	6878      	ldr	r0, [r7, #4]
 8004598:	f7ff ff96 	bl	80044c8 <SysTick_Config>
 800459c:	4603      	mov	r3, r0
 800459e:	4618      	mov	r0, r3
 80045a0:	3708      	adds	r7, #8
 80045a2:	46bd      	mov	sp, r7
 80045a4:	bd80      	pop	{r7, pc}
	...

080045a8 <HAL_DMA_Init>:
 80045a8:	b580      	push	{r7, lr}
 80045aa:	b084      	sub	sp, #16
 80045ac:	af00      	add	r7, sp, #0
 80045ae:	6078      	str	r0, [r7, #4]
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	2b00      	cmp	r3, #0
 80045b4:	d101      	bne.n	80045ba <HAL_DMA_Init+0x12>
 80045b6:	2301      	movs	r3, #1
 80045b8:	e08d      	b.n	80046d6 <HAL_DMA_Init+0x12e>
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	461a      	mov	r2, r3
 80045c0:	4b47      	ldr	r3, [pc, #284]	@ (80046e0 <HAL_DMA_Init+0x138>)
 80045c2:	429a      	cmp	r2, r3
 80045c4:	d80f      	bhi.n	80045e6 <HAL_DMA_Init+0x3e>
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	461a      	mov	r2, r3
 80045cc:	4b45      	ldr	r3, [pc, #276]	@ (80046e4 <HAL_DMA_Init+0x13c>)
 80045ce:	4413      	add	r3, r2
 80045d0:	4a45      	ldr	r2, [pc, #276]	@ (80046e8 <HAL_DMA_Init+0x140>)
 80045d2:	fba2 2303 	umull	r2, r3, r2, r3
 80045d6:	091b      	lsrs	r3, r3, #4
 80045d8:	009a      	lsls	r2, r3, #2
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	645a      	str	r2, [r3, #68]	@ 0x44
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	4a42      	ldr	r2, [pc, #264]	@ (80046ec <HAL_DMA_Init+0x144>)
 80045e2:	641a      	str	r2, [r3, #64]	@ 0x40
 80045e4:	e00e      	b.n	8004604 <HAL_DMA_Init+0x5c>
 80045e6:	687b      	ldr	r3, [r7, #4]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	461a      	mov	r2, r3
 80045ec:	4b40      	ldr	r3, [pc, #256]	@ (80046f0 <HAL_DMA_Init+0x148>)
 80045ee:	4413      	add	r3, r2
 80045f0:	4a3d      	ldr	r2, [pc, #244]	@ (80046e8 <HAL_DMA_Init+0x140>)
 80045f2:	fba2 2303 	umull	r2, r3, r2, r3
 80045f6:	091b      	lsrs	r3, r3, #4
 80045f8:	009a      	lsls	r2, r3, #2
 80045fa:	687b      	ldr	r3, [r7, #4]
 80045fc:	645a      	str	r2, [r3, #68]	@ 0x44
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	4a3c      	ldr	r2, [pc, #240]	@ (80046f4 <HAL_DMA_Init+0x14c>)
 8004602:	641a      	str	r2, [r3, #64]	@ 0x40
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	2202      	movs	r2, #2
 8004608:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	681b      	ldr	r3, [r3, #0]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	60fb      	str	r3, [r7, #12]
 8004614:	68fb      	ldr	r3, [r7, #12]
 8004616:	f423 43ff 	bic.w	r3, r3, #32640	@ 0x7f80
 800461a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800461e:	60fb      	str	r3, [r7, #12]
 8004620:	687b      	ldr	r3, [r7, #4]
 8004622:	689a      	ldr	r2, [r3, #8]
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	68db      	ldr	r3, [r3, #12]
 8004628:	431a      	orrs	r2, r3
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	691b      	ldr	r3, [r3, #16]
 800462e:	431a      	orrs	r2, r3
 8004630:	687b      	ldr	r3, [r7, #4]
 8004632:	695b      	ldr	r3, [r3, #20]
 8004634:	431a      	orrs	r2, r3
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	699b      	ldr	r3, [r3, #24]
 800463a:	431a      	orrs	r2, r3
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	69db      	ldr	r3, [r3, #28]
 8004640:	431a      	orrs	r2, r3
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	6a1b      	ldr	r3, [r3, #32]
 8004646:	4313      	orrs	r3, r2
 8004648:	68fa      	ldr	r2, [r7, #12]
 800464a:	4313      	orrs	r3, r2
 800464c:	60fb      	str	r3, [r7, #12]
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	68fa      	ldr	r2, [r7, #12]
 8004654:	601a      	str	r2, [r3, #0]
 8004656:	6878      	ldr	r0, [r7, #4]
 8004658:	f000 fa84 	bl	8004b64 <DMA_CalcDMAMUXChannelBaseAndMask>
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	689b      	ldr	r3, [r3, #8]
 8004660:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004664:	d102      	bne.n	800466c <HAL_DMA_Init+0xc4>
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	2200      	movs	r2, #0
 800466a:	605a      	str	r2, [r3, #4]
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	685a      	ldr	r2, [r3, #4]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004674:	b2d2      	uxtb	r2, r2
 8004676:	601a      	str	r2, [r3, #0]
 8004678:	687b      	ldr	r3, [r7, #4]
 800467a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800467c:	687a      	ldr	r2, [r7, #4]
 800467e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8004680:	605a      	str	r2, [r3, #4]
 8004682:	687b      	ldr	r3, [r7, #4]
 8004684:	685b      	ldr	r3, [r3, #4]
 8004686:	2b00      	cmp	r3, #0
 8004688:	d010      	beq.n	80046ac <HAL_DMA_Init+0x104>
 800468a:	687b      	ldr	r3, [r7, #4]
 800468c:	685b      	ldr	r3, [r3, #4]
 800468e:	2b04      	cmp	r3, #4
 8004690:	d80c      	bhi.n	80046ac <HAL_DMA_Init+0x104>
 8004692:	6878      	ldr	r0, [r7, #4]
 8004694:	f000 faa4 	bl	8004be0 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8004698:	687b      	ldr	r3, [r7, #4]
 800469a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800469c:	2200      	movs	r2, #0
 800469e:	601a      	str	r2, [r3, #0]
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80046a4:	687a      	ldr	r2, [r7, #4]
 80046a6:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 80046a8:	605a      	str	r2, [r3, #4]
 80046aa:	e008      	b.n	80046be <HAL_DMA_Init+0x116>
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	2200      	movs	r2, #0
 80046b0:	655a      	str	r2, [r3, #84]	@ 0x54
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	2200      	movs	r2, #0
 80046b6:	659a      	str	r2, [r3, #88]	@ 0x58
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	2200      	movs	r2, #0
 80046bc:	65da      	str	r2, [r3, #92]	@ 0x5c
 80046be:	687b      	ldr	r3, [r7, #4]
 80046c0:	2200      	movs	r2, #0
 80046c2:	63da      	str	r2, [r3, #60]	@ 0x3c
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	2201      	movs	r2, #1
 80046c8:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	2200      	movs	r2, #0
 80046d0:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80046d4:	2300      	movs	r3, #0
 80046d6:	4618      	mov	r0, r3
 80046d8:	3710      	adds	r7, #16
 80046da:	46bd      	mov	sp, r7
 80046dc:	bd80      	pop	{r7, pc}
 80046de:	bf00      	nop
 80046e0:	40020407 	.word	0x40020407
 80046e4:	bffdfff8 	.word	0xbffdfff8
 80046e8:	cccccccd 	.word	0xcccccccd
 80046ec:	40020000 	.word	0x40020000
 80046f0:	bffdfbf8 	.word	0xbffdfbf8
 80046f4:	40020400 	.word	0x40020400

080046f8 <HAL_DMA_Start_IT>:
 80046f8:	b580      	push	{r7, lr}
 80046fa:	b086      	sub	sp, #24
 80046fc:	af00      	add	r7, sp, #0
 80046fe:	60f8      	str	r0, [r7, #12]
 8004700:	60b9      	str	r1, [r7, #8]
 8004702:	607a      	str	r2, [r7, #4]
 8004704:	603b      	str	r3, [r7, #0]
 8004706:	2300      	movs	r3, #0
 8004708:	75fb      	strb	r3, [r7, #23]
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
 8004710:	2b01      	cmp	r3, #1
 8004712:	d101      	bne.n	8004718 <HAL_DMA_Start_IT+0x20>
 8004714:	2302      	movs	r3, #2
 8004716:	e066      	b.n	80047e6 <HAL_DMA_Start_IT+0xee>
 8004718:	68fb      	ldr	r3, [r7, #12]
 800471a:	2201      	movs	r2, #1
 800471c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8004726:	b2db      	uxtb	r3, r3
 8004728:	2b01      	cmp	r3, #1
 800472a:	d155      	bne.n	80047d8 <HAL_DMA_Start_IT+0xe0>
 800472c:	68fb      	ldr	r3, [r7, #12]
 800472e:	2202      	movs	r2, #2
 8004730:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8004734:	68fb      	ldr	r3, [r7, #12]
 8004736:	2200      	movs	r2, #0
 8004738:	63da      	str	r2, [r3, #60]	@ 0x3c
 800473a:	68fb      	ldr	r3, [r7, #12]
 800473c:	681b      	ldr	r3, [r3, #0]
 800473e:	681a      	ldr	r2, [r3, #0]
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	f022 0201 	bic.w	r2, r2, #1
 8004748:	601a      	str	r2, [r3, #0]
 800474a:	683b      	ldr	r3, [r7, #0]
 800474c:	687a      	ldr	r2, [r7, #4]
 800474e:	68b9      	ldr	r1, [r7, #8]
 8004750:	68f8      	ldr	r0, [r7, #12]
 8004752:	f000 f9c9 	bl	8004ae8 <DMA_SetConfig>
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800475a:	2b00      	cmp	r3, #0
 800475c:	d008      	beq.n	8004770 <HAL_DMA_Start_IT+0x78>
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	681a      	ldr	r2, [r3, #0]
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	f042 020e 	orr.w	r2, r2, #14
 800476c:	601a      	str	r2, [r3, #0]
 800476e:	e00f      	b.n	8004790 <HAL_DMA_Start_IT+0x98>
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	681a      	ldr	r2, [r3, #0]
 8004776:	68fb      	ldr	r3, [r7, #12]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	f022 0204 	bic.w	r2, r2, #4
 800477e:	601a      	str	r2, [r3, #0]
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	681b      	ldr	r3, [r3, #0]
 8004784:	681a      	ldr	r2, [r3, #0]
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	f042 020a 	orr.w	r2, r2, #10
 800478e:	601a      	str	r2, [r3, #0]
 8004790:	68fb      	ldr	r3, [r7, #12]
 8004792:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800479a:	2b00      	cmp	r3, #0
 800479c:	d007      	beq.n	80047ae <HAL_DMA_Start_IT+0xb6>
 800479e:	68fb      	ldr	r3, [r7, #12]
 80047a0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047a2:	681a      	ldr	r2, [r3, #0]
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80047a8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80047ac:	601a      	str	r2, [r3, #0]
 80047ae:	68fb      	ldr	r3, [r7, #12]
 80047b0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047b2:	2b00      	cmp	r3, #0
 80047b4:	d007      	beq.n	80047c6 <HAL_DMA_Start_IT+0xce>
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047ba:	681a      	ldr	r2, [r3, #0]
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80047c0:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80047c4:	601a      	str	r2, [r3, #0]
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	681b      	ldr	r3, [r3, #0]
 80047ca:	681a      	ldr	r2, [r3, #0]
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	f042 0201 	orr.w	r2, r2, #1
 80047d4:	601a      	str	r2, [r3, #0]
 80047d6:	e005      	b.n	80047e4 <HAL_DMA_Start_IT+0xec>
 80047d8:	68fb      	ldr	r3, [r7, #12]
 80047da:	2200      	movs	r2, #0
 80047dc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80047e0:	2302      	movs	r3, #2
 80047e2:	75fb      	strb	r3, [r7, #23]
 80047e4:	7dfb      	ldrb	r3, [r7, #23]
 80047e6:	4618      	mov	r0, r3
 80047e8:	3718      	adds	r7, #24
 80047ea:	46bd      	mov	sp, r7
 80047ec:	bd80      	pop	{r7, pc}

080047ee <HAL_DMA_Abort>:
 80047ee:	b480      	push	{r7}
 80047f0:	b085      	sub	sp, #20
 80047f2:	af00      	add	r7, sp, #0
 80047f4:	6078      	str	r0, [r7, #4]
 80047f6:	2300      	movs	r3, #0
 80047f8:	73fb      	strb	r3, [r7, #15]
 80047fa:	687b      	ldr	r3, [r7, #4]
 80047fc:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8004800:	b2db      	uxtb	r3, r3
 8004802:	2b02      	cmp	r3, #2
 8004804:	d005      	beq.n	8004812 <HAL_DMA_Abort+0x24>
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	2204      	movs	r2, #4
 800480a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800480c:	2301      	movs	r3, #1
 800480e:	73fb      	strb	r3, [r7, #15]
 8004810:	e037      	b.n	8004882 <HAL_DMA_Abort+0x94>
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	681b      	ldr	r3, [r3, #0]
 8004816:	681a      	ldr	r2, [r3, #0]
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	f022 020e 	bic.w	r2, r2, #14
 8004820:	601a      	str	r2, [r3, #0]
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004826:	681a      	ldr	r2, [r3, #0]
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800482c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004830:	601a      	str	r2, [r3, #0]
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	681b      	ldr	r3, [r3, #0]
 8004836:	681a      	ldr	r2, [r3, #0]
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	681b      	ldr	r3, [r3, #0]
 800483c:	f022 0201 	bic.w	r2, r2, #1
 8004840:	601a      	str	r2, [r3, #0]
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004846:	f003 021f 	and.w	r2, r3, #31
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800484e:	2101      	movs	r1, #1
 8004850:	fa01 f202 	lsl.w	r2, r1, r2
 8004854:	605a      	str	r2, [r3, #4]
 8004856:	687b      	ldr	r3, [r7, #4]
 8004858:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800485a:	687a      	ldr	r2, [r7, #4]
 800485c:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800485e:	605a      	str	r2, [r3, #4]
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004864:	2b00      	cmp	r3, #0
 8004866:	d00c      	beq.n	8004882 <HAL_DMA_Abort+0x94>
 8004868:	687b      	ldr	r3, [r7, #4]
 800486a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800486c:	681a      	ldr	r2, [r3, #0]
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004872:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004876:	601a      	str	r2, [r3, #0]
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800487c:	687a      	ldr	r2, [r7, #4]
 800487e:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8004880:	605a      	str	r2, [r3, #4]
 8004882:	687b      	ldr	r3, [r7, #4]
 8004884:	2201      	movs	r2, #1
 8004886:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 800488a:	687b      	ldr	r3, [r7, #4]
 800488c:	2200      	movs	r2, #0
 800488e:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004892:	7bfb      	ldrb	r3, [r7, #15]
 8004894:	4618      	mov	r0, r3
 8004896:	3714      	adds	r7, #20
 8004898:	46bd      	mov	sp, r7
 800489a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800489e:	4770      	bx	lr

080048a0 <HAL_DMA_Abort_IT>:
 80048a0:	b580      	push	{r7, lr}
 80048a2:	b084      	sub	sp, #16
 80048a4:	af00      	add	r7, sp, #0
 80048a6:	6078      	str	r0, [r7, #4]
 80048a8:	2300      	movs	r3, #0
 80048aa:	73fb      	strb	r3, [r7, #15]
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80048b2:	b2db      	uxtb	r3, r3
 80048b4:	2b02      	cmp	r3, #2
 80048b6:	d00d      	beq.n	80048d4 <HAL_DMA_Abort_IT+0x34>
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	2204      	movs	r2, #4
 80048bc:	63da      	str	r2, [r3, #60]	@ 0x3c
 80048be:	687b      	ldr	r3, [r7, #4]
 80048c0:	2201      	movs	r2, #1
 80048c2:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 80048c6:	687b      	ldr	r3, [r7, #4]
 80048c8:	2200      	movs	r2, #0
 80048ca:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 80048ce:	2301      	movs	r3, #1
 80048d0:	73fb      	strb	r3, [r7, #15]
 80048d2:	e047      	b.n	8004964 <HAL_DMA_Abort_IT+0xc4>
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	681a      	ldr	r2, [r3, #0]
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	f022 020e 	bic.w	r2, r2, #14
 80048e2:	601a      	str	r2, [r3, #0]
 80048e4:	687b      	ldr	r3, [r7, #4]
 80048e6:	681b      	ldr	r3, [r3, #0]
 80048e8:	681a      	ldr	r2, [r3, #0]
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	f022 0201 	bic.w	r2, r2, #1
 80048f2:	601a      	str	r2, [r3, #0]
 80048f4:	687b      	ldr	r3, [r7, #4]
 80048f6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80048f8:	681a      	ldr	r2, [r3, #0]
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80048fe:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004902:	601a      	str	r2, [r3, #0]
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004908:	f003 021f 	and.w	r2, r3, #31
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004910:	2101      	movs	r1, #1
 8004912:	fa01 f202 	lsl.w	r2, r1, r2
 8004916:	605a      	str	r2, [r3, #4]
 8004918:	687b      	ldr	r3, [r7, #4]
 800491a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800491c:	687a      	ldr	r2, [r7, #4]
 800491e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8004920:	605a      	str	r2, [r3, #4]
 8004922:	687b      	ldr	r3, [r7, #4]
 8004924:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004926:	2b00      	cmp	r3, #0
 8004928:	d00c      	beq.n	8004944 <HAL_DMA_Abort_IT+0xa4>
 800492a:	687b      	ldr	r3, [r7, #4]
 800492c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800492e:	681a      	ldr	r2, [r3, #0]
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004934:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004938:	601a      	str	r2, [r3, #0]
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800493e:	687a      	ldr	r2, [r7, #4]
 8004940:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8004942:	605a      	str	r2, [r3, #4]
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	2201      	movs	r2, #1
 8004948:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	2200      	movs	r2, #0
 8004950:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004954:	687b      	ldr	r3, [r7, #4]
 8004956:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004958:	2b00      	cmp	r3, #0
 800495a:	d003      	beq.n	8004964 <HAL_DMA_Abort_IT+0xc4>
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004960:	6878      	ldr	r0, [r7, #4]
 8004962:	4798      	blx	r3
 8004964:	7bfb      	ldrb	r3, [r7, #15]
 8004966:	4618      	mov	r0, r3
 8004968:	3710      	adds	r7, #16
 800496a:	46bd      	mov	sp, r7
 800496c:	bd80      	pop	{r7, pc}

0800496e <HAL_DMA_IRQHandler>:
 800496e:	b580      	push	{r7, lr}
 8004970:	b084      	sub	sp, #16
 8004972:	af00      	add	r7, sp, #0
 8004974:	6078      	str	r0, [r7, #4]
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800497a:	681b      	ldr	r3, [r3, #0]
 800497c:	60fb      	str	r3, [r7, #12]
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	60bb      	str	r3, [r7, #8]
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800498a:	f003 031f 	and.w	r3, r3, #31
 800498e:	2204      	movs	r2, #4
 8004990:	409a      	lsls	r2, r3
 8004992:	68fb      	ldr	r3, [r7, #12]
 8004994:	4013      	ands	r3, r2
 8004996:	2b00      	cmp	r3, #0
 8004998:	d026      	beq.n	80049e8 <HAL_DMA_IRQHandler+0x7a>
 800499a:	68bb      	ldr	r3, [r7, #8]
 800499c:	f003 0304 	and.w	r3, r3, #4
 80049a0:	2b00      	cmp	r3, #0
 80049a2:	d021      	beq.n	80049e8 <HAL_DMA_IRQHandler+0x7a>
 80049a4:	687b      	ldr	r3, [r7, #4]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	f003 0320 	and.w	r3, r3, #32
 80049ae:	2b00      	cmp	r3, #0
 80049b0:	d107      	bne.n	80049c2 <HAL_DMA_IRQHandler+0x54>
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	681b      	ldr	r3, [r3, #0]
 80049b6:	681a      	ldr	r2, [r3, #0]
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	f022 0204 	bic.w	r2, r2, #4
 80049c0:	601a      	str	r2, [r3, #0]
 80049c2:	687b      	ldr	r3, [r7, #4]
 80049c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80049c6:	f003 021f 	and.w	r2, r3, #31
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80049ce:	2104      	movs	r1, #4
 80049d0:	fa01 f202 	lsl.w	r2, r1, r2
 80049d4:	605a      	str	r2, [r3, #4]
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80049da:	2b00      	cmp	r3, #0
 80049dc:	d071      	beq.n	8004ac2 <HAL_DMA_IRQHandler+0x154>
 80049de:	687b      	ldr	r3, [r7, #4]
 80049e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80049e2:	6878      	ldr	r0, [r7, #4]
 80049e4:	4798      	blx	r3
 80049e6:	e06c      	b.n	8004ac2 <HAL_DMA_IRQHandler+0x154>
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80049ec:	f003 031f 	and.w	r3, r3, #31
 80049f0:	2202      	movs	r2, #2
 80049f2:	409a      	lsls	r2, r3
 80049f4:	68fb      	ldr	r3, [r7, #12]
 80049f6:	4013      	ands	r3, r2
 80049f8:	2b00      	cmp	r3, #0
 80049fa:	d02e      	beq.n	8004a5a <HAL_DMA_IRQHandler+0xec>
 80049fc:	68bb      	ldr	r3, [r7, #8]
 80049fe:	f003 0302 	and.w	r3, r3, #2
 8004a02:	2b00      	cmp	r3, #0
 8004a04:	d029      	beq.n	8004a5a <HAL_DMA_IRQHandler+0xec>
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	f003 0320 	and.w	r3, r3, #32
 8004a10:	2b00      	cmp	r3, #0
 8004a12:	d10b      	bne.n	8004a2c <HAL_DMA_IRQHandler+0xbe>
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	681a      	ldr	r2, [r3, #0]
 8004a1a:	687b      	ldr	r3, [r7, #4]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	f022 020a 	bic.w	r2, r2, #10
 8004a22:	601a      	str	r2, [r3, #0]
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	2201      	movs	r2, #1
 8004a28:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004a30:	f003 021f 	and.w	r2, r3, #31
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004a38:	2102      	movs	r1, #2
 8004a3a:	fa01 f202 	lsl.w	r2, r1, r2
 8004a3e:	605a      	str	r2, [r3, #4]
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	2200      	movs	r2, #0
 8004a44:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004a4c:	2b00      	cmp	r3, #0
 8004a4e:	d038      	beq.n	8004ac2 <HAL_DMA_IRQHandler+0x154>
 8004a50:	687b      	ldr	r3, [r7, #4]
 8004a52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004a54:	6878      	ldr	r0, [r7, #4]
 8004a56:	4798      	blx	r3
 8004a58:	e033      	b.n	8004ac2 <HAL_DMA_IRQHandler+0x154>
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004a5e:	f003 031f 	and.w	r3, r3, #31
 8004a62:	2208      	movs	r2, #8
 8004a64:	409a      	lsls	r2, r3
 8004a66:	68fb      	ldr	r3, [r7, #12]
 8004a68:	4013      	ands	r3, r2
 8004a6a:	2b00      	cmp	r3, #0
 8004a6c:	d02a      	beq.n	8004ac4 <HAL_DMA_IRQHandler+0x156>
 8004a6e:	68bb      	ldr	r3, [r7, #8]
 8004a70:	f003 0308 	and.w	r3, r3, #8
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	d025      	beq.n	8004ac4 <HAL_DMA_IRQHandler+0x156>
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	681b      	ldr	r3, [r3, #0]
 8004a7c:	681a      	ldr	r2, [r3, #0]
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	681b      	ldr	r3, [r3, #0]
 8004a82:	f022 020e 	bic.w	r2, r2, #14
 8004a86:	601a      	str	r2, [r3, #0]
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004a8c:	f003 021f 	and.w	r2, r3, #31
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004a94:	2101      	movs	r1, #1
 8004a96:	fa01 f202 	lsl.w	r2, r1, r2
 8004a9a:	605a      	str	r2, [r3, #4]
 8004a9c:	687b      	ldr	r3, [r7, #4]
 8004a9e:	2201      	movs	r2, #1
 8004aa0:	63da      	str	r2, [r3, #60]	@ 0x3c
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	2201      	movs	r2, #1
 8004aa6:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	2200      	movs	r2, #0
 8004aae:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d004      	beq.n	8004ac4 <HAL_DMA_IRQHandler+0x156>
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004abe:	6878      	ldr	r0, [r7, #4]
 8004ac0:	4798      	blx	r3
 8004ac2:	bf00      	nop
 8004ac4:	bf00      	nop
 8004ac6:	3710      	adds	r7, #16
 8004ac8:	46bd      	mov	sp, r7
 8004aca:	bd80      	pop	{r7, pc}

08004acc <HAL_DMA_GetState>:
 8004acc:	b480      	push	{r7}
 8004ace:	b083      	sub	sp, #12
 8004ad0:	af00      	add	r7, sp, #0
 8004ad2:	6078      	str	r0, [r7, #4]
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8004ada:	b2db      	uxtb	r3, r3
 8004adc:	4618      	mov	r0, r3
 8004ade:	370c      	adds	r7, #12
 8004ae0:	46bd      	mov	sp, r7
 8004ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ae6:	4770      	bx	lr

08004ae8 <DMA_SetConfig>:
 8004ae8:	b480      	push	{r7}
 8004aea:	b085      	sub	sp, #20
 8004aec:	af00      	add	r7, sp, #0
 8004aee:	60f8      	str	r0, [r7, #12]
 8004af0:	60b9      	str	r1, [r7, #8]
 8004af2:	607a      	str	r2, [r7, #4]
 8004af4:	603b      	str	r3, [r7, #0]
 8004af6:	68fb      	ldr	r3, [r7, #12]
 8004af8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004afa:	68fa      	ldr	r2, [r7, #12]
 8004afc:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8004afe:	605a      	str	r2, [r3, #4]
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004b04:	2b00      	cmp	r3, #0
 8004b06:	d004      	beq.n	8004b12 <DMA_SetConfig+0x2a>
 8004b08:	68fb      	ldr	r3, [r7, #12]
 8004b0a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004b0c:	68fa      	ldr	r2, [r7, #12]
 8004b0e:	6dd2      	ldr	r2, [r2, #92]	@ 0x5c
 8004b10:	605a      	str	r2, [r3, #4]
 8004b12:	68fb      	ldr	r3, [r7, #12]
 8004b14:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004b16:	f003 021f 	and.w	r2, r3, #31
 8004b1a:	68fb      	ldr	r3, [r7, #12]
 8004b1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004b1e:	2101      	movs	r1, #1
 8004b20:	fa01 f202 	lsl.w	r2, r1, r2
 8004b24:	605a      	str	r2, [r3, #4]
 8004b26:	68fb      	ldr	r3, [r7, #12]
 8004b28:	681b      	ldr	r3, [r3, #0]
 8004b2a:	683a      	ldr	r2, [r7, #0]
 8004b2c:	605a      	str	r2, [r3, #4]
 8004b2e:	68fb      	ldr	r3, [r7, #12]
 8004b30:	689b      	ldr	r3, [r3, #8]
 8004b32:	2b10      	cmp	r3, #16
 8004b34:	d108      	bne.n	8004b48 <DMA_SetConfig+0x60>
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	681b      	ldr	r3, [r3, #0]
 8004b3a:	687a      	ldr	r2, [r7, #4]
 8004b3c:	609a      	str	r2, [r3, #8]
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	68ba      	ldr	r2, [r7, #8]
 8004b44:	60da      	str	r2, [r3, #12]
 8004b46:	e007      	b.n	8004b58 <DMA_SetConfig+0x70>
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	68ba      	ldr	r2, [r7, #8]
 8004b4e:	609a      	str	r2, [r3, #8]
 8004b50:	68fb      	ldr	r3, [r7, #12]
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	687a      	ldr	r2, [r7, #4]
 8004b56:	60da      	str	r2, [r3, #12]
 8004b58:	bf00      	nop
 8004b5a:	3714      	adds	r7, #20
 8004b5c:	46bd      	mov	sp, r7
 8004b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b62:	4770      	bx	lr

08004b64 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8004b64:	b480      	push	{r7}
 8004b66:	b087      	sub	sp, #28
 8004b68:	af00      	add	r7, sp, #0
 8004b6a:	6078      	str	r0, [r7, #4]
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	681b      	ldr	r3, [r3, #0]
 8004b70:	461a      	mov	r2, r3
 8004b72:	4b16      	ldr	r3, [pc, #88]	@ (8004bcc <DMA_CalcDMAMUXChannelBaseAndMask+0x68>)
 8004b74:	429a      	cmp	r2, r3
 8004b76:	d802      	bhi.n	8004b7e <DMA_CalcDMAMUXChannelBaseAndMask+0x1a>
 8004b78:	4b15      	ldr	r3, [pc, #84]	@ (8004bd0 <DMA_CalcDMAMUXChannelBaseAndMask+0x6c>)
 8004b7a:	617b      	str	r3, [r7, #20]
 8004b7c:	e001      	b.n	8004b82 <DMA_CalcDMAMUXChannelBaseAndMask+0x1e>
 8004b7e:	4b15      	ldr	r3, [pc, #84]	@ (8004bd4 <DMA_CalcDMAMUXChannelBaseAndMask+0x70>)
 8004b80:	617b      	str	r3, [r7, #20]
 8004b82:	697b      	ldr	r3, [r7, #20]
 8004b84:	613b      	str	r3, [r7, #16]
 8004b86:	687b      	ldr	r3, [r7, #4]
 8004b88:	681b      	ldr	r3, [r3, #0]
 8004b8a:	b2db      	uxtb	r3, r3
 8004b8c:	3b08      	subs	r3, #8
 8004b8e:	4a12      	ldr	r2, [pc, #72]	@ (8004bd8 <DMA_CalcDMAMUXChannelBaseAndMask+0x74>)
 8004b90:	fba2 2303 	umull	r2, r3, r2, r3
 8004b94:	091b      	lsrs	r3, r3, #4
 8004b96:	60fb      	str	r3, [r7, #12]
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004b9c:	089b      	lsrs	r3, r3, #2
 8004b9e:	009a      	lsls	r2, r3, #2
 8004ba0:	693b      	ldr	r3, [r7, #16]
 8004ba2:	4413      	add	r3, r2
 8004ba4:	461a      	mov	r2, r3
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	649a      	str	r2, [r3, #72]	@ 0x48
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	4a0b      	ldr	r2, [pc, #44]	@ (8004bdc <DMA_CalcDMAMUXChannelBaseAndMask+0x78>)
 8004bae:	64da      	str	r2, [r3, #76]	@ 0x4c
 8004bb0:	68fb      	ldr	r3, [r7, #12]
 8004bb2:	f003 031f 	and.w	r3, r3, #31
 8004bb6:	2201      	movs	r2, #1
 8004bb8:	409a      	lsls	r2, r3
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	651a      	str	r2, [r3, #80]	@ 0x50
 8004bbe:	bf00      	nop
 8004bc0:	371c      	adds	r7, #28
 8004bc2:	46bd      	mov	sp, r7
 8004bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bc8:	4770      	bx	lr
 8004bca:	bf00      	nop
 8004bcc:	40020407 	.word	0x40020407
 8004bd0:	40020800 	.word	0x40020800
 8004bd4:	40020820 	.word	0x40020820
 8004bd8:	cccccccd 	.word	0xcccccccd
 8004bdc:	40020880 	.word	0x40020880

08004be0 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8004be0:	b480      	push	{r7}
 8004be2:	b085      	sub	sp, #20
 8004be4:	af00      	add	r7, sp, #0
 8004be6:	6078      	str	r0, [r7, #4]
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	685b      	ldr	r3, [r3, #4]
 8004bec:	b2db      	uxtb	r3, r3
 8004bee:	60fb      	str	r3, [r7, #12]
 8004bf0:	68fa      	ldr	r2, [r7, #12]
 8004bf2:	4b0b      	ldr	r3, [pc, #44]	@ (8004c20 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x40>)
 8004bf4:	4413      	add	r3, r2
 8004bf6:	009b      	lsls	r3, r3, #2
 8004bf8:	461a      	mov	r2, r3
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	655a      	str	r2, [r3, #84]	@ 0x54
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	4a08      	ldr	r2, [pc, #32]	@ (8004c24 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8004c02:	659a      	str	r2, [r3, #88]	@ 0x58
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	3b01      	subs	r3, #1
 8004c08:	f003 031f 	and.w	r3, r3, #31
 8004c0c:	2201      	movs	r2, #1
 8004c0e:	409a      	lsls	r2, r3
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	65da      	str	r2, [r3, #92]	@ 0x5c
 8004c14:	bf00      	nop
 8004c16:	3714      	adds	r7, #20
 8004c18:	46bd      	mov	sp, r7
 8004c1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c1e:	4770      	bx	lr
 8004c20:	1000823f 	.word	0x1000823f
 8004c24:	40020940 	.word	0x40020940

08004c28 <HAL_GPIO_Init>:
 8004c28:	b480      	push	{r7}
 8004c2a:	b087      	sub	sp, #28
 8004c2c:	af00      	add	r7, sp, #0
 8004c2e:	6078      	str	r0, [r7, #4]
 8004c30:	6039      	str	r1, [r7, #0]
 8004c32:	2300      	movs	r3, #0
 8004c34:	617b      	str	r3, [r7, #20]
 8004c36:	e15a      	b.n	8004eee <HAL_GPIO_Init+0x2c6>
 8004c38:	683b      	ldr	r3, [r7, #0]
 8004c3a:	681a      	ldr	r2, [r3, #0]
 8004c3c:	2101      	movs	r1, #1
 8004c3e:	697b      	ldr	r3, [r7, #20]
 8004c40:	fa01 f303 	lsl.w	r3, r1, r3
 8004c44:	4013      	ands	r3, r2
 8004c46:	60fb      	str	r3, [r7, #12]
 8004c48:	68fb      	ldr	r3, [r7, #12]
 8004c4a:	2b00      	cmp	r3, #0
 8004c4c:	f000 814c 	beq.w	8004ee8 <HAL_GPIO_Init+0x2c0>
 8004c50:	683b      	ldr	r3, [r7, #0]
 8004c52:	685b      	ldr	r3, [r3, #4]
 8004c54:	f003 0303 	and.w	r3, r3, #3
 8004c58:	2b01      	cmp	r3, #1
 8004c5a:	d005      	beq.n	8004c68 <HAL_GPIO_Init+0x40>
 8004c5c:	683b      	ldr	r3, [r7, #0]
 8004c5e:	685b      	ldr	r3, [r3, #4]
 8004c60:	f003 0303 	and.w	r3, r3, #3
 8004c64:	2b02      	cmp	r3, #2
 8004c66:	d130      	bne.n	8004cca <HAL_GPIO_Init+0xa2>
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	689b      	ldr	r3, [r3, #8]
 8004c6c:	613b      	str	r3, [r7, #16]
 8004c6e:	697b      	ldr	r3, [r7, #20]
 8004c70:	005b      	lsls	r3, r3, #1
 8004c72:	2203      	movs	r2, #3
 8004c74:	fa02 f303 	lsl.w	r3, r2, r3
 8004c78:	43db      	mvns	r3, r3
 8004c7a:	693a      	ldr	r2, [r7, #16]
 8004c7c:	4013      	ands	r3, r2
 8004c7e:	613b      	str	r3, [r7, #16]
 8004c80:	683b      	ldr	r3, [r7, #0]
 8004c82:	68da      	ldr	r2, [r3, #12]
 8004c84:	697b      	ldr	r3, [r7, #20]
 8004c86:	005b      	lsls	r3, r3, #1
 8004c88:	fa02 f303 	lsl.w	r3, r2, r3
 8004c8c:	693a      	ldr	r2, [r7, #16]
 8004c8e:	4313      	orrs	r3, r2
 8004c90:	613b      	str	r3, [r7, #16]
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	693a      	ldr	r2, [r7, #16]
 8004c96:	609a      	str	r2, [r3, #8]
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	685b      	ldr	r3, [r3, #4]
 8004c9c:	613b      	str	r3, [r7, #16]
 8004c9e:	2201      	movs	r2, #1
 8004ca0:	697b      	ldr	r3, [r7, #20]
 8004ca2:	fa02 f303 	lsl.w	r3, r2, r3
 8004ca6:	43db      	mvns	r3, r3
 8004ca8:	693a      	ldr	r2, [r7, #16]
 8004caa:	4013      	ands	r3, r2
 8004cac:	613b      	str	r3, [r7, #16]
 8004cae:	683b      	ldr	r3, [r7, #0]
 8004cb0:	685b      	ldr	r3, [r3, #4]
 8004cb2:	091b      	lsrs	r3, r3, #4
 8004cb4:	f003 0201 	and.w	r2, r3, #1
 8004cb8:	697b      	ldr	r3, [r7, #20]
 8004cba:	fa02 f303 	lsl.w	r3, r2, r3
 8004cbe:	693a      	ldr	r2, [r7, #16]
 8004cc0:	4313      	orrs	r3, r2
 8004cc2:	613b      	str	r3, [r7, #16]
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	693a      	ldr	r2, [r7, #16]
 8004cc8:	605a      	str	r2, [r3, #4]
 8004cca:	683b      	ldr	r3, [r7, #0]
 8004ccc:	685b      	ldr	r3, [r3, #4]
 8004cce:	f003 0303 	and.w	r3, r3, #3
 8004cd2:	2b03      	cmp	r3, #3
 8004cd4:	d017      	beq.n	8004d06 <HAL_GPIO_Init+0xde>
 8004cd6:	687b      	ldr	r3, [r7, #4]
 8004cd8:	68db      	ldr	r3, [r3, #12]
 8004cda:	613b      	str	r3, [r7, #16]
 8004cdc:	697b      	ldr	r3, [r7, #20]
 8004cde:	005b      	lsls	r3, r3, #1
 8004ce0:	2203      	movs	r2, #3
 8004ce2:	fa02 f303 	lsl.w	r3, r2, r3
 8004ce6:	43db      	mvns	r3, r3
 8004ce8:	693a      	ldr	r2, [r7, #16]
 8004cea:	4013      	ands	r3, r2
 8004cec:	613b      	str	r3, [r7, #16]
 8004cee:	683b      	ldr	r3, [r7, #0]
 8004cf0:	689a      	ldr	r2, [r3, #8]
 8004cf2:	697b      	ldr	r3, [r7, #20]
 8004cf4:	005b      	lsls	r3, r3, #1
 8004cf6:	fa02 f303 	lsl.w	r3, r2, r3
 8004cfa:	693a      	ldr	r2, [r7, #16]
 8004cfc:	4313      	orrs	r3, r2
 8004cfe:	613b      	str	r3, [r7, #16]
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	693a      	ldr	r2, [r7, #16]
 8004d04:	60da      	str	r2, [r3, #12]
 8004d06:	683b      	ldr	r3, [r7, #0]
 8004d08:	685b      	ldr	r3, [r3, #4]
 8004d0a:	f003 0303 	and.w	r3, r3, #3
 8004d0e:	2b02      	cmp	r3, #2
 8004d10:	d123      	bne.n	8004d5a <HAL_GPIO_Init+0x132>
 8004d12:	697b      	ldr	r3, [r7, #20]
 8004d14:	08da      	lsrs	r2, r3, #3
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	3208      	adds	r2, #8
 8004d1a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004d1e:	613b      	str	r3, [r7, #16]
 8004d20:	697b      	ldr	r3, [r7, #20]
 8004d22:	f003 0307 	and.w	r3, r3, #7
 8004d26:	009b      	lsls	r3, r3, #2
 8004d28:	220f      	movs	r2, #15
 8004d2a:	fa02 f303 	lsl.w	r3, r2, r3
 8004d2e:	43db      	mvns	r3, r3
 8004d30:	693a      	ldr	r2, [r7, #16]
 8004d32:	4013      	ands	r3, r2
 8004d34:	613b      	str	r3, [r7, #16]
 8004d36:	683b      	ldr	r3, [r7, #0]
 8004d38:	691a      	ldr	r2, [r3, #16]
 8004d3a:	697b      	ldr	r3, [r7, #20]
 8004d3c:	f003 0307 	and.w	r3, r3, #7
 8004d40:	009b      	lsls	r3, r3, #2
 8004d42:	fa02 f303 	lsl.w	r3, r2, r3
 8004d46:	693a      	ldr	r2, [r7, #16]
 8004d48:	4313      	orrs	r3, r2
 8004d4a:	613b      	str	r3, [r7, #16]
 8004d4c:	697b      	ldr	r3, [r7, #20]
 8004d4e:	08da      	lsrs	r2, r3, #3
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	3208      	adds	r2, #8
 8004d54:	6939      	ldr	r1, [r7, #16]
 8004d56:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004d5a:	687b      	ldr	r3, [r7, #4]
 8004d5c:	681b      	ldr	r3, [r3, #0]
 8004d5e:	613b      	str	r3, [r7, #16]
 8004d60:	697b      	ldr	r3, [r7, #20]
 8004d62:	005b      	lsls	r3, r3, #1
 8004d64:	2203      	movs	r2, #3
 8004d66:	fa02 f303 	lsl.w	r3, r2, r3
 8004d6a:	43db      	mvns	r3, r3
 8004d6c:	693a      	ldr	r2, [r7, #16]
 8004d6e:	4013      	ands	r3, r2
 8004d70:	613b      	str	r3, [r7, #16]
 8004d72:	683b      	ldr	r3, [r7, #0]
 8004d74:	685b      	ldr	r3, [r3, #4]
 8004d76:	f003 0203 	and.w	r2, r3, #3
 8004d7a:	697b      	ldr	r3, [r7, #20]
 8004d7c:	005b      	lsls	r3, r3, #1
 8004d7e:	fa02 f303 	lsl.w	r3, r2, r3
 8004d82:	693a      	ldr	r2, [r7, #16]
 8004d84:	4313      	orrs	r3, r2
 8004d86:	613b      	str	r3, [r7, #16]
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	693a      	ldr	r2, [r7, #16]
 8004d8c:	601a      	str	r2, [r3, #0]
 8004d8e:	683b      	ldr	r3, [r7, #0]
 8004d90:	685b      	ldr	r3, [r3, #4]
 8004d92:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	f000 80a6 	beq.w	8004ee8 <HAL_GPIO_Init+0x2c0>
 8004d9c:	4b5b      	ldr	r3, [pc, #364]	@ (8004f0c <HAL_GPIO_Init+0x2e4>)
 8004d9e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004da0:	4a5a      	ldr	r2, [pc, #360]	@ (8004f0c <HAL_GPIO_Init+0x2e4>)
 8004da2:	f043 0301 	orr.w	r3, r3, #1
 8004da6:	6613      	str	r3, [r2, #96]	@ 0x60
 8004da8:	4b58      	ldr	r3, [pc, #352]	@ (8004f0c <HAL_GPIO_Init+0x2e4>)
 8004daa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004dac:	f003 0301 	and.w	r3, r3, #1
 8004db0:	60bb      	str	r3, [r7, #8]
 8004db2:	68bb      	ldr	r3, [r7, #8]
 8004db4:	4a56      	ldr	r2, [pc, #344]	@ (8004f10 <HAL_GPIO_Init+0x2e8>)
 8004db6:	697b      	ldr	r3, [r7, #20]
 8004db8:	089b      	lsrs	r3, r3, #2
 8004dba:	3302      	adds	r3, #2
 8004dbc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004dc0:	613b      	str	r3, [r7, #16]
 8004dc2:	697b      	ldr	r3, [r7, #20]
 8004dc4:	f003 0303 	and.w	r3, r3, #3
 8004dc8:	009b      	lsls	r3, r3, #2
 8004dca:	220f      	movs	r2, #15
 8004dcc:	fa02 f303 	lsl.w	r3, r2, r3
 8004dd0:	43db      	mvns	r3, r3
 8004dd2:	693a      	ldr	r2, [r7, #16]
 8004dd4:	4013      	ands	r3, r2
 8004dd6:	613b      	str	r3, [r7, #16]
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8004dde:	d01f      	beq.n	8004e20 <HAL_GPIO_Init+0x1f8>
 8004de0:	687b      	ldr	r3, [r7, #4]
 8004de2:	4a4c      	ldr	r2, [pc, #304]	@ (8004f14 <HAL_GPIO_Init+0x2ec>)
 8004de4:	4293      	cmp	r3, r2
 8004de6:	d019      	beq.n	8004e1c <HAL_GPIO_Init+0x1f4>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	4a4b      	ldr	r2, [pc, #300]	@ (8004f18 <HAL_GPIO_Init+0x2f0>)
 8004dec:	4293      	cmp	r3, r2
 8004dee:	d013      	beq.n	8004e18 <HAL_GPIO_Init+0x1f0>
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	4a4a      	ldr	r2, [pc, #296]	@ (8004f1c <HAL_GPIO_Init+0x2f4>)
 8004df4:	4293      	cmp	r3, r2
 8004df6:	d00d      	beq.n	8004e14 <HAL_GPIO_Init+0x1ec>
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	4a49      	ldr	r2, [pc, #292]	@ (8004f20 <HAL_GPIO_Init+0x2f8>)
 8004dfc:	4293      	cmp	r3, r2
 8004dfe:	d007      	beq.n	8004e10 <HAL_GPIO_Init+0x1e8>
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	4a48      	ldr	r2, [pc, #288]	@ (8004f24 <HAL_GPIO_Init+0x2fc>)
 8004e04:	4293      	cmp	r3, r2
 8004e06:	d101      	bne.n	8004e0c <HAL_GPIO_Init+0x1e4>
 8004e08:	2305      	movs	r3, #5
 8004e0a:	e00a      	b.n	8004e22 <HAL_GPIO_Init+0x1fa>
 8004e0c:	2306      	movs	r3, #6
 8004e0e:	e008      	b.n	8004e22 <HAL_GPIO_Init+0x1fa>
 8004e10:	2304      	movs	r3, #4
 8004e12:	e006      	b.n	8004e22 <HAL_GPIO_Init+0x1fa>
 8004e14:	2303      	movs	r3, #3
 8004e16:	e004      	b.n	8004e22 <HAL_GPIO_Init+0x1fa>
 8004e18:	2302      	movs	r3, #2
 8004e1a:	e002      	b.n	8004e22 <HAL_GPIO_Init+0x1fa>
 8004e1c:	2301      	movs	r3, #1
 8004e1e:	e000      	b.n	8004e22 <HAL_GPIO_Init+0x1fa>
 8004e20:	2300      	movs	r3, #0
 8004e22:	697a      	ldr	r2, [r7, #20]
 8004e24:	f002 0203 	and.w	r2, r2, #3
 8004e28:	0092      	lsls	r2, r2, #2
 8004e2a:	4093      	lsls	r3, r2
 8004e2c:	693a      	ldr	r2, [r7, #16]
 8004e2e:	4313      	orrs	r3, r2
 8004e30:	613b      	str	r3, [r7, #16]
 8004e32:	4937      	ldr	r1, [pc, #220]	@ (8004f10 <HAL_GPIO_Init+0x2e8>)
 8004e34:	697b      	ldr	r3, [r7, #20]
 8004e36:	089b      	lsrs	r3, r3, #2
 8004e38:	3302      	adds	r3, #2
 8004e3a:	693a      	ldr	r2, [r7, #16]
 8004e3c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004e40:	4b39      	ldr	r3, [pc, #228]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004e42:	689b      	ldr	r3, [r3, #8]
 8004e44:	613b      	str	r3, [r7, #16]
 8004e46:	68fb      	ldr	r3, [r7, #12]
 8004e48:	43db      	mvns	r3, r3
 8004e4a:	693a      	ldr	r2, [r7, #16]
 8004e4c:	4013      	ands	r3, r2
 8004e4e:	613b      	str	r3, [r7, #16]
 8004e50:	683b      	ldr	r3, [r7, #0]
 8004e52:	685b      	ldr	r3, [r3, #4]
 8004e54:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	d003      	beq.n	8004e64 <HAL_GPIO_Init+0x23c>
 8004e5c:	693a      	ldr	r2, [r7, #16]
 8004e5e:	68fb      	ldr	r3, [r7, #12]
 8004e60:	4313      	orrs	r3, r2
 8004e62:	613b      	str	r3, [r7, #16]
 8004e64:	4a30      	ldr	r2, [pc, #192]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004e66:	693b      	ldr	r3, [r7, #16]
 8004e68:	6093      	str	r3, [r2, #8]
 8004e6a:	4b2f      	ldr	r3, [pc, #188]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004e6c:	68db      	ldr	r3, [r3, #12]
 8004e6e:	613b      	str	r3, [r7, #16]
 8004e70:	68fb      	ldr	r3, [r7, #12]
 8004e72:	43db      	mvns	r3, r3
 8004e74:	693a      	ldr	r2, [r7, #16]
 8004e76:	4013      	ands	r3, r2
 8004e78:	613b      	str	r3, [r7, #16]
 8004e7a:	683b      	ldr	r3, [r7, #0]
 8004e7c:	685b      	ldr	r3, [r3, #4]
 8004e7e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	d003      	beq.n	8004e8e <HAL_GPIO_Init+0x266>
 8004e86:	693a      	ldr	r2, [r7, #16]
 8004e88:	68fb      	ldr	r3, [r7, #12]
 8004e8a:	4313      	orrs	r3, r2
 8004e8c:	613b      	str	r3, [r7, #16]
 8004e8e:	4a26      	ldr	r2, [pc, #152]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004e90:	693b      	ldr	r3, [r7, #16]
 8004e92:	60d3      	str	r3, [r2, #12]
 8004e94:	4b24      	ldr	r3, [pc, #144]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004e96:	685b      	ldr	r3, [r3, #4]
 8004e98:	613b      	str	r3, [r7, #16]
 8004e9a:	68fb      	ldr	r3, [r7, #12]
 8004e9c:	43db      	mvns	r3, r3
 8004e9e:	693a      	ldr	r2, [r7, #16]
 8004ea0:	4013      	ands	r3, r2
 8004ea2:	613b      	str	r3, [r7, #16]
 8004ea4:	683b      	ldr	r3, [r7, #0]
 8004ea6:	685b      	ldr	r3, [r3, #4]
 8004ea8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004eac:	2b00      	cmp	r3, #0
 8004eae:	d003      	beq.n	8004eb8 <HAL_GPIO_Init+0x290>
 8004eb0:	693a      	ldr	r2, [r7, #16]
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	4313      	orrs	r3, r2
 8004eb6:	613b      	str	r3, [r7, #16]
 8004eb8:	4a1b      	ldr	r2, [pc, #108]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004eba:	693b      	ldr	r3, [r7, #16]
 8004ebc:	6053      	str	r3, [r2, #4]
 8004ebe:	4b1a      	ldr	r3, [pc, #104]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004ec0:	681b      	ldr	r3, [r3, #0]
 8004ec2:	613b      	str	r3, [r7, #16]
 8004ec4:	68fb      	ldr	r3, [r7, #12]
 8004ec6:	43db      	mvns	r3, r3
 8004ec8:	693a      	ldr	r2, [r7, #16]
 8004eca:	4013      	ands	r3, r2
 8004ecc:	613b      	str	r3, [r7, #16]
 8004ece:	683b      	ldr	r3, [r7, #0]
 8004ed0:	685b      	ldr	r3, [r3, #4]
 8004ed2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	d003      	beq.n	8004ee2 <HAL_GPIO_Init+0x2ba>
 8004eda:	693a      	ldr	r2, [r7, #16]
 8004edc:	68fb      	ldr	r3, [r7, #12]
 8004ede:	4313      	orrs	r3, r2
 8004ee0:	613b      	str	r3, [r7, #16]
 8004ee2:	4a11      	ldr	r2, [pc, #68]	@ (8004f28 <HAL_GPIO_Init+0x300>)
 8004ee4:	693b      	ldr	r3, [r7, #16]
 8004ee6:	6013      	str	r3, [r2, #0]
 8004ee8:	697b      	ldr	r3, [r7, #20]
 8004eea:	3301      	adds	r3, #1
 8004eec:	617b      	str	r3, [r7, #20]
 8004eee:	683b      	ldr	r3, [r7, #0]
 8004ef0:	681a      	ldr	r2, [r3, #0]
 8004ef2:	697b      	ldr	r3, [r7, #20]
 8004ef4:	fa22 f303 	lsr.w	r3, r2, r3
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	f47f ae9d 	bne.w	8004c38 <HAL_GPIO_Init+0x10>
 8004efe:	bf00      	nop
 8004f00:	bf00      	nop
 8004f02:	371c      	adds	r7, #28
 8004f04:	46bd      	mov	sp, r7
 8004f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0a:	4770      	bx	lr
 8004f0c:	40021000 	.word	0x40021000
 8004f10:	40010000 	.word	0x40010000
 8004f14:	48000400 	.word	0x48000400
 8004f18:	48000800 	.word	0x48000800
 8004f1c:	48000c00 	.word	0x48000c00
 8004f20:	48001000 	.word	0x48001000
 8004f24:	48001400 	.word	0x48001400
 8004f28:	40010400 	.word	0x40010400

08004f2c <HAL_GPIO_WritePin>:
 8004f2c:	b480      	push	{r7}
 8004f2e:	b083      	sub	sp, #12
 8004f30:	af00      	add	r7, sp, #0
 8004f32:	6078      	str	r0, [r7, #4]
 8004f34:	460b      	mov	r3, r1
 8004f36:	807b      	strh	r3, [r7, #2]
 8004f38:	4613      	mov	r3, r2
 8004f3a:	707b      	strb	r3, [r7, #1]
 8004f3c:	787b      	ldrb	r3, [r7, #1]
 8004f3e:	2b00      	cmp	r3, #0
 8004f40:	d003      	beq.n	8004f4a <HAL_GPIO_WritePin+0x1e>
 8004f42:	887a      	ldrh	r2, [r7, #2]
 8004f44:	687b      	ldr	r3, [r7, #4]
 8004f46:	619a      	str	r2, [r3, #24]
 8004f48:	e002      	b.n	8004f50 <HAL_GPIO_WritePin+0x24>
 8004f4a:	887a      	ldrh	r2, [r7, #2]
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	629a      	str	r2, [r3, #40]	@ 0x28
 8004f50:	bf00      	nop
 8004f52:	370c      	adds	r7, #12
 8004f54:	46bd      	mov	sp, r7
 8004f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f5a:	4770      	bx	lr

08004f5c <HAL_GPIO_EXTI_IRQHandler>:
 8004f5c:	b580      	push	{r7, lr}
 8004f5e:	b082      	sub	sp, #8
 8004f60:	af00      	add	r7, sp, #0
 8004f62:	4603      	mov	r3, r0
 8004f64:	80fb      	strh	r3, [r7, #6]
 8004f66:	4b08      	ldr	r3, [pc, #32]	@ (8004f88 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004f68:	695a      	ldr	r2, [r3, #20]
 8004f6a:	88fb      	ldrh	r3, [r7, #6]
 8004f6c:	4013      	ands	r3, r2
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d006      	beq.n	8004f80 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8004f72:	4a05      	ldr	r2, [pc, #20]	@ (8004f88 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004f74:	88fb      	ldrh	r3, [r7, #6]
 8004f76:	6153      	str	r3, [r2, #20]
 8004f78:	88fb      	ldrh	r3, [r7, #6]
 8004f7a:	4618      	mov	r0, r3
 8004f7c:	f7fd fd32 	bl	80029e4 <HAL_GPIO_EXTI_Callback>
 8004f80:	bf00      	nop
 8004f82:	3708      	adds	r7, #8
 8004f84:	46bd      	mov	sp, r7
 8004f86:	bd80      	pop	{r7, pc}
 8004f88:	40010400 	.word	0x40010400

08004f8c <HAL_I2C_Init>:
 8004f8c:	b580      	push	{r7, lr}
 8004f8e:	b082      	sub	sp, #8
 8004f90:	af00      	add	r7, sp, #0
 8004f92:	6078      	str	r0, [r7, #4]
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	2b00      	cmp	r3, #0
 8004f98:	d101      	bne.n	8004f9e <HAL_I2C_Init+0x12>
 8004f9a:	2301      	movs	r3, #1
 8004f9c:	e08d      	b.n	80050ba <HAL_I2C_Init+0x12e>
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004fa4:	b2db      	uxtb	r3, r3
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	d106      	bne.n	8004fb8 <HAL_I2C_Init+0x2c>
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	2200      	movs	r2, #0
 8004fae:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004fb2:	6878      	ldr	r0, [r7, #4]
 8004fb4:	f7fc feb0 	bl	8001d18 <HAL_I2C_MspInit>
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	2224      	movs	r2, #36	@ 0x24
 8004fbc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	681a      	ldr	r2, [r3, #0]
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	f022 0201 	bic.w	r2, r2, #1
 8004fce:	601a      	str	r2, [r3, #0]
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	685a      	ldr	r2, [r3, #4]
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8004fdc:	611a      	str	r2, [r3, #16]
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	681b      	ldr	r3, [r3, #0]
 8004fe2:	689a      	ldr	r2, [r3, #8]
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004fec:	609a      	str	r2, [r3, #8]
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	68db      	ldr	r3, [r3, #12]
 8004ff2:	2b01      	cmp	r3, #1
 8004ff4:	d107      	bne.n	8005006 <HAL_I2C_Init+0x7a>
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	689a      	ldr	r2, [r3, #8]
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	681b      	ldr	r3, [r3, #0]
 8004ffe:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005002:	609a      	str	r2, [r3, #8]
 8005004:	e006      	b.n	8005014 <HAL_I2C_Init+0x88>
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	689a      	ldr	r2, [r3, #8]
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8005012:	609a      	str	r2, [r3, #8]
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	68db      	ldr	r3, [r3, #12]
 8005018:	2b02      	cmp	r3, #2
 800501a:	d108      	bne.n	800502e <HAL_I2C_Init+0xa2>
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	681b      	ldr	r3, [r3, #0]
 8005020:	685a      	ldr	r2, [r3, #4]
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800502a:	605a      	str	r2, [r3, #4]
 800502c:	e007      	b.n	800503e <HAL_I2C_Init+0xb2>
 800502e:	687b      	ldr	r3, [r7, #4]
 8005030:	681b      	ldr	r3, [r3, #0]
 8005032:	685a      	ldr	r2, [r3, #4]
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	681b      	ldr	r3, [r3, #0]
 8005038:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800503c:	605a      	str	r2, [r3, #4]
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	685b      	ldr	r3, [r3, #4]
 8005044:	687a      	ldr	r2, [r7, #4]
 8005046:	6812      	ldr	r2, [r2, #0]
 8005048:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 800504c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8005050:	6053      	str	r3, [r2, #4]
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	68da      	ldr	r2, [r3, #12]
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005060:	60da      	str	r2, [r3, #12]
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	691a      	ldr	r2, [r3, #16]
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	695b      	ldr	r3, [r3, #20]
 800506a:	ea42 0103 	orr.w	r1, r2, r3
 800506e:	687b      	ldr	r3, [r7, #4]
 8005070:	699b      	ldr	r3, [r3, #24]
 8005072:	021a      	lsls	r2, r3, #8
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	430a      	orrs	r2, r1
 800507a:	60da      	str	r2, [r3, #12]
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	69d9      	ldr	r1, [r3, #28]
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	6a1a      	ldr	r2, [r3, #32]
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	430a      	orrs	r2, r1
 800508a:	601a      	str	r2, [r3, #0]
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	681b      	ldr	r3, [r3, #0]
 8005090:	681a      	ldr	r2, [r3, #0]
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	681b      	ldr	r3, [r3, #0]
 8005096:	f042 0201 	orr.w	r2, r2, #1
 800509a:	601a      	str	r2, [r3, #0]
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	2200      	movs	r2, #0
 80050a0:	645a      	str	r2, [r3, #68]	@ 0x44
 80050a2:	687b      	ldr	r3, [r7, #4]
 80050a4:	2220      	movs	r2, #32
 80050a6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80050aa:	687b      	ldr	r3, [r7, #4]
 80050ac:	2200      	movs	r2, #0
 80050ae:	631a      	str	r2, [r3, #48]	@ 0x30
 80050b0:	687b      	ldr	r3, [r7, #4]
 80050b2:	2200      	movs	r2, #0
 80050b4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80050b8:	2300      	movs	r3, #0
 80050ba:	4618      	mov	r0, r3
 80050bc:	3708      	adds	r7, #8
 80050be:	46bd      	mov	sp, r7
 80050c0:	bd80      	pop	{r7, pc}
	...

080050c4 <HAL_I2C_Master_Transmit_DMA>:
 80050c4:	b580      	push	{r7, lr}
 80050c6:	b08a      	sub	sp, #40	@ 0x28
 80050c8:	af02      	add	r7, sp, #8
 80050ca:	60f8      	str	r0, [r7, #12]
 80050cc:	607a      	str	r2, [r7, #4]
 80050ce:	461a      	mov	r2, r3
 80050d0:	460b      	mov	r3, r1
 80050d2:	817b      	strh	r3, [r7, #10]
 80050d4:	4613      	mov	r3, r2
 80050d6:	813b      	strh	r3, [r7, #8]
 80050d8:	2300      	movs	r3, #0
 80050da:	61bb      	str	r3, [r7, #24]
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80050e2:	b2db      	uxtb	r3, r3
 80050e4:	2b20      	cmp	r3, #32
 80050e6:	f040 80ef 	bne.w	80052c8 <HAL_I2C_Master_Transmit_DMA+0x204>
 80050ea:	68fb      	ldr	r3, [r7, #12]
 80050ec:	681b      	ldr	r3, [r3, #0]
 80050ee:	699b      	ldr	r3, [r3, #24]
 80050f0:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80050f4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80050f8:	d101      	bne.n	80050fe <HAL_I2C_Master_Transmit_DMA+0x3a>
 80050fa:	2302      	movs	r3, #2
 80050fc:	e0e5      	b.n	80052ca <HAL_I2C_Master_Transmit_DMA+0x206>
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005104:	2b01      	cmp	r3, #1
 8005106:	d101      	bne.n	800510c <HAL_I2C_Master_Transmit_DMA+0x48>
 8005108:	2302      	movs	r3, #2
 800510a:	e0de      	b.n	80052ca <HAL_I2C_Master_Transmit_DMA+0x206>
 800510c:	68fb      	ldr	r3, [r7, #12]
 800510e:	2201      	movs	r2, #1
 8005110:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005114:	68fb      	ldr	r3, [r7, #12]
 8005116:	2221      	movs	r2, #33	@ 0x21
 8005118:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	2210      	movs	r2, #16
 8005120:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005124:	68fb      	ldr	r3, [r7, #12]
 8005126:	2200      	movs	r2, #0
 8005128:	645a      	str	r2, [r3, #68]	@ 0x44
 800512a:	68fb      	ldr	r3, [r7, #12]
 800512c:	687a      	ldr	r2, [r7, #4]
 800512e:	625a      	str	r2, [r3, #36]	@ 0x24
 8005130:	68fb      	ldr	r3, [r7, #12]
 8005132:	893a      	ldrh	r2, [r7, #8]
 8005134:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005136:	68fb      	ldr	r3, [r7, #12]
 8005138:	4a66      	ldr	r2, [pc, #408]	@ (80052d4 <HAL_I2C_Master_Transmit_DMA+0x210>)
 800513a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	4a66      	ldr	r2, [pc, #408]	@ (80052d8 <HAL_I2C_Master_Transmit_DMA+0x214>)
 8005140:	635a      	str	r2, [r3, #52]	@ 0x34
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005146:	b29b      	uxth	r3, r3
 8005148:	2bff      	cmp	r3, #255	@ 0xff
 800514a:	d906      	bls.n	800515a <HAL_I2C_Master_Transmit_DMA+0x96>
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	22ff      	movs	r2, #255	@ 0xff
 8005150:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005152:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005156:	61fb      	str	r3, [r7, #28]
 8005158:	e007      	b.n	800516a <HAL_I2C_Master_Transmit_DMA+0xa6>
 800515a:	68fb      	ldr	r3, [r7, #12]
 800515c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800515e:	b29a      	uxth	r2, r3
 8005160:	68fb      	ldr	r3, [r7, #12]
 8005162:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005164:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005168:	61fb      	str	r3, [r7, #28]
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800516e:	2b00      	cmp	r3, #0
 8005170:	d01a      	beq.n	80051a8 <HAL_I2C_Master_Transmit_DMA+0xe4>
 8005172:	68fb      	ldr	r3, [r7, #12]
 8005174:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005176:	781a      	ldrb	r2, [r3, #0]
 8005178:	68fb      	ldr	r3, [r7, #12]
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	629a      	str	r2, [r3, #40]	@ 0x28
 800517e:	68fb      	ldr	r3, [r7, #12]
 8005180:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005182:	1c5a      	adds	r2, r3, #1
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	625a      	str	r2, [r3, #36]	@ 0x24
 8005188:	68fb      	ldr	r3, [r7, #12]
 800518a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800518c:	61bb      	str	r3, [r7, #24]
 800518e:	68fb      	ldr	r3, [r7, #12]
 8005190:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005192:	b29b      	uxth	r3, r3
 8005194:	3b01      	subs	r3, #1
 8005196:	b29a      	uxth	r2, r3
 8005198:	68fb      	ldr	r3, [r7, #12]
 800519a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80051a0:	3b01      	subs	r3, #1
 80051a2:	b29a      	uxth	r2, r3
 80051a4:	68fb      	ldr	r3, [r7, #12]
 80051a6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80051a8:	68fb      	ldr	r3, [r7, #12]
 80051aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80051ac:	2b00      	cmp	r3, #0
 80051ae:	d074      	beq.n	800529a <HAL_I2C_Master_Transmit_DMA+0x1d6>
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80051b4:	2b00      	cmp	r3, #0
 80051b6:	d022      	beq.n	80051fe <HAL_I2C_Master_Transmit_DMA+0x13a>
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80051bc:	4a47      	ldr	r2, [pc, #284]	@ (80052dc <HAL_I2C_Master_Transmit_DMA+0x218>)
 80051be:	62da      	str	r2, [r3, #44]	@ 0x2c
 80051c0:	68fb      	ldr	r3, [r7, #12]
 80051c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80051c4:	4a46      	ldr	r2, [pc, #280]	@ (80052e0 <HAL_I2C_Master_Transmit_DMA+0x21c>)
 80051c6:	635a      	str	r2, [r3, #52]	@ 0x34
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80051cc:	2200      	movs	r2, #0
 80051ce:	631a      	str	r2, [r3, #48]	@ 0x30
 80051d0:	68fb      	ldr	r3, [r7, #12]
 80051d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80051d4:	2200      	movs	r2, #0
 80051d6:	639a      	str	r2, [r3, #56]	@ 0x38
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051e0:	4619      	mov	r1, r3
 80051e2:	68fb      	ldr	r3, [r7, #12]
 80051e4:	681b      	ldr	r3, [r3, #0]
 80051e6:	3328      	adds	r3, #40	@ 0x28
 80051e8:	461a      	mov	r2, r3
 80051ea:	68fb      	ldr	r3, [r7, #12]
 80051ec:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80051ee:	f7ff fa83 	bl	80046f8 <HAL_DMA_Start_IT>
 80051f2:	4603      	mov	r3, r0
 80051f4:	75fb      	strb	r3, [r7, #23]
 80051f6:	7dfb      	ldrb	r3, [r7, #23]
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d13a      	bne.n	8005272 <HAL_I2C_Master_Transmit_DMA+0x1ae>
 80051fc:	e013      	b.n	8005226 <HAL_I2C_Master_Transmit_DMA+0x162>
 80051fe:	68fb      	ldr	r3, [r7, #12]
 8005200:	2220      	movs	r2, #32
 8005202:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005206:	68fb      	ldr	r3, [r7, #12]
 8005208:	2200      	movs	r2, #0
 800520a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800520e:	68fb      	ldr	r3, [r7, #12]
 8005210:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005212:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8005216:	68fb      	ldr	r3, [r7, #12]
 8005218:	645a      	str	r2, [r3, #68]	@ 0x44
 800521a:	68fb      	ldr	r3, [r7, #12]
 800521c:	2200      	movs	r2, #0
 800521e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005222:	2301      	movs	r3, #1
 8005224:	e051      	b.n	80052ca <HAL_I2C_Master_Transmit_DMA+0x206>
 8005226:	68fb      	ldr	r3, [r7, #12]
 8005228:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800522a:	b2db      	uxtb	r3, r3
 800522c:	3301      	adds	r3, #1
 800522e:	b2da      	uxtb	r2, r3
 8005230:	8979      	ldrh	r1, [r7, #10]
 8005232:	4b2c      	ldr	r3, [pc, #176]	@ (80052e4 <HAL_I2C_Master_Transmit_DMA+0x220>)
 8005234:	9300      	str	r3, [sp, #0]
 8005236:	69fb      	ldr	r3, [r7, #28]
 8005238:	68f8      	ldr	r0, [r7, #12]
 800523a:	f001 fba3 	bl	8006984 <I2C_TransferConfig>
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005242:	b29a      	uxth	r2, r3
 8005244:	68fb      	ldr	r3, [r7, #12]
 8005246:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005248:	1ad3      	subs	r3, r2, r3
 800524a:	b29a      	uxth	r2, r3
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005250:	68fb      	ldr	r3, [r7, #12]
 8005252:	2200      	movs	r2, #0
 8005254:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005258:	2110      	movs	r1, #16
 800525a:	68f8      	ldr	r0, [r7, #12]
 800525c:	f001 fbc4 	bl	80069e8 <I2C_Enable_IRQ>
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	681a      	ldr	r2, [r3, #0]
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800526e:	601a      	str	r2, [r3, #0]
 8005270:	e028      	b.n	80052c4 <HAL_I2C_Master_Transmit_DMA+0x200>
 8005272:	68fb      	ldr	r3, [r7, #12]
 8005274:	2220      	movs	r2, #32
 8005276:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	2200      	movs	r2, #0
 800527e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005282:	68fb      	ldr	r3, [r7, #12]
 8005284:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005286:	f043 0210 	orr.w	r2, r3, #16
 800528a:	68fb      	ldr	r3, [r7, #12]
 800528c:	645a      	str	r2, [r3, #68]	@ 0x44
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	2200      	movs	r2, #0
 8005292:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005296:	2301      	movs	r3, #1
 8005298:	e017      	b.n	80052ca <HAL_I2C_Master_Transmit_DMA+0x206>
 800529a:	68fb      	ldr	r3, [r7, #12]
 800529c:	4a12      	ldr	r2, [pc, #72]	@ (80052e8 <HAL_I2C_Master_Transmit_DMA+0x224>)
 800529e:	635a      	str	r2, [r3, #52]	@ 0x34
 80052a0:	69bb      	ldr	r3, [r7, #24]
 80052a2:	b2da      	uxtb	r2, r3
 80052a4:	8979      	ldrh	r1, [r7, #10]
 80052a6:	4b0f      	ldr	r3, [pc, #60]	@ (80052e4 <HAL_I2C_Master_Transmit_DMA+0x220>)
 80052a8:	9300      	str	r3, [sp, #0]
 80052aa:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80052ae:	68f8      	ldr	r0, [r7, #12]
 80052b0:	f001 fb68 	bl	8006984 <I2C_TransferConfig>
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	2200      	movs	r2, #0
 80052b8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80052bc:	2101      	movs	r1, #1
 80052be:	68f8      	ldr	r0, [r7, #12]
 80052c0:	f001 fb92 	bl	80069e8 <I2C_Enable_IRQ>
 80052c4:	2300      	movs	r3, #0
 80052c6:	e000      	b.n	80052ca <HAL_I2C_Master_Transmit_DMA+0x206>
 80052c8:	2302      	movs	r3, #2
 80052ca:	4618      	mov	r0, r3
 80052cc:	3720      	adds	r7, #32
 80052ce:	46bd      	mov	sp, r7
 80052d0:	bd80      	pop	{r7, pc}
 80052d2:	bf00      	nop
 80052d4:	ffff0000 	.word	0xffff0000
 80052d8:	08005903 	.word	0x08005903
 80052dc:	08006883 	.word	0x08006883
 80052e0:	08006919 	.word	0x08006919
 80052e4:	80002000 	.word	0x80002000
 80052e8:	080054c3 	.word	0x080054c3

080052ec <HAL_I2C_EV_IRQHandler>:
 80052ec:	b580      	push	{r7, lr}
 80052ee:	b084      	sub	sp, #16
 80052f0:	af00      	add	r7, sp, #0
 80052f2:	6078      	str	r0, [r7, #4]
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	699b      	ldr	r3, [r3, #24]
 80052fa:	60fb      	str	r3, [r7, #12]
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	681b      	ldr	r3, [r3, #0]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	60bb      	str	r3, [r7, #8]
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005308:	2b00      	cmp	r3, #0
 800530a:	d005      	beq.n	8005318 <HAL_I2C_EV_IRQHandler+0x2c>
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005310:	68ba      	ldr	r2, [r7, #8]
 8005312:	68f9      	ldr	r1, [r7, #12]
 8005314:	6878      	ldr	r0, [r7, #4]
 8005316:	4798      	blx	r3
 8005318:	bf00      	nop
 800531a:	3710      	adds	r7, #16
 800531c:	46bd      	mov	sp, r7
 800531e:	bd80      	pop	{r7, pc}

08005320 <HAL_I2C_ER_IRQHandler>:
 8005320:	b580      	push	{r7, lr}
 8005322:	b086      	sub	sp, #24
 8005324:	af00      	add	r7, sp, #0
 8005326:	6078      	str	r0, [r7, #4]
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	699b      	ldr	r3, [r3, #24]
 800532e:	617b      	str	r3, [r7, #20]
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	681b      	ldr	r3, [r3, #0]
 8005336:	613b      	str	r3, [r7, #16]
 8005338:	697b      	ldr	r3, [r7, #20]
 800533a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800533e:	2b00      	cmp	r3, #0
 8005340:	d00f      	beq.n	8005362 <HAL_I2C_ER_IRQHandler+0x42>
 8005342:	693b      	ldr	r3, [r7, #16]
 8005344:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005348:	2b00      	cmp	r3, #0
 800534a:	d00a      	beq.n	8005362 <HAL_I2C_ER_IRQHandler+0x42>
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005350:	f043 0201 	orr.w	r2, r3, #1
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	645a      	str	r2, [r3, #68]	@ 0x44
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	681b      	ldr	r3, [r3, #0]
 800535c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8005360:	61da      	str	r2, [r3, #28]
 8005362:	697b      	ldr	r3, [r7, #20]
 8005364:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005368:	2b00      	cmp	r3, #0
 800536a:	d00f      	beq.n	800538c <HAL_I2C_ER_IRQHandler+0x6c>
 800536c:	693b      	ldr	r3, [r7, #16]
 800536e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005372:	2b00      	cmp	r3, #0
 8005374:	d00a      	beq.n	800538c <HAL_I2C_ER_IRQHandler+0x6c>
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800537a:	f043 0208 	orr.w	r2, r3, #8
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	645a      	str	r2, [r3, #68]	@ 0x44
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800538a:	61da      	str	r2, [r3, #28]
 800538c:	697b      	ldr	r3, [r7, #20]
 800538e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005392:	2b00      	cmp	r3, #0
 8005394:	d00f      	beq.n	80053b6 <HAL_I2C_ER_IRQHandler+0x96>
 8005396:	693b      	ldr	r3, [r7, #16]
 8005398:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800539c:	2b00      	cmp	r3, #0
 800539e:	d00a      	beq.n	80053b6 <HAL_I2C_ER_IRQHandler+0x96>
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053a4:	f043 0202 	orr.w	r2, r3, #2
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	645a      	str	r2, [r3, #68]	@ 0x44
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80053b4:	61da      	str	r2, [r3, #28]
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80053ba:	60fb      	str	r3, [r7, #12]
 80053bc:	68fb      	ldr	r3, [r7, #12]
 80053be:	f003 030b 	and.w	r3, r3, #11
 80053c2:	2b00      	cmp	r3, #0
 80053c4:	d003      	beq.n	80053ce <HAL_I2C_ER_IRQHandler+0xae>
 80053c6:	68f9      	ldr	r1, [r7, #12]
 80053c8:	6878      	ldr	r0, [r7, #4]
 80053ca:	f001 f91f 	bl	800660c <I2C_ITError>
 80053ce:	bf00      	nop
 80053d0:	3718      	adds	r7, #24
 80053d2:	46bd      	mov	sp, r7
 80053d4:	bd80      	pop	{r7, pc}

080053d6 <HAL_I2C_MasterTxCpltCallback>:
 80053d6:	b480      	push	{r7}
 80053d8:	b083      	sub	sp, #12
 80053da:	af00      	add	r7, sp, #0
 80053dc:	6078      	str	r0, [r7, #4]
 80053de:	bf00      	nop
 80053e0:	370c      	adds	r7, #12
 80053e2:	46bd      	mov	sp, r7
 80053e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053e8:	4770      	bx	lr

080053ea <HAL_I2C_MasterRxCpltCallback>:
 80053ea:	b480      	push	{r7}
 80053ec:	b083      	sub	sp, #12
 80053ee:	af00      	add	r7, sp, #0
 80053f0:	6078      	str	r0, [r7, #4]
 80053f2:	bf00      	nop
 80053f4:	370c      	adds	r7, #12
 80053f6:	46bd      	mov	sp, r7
 80053f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053fc:	4770      	bx	lr

080053fe <HAL_I2C_SlaveTxCpltCallback>:
 80053fe:	b480      	push	{r7}
 8005400:	b083      	sub	sp, #12
 8005402:	af00      	add	r7, sp, #0
 8005404:	6078      	str	r0, [r7, #4]
 8005406:	bf00      	nop
 8005408:	370c      	adds	r7, #12
 800540a:	46bd      	mov	sp, r7
 800540c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005410:	4770      	bx	lr

08005412 <HAL_I2C_SlaveRxCpltCallback>:
 8005412:	b480      	push	{r7}
 8005414:	b083      	sub	sp, #12
 8005416:	af00      	add	r7, sp, #0
 8005418:	6078      	str	r0, [r7, #4]
 800541a:	bf00      	nop
 800541c:	370c      	adds	r7, #12
 800541e:	46bd      	mov	sp, r7
 8005420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005424:	4770      	bx	lr

08005426 <HAL_I2C_AddrCallback>:
 8005426:	b480      	push	{r7}
 8005428:	b083      	sub	sp, #12
 800542a:	af00      	add	r7, sp, #0
 800542c:	6078      	str	r0, [r7, #4]
 800542e:	460b      	mov	r3, r1
 8005430:	70fb      	strb	r3, [r7, #3]
 8005432:	4613      	mov	r3, r2
 8005434:	803b      	strh	r3, [r7, #0]
 8005436:	bf00      	nop
 8005438:	370c      	adds	r7, #12
 800543a:	46bd      	mov	sp, r7
 800543c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005440:	4770      	bx	lr

08005442 <HAL_I2C_ListenCpltCallback>:
 8005442:	b480      	push	{r7}
 8005444:	b083      	sub	sp, #12
 8005446:	af00      	add	r7, sp, #0
 8005448:	6078      	str	r0, [r7, #4]
 800544a:	bf00      	nop
 800544c:	370c      	adds	r7, #12
 800544e:	46bd      	mov	sp, r7
 8005450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005454:	4770      	bx	lr

08005456 <HAL_I2C_MemTxCpltCallback>:
 8005456:	b480      	push	{r7}
 8005458:	b083      	sub	sp, #12
 800545a:	af00      	add	r7, sp, #0
 800545c:	6078      	str	r0, [r7, #4]
 800545e:	bf00      	nop
 8005460:	370c      	adds	r7, #12
 8005462:	46bd      	mov	sp, r7
 8005464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005468:	4770      	bx	lr

0800546a <HAL_I2C_MemRxCpltCallback>:
 800546a:	b480      	push	{r7}
 800546c:	b083      	sub	sp, #12
 800546e:	af00      	add	r7, sp, #0
 8005470:	6078      	str	r0, [r7, #4]
 8005472:	bf00      	nop
 8005474:	370c      	adds	r7, #12
 8005476:	46bd      	mov	sp, r7
 8005478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800547c:	4770      	bx	lr

0800547e <HAL_I2C_ErrorCallback>:
 800547e:	b480      	push	{r7}
 8005480:	b083      	sub	sp, #12
 8005482:	af00      	add	r7, sp, #0
 8005484:	6078      	str	r0, [r7, #4]
 8005486:	bf00      	nop
 8005488:	370c      	adds	r7, #12
 800548a:	46bd      	mov	sp, r7
 800548c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005490:	4770      	bx	lr

08005492 <HAL_I2C_AbortCpltCallback>:
 8005492:	b480      	push	{r7}
 8005494:	b083      	sub	sp, #12
 8005496:	af00      	add	r7, sp, #0
 8005498:	6078      	str	r0, [r7, #4]
 800549a:	bf00      	nop
 800549c:	370c      	adds	r7, #12
 800549e:	46bd      	mov	sp, r7
 80054a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054a4:	4770      	bx	lr

080054a6 <HAL_I2C_GetState>:
 80054a6:	b480      	push	{r7}
 80054a8:	b083      	sub	sp, #12
 80054aa:	af00      	add	r7, sp, #0
 80054ac:	6078      	str	r0, [r7, #4]
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80054b4:	b2db      	uxtb	r3, r3
 80054b6:	4618      	mov	r0, r3
 80054b8:	370c      	adds	r7, #12
 80054ba:	46bd      	mov	sp, r7
 80054bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054c0:	4770      	bx	lr

080054c2 <I2C_Master_ISR_IT>:
 80054c2:	b580      	push	{r7, lr}
 80054c4:	b088      	sub	sp, #32
 80054c6:	af02      	add	r7, sp, #8
 80054c8:	60f8      	str	r0, [r7, #12]
 80054ca:	60b9      	str	r1, [r7, #8]
 80054cc:	607a      	str	r2, [r7, #4]
 80054ce:	68bb      	ldr	r3, [r7, #8]
 80054d0:	617b      	str	r3, [r7, #20]
 80054d2:	68fb      	ldr	r3, [r7, #12]
 80054d4:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80054d8:	2b01      	cmp	r3, #1
 80054da:	d101      	bne.n	80054e0 <I2C_Master_ISR_IT+0x1e>
 80054dc:	2302      	movs	r3, #2
 80054de:	e113      	b.n	8005708 <I2C_Master_ISR_IT+0x246>
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	2201      	movs	r2, #1
 80054e4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80054e8:	697b      	ldr	r3, [r7, #20]
 80054ea:	f003 0310 	and.w	r3, r3, #16
 80054ee:	2b00      	cmp	r3, #0
 80054f0:	d012      	beq.n	8005518 <I2C_Master_ISR_IT+0x56>
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	f003 0310 	and.w	r3, r3, #16
 80054f8:	2b00      	cmp	r3, #0
 80054fa:	d00d      	beq.n	8005518 <I2C_Master_ISR_IT+0x56>
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	2210      	movs	r2, #16
 8005502:	61da      	str	r2, [r3, #28]
 8005504:	68fb      	ldr	r3, [r7, #12]
 8005506:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005508:	f043 0204 	orr.w	r2, r3, #4
 800550c:	68fb      	ldr	r3, [r7, #12]
 800550e:	645a      	str	r2, [r3, #68]	@ 0x44
 8005510:	68f8      	ldr	r0, [r7, #12]
 8005512:	f001 f992 	bl	800683a <I2C_Flush_TXDR>
 8005516:	e0e4      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 8005518:	697b      	ldr	r3, [r7, #20]
 800551a:	f003 0304 	and.w	r3, r3, #4
 800551e:	2b00      	cmp	r3, #0
 8005520:	d022      	beq.n	8005568 <I2C_Master_ISR_IT+0xa6>
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	f003 0304 	and.w	r3, r3, #4
 8005528:	2b00      	cmp	r3, #0
 800552a:	d01d      	beq.n	8005568 <I2C_Master_ISR_IT+0xa6>
 800552c:	697b      	ldr	r3, [r7, #20]
 800552e:	f023 0304 	bic.w	r3, r3, #4
 8005532:	617b      	str	r3, [r7, #20]
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800553a:	68fb      	ldr	r3, [r7, #12]
 800553c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800553e:	b2d2      	uxtb	r2, r2
 8005540:	701a      	strb	r2, [r3, #0]
 8005542:	68fb      	ldr	r3, [r7, #12]
 8005544:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005546:	1c5a      	adds	r2, r3, #1
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	625a      	str	r2, [r3, #36]	@ 0x24
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005550:	3b01      	subs	r3, #1
 8005552:	b29a      	uxth	r2, r3
 8005554:	68fb      	ldr	r3, [r7, #12]
 8005556:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005558:	68fb      	ldr	r3, [r7, #12]
 800555a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800555c:	b29b      	uxth	r3, r3
 800555e:	3b01      	subs	r3, #1
 8005560:	b29a      	uxth	r2, r3
 8005562:	68fb      	ldr	r3, [r7, #12]
 8005564:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005566:	e0bc      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 8005568:	697b      	ldr	r3, [r7, #20]
 800556a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800556e:	2b00      	cmp	r3, #0
 8005570:	d128      	bne.n	80055c4 <I2C_Master_ISR_IT+0x102>
 8005572:	697b      	ldr	r3, [r7, #20]
 8005574:	f003 0302 	and.w	r3, r3, #2
 8005578:	2b00      	cmp	r3, #0
 800557a:	d023      	beq.n	80055c4 <I2C_Master_ISR_IT+0x102>
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	f003 0302 	and.w	r3, r3, #2
 8005582:	2b00      	cmp	r3, #0
 8005584:	d01e      	beq.n	80055c4 <I2C_Master_ISR_IT+0x102>
 8005586:	68fb      	ldr	r3, [r7, #12]
 8005588:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800558a:	b29b      	uxth	r3, r3
 800558c:	2b00      	cmp	r3, #0
 800558e:	f000 80a8 	beq.w	80056e2 <I2C_Master_ISR_IT+0x220>
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005596:	781a      	ldrb	r2, [r3, #0]
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	629a      	str	r2, [r3, #40]	@ 0x28
 800559e:	68fb      	ldr	r3, [r7, #12]
 80055a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80055a2:	1c5a      	adds	r2, r3, #1
 80055a4:	68fb      	ldr	r3, [r7, #12]
 80055a6:	625a      	str	r2, [r3, #36]	@ 0x24
 80055a8:	68fb      	ldr	r3, [r7, #12]
 80055aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80055ac:	3b01      	subs	r3, #1
 80055ae:	b29a      	uxth	r2, r3
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80055b4:	68fb      	ldr	r3, [r7, #12]
 80055b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80055b8:	b29b      	uxth	r3, r3
 80055ba:	3b01      	subs	r3, #1
 80055bc:	b29a      	uxth	r2, r3
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80055c2:	e08e      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 80055c4:	697b      	ldr	r3, [r7, #20]
 80055c6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80055ca:	2b00      	cmp	r3, #0
 80055cc:	d05c      	beq.n	8005688 <I2C_Master_ISR_IT+0x1c6>
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80055d4:	2b00      	cmp	r3, #0
 80055d6:	d057      	beq.n	8005688 <I2C_Master_ISR_IT+0x1c6>
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80055dc:	b29b      	uxth	r3, r3
 80055de:	2b00      	cmp	r3, #0
 80055e0:	d040      	beq.n	8005664 <I2C_Master_ISR_IT+0x1a2>
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80055e6:	2b00      	cmp	r3, #0
 80055e8:	d13c      	bne.n	8005664 <I2C_Master_ISR_IT+0x1a2>
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	681b      	ldr	r3, [r3, #0]
 80055ee:	685b      	ldr	r3, [r3, #4]
 80055f0:	b29b      	uxth	r3, r3
 80055f2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80055f6:	827b      	strh	r3, [r7, #18]
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80055fc:	b29b      	uxth	r3, r3
 80055fe:	2bff      	cmp	r3, #255	@ 0xff
 8005600:	d90e      	bls.n	8005620 <I2C_Master_ISR_IT+0x15e>
 8005602:	68fb      	ldr	r3, [r7, #12]
 8005604:	22ff      	movs	r2, #255	@ 0xff
 8005606:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005608:	68fb      	ldr	r3, [r7, #12]
 800560a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800560c:	b2da      	uxtb	r2, r3
 800560e:	8a79      	ldrh	r1, [r7, #18]
 8005610:	2300      	movs	r3, #0
 8005612:	9300      	str	r3, [sp, #0]
 8005614:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005618:	68f8      	ldr	r0, [r7, #12]
 800561a:	f001 f9b3 	bl	8006984 <I2C_TransferConfig>
 800561e:	e032      	b.n	8005686 <I2C_Master_ISR_IT+0x1c4>
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005624:	b29a      	uxth	r2, r3
 8005626:	68fb      	ldr	r3, [r7, #12]
 8005628:	851a      	strh	r2, [r3, #40]	@ 0x28
 800562a:	68fb      	ldr	r3, [r7, #12]
 800562c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800562e:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8005632:	d00b      	beq.n	800564c <I2C_Master_ISR_IT+0x18a>
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005638:	b2da      	uxtb	r2, r3
 800563a:	68fb      	ldr	r3, [r7, #12]
 800563c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800563e:	8a79      	ldrh	r1, [r7, #18]
 8005640:	2000      	movs	r0, #0
 8005642:	9000      	str	r0, [sp, #0]
 8005644:	68f8      	ldr	r0, [r7, #12]
 8005646:	f001 f99d 	bl	8006984 <I2C_TransferConfig>
 800564a:	e01c      	b.n	8005686 <I2C_Master_ISR_IT+0x1c4>
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005650:	b2da      	uxtb	r2, r3
 8005652:	8a79      	ldrh	r1, [r7, #18]
 8005654:	2300      	movs	r3, #0
 8005656:	9300      	str	r3, [sp, #0]
 8005658:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800565c:	68f8      	ldr	r0, [r7, #12]
 800565e:	f001 f991 	bl	8006984 <I2C_TransferConfig>
 8005662:	e010      	b.n	8005686 <I2C_Master_ISR_IT+0x1c4>
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	685b      	ldr	r3, [r3, #4]
 800566a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800566e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8005672:	d003      	beq.n	800567c <I2C_Master_ISR_IT+0x1ba>
 8005674:	68f8      	ldr	r0, [r7, #12]
 8005676:	f000 fcb0 	bl	8005fda <I2C_ITMasterSeqCplt>
 800567a:	e032      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 800567c:	2140      	movs	r1, #64	@ 0x40
 800567e:	68f8      	ldr	r0, [r7, #12]
 8005680:	f000 ffc4 	bl	800660c <I2C_ITError>
 8005684:	e02d      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 8005686:	e02c      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 8005688:	697b      	ldr	r3, [r7, #20]
 800568a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800568e:	2b00      	cmp	r3, #0
 8005690:	d027      	beq.n	80056e2 <I2C_Master_ISR_IT+0x220>
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005698:	2b00      	cmp	r3, #0
 800569a:	d022      	beq.n	80056e2 <I2C_Master_ISR_IT+0x220>
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80056a0:	b29b      	uxth	r3, r3
 80056a2:	2b00      	cmp	r3, #0
 80056a4:	d119      	bne.n	80056da <I2C_Master_ISR_IT+0x218>
 80056a6:	68fb      	ldr	r3, [r7, #12]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	685b      	ldr	r3, [r3, #4]
 80056ac:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80056b0:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 80056b4:	d015      	beq.n	80056e2 <I2C_Master_ISR_IT+0x220>
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80056ba:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80056be:	d108      	bne.n	80056d2 <I2C_Master_ISR_IT+0x210>
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	685a      	ldr	r2, [r3, #4]
 80056c6:	68fb      	ldr	r3, [r7, #12]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80056ce:	605a      	str	r2, [r3, #4]
 80056d0:	e007      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 80056d2:	68f8      	ldr	r0, [r7, #12]
 80056d4:	f000 fc81 	bl	8005fda <I2C_ITMasterSeqCplt>
 80056d8:	e003      	b.n	80056e2 <I2C_Master_ISR_IT+0x220>
 80056da:	2140      	movs	r1, #64	@ 0x40
 80056dc:	68f8      	ldr	r0, [r7, #12]
 80056de:	f000 ff95 	bl	800660c <I2C_ITError>
 80056e2:	697b      	ldr	r3, [r7, #20]
 80056e4:	f003 0320 	and.w	r3, r3, #32
 80056e8:	2b00      	cmp	r3, #0
 80056ea:	d008      	beq.n	80056fe <I2C_Master_ISR_IT+0x23c>
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	f003 0320 	and.w	r3, r3, #32
 80056f2:	2b00      	cmp	r3, #0
 80056f4:	d003      	beq.n	80056fe <I2C_Master_ISR_IT+0x23c>
 80056f6:	6979      	ldr	r1, [r7, #20]
 80056f8:	68f8      	ldr	r0, [r7, #12]
 80056fa:	f000 fd07 	bl	800610c <I2C_ITMasterCplt>
 80056fe:	68fb      	ldr	r3, [r7, #12]
 8005700:	2200      	movs	r2, #0
 8005702:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005706:	2300      	movs	r3, #0
 8005708:	4618      	mov	r0, r3
 800570a:	3718      	adds	r7, #24
 800570c:	46bd      	mov	sp, r7
 800570e:	bd80      	pop	{r7, pc}

08005710 <I2C_Slave_ISR_IT>:
 8005710:	b580      	push	{r7, lr}
 8005712:	b086      	sub	sp, #24
 8005714:	af00      	add	r7, sp, #0
 8005716:	60f8      	str	r0, [r7, #12]
 8005718:	60b9      	str	r1, [r7, #8]
 800571a:	607a      	str	r2, [r7, #4]
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005720:	617b      	str	r3, [r7, #20]
 8005722:	68bb      	ldr	r3, [r7, #8]
 8005724:	613b      	str	r3, [r7, #16]
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800572c:	2b01      	cmp	r3, #1
 800572e:	d101      	bne.n	8005734 <I2C_Slave_ISR_IT+0x24>
 8005730:	2302      	movs	r3, #2
 8005732:	e0e2      	b.n	80058fa <I2C_Slave_ISR_IT+0x1ea>
 8005734:	68fb      	ldr	r3, [r7, #12]
 8005736:	2201      	movs	r2, #1
 8005738:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800573c:	693b      	ldr	r3, [r7, #16]
 800573e:	f003 0320 	and.w	r3, r3, #32
 8005742:	2b00      	cmp	r3, #0
 8005744:	d009      	beq.n	800575a <I2C_Slave_ISR_IT+0x4a>
 8005746:	687b      	ldr	r3, [r7, #4]
 8005748:	f003 0320 	and.w	r3, r3, #32
 800574c:	2b00      	cmp	r3, #0
 800574e:	d004      	beq.n	800575a <I2C_Slave_ISR_IT+0x4a>
 8005750:	6939      	ldr	r1, [r7, #16]
 8005752:	68f8      	ldr	r0, [r7, #12]
 8005754:	f000 fda2 	bl	800629c <I2C_ITSlaveCplt>
 8005758:	e0ca      	b.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 800575a:	693b      	ldr	r3, [r7, #16]
 800575c:	f003 0310 	and.w	r3, r3, #16
 8005760:	2b00      	cmp	r3, #0
 8005762:	d04b      	beq.n	80057fc <I2C_Slave_ISR_IT+0xec>
 8005764:	687b      	ldr	r3, [r7, #4]
 8005766:	f003 0310 	and.w	r3, r3, #16
 800576a:	2b00      	cmp	r3, #0
 800576c:	d046      	beq.n	80057fc <I2C_Slave_ISR_IT+0xec>
 800576e:	68fb      	ldr	r3, [r7, #12]
 8005770:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005772:	b29b      	uxth	r3, r3
 8005774:	2b00      	cmp	r3, #0
 8005776:	d128      	bne.n	80057ca <I2C_Slave_ISR_IT+0xba>
 8005778:	68fb      	ldr	r3, [r7, #12]
 800577a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800577e:	b2db      	uxtb	r3, r3
 8005780:	2b28      	cmp	r3, #40	@ 0x28
 8005782:	d108      	bne.n	8005796 <I2C_Slave_ISR_IT+0x86>
 8005784:	697b      	ldr	r3, [r7, #20]
 8005786:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 800578a:	d104      	bne.n	8005796 <I2C_Slave_ISR_IT+0x86>
 800578c:	6939      	ldr	r1, [r7, #16]
 800578e:	68f8      	ldr	r0, [r7, #12]
 8005790:	f000 fee8 	bl	8006564 <I2C_ITListenCplt>
 8005794:	e031      	b.n	80057fa <I2C_Slave_ISR_IT+0xea>
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800579c:	b2db      	uxtb	r3, r3
 800579e:	2b29      	cmp	r3, #41	@ 0x29
 80057a0:	d10e      	bne.n	80057c0 <I2C_Slave_ISR_IT+0xb0>
 80057a2:	697b      	ldr	r3, [r7, #20]
 80057a4:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80057a8:	d00a      	beq.n	80057c0 <I2C_Slave_ISR_IT+0xb0>
 80057aa:	68fb      	ldr	r3, [r7, #12]
 80057ac:	681b      	ldr	r3, [r3, #0]
 80057ae:	2210      	movs	r2, #16
 80057b0:	61da      	str	r2, [r3, #28]
 80057b2:	68f8      	ldr	r0, [r7, #12]
 80057b4:	f001 f841 	bl	800683a <I2C_Flush_TXDR>
 80057b8:	68f8      	ldr	r0, [r7, #12]
 80057ba:	f000 fc4b 	bl	8006054 <I2C_ITSlaveSeqCplt>
 80057be:	e01c      	b.n	80057fa <I2C_Slave_ISR_IT+0xea>
 80057c0:	68fb      	ldr	r3, [r7, #12]
 80057c2:	681b      	ldr	r3, [r3, #0]
 80057c4:	2210      	movs	r2, #16
 80057c6:	61da      	str	r2, [r3, #28]
 80057c8:	e08f      	b.n	80058ea <I2C_Slave_ISR_IT+0x1da>
 80057ca:	68fb      	ldr	r3, [r7, #12]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	2210      	movs	r2, #16
 80057d0:	61da      	str	r2, [r3, #28]
 80057d2:	68fb      	ldr	r3, [r7, #12]
 80057d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80057d6:	f043 0204 	orr.w	r2, r3, #4
 80057da:	68fb      	ldr	r3, [r7, #12]
 80057dc:	645a      	str	r2, [r3, #68]	@ 0x44
 80057de:	697b      	ldr	r3, [r7, #20]
 80057e0:	2b00      	cmp	r3, #0
 80057e2:	d003      	beq.n	80057ec <I2C_Slave_ISR_IT+0xdc>
 80057e4:	697b      	ldr	r3, [r7, #20]
 80057e6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80057ea:	d17e      	bne.n	80058ea <I2C_Slave_ISR_IT+0x1da>
 80057ec:	68fb      	ldr	r3, [r7, #12]
 80057ee:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80057f0:	4619      	mov	r1, r3
 80057f2:	68f8      	ldr	r0, [r7, #12]
 80057f4:	f000 ff0a 	bl	800660c <I2C_ITError>
 80057f8:	e077      	b.n	80058ea <I2C_Slave_ISR_IT+0x1da>
 80057fa:	e076      	b.n	80058ea <I2C_Slave_ISR_IT+0x1da>
 80057fc:	693b      	ldr	r3, [r7, #16]
 80057fe:	f003 0304 	and.w	r3, r3, #4
 8005802:	2b00      	cmp	r3, #0
 8005804:	d02f      	beq.n	8005866 <I2C_Slave_ISR_IT+0x156>
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	f003 0304 	and.w	r3, r3, #4
 800580c:	2b00      	cmp	r3, #0
 800580e:	d02a      	beq.n	8005866 <I2C_Slave_ISR_IT+0x156>
 8005810:	68fb      	ldr	r3, [r7, #12]
 8005812:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005814:	b29b      	uxth	r3, r3
 8005816:	2b00      	cmp	r3, #0
 8005818:	d018      	beq.n	800584c <I2C_Slave_ISR_IT+0x13c>
 800581a:	68fb      	ldr	r3, [r7, #12]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005820:	68fb      	ldr	r3, [r7, #12]
 8005822:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005824:	b2d2      	uxtb	r2, r2
 8005826:	701a      	strb	r2, [r3, #0]
 8005828:	68fb      	ldr	r3, [r7, #12]
 800582a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800582c:	1c5a      	adds	r2, r3, #1
 800582e:	68fb      	ldr	r3, [r7, #12]
 8005830:	625a      	str	r2, [r3, #36]	@ 0x24
 8005832:	68fb      	ldr	r3, [r7, #12]
 8005834:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005836:	3b01      	subs	r3, #1
 8005838:	b29a      	uxth	r2, r3
 800583a:	68fb      	ldr	r3, [r7, #12]
 800583c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800583e:	68fb      	ldr	r3, [r7, #12]
 8005840:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005842:	b29b      	uxth	r3, r3
 8005844:	3b01      	subs	r3, #1
 8005846:	b29a      	uxth	r2, r3
 8005848:	68fb      	ldr	r3, [r7, #12]
 800584a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800584c:	68fb      	ldr	r3, [r7, #12]
 800584e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005850:	b29b      	uxth	r3, r3
 8005852:	2b00      	cmp	r3, #0
 8005854:	d14b      	bne.n	80058ee <I2C_Slave_ISR_IT+0x1de>
 8005856:	697b      	ldr	r3, [r7, #20]
 8005858:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 800585c:	d047      	beq.n	80058ee <I2C_Slave_ISR_IT+0x1de>
 800585e:	68f8      	ldr	r0, [r7, #12]
 8005860:	f000 fbf8 	bl	8006054 <I2C_ITSlaveSeqCplt>
 8005864:	e043      	b.n	80058ee <I2C_Slave_ISR_IT+0x1de>
 8005866:	693b      	ldr	r3, [r7, #16]
 8005868:	f003 0308 	and.w	r3, r3, #8
 800586c:	2b00      	cmp	r3, #0
 800586e:	d009      	beq.n	8005884 <I2C_Slave_ISR_IT+0x174>
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	f003 0308 	and.w	r3, r3, #8
 8005876:	2b00      	cmp	r3, #0
 8005878:	d004      	beq.n	8005884 <I2C_Slave_ISR_IT+0x174>
 800587a:	6939      	ldr	r1, [r7, #16]
 800587c:	68f8      	ldr	r0, [r7, #12]
 800587e:	f000 fb28 	bl	8005ed2 <I2C_ITAddrCplt>
 8005882:	e035      	b.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 8005884:	693b      	ldr	r3, [r7, #16]
 8005886:	f003 0302 	and.w	r3, r3, #2
 800588a:	2b00      	cmp	r3, #0
 800588c:	d030      	beq.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	f003 0302 	and.w	r3, r3, #2
 8005894:	2b00      	cmp	r3, #0
 8005896:	d02b      	beq.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800589c:	b29b      	uxth	r3, r3
 800589e:	2b00      	cmp	r3, #0
 80058a0:	d018      	beq.n	80058d4 <I2C_Slave_ISR_IT+0x1c4>
 80058a2:	68fb      	ldr	r3, [r7, #12]
 80058a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80058a6:	781a      	ldrb	r2, [r3, #0]
 80058a8:	68fb      	ldr	r3, [r7, #12]
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	629a      	str	r2, [r3, #40]	@ 0x28
 80058ae:	68fb      	ldr	r3, [r7, #12]
 80058b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80058b2:	1c5a      	adds	r2, r3, #1
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	625a      	str	r2, [r3, #36]	@ 0x24
 80058b8:	68fb      	ldr	r3, [r7, #12]
 80058ba:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80058bc:	b29b      	uxth	r3, r3
 80058be:	3b01      	subs	r3, #1
 80058c0:	b29a      	uxth	r2, r3
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80058c6:	68fb      	ldr	r3, [r7, #12]
 80058c8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80058ca:	3b01      	subs	r3, #1
 80058cc:	b29a      	uxth	r2, r3
 80058ce:	68fb      	ldr	r3, [r7, #12]
 80058d0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80058d2:	e00d      	b.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 80058d4:	697b      	ldr	r3, [r7, #20]
 80058d6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80058da:	d002      	beq.n	80058e2 <I2C_Slave_ISR_IT+0x1d2>
 80058dc:	697b      	ldr	r3, [r7, #20]
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d106      	bne.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 80058e2:	68f8      	ldr	r0, [r7, #12]
 80058e4:	f000 fbb6 	bl	8006054 <I2C_ITSlaveSeqCplt>
 80058e8:	e002      	b.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 80058ea:	bf00      	nop
 80058ec:	e000      	b.n	80058f0 <I2C_Slave_ISR_IT+0x1e0>
 80058ee:	bf00      	nop
 80058f0:	68fb      	ldr	r3, [r7, #12]
 80058f2:	2200      	movs	r2, #0
 80058f4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80058f8:	2300      	movs	r3, #0
 80058fa:	4618      	mov	r0, r3
 80058fc:	3718      	adds	r7, #24
 80058fe:	46bd      	mov	sp, r7
 8005900:	bd80      	pop	{r7, pc}

08005902 <I2C_Master_ISR_DMA>:
 8005902:	b580      	push	{r7, lr}
 8005904:	b088      	sub	sp, #32
 8005906:	af02      	add	r7, sp, #8
 8005908:	60f8      	str	r0, [r7, #12]
 800590a:	60b9      	str	r1, [r7, #8]
 800590c:	607a      	str	r2, [r7, #4]
 800590e:	68fb      	ldr	r3, [r7, #12]
 8005910:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005914:	2b01      	cmp	r3, #1
 8005916:	d101      	bne.n	800591c <I2C_Master_ISR_DMA+0x1a>
 8005918:	2302      	movs	r3, #2
 800591a:	e0d9      	b.n	8005ad0 <I2C_Master_ISR_DMA+0x1ce>
 800591c:	68fb      	ldr	r3, [r7, #12]
 800591e:	2201      	movs	r2, #1
 8005920:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005924:	68bb      	ldr	r3, [r7, #8]
 8005926:	f003 0310 	and.w	r3, r3, #16
 800592a:	2b00      	cmp	r3, #0
 800592c:	d016      	beq.n	800595c <I2C_Master_ISR_DMA+0x5a>
 800592e:	687b      	ldr	r3, [r7, #4]
 8005930:	f003 0310 	and.w	r3, r3, #16
 8005934:	2b00      	cmp	r3, #0
 8005936:	d011      	beq.n	800595c <I2C_Master_ISR_DMA+0x5a>
 8005938:	68fb      	ldr	r3, [r7, #12]
 800593a:	681b      	ldr	r3, [r3, #0]
 800593c:	2210      	movs	r2, #16
 800593e:	61da      	str	r2, [r3, #28]
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005944:	f043 0204 	orr.w	r2, r3, #4
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	645a      	str	r2, [r3, #68]	@ 0x44
 800594c:	2120      	movs	r1, #32
 800594e:	68f8      	ldr	r0, [r7, #12]
 8005950:	f001 f84a 	bl	80069e8 <I2C_Enable_IRQ>
 8005954:	68f8      	ldr	r0, [r7, #12]
 8005956:	f000 ff70 	bl	800683a <I2C_Flush_TXDR>
 800595a:	e0b4      	b.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 800595c:	68bb      	ldr	r3, [r7, #8]
 800595e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005962:	2b00      	cmp	r3, #0
 8005964:	d071      	beq.n	8005a4a <I2C_Master_ISR_DMA+0x148>
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800596c:	2b00      	cmp	r3, #0
 800596e:	d06c      	beq.n	8005a4a <I2C_Master_ISR_DMA+0x148>
 8005970:	68fb      	ldr	r3, [r7, #12]
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	681a      	ldr	r2, [r3, #0]
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800597e:	601a      	str	r2, [r3, #0]
 8005980:	68fb      	ldr	r3, [r7, #12]
 8005982:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005984:	b29b      	uxth	r3, r3
 8005986:	2b00      	cmp	r3, #0
 8005988:	d04e      	beq.n	8005a28 <I2C_Master_ISR_DMA+0x126>
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	681b      	ldr	r3, [r3, #0]
 800598e:	685b      	ldr	r3, [r3, #4]
 8005990:	b29b      	uxth	r3, r3
 8005992:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005996:	827b      	strh	r3, [r7, #18]
 8005998:	68fb      	ldr	r3, [r7, #12]
 800599a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800599c:	b29b      	uxth	r3, r3
 800599e:	2bff      	cmp	r3, #255	@ 0xff
 80059a0:	d906      	bls.n	80059b0 <I2C_Master_ISR_DMA+0xae>
 80059a2:	68fb      	ldr	r3, [r7, #12]
 80059a4:	22ff      	movs	r2, #255	@ 0xff
 80059a6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80059a8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80059ac:	617b      	str	r3, [r7, #20]
 80059ae:	e010      	b.n	80059d2 <I2C_Master_ISR_DMA+0xd0>
 80059b0:	68fb      	ldr	r3, [r7, #12]
 80059b2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80059b4:	b29a      	uxth	r2, r3
 80059b6:	68fb      	ldr	r3, [r7, #12]
 80059b8:	851a      	strh	r2, [r3, #40]	@ 0x28
 80059ba:	68fb      	ldr	r3, [r7, #12]
 80059bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059be:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80059c2:	d003      	beq.n	80059cc <I2C_Master_ISR_DMA+0xca>
 80059c4:	68fb      	ldr	r3, [r7, #12]
 80059c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059c8:	617b      	str	r3, [r7, #20]
 80059ca:	e002      	b.n	80059d2 <I2C_Master_ISR_DMA+0xd0>
 80059cc:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80059d0:	617b      	str	r3, [r7, #20]
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80059d6:	b2da      	uxtb	r2, r3
 80059d8:	8a79      	ldrh	r1, [r7, #18]
 80059da:	2300      	movs	r3, #0
 80059dc:	9300      	str	r3, [sp, #0]
 80059de:	697b      	ldr	r3, [r7, #20]
 80059e0:	68f8      	ldr	r0, [r7, #12]
 80059e2:	f000 ffcf 	bl	8006984 <I2C_TransferConfig>
 80059e6:	68fb      	ldr	r3, [r7, #12]
 80059e8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80059ea:	b29a      	uxth	r2, r3
 80059ec:	68fb      	ldr	r3, [r7, #12]
 80059ee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80059f0:	1ad3      	subs	r3, r2, r3
 80059f2:	b29a      	uxth	r2, r3
 80059f4:	68fb      	ldr	r3, [r7, #12]
 80059f6:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80059f8:	68fb      	ldr	r3, [r7, #12]
 80059fa:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80059fe:	b2db      	uxtb	r3, r3
 8005a00:	2b22      	cmp	r3, #34	@ 0x22
 8005a02:	d108      	bne.n	8005a16 <I2C_Master_ISR_DMA+0x114>
 8005a04:	68fb      	ldr	r3, [r7, #12]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	681a      	ldr	r2, [r3, #0]
 8005a0a:	68fb      	ldr	r3, [r7, #12]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005a12:	601a      	str	r2, [r3, #0]
 8005a14:	e057      	b.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 8005a16:	68fb      	ldr	r3, [r7, #12]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	681a      	ldr	r2, [r3, #0]
 8005a1c:	68fb      	ldr	r3, [r7, #12]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005a24:	601a      	str	r2, [r3, #0]
 8005a26:	e04e      	b.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 8005a28:	68fb      	ldr	r3, [r7, #12]
 8005a2a:	681b      	ldr	r3, [r3, #0]
 8005a2c:	685b      	ldr	r3, [r3, #4]
 8005a2e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005a32:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8005a36:	d003      	beq.n	8005a40 <I2C_Master_ISR_DMA+0x13e>
 8005a38:	68f8      	ldr	r0, [r7, #12]
 8005a3a:	f000 face 	bl	8005fda <I2C_ITMasterSeqCplt>
 8005a3e:	e042      	b.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 8005a40:	2140      	movs	r1, #64	@ 0x40
 8005a42:	68f8      	ldr	r0, [r7, #12]
 8005a44:	f000 fde2 	bl	800660c <I2C_ITError>
 8005a48:	e03d      	b.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 8005a4a:	68bb      	ldr	r3, [r7, #8]
 8005a4c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005a50:	2b00      	cmp	r3, #0
 8005a52:	d028      	beq.n	8005aa6 <I2C_Master_ISR_DMA+0x1a4>
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005a5a:	2b00      	cmp	r3, #0
 8005a5c:	d023      	beq.n	8005aa6 <I2C_Master_ISR_DMA+0x1a4>
 8005a5e:	68fb      	ldr	r3, [r7, #12]
 8005a60:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005a62:	b29b      	uxth	r3, r3
 8005a64:	2b00      	cmp	r3, #0
 8005a66:	d119      	bne.n	8005a9c <I2C_Master_ISR_DMA+0x19a>
 8005a68:	68fb      	ldr	r3, [r7, #12]
 8005a6a:	681b      	ldr	r3, [r3, #0]
 8005a6c:	685b      	ldr	r3, [r3, #4]
 8005a6e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005a72:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8005a76:	d025      	beq.n	8005ac4 <I2C_Master_ISR_DMA+0x1c2>
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005a7c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8005a80:	d108      	bne.n	8005a94 <I2C_Master_ISR_DMA+0x192>
 8005a82:	68fb      	ldr	r3, [r7, #12]
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	685a      	ldr	r2, [r3, #4]
 8005a88:	68fb      	ldr	r3, [r7, #12]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005a90:	605a      	str	r2, [r3, #4]
 8005a92:	e017      	b.n	8005ac4 <I2C_Master_ISR_DMA+0x1c2>
 8005a94:	68f8      	ldr	r0, [r7, #12]
 8005a96:	f000 faa0 	bl	8005fda <I2C_ITMasterSeqCplt>
 8005a9a:	e013      	b.n	8005ac4 <I2C_Master_ISR_DMA+0x1c2>
 8005a9c:	2140      	movs	r1, #64	@ 0x40
 8005a9e:	68f8      	ldr	r0, [r7, #12]
 8005aa0:	f000 fdb4 	bl	800660c <I2C_ITError>
 8005aa4:	e00e      	b.n	8005ac4 <I2C_Master_ISR_DMA+0x1c2>
 8005aa6:	68bb      	ldr	r3, [r7, #8]
 8005aa8:	f003 0320 	and.w	r3, r3, #32
 8005aac:	2b00      	cmp	r3, #0
 8005aae:	d00a      	beq.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	f003 0320 	and.w	r3, r3, #32
 8005ab6:	2b00      	cmp	r3, #0
 8005ab8:	d005      	beq.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 8005aba:	68b9      	ldr	r1, [r7, #8]
 8005abc:	68f8      	ldr	r0, [r7, #12]
 8005abe:	f000 fb25 	bl	800610c <I2C_ITMasterCplt>
 8005ac2:	e000      	b.n	8005ac6 <I2C_Master_ISR_DMA+0x1c4>
 8005ac4:	bf00      	nop
 8005ac6:	68fb      	ldr	r3, [r7, #12]
 8005ac8:	2200      	movs	r2, #0
 8005aca:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005ace:	2300      	movs	r3, #0
 8005ad0:	4618      	mov	r0, r3
 8005ad2:	3718      	adds	r7, #24
 8005ad4:	46bd      	mov	sp, r7
 8005ad6:	bd80      	pop	{r7, pc}

08005ad8 <I2C_Mem_ISR_DMA>:
 8005ad8:	b580      	push	{r7, lr}
 8005ada:	b088      	sub	sp, #32
 8005adc:	af02      	add	r7, sp, #8
 8005ade:	60f8      	str	r0, [r7, #12]
 8005ae0:	60b9      	str	r1, [r7, #8]
 8005ae2:	607a      	str	r2, [r7, #4]
 8005ae4:	4b8d      	ldr	r3, [pc, #564]	@ (8005d1c <I2C_Mem_ISR_DMA+0x244>)
 8005ae6:	617b      	str	r3, [r7, #20]
 8005ae8:	68fb      	ldr	r3, [r7, #12]
 8005aea:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005aee:	2b01      	cmp	r3, #1
 8005af0:	d101      	bne.n	8005af6 <I2C_Mem_ISR_DMA+0x1e>
 8005af2:	2302      	movs	r3, #2
 8005af4:	e10e      	b.n	8005d14 <I2C_Mem_ISR_DMA+0x23c>
 8005af6:	68fb      	ldr	r3, [r7, #12]
 8005af8:	2201      	movs	r2, #1
 8005afa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005afe:	68bb      	ldr	r3, [r7, #8]
 8005b00:	f003 0310 	and.w	r3, r3, #16
 8005b04:	2b00      	cmp	r3, #0
 8005b06:	d016      	beq.n	8005b36 <I2C_Mem_ISR_DMA+0x5e>
 8005b08:	687b      	ldr	r3, [r7, #4]
 8005b0a:	f003 0310 	and.w	r3, r3, #16
 8005b0e:	2b00      	cmp	r3, #0
 8005b10:	d011      	beq.n	8005b36 <I2C_Mem_ISR_DMA+0x5e>
 8005b12:	68fb      	ldr	r3, [r7, #12]
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	2210      	movs	r2, #16
 8005b18:	61da      	str	r2, [r3, #28]
 8005b1a:	68fb      	ldr	r3, [r7, #12]
 8005b1c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005b1e:	f043 0204 	orr.w	r2, r3, #4
 8005b22:	68fb      	ldr	r3, [r7, #12]
 8005b24:	645a      	str	r2, [r3, #68]	@ 0x44
 8005b26:	2120      	movs	r1, #32
 8005b28:	68f8      	ldr	r0, [r7, #12]
 8005b2a:	f000 ff5d 	bl	80069e8 <I2C_Enable_IRQ>
 8005b2e:	68f8      	ldr	r0, [r7, #12]
 8005b30:	f000 fe83 	bl	800683a <I2C_Flush_TXDR>
 8005b34:	e0e9      	b.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005b36:	68bb      	ldr	r3, [r7, #8]
 8005b38:	f003 0302 	and.w	r3, r3, #2
 8005b3c:	2b00      	cmp	r3, #0
 8005b3e:	d00e      	beq.n	8005b5e <I2C_Mem_ISR_DMA+0x86>
 8005b40:	687b      	ldr	r3, [r7, #4]
 8005b42:	f003 0302 	and.w	r3, r3, #2
 8005b46:	2b00      	cmp	r3, #0
 8005b48:	d009      	beq.n	8005b5e <I2C_Mem_ISR_DMA+0x86>
 8005b4a:	68fb      	ldr	r3, [r7, #12]
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	68fa      	ldr	r2, [r7, #12]
 8005b50:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8005b52:	629a      	str	r2, [r3, #40]	@ 0x28
 8005b54:	68fb      	ldr	r3, [r7, #12]
 8005b56:	f04f 32ff 	mov.w	r2, #4294967295
 8005b5a:	651a      	str	r2, [r3, #80]	@ 0x50
 8005b5c:	e0d5      	b.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005b5e:	68bb      	ldr	r3, [r7, #8]
 8005b60:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	d05f      	beq.n	8005c28 <I2C_Mem_ISR_DMA+0x150>
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005b6e:	2b00      	cmp	r3, #0
 8005b70:	d05a      	beq.n	8005c28 <I2C_Mem_ISR_DMA+0x150>
 8005b72:	2101      	movs	r1, #1
 8005b74:	68f8      	ldr	r0, [r7, #12]
 8005b76:	f000 ffbb 	bl	8006af0 <I2C_Disable_IRQ>
 8005b7a:	2110      	movs	r1, #16
 8005b7c:	68f8      	ldr	r0, [r7, #12]
 8005b7e:	f000 ff33 	bl	80069e8 <I2C_Enable_IRQ>
 8005b82:	68fb      	ldr	r3, [r7, #12]
 8005b84:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005b86:	b29b      	uxth	r3, r3
 8005b88:	2b00      	cmp	r3, #0
 8005b8a:	d048      	beq.n	8005c1e <I2C_Mem_ISR_DMA+0x146>
 8005b8c:	68fb      	ldr	r3, [r7, #12]
 8005b8e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005b90:	b29b      	uxth	r3, r3
 8005b92:	2bff      	cmp	r3, #255	@ 0xff
 8005b94:	d910      	bls.n	8005bb8 <I2C_Mem_ISR_DMA+0xe0>
 8005b96:	68fb      	ldr	r3, [r7, #12]
 8005b98:	22ff      	movs	r2, #255	@ 0xff
 8005b9a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005b9c:	68fb      	ldr	r3, [r7, #12]
 8005b9e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005ba0:	b299      	uxth	r1, r3
 8005ba2:	68fb      	ldr	r3, [r7, #12]
 8005ba4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005ba6:	b2da      	uxtb	r2, r3
 8005ba8:	2300      	movs	r3, #0
 8005baa:	9300      	str	r3, [sp, #0]
 8005bac:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005bb0:	68f8      	ldr	r0, [r7, #12]
 8005bb2:	f000 fee7 	bl	8006984 <I2C_TransferConfig>
 8005bb6:	e011      	b.n	8005bdc <I2C_Mem_ISR_DMA+0x104>
 8005bb8:	68fb      	ldr	r3, [r7, #12]
 8005bba:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005bbc:	b29a      	uxth	r2, r3
 8005bbe:	68fb      	ldr	r3, [r7, #12]
 8005bc0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005bc6:	b299      	uxth	r1, r3
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005bcc:	b2da      	uxtb	r2, r3
 8005bce:	2300      	movs	r3, #0
 8005bd0:	9300      	str	r3, [sp, #0]
 8005bd2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005bd6:	68f8      	ldr	r0, [r7, #12]
 8005bd8:	f000 fed4 	bl	8006984 <I2C_TransferConfig>
 8005bdc:	68fb      	ldr	r3, [r7, #12]
 8005bde:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005be0:	b29a      	uxth	r2, r3
 8005be2:	68fb      	ldr	r3, [r7, #12]
 8005be4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005be6:	1ad3      	subs	r3, r2, r3
 8005be8:	b29a      	uxth	r2, r3
 8005bea:	68fb      	ldr	r3, [r7, #12]
 8005bec:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005bee:	68fb      	ldr	r3, [r7, #12]
 8005bf0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005bf4:	b2db      	uxtb	r3, r3
 8005bf6:	2b22      	cmp	r3, #34	@ 0x22
 8005bf8:	d108      	bne.n	8005c0c <I2C_Mem_ISR_DMA+0x134>
 8005bfa:	68fb      	ldr	r3, [r7, #12]
 8005bfc:	681b      	ldr	r3, [r3, #0]
 8005bfe:	681a      	ldr	r2, [r3, #0]
 8005c00:	68fb      	ldr	r3, [r7, #12]
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005c08:	601a      	str	r2, [r3, #0]
 8005c0a:	e07e      	b.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	681b      	ldr	r3, [r3, #0]
 8005c10:	681a      	ldr	r2, [r3, #0]
 8005c12:	68fb      	ldr	r3, [r7, #12]
 8005c14:	681b      	ldr	r3, [r3, #0]
 8005c16:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005c1a:	601a      	str	r2, [r3, #0]
 8005c1c:	e075      	b.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005c1e:	2140      	movs	r1, #64	@ 0x40
 8005c20:	68f8      	ldr	r0, [r7, #12]
 8005c22:	f000 fcf3 	bl	800660c <I2C_ITError>
 8005c26:	e070      	b.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005c28:	68bb      	ldr	r3, [r7, #8]
 8005c2a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005c2e:	2b00      	cmp	r3, #0
 8005c30:	d05d      	beq.n	8005cee <I2C_Mem_ISR_DMA+0x216>
 8005c32:	687b      	ldr	r3, [r7, #4]
 8005c34:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005c38:	2b00      	cmp	r3, #0
 8005c3a:	d058      	beq.n	8005cee <I2C_Mem_ISR_DMA+0x216>
 8005c3c:	2101      	movs	r1, #1
 8005c3e:	68f8      	ldr	r0, [r7, #12]
 8005c40:	f000 ff56 	bl	8006af0 <I2C_Disable_IRQ>
 8005c44:	2110      	movs	r1, #16
 8005c46:	68f8      	ldr	r0, [r7, #12]
 8005c48:	f000 fece 	bl	80069e8 <I2C_Enable_IRQ>
 8005c4c:	68fb      	ldr	r3, [r7, #12]
 8005c4e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005c52:	b2db      	uxtb	r3, r3
 8005c54:	2b22      	cmp	r3, #34	@ 0x22
 8005c56:	d101      	bne.n	8005c5c <I2C_Mem_ISR_DMA+0x184>
 8005c58:	4b31      	ldr	r3, [pc, #196]	@ (8005d20 <I2C_Mem_ISR_DMA+0x248>)
 8005c5a:	617b      	str	r3, [r7, #20]
 8005c5c:	68fb      	ldr	r3, [r7, #12]
 8005c5e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005c60:	b29b      	uxth	r3, r3
 8005c62:	2bff      	cmp	r3, #255	@ 0xff
 8005c64:	d910      	bls.n	8005c88 <I2C_Mem_ISR_DMA+0x1b0>
 8005c66:	68fb      	ldr	r3, [r7, #12]
 8005c68:	22ff      	movs	r2, #255	@ 0xff
 8005c6a:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005c6c:	68fb      	ldr	r3, [r7, #12]
 8005c6e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005c70:	b299      	uxth	r1, r3
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005c76:	b2da      	uxtb	r2, r3
 8005c78:	697b      	ldr	r3, [r7, #20]
 8005c7a:	9300      	str	r3, [sp, #0]
 8005c7c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005c80:	68f8      	ldr	r0, [r7, #12]
 8005c82:	f000 fe7f 	bl	8006984 <I2C_TransferConfig>
 8005c86:	e011      	b.n	8005cac <I2C_Mem_ISR_DMA+0x1d4>
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005c8c:	b29a      	uxth	r2, r3
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	851a      	strh	r2, [r3, #40]	@ 0x28
 8005c92:	68fb      	ldr	r3, [r7, #12]
 8005c94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005c96:	b299      	uxth	r1, r3
 8005c98:	68fb      	ldr	r3, [r7, #12]
 8005c9a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005c9c:	b2da      	uxtb	r2, r3
 8005c9e:	697b      	ldr	r3, [r7, #20]
 8005ca0:	9300      	str	r3, [sp, #0]
 8005ca2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005ca6:	68f8      	ldr	r0, [r7, #12]
 8005ca8:	f000 fe6c 	bl	8006984 <I2C_TransferConfig>
 8005cac:	68fb      	ldr	r3, [r7, #12]
 8005cae:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005cb0:	b29a      	uxth	r2, r3
 8005cb2:	68fb      	ldr	r3, [r7, #12]
 8005cb4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005cb6:	1ad3      	subs	r3, r2, r3
 8005cb8:	b29a      	uxth	r2, r3
 8005cba:	68fb      	ldr	r3, [r7, #12]
 8005cbc:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005cc4:	b2db      	uxtb	r3, r3
 8005cc6:	2b22      	cmp	r3, #34	@ 0x22
 8005cc8:	d108      	bne.n	8005cdc <I2C_Mem_ISR_DMA+0x204>
 8005cca:	68fb      	ldr	r3, [r7, #12]
 8005ccc:	681b      	ldr	r3, [r3, #0]
 8005cce:	681a      	ldr	r2, [r3, #0]
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	681b      	ldr	r3, [r3, #0]
 8005cd4:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005cd8:	601a      	str	r2, [r3, #0]
 8005cda:	e016      	b.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005cdc:	68fb      	ldr	r3, [r7, #12]
 8005cde:	681b      	ldr	r3, [r3, #0]
 8005ce0:	681a      	ldr	r2, [r3, #0]
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	681b      	ldr	r3, [r3, #0]
 8005ce6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005cea:	601a      	str	r2, [r3, #0]
 8005cec:	e00d      	b.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005cee:	68bb      	ldr	r3, [r7, #8]
 8005cf0:	f003 0320 	and.w	r3, r3, #32
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	d008      	beq.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	f003 0320 	and.w	r3, r3, #32
 8005cfe:	2b00      	cmp	r3, #0
 8005d00:	d003      	beq.n	8005d0a <I2C_Mem_ISR_DMA+0x232>
 8005d02:	68b9      	ldr	r1, [r7, #8]
 8005d04:	68f8      	ldr	r0, [r7, #12]
 8005d06:	f000 fa01 	bl	800610c <I2C_ITMasterCplt>
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	2200      	movs	r2, #0
 8005d0e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005d12:	2300      	movs	r3, #0
 8005d14:	4618      	mov	r0, r3
 8005d16:	3718      	adds	r7, #24
 8005d18:	46bd      	mov	sp, r7
 8005d1a:	bd80      	pop	{r7, pc}
 8005d1c:	80002000 	.word	0x80002000
 8005d20:	80002400 	.word	0x80002400

08005d24 <I2C_Slave_ISR_DMA>:
 8005d24:	b580      	push	{r7, lr}
 8005d26:	b088      	sub	sp, #32
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	60f8      	str	r0, [r7, #12]
 8005d2c:	60b9      	str	r1, [r7, #8]
 8005d2e:	607a      	str	r2, [r7, #4]
 8005d30:	68fb      	ldr	r3, [r7, #12]
 8005d32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005d34:	61bb      	str	r3, [r7, #24]
 8005d36:	2300      	movs	r3, #0
 8005d38:	61fb      	str	r3, [r7, #28]
 8005d3a:	68fb      	ldr	r3, [r7, #12]
 8005d3c:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005d40:	2b01      	cmp	r3, #1
 8005d42:	d101      	bne.n	8005d48 <I2C_Slave_ISR_DMA+0x24>
 8005d44:	2302      	movs	r3, #2
 8005d46:	e0c0      	b.n	8005eca <I2C_Slave_ISR_DMA+0x1a6>
 8005d48:	68fb      	ldr	r3, [r7, #12]
 8005d4a:	2201      	movs	r2, #1
 8005d4c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005d50:	68bb      	ldr	r3, [r7, #8]
 8005d52:	f003 0320 	and.w	r3, r3, #32
 8005d56:	2b00      	cmp	r3, #0
 8005d58:	d009      	beq.n	8005d6e <I2C_Slave_ISR_DMA+0x4a>
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	f003 0320 	and.w	r3, r3, #32
 8005d60:	2b00      	cmp	r3, #0
 8005d62:	d004      	beq.n	8005d6e <I2C_Slave_ISR_DMA+0x4a>
 8005d64:	68b9      	ldr	r1, [r7, #8]
 8005d66:	68f8      	ldr	r0, [r7, #12]
 8005d68:	f000 fa98 	bl	800629c <I2C_ITSlaveCplt>
 8005d6c:	e0a8      	b.n	8005ec0 <I2C_Slave_ISR_DMA+0x19c>
 8005d6e:	68bb      	ldr	r3, [r7, #8]
 8005d70:	f003 0310 	and.w	r3, r3, #16
 8005d74:	2b00      	cmp	r3, #0
 8005d76:	f000 8095 	beq.w	8005ea4 <I2C_Slave_ISR_DMA+0x180>
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	f003 0310 	and.w	r3, r3, #16
 8005d80:	2b00      	cmp	r3, #0
 8005d82:	f000 808f 	beq.w	8005ea4 <I2C_Slave_ISR_DMA+0x180>
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005d8c:	2b00      	cmp	r3, #0
 8005d8e:	d104      	bne.n	8005d9a <I2C_Slave_ISR_DMA+0x76>
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8005d96:	2b00      	cmp	r3, #0
 8005d98:	d07d      	beq.n	8005e96 <I2C_Slave_ISR_DMA+0x172>
 8005d9a:	68fb      	ldr	r3, [r7, #12]
 8005d9c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	d00c      	beq.n	8005dbc <I2C_Slave_ISR_DMA+0x98>
 8005da2:	687b      	ldr	r3, [r7, #4]
 8005da4:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8005da8:	2b00      	cmp	r3, #0
 8005daa:	d007      	beq.n	8005dbc <I2C_Slave_ISR_DMA+0x98>
 8005dac:	68fb      	ldr	r3, [r7, #12]
 8005dae:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005db0:	681b      	ldr	r3, [r3, #0]
 8005db2:	685b      	ldr	r3, [r3, #4]
 8005db4:	2b00      	cmp	r3, #0
 8005db6:	d101      	bne.n	8005dbc <I2C_Slave_ISR_DMA+0x98>
 8005db8:	2301      	movs	r3, #1
 8005dba:	61fb      	str	r3, [r7, #28]
 8005dbc:	68fb      	ldr	r3, [r7, #12]
 8005dbe:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d00c      	beq.n	8005dde <I2C_Slave_ISR_DMA+0xba>
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8005dca:	2b00      	cmp	r3, #0
 8005dcc:	d007      	beq.n	8005dde <I2C_Slave_ISR_DMA+0xba>
 8005dce:	68fb      	ldr	r3, [r7, #12]
 8005dd0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005dd2:	681b      	ldr	r3, [r3, #0]
 8005dd4:	685b      	ldr	r3, [r3, #4]
 8005dd6:	2b00      	cmp	r3, #0
 8005dd8:	d101      	bne.n	8005dde <I2C_Slave_ISR_DMA+0xba>
 8005dda:	2301      	movs	r3, #1
 8005ddc:	61fb      	str	r3, [r7, #28]
 8005dde:	69fb      	ldr	r3, [r7, #28]
 8005de0:	2b01      	cmp	r3, #1
 8005de2:	d128      	bne.n	8005e36 <I2C_Slave_ISR_DMA+0x112>
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005dea:	b2db      	uxtb	r3, r3
 8005dec:	2b28      	cmp	r3, #40	@ 0x28
 8005dee:	d108      	bne.n	8005e02 <I2C_Slave_ISR_DMA+0xde>
 8005df0:	69bb      	ldr	r3, [r7, #24]
 8005df2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8005df6:	d104      	bne.n	8005e02 <I2C_Slave_ISR_DMA+0xde>
 8005df8:	68b9      	ldr	r1, [r7, #8]
 8005dfa:	68f8      	ldr	r0, [r7, #12]
 8005dfc:	f000 fbb2 	bl	8006564 <I2C_ITListenCplt>
 8005e00:	e048      	b.n	8005e94 <I2C_Slave_ISR_DMA+0x170>
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005e08:	b2db      	uxtb	r3, r3
 8005e0a:	2b29      	cmp	r3, #41	@ 0x29
 8005e0c:	d10e      	bne.n	8005e2c <I2C_Slave_ISR_DMA+0x108>
 8005e0e:	69bb      	ldr	r3, [r7, #24]
 8005e10:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8005e14:	d00a      	beq.n	8005e2c <I2C_Slave_ISR_DMA+0x108>
 8005e16:	68fb      	ldr	r3, [r7, #12]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	2210      	movs	r2, #16
 8005e1c:	61da      	str	r2, [r3, #28]
 8005e1e:	68f8      	ldr	r0, [r7, #12]
 8005e20:	f000 fd0b 	bl	800683a <I2C_Flush_TXDR>
 8005e24:	68f8      	ldr	r0, [r7, #12]
 8005e26:	f000 f915 	bl	8006054 <I2C_ITSlaveSeqCplt>
 8005e2a:	e033      	b.n	8005e94 <I2C_Slave_ISR_DMA+0x170>
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	681b      	ldr	r3, [r3, #0]
 8005e30:	2210      	movs	r2, #16
 8005e32:	61da      	str	r2, [r3, #28]
 8005e34:	e034      	b.n	8005ea0 <I2C_Slave_ISR_DMA+0x17c>
 8005e36:	68fb      	ldr	r3, [r7, #12]
 8005e38:	681b      	ldr	r3, [r3, #0]
 8005e3a:	2210      	movs	r2, #16
 8005e3c:	61da      	str	r2, [r3, #28]
 8005e3e:	68fb      	ldr	r3, [r7, #12]
 8005e40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005e42:	f043 0204 	orr.w	r2, r3, #4
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	645a      	str	r2, [r3, #68]	@ 0x44
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005e50:	75fb      	strb	r3, [r7, #23]
 8005e52:	69bb      	ldr	r3, [r7, #24]
 8005e54:	2b00      	cmp	r3, #0
 8005e56:	d003      	beq.n	8005e60 <I2C_Slave_ISR_DMA+0x13c>
 8005e58:	69bb      	ldr	r3, [r7, #24]
 8005e5a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005e5e:	d11f      	bne.n	8005ea0 <I2C_Slave_ISR_DMA+0x17c>
 8005e60:	7dfb      	ldrb	r3, [r7, #23]
 8005e62:	2b21      	cmp	r3, #33	@ 0x21
 8005e64:	d002      	beq.n	8005e6c <I2C_Slave_ISR_DMA+0x148>
 8005e66:	7dfb      	ldrb	r3, [r7, #23]
 8005e68:	2b29      	cmp	r3, #41	@ 0x29
 8005e6a:	d103      	bne.n	8005e74 <I2C_Slave_ISR_DMA+0x150>
 8005e6c:	68fb      	ldr	r3, [r7, #12]
 8005e6e:	2221      	movs	r2, #33	@ 0x21
 8005e70:	631a      	str	r2, [r3, #48]	@ 0x30
 8005e72:	e008      	b.n	8005e86 <I2C_Slave_ISR_DMA+0x162>
 8005e74:	7dfb      	ldrb	r3, [r7, #23]
 8005e76:	2b22      	cmp	r3, #34	@ 0x22
 8005e78:	d002      	beq.n	8005e80 <I2C_Slave_ISR_DMA+0x15c>
 8005e7a:	7dfb      	ldrb	r3, [r7, #23]
 8005e7c:	2b2a      	cmp	r3, #42	@ 0x2a
 8005e7e:	d102      	bne.n	8005e86 <I2C_Slave_ISR_DMA+0x162>
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	2222      	movs	r2, #34	@ 0x22
 8005e84:	631a      	str	r2, [r3, #48]	@ 0x30
 8005e86:	68fb      	ldr	r3, [r7, #12]
 8005e88:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005e8a:	4619      	mov	r1, r3
 8005e8c:	68f8      	ldr	r0, [r7, #12]
 8005e8e:	f000 fbbd 	bl	800660c <I2C_ITError>
 8005e92:	e005      	b.n	8005ea0 <I2C_Slave_ISR_DMA+0x17c>
 8005e94:	e004      	b.n	8005ea0 <I2C_Slave_ISR_DMA+0x17c>
 8005e96:	68fb      	ldr	r3, [r7, #12]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	2210      	movs	r2, #16
 8005e9c:	61da      	str	r2, [r3, #28]
 8005e9e:	e00f      	b.n	8005ec0 <I2C_Slave_ISR_DMA+0x19c>
 8005ea0:	bf00      	nop
 8005ea2:	e00d      	b.n	8005ec0 <I2C_Slave_ISR_DMA+0x19c>
 8005ea4:	68bb      	ldr	r3, [r7, #8]
 8005ea6:	f003 0308 	and.w	r3, r3, #8
 8005eaa:	2b00      	cmp	r3, #0
 8005eac:	d008      	beq.n	8005ec0 <I2C_Slave_ISR_DMA+0x19c>
 8005eae:	687b      	ldr	r3, [r7, #4]
 8005eb0:	f003 0308 	and.w	r3, r3, #8
 8005eb4:	2b00      	cmp	r3, #0
 8005eb6:	d003      	beq.n	8005ec0 <I2C_Slave_ISR_DMA+0x19c>
 8005eb8:	68b9      	ldr	r1, [r7, #8]
 8005eba:	68f8      	ldr	r0, [r7, #12]
 8005ebc:	f000 f809 	bl	8005ed2 <I2C_ITAddrCplt>
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	2200      	movs	r2, #0
 8005ec4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005ec8:	2300      	movs	r3, #0
 8005eca:	4618      	mov	r0, r3
 8005ecc:	3720      	adds	r7, #32
 8005ece:	46bd      	mov	sp, r7
 8005ed0:	bd80      	pop	{r7, pc}

08005ed2 <I2C_ITAddrCplt>:
 8005ed2:	b580      	push	{r7, lr}
 8005ed4:	b084      	sub	sp, #16
 8005ed6:	af00      	add	r7, sp, #0
 8005ed8:	6078      	str	r0, [r7, #4]
 8005eda:	6039      	str	r1, [r7, #0]
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005ee2:	b2db      	uxtb	r3, r3
 8005ee4:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8005ee8:	2b28      	cmp	r3, #40	@ 0x28
 8005eea:	d16a      	bne.n	8005fc2 <I2C_ITAddrCplt+0xf0>
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	681b      	ldr	r3, [r3, #0]
 8005ef0:	699b      	ldr	r3, [r3, #24]
 8005ef2:	0c1b      	lsrs	r3, r3, #16
 8005ef4:	b2db      	uxtb	r3, r3
 8005ef6:	f003 0301 	and.w	r3, r3, #1
 8005efa:	73fb      	strb	r3, [r7, #15]
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	681b      	ldr	r3, [r3, #0]
 8005f00:	699b      	ldr	r3, [r3, #24]
 8005f02:	0c1b      	lsrs	r3, r3, #16
 8005f04:	b29b      	uxth	r3, r3
 8005f06:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8005f0a:	81bb      	strh	r3, [r7, #12]
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	689b      	ldr	r3, [r3, #8]
 8005f12:	b29b      	uxth	r3, r3
 8005f14:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8005f18:	817b      	strh	r3, [r7, #10]
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	681b      	ldr	r3, [r3, #0]
 8005f1e:	68db      	ldr	r3, [r3, #12]
 8005f20:	b29b      	uxth	r3, r3
 8005f22:	f003 03fe 	and.w	r3, r3, #254	@ 0xfe
 8005f26:	813b      	strh	r3, [r7, #8]
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	68db      	ldr	r3, [r3, #12]
 8005f2c:	2b02      	cmp	r3, #2
 8005f2e:	d138      	bne.n	8005fa2 <I2C_ITAddrCplt+0xd0>
 8005f30:	897b      	ldrh	r3, [r7, #10]
 8005f32:	09db      	lsrs	r3, r3, #7
 8005f34:	b29a      	uxth	r2, r3
 8005f36:	89bb      	ldrh	r3, [r7, #12]
 8005f38:	4053      	eors	r3, r2
 8005f3a:	b29b      	uxth	r3, r3
 8005f3c:	f003 0306 	and.w	r3, r3, #6
 8005f40:	2b00      	cmp	r3, #0
 8005f42:	d11c      	bne.n	8005f7e <I2C_ITAddrCplt+0xac>
 8005f44:	897b      	ldrh	r3, [r7, #10]
 8005f46:	81bb      	strh	r3, [r7, #12]
 8005f48:	687b      	ldr	r3, [r7, #4]
 8005f4a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005f4c:	1c5a      	adds	r2, r3, #1
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	649a      	str	r2, [r3, #72]	@ 0x48
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005f56:	2b02      	cmp	r3, #2
 8005f58:	d13b      	bne.n	8005fd2 <I2C_ITAddrCplt+0x100>
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	2200      	movs	r2, #0
 8005f5e:	649a      	str	r2, [r3, #72]	@ 0x48
 8005f60:	687b      	ldr	r3, [r7, #4]
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	2208      	movs	r2, #8
 8005f66:	61da      	str	r2, [r3, #28]
 8005f68:	687b      	ldr	r3, [r7, #4]
 8005f6a:	2200      	movs	r2, #0
 8005f6c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005f70:	89ba      	ldrh	r2, [r7, #12]
 8005f72:	7bfb      	ldrb	r3, [r7, #15]
 8005f74:	4619      	mov	r1, r3
 8005f76:	6878      	ldr	r0, [r7, #4]
 8005f78:	f7ff fa55 	bl	8005426 <HAL_I2C_AddrCallback>
 8005f7c:	e029      	b.n	8005fd2 <I2C_ITAddrCplt+0x100>
 8005f7e:	893b      	ldrh	r3, [r7, #8]
 8005f80:	81bb      	strh	r3, [r7, #12]
 8005f82:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005f86:	6878      	ldr	r0, [r7, #4]
 8005f88:	f000 fdb2 	bl	8006af0 <I2C_Disable_IRQ>
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	2200      	movs	r2, #0
 8005f90:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005f94:	89ba      	ldrh	r2, [r7, #12]
 8005f96:	7bfb      	ldrb	r3, [r7, #15]
 8005f98:	4619      	mov	r1, r3
 8005f9a:	6878      	ldr	r0, [r7, #4]
 8005f9c:	f7ff fa43 	bl	8005426 <HAL_I2C_AddrCallback>
 8005fa0:	e017      	b.n	8005fd2 <I2C_ITAddrCplt+0x100>
 8005fa2:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005fa6:	6878      	ldr	r0, [r7, #4]
 8005fa8:	f000 fda2 	bl	8006af0 <I2C_Disable_IRQ>
 8005fac:	687b      	ldr	r3, [r7, #4]
 8005fae:	2200      	movs	r2, #0
 8005fb0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005fb4:	89ba      	ldrh	r2, [r7, #12]
 8005fb6:	7bfb      	ldrb	r3, [r7, #15]
 8005fb8:	4619      	mov	r1, r3
 8005fba:	6878      	ldr	r0, [r7, #4]
 8005fbc:	f7ff fa33 	bl	8005426 <HAL_I2C_AddrCallback>
 8005fc0:	e007      	b.n	8005fd2 <I2C_ITAddrCplt+0x100>
 8005fc2:	687b      	ldr	r3, [r7, #4]
 8005fc4:	681b      	ldr	r3, [r3, #0]
 8005fc6:	2208      	movs	r2, #8
 8005fc8:	61da      	str	r2, [r3, #28]
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	2200      	movs	r2, #0
 8005fce:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005fd2:	bf00      	nop
 8005fd4:	3710      	adds	r7, #16
 8005fd6:	46bd      	mov	sp, r7
 8005fd8:	bd80      	pop	{r7, pc}

08005fda <I2C_ITMasterSeqCplt>:
 8005fda:	b580      	push	{r7, lr}
 8005fdc:	b082      	sub	sp, #8
 8005fde:	af00      	add	r7, sp, #0
 8005fe0:	6078      	str	r0, [r7, #4]
 8005fe2:	687b      	ldr	r3, [r7, #4]
 8005fe4:	2200      	movs	r2, #0
 8005fe6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005fea:	687b      	ldr	r3, [r7, #4]
 8005fec:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005ff0:	b2db      	uxtb	r3, r3
 8005ff2:	2b21      	cmp	r3, #33	@ 0x21
 8005ff4:	d115      	bne.n	8006022 <I2C_ITMasterSeqCplt+0x48>
 8005ff6:	687b      	ldr	r3, [r7, #4]
 8005ff8:	2220      	movs	r2, #32
 8005ffa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	2211      	movs	r2, #17
 8006002:	631a      	str	r2, [r3, #48]	@ 0x30
 8006004:	687b      	ldr	r3, [r7, #4]
 8006006:	2200      	movs	r2, #0
 8006008:	635a      	str	r2, [r3, #52]	@ 0x34
 800600a:	2101      	movs	r1, #1
 800600c:	6878      	ldr	r0, [r7, #4]
 800600e:	f000 fd6f 	bl	8006af0 <I2C_Disable_IRQ>
 8006012:	687b      	ldr	r3, [r7, #4]
 8006014:	2200      	movs	r2, #0
 8006016:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800601a:	6878      	ldr	r0, [r7, #4]
 800601c:	f7ff f9db 	bl	80053d6 <HAL_I2C_MasterTxCpltCallback>
 8006020:	e014      	b.n	800604c <I2C_ITMasterSeqCplt+0x72>
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	2220      	movs	r2, #32
 8006026:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800602a:	687b      	ldr	r3, [r7, #4]
 800602c:	2212      	movs	r2, #18
 800602e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006030:	687b      	ldr	r3, [r7, #4]
 8006032:	2200      	movs	r2, #0
 8006034:	635a      	str	r2, [r3, #52]	@ 0x34
 8006036:	2102      	movs	r1, #2
 8006038:	6878      	ldr	r0, [r7, #4]
 800603a:	f000 fd59 	bl	8006af0 <I2C_Disable_IRQ>
 800603e:	687b      	ldr	r3, [r7, #4]
 8006040:	2200      	movs	r2, #0
 8006042:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006046:	6878      	ldr	r0, [r7, #4]
 8006048:	f7ff f9cf 	bl	80053ea <HAL_I2C_MasterRxCpltCallback>
 800604c:	bf00      	nop
 800604e:	3708      	adds	r7, #8
 8006050:	46bd      	mov	sp, r7
 8006052:	bd80      	pop	{r7, pc}

08006054 <I2C_ITSlaveSeqCplt>:
 8006054:	b580      	push	{r7, lr}
 8006056:	b084      	sub	sp, #16
 8006058:	af00      	add	r7, sp, #0
 800605a:	6078      	str	r0, [r7, #4]
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	681b      	ldr	r3, [r3, #0]
 8006060:	681b      	ldr	r3, [r3, #0]
 8006062:	60fb      	str	r3, [r7, #12]
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	2200      	movs	r2, #0
 8006068:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800606c:	68fb      	ldr	r3, [r7, #12]
 800606e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8006072:	2b00      	cmp	r3, #0
 8006074:	d008      	beq.n	8006088 <I2C_ITSlaveSeqCplt+0x34>
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	681a      	ldr	r2, [r3, #0]
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006084:	601a      	str	r2, [r3, #0]
 8006086:	e00c      	b.n	80060a2 <I2C_ITSlaveSeqCplt+0x4e>
 8006088:	68fb      	ldr	r3, [r7, #12]
 800608a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800608e:	2b00      	cmp	r3, #0
 8006090:	d007      	beq.n	80060a2 <I2C_ITSlaveSeqCplt+0x4e>
 8006092:	687b      	ldr	r3, [r7, #4]
 8006094:	681b      	ldr	r3, [r3, #0]
 8006096:	681a      	ldr	r2, [r3, #0]
 8006098:	687b      	ldr	r3, [r7, #4]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80060a0:	601a      	str	r2, [r3, #0]
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80060a8:	b2db      	uxtb	r3, r3
 80060aa:	2b29      	cmp	r3, #41	@ 0x29
 80060ac:	d112      	bne.n	80060d4 <I2C_ITSlaveSeqCplt+0x80>
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	2228      	movs	r2, #40	@ 0x28
 80060b2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80060b6:	687b      	ldr	r3, [r7, #4]
 80060b8:	2221      	movs	r2, #33	@ 0x21
 80060ba:	631a      	str	r2, [r3, #48]	@ 0x30
 80060bc:	2101      	movs	r1, #1
 80060be:	6878      	ldr	r0, [r7, #4]
 80060c0:	f000 fd16 	bl	8006af0 <I2C_Disable_IRQ>
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	2200      	movs	r2, #0
 80060c8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80060cc:	6878      	ldr	r0, [r7, #4]
 80060ce:	f7ff f996 	bl	80053fe <HAL_I2C_SlaveTxCpltCallback>
 80060d2:	e017      	b.n	8006104 <I2C_ITSlaveSeqCplt+0xb0>
 80060d4:	687b      	ldr	r3, [r7, #4]
 80060d6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80060da:	b2db      	uxtb	r3, r3
 80060dc:	2b2a      	cmp	r3, #42	@ 0x2a
 80060de:	d111      	bne.n	8006104 <I2C_ITSlaveSeqCplt+0xb0>
 80060e0:	687b      	ldr	r3, [r7, #4]
 80060e2:	2228      	movs	r2, #40	@ 0x28
 80060e4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80060e8:	687b      	ldr	r3, [r7, #4]
 80060ea:	2222      	movs	r2, #34	@ 0x22
 80060ec:	631a      	str	r2, [r3, #48]	@ 0x30
 80060ee:	2102      	movs	r1, #2
 80060f0:	6878      	ldr	r0, [r7, #4]
 80060f2:	f000 fcfd 	bl	8006af0 <I2C_Disable_IRQ>
 80060f6:	687b      	ldr	r3, [r7, #4]
 80060f8:	2200      	movs	r2, #0
 80060fa:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80060fe:	6878      	ldr	r0, [r7, #4]
 8006100:	f7ff f987 	bl	8005412 <HAL_I2C_SlaveRxCpltCallback>
 8006104:	bf00      	nop
 8006106:	3710      	adds	r7, #16
 8006108:	46bd      	mov	sp, r7
 800610a:	bd80      	pop	{r7, pc}

0800610c <I2C_ITMasterCplt>:
 800610c:	b580      	push	{r7, lr}
 800610e:	b086      	sub	sp, #24
 8006110:	af00      	add	r7, sp, #0
 8006112:	6078      	str	r0, [r7, #4]
 8006114:	6039      	str	r1, [r7, #0]
 8006116:	683b      	ldr	r3, [r7, #0]
 8006118:	617b      	str	r3, [r7, #20]
 800611a:	687b      	ldr	r3, [r7, #4]
 800611c:	681b      	ldr	r3, [r3, #0]
 800611e:	2220      	movs	r2, #32
 8006120:	61da      	str	r2, [r3, #28]
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006128:	b2db      	uxtb	r3, r3
 800612a:	2b21      	cmp	r3, #33	@ 0x21
 800612c:	d107      	bne.n	800613e <I2C_ITMasterCplt+0x32>
 800612e:	2101      	movs	r1, #1
 8006130:	6878      	ldr	r0, [r7, #4]
 8006132:	f000 fcdd 	bl	8006af0 <I2C_Disable_IRQ>
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	2211      	movs	r2, #17
 800613a:	631a      	str	r2, [r3, #48]	@ 0x30
 800613c:	e00c      	b.n	8006158 <I2C_ITMasterCplt+0x4c>
 800613e:	687b      	ldr	r3, [r7, #4]
 8006140:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006144:	b2db      	uxtb	r3, r3
 8006146:	2b22      	cmp	r3, #34	@ 0x22
 8006148:	d106      	bne.n	8006158 <I2C_ITMasterCplt+0x4c>
 800614a:	2102      	movs	r1, #2
 800614c:	6878      	ldr	r0, [r7, #4]
 800614e:	f000 fccf 	bl	8006af0 <I2C_Disable_IRQ>
 8006152:	687b      	ldr	r3, [r7, #4]
 8006154:	2212      	movs	r2, #18
 8006156:	631a      	str	r2, [r3, #48]	@ 0x30
 8006158:	687b      	ldr	r3, [r7, #4]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	6859      	ldr	r1, [r3, #4]
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	681a      	ldr	r2, [r3, #0]
 8006162:	4b4c      	ldr	r3, [pc, #304]	@ (8006294 <I2C_ITMasterCplt+0x188>)
 8006164:	400b      	ands	r3, r1
 8006166:	6053      	str	r3, [r2, #4]
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	2200      	movs	r2, #0
 800616c:	635a      	str	r2, [r3, #52]	@ 0x34
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	4a49      	ldr	r2, [pc, #292]	@ (8006298 <I2C_ITMasterCplt+0x18c>)
 8006172:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006174:	697b      	ldr	r3, [r7, #20]
 8006176:	f003 0310 	and.w	r3, r3, #16
 800617a:	2b00      	cmp	r3, #0
 800617c:	d009      	beq.n	8006192 <I2C_ITMasterCplt+0x86>
 800617e:	687b      	ldr	r3, [r7, #4]
 8006180:	681b      	ldr	r3, [r3, #0]
 8006182:	2210      	movs	r2, #16
 8006184:	61da      	str	r2, [r3, #28]
 8006186:	687b      	ldr	r3, [r7, #4]
 8006188:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800618a:	f043 0204 	orr.w	r2, r3, #4
 800618e:	687b      	ldr	r3, [r7, #4]
 8006190:	645a      	str	r2, [r3, #68]	@ 0x44
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006198:	b2db      	uxtb	r3, r3
 800619a:	2b60      	cmp	r3, #96	@ 0x60
 800619c:	d10a      	bne.n	80061b4 <I2C_ITMasterCplt+0xa8>
 800619e:	697b      	ldr	r3, [r7, #20]
 80061a0:	f003 0304 	and.w	r3, r3, #4
 80061a4:	2b00      	cmp	r3, #0
 80061a6:	d005      	beq.n	80061b4 <I2C_ITMasterCplt+0xa8>
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	681b      	ldr	r3, [r3, #0]
 80061ac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80061ae:	b2db      	uxtb	r3, r3
 80061b0:	60fb      	str	r3, [r7, #12]
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	6878      	ldr	r0, [r7, #4]
 80061b6:	f000 fb40 	bl	800683a <I2C_Flush_TXDR>
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061be:	613b      	str	r3, [r7, #16]
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80061c6:	b2db      	uxtb	r3, r3
 80061c8:	2b60      	cmp	r3, #96	@ 0x60
 80061ca:	d002      	beq.n	80061d2 <I2C_ITMasterCplt+0xc6>
 80061cc:	693b      	ldr	r3, [r7, #16]
 80061ce:	2b00      	cmp	r3, #0
 80061d0:	d006      	beq.n	80061e0 <I2C_ITMasterCplt+0xd4>
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80061d6:	4619      	mov	r1, r3
 80061d8:	6878      	ldr	r0, [r7, #4]
 80061da:	f000 fa17 	bl	800660c <I2C_ITError>
 80061de:	e054      	b.n	800628a <I2C_ITMasterCplt+0x17e>
 80061e0:	687b      	ldr	r3, [r7, #4]
 80061e2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80061e6:	b2db      	uxtb	r3, r3
 80061e8:	2b21      	cmp	r3, #33	@ 0x21
 80061ea:	d124      	bne.n	8006236 <I2C_ITMasterCplt+0x12a>
 80061ec:	687b      	ldr	r3, [r7, #4]
 80061ee:	2220      	movs	r2, #32
 80061f0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	2200      	movs	r2, #0
 80061f8:	631a      	str	r2, [r3, #48]	@ 0x30
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006200:	b2db      	uxtb	r3, r3
 8006202:	2b40      	cmp	r3, #64	@ 0x40
 8006204:	d10b      	bne.n	800621e <I2C_ITMasterCplt+0x112>
 8006206:	687b      	ldr	r3, [r7, #4]
 8006208:	2200      	movs	r2, #0
 800620a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	2200      	movs	r2, #0
 8006212:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006216:	6878      	ldr	r0, [r7, #4]
 8006218:	f7ff f91d 	bl	8005456 <HAL_I2C_MemTxCpltCallback>
 800621c:	e035      	b.n	800628a <I2C_ITMasterCplt+0x17e>
 800621e:	687b      	ldr	r3, [r7, #4]
 8006220:	2200      	movs	r2, #0
 8006222:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006226:	687b      	ldr	r3, [r7, #4]
 8006228:	2200      	movs	r2, #0
 800622a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800622e:	6878      	ldr	r0, [r7, #4]
 8006230:	f7ff f8d1 	bl	80053d6 <HAL_I2C_MasterTxCpltCallback>
 8006234:	e029      	b.n	800628a <I2C_ITMasterCplt+0x17e>
 8006236:	687b      	ldr	r3, [r7, #4]
 8006238:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800623c:	b2db      	uxtb	r3, r3
 800623e:	2b22      	cmp	r3, #34	@ 0x22
 8006240:	d123      	bne.n	800628a <I2C_ITMasterCplt+0x17e>
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	2220      	movs	r2, #32
 8006246:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800624a:	687b      	ldr	r3, [r7, #4]
 800624c:	2200      	movs	r2, #0
 800624e:	631a      	str	r2, [r3, #48]	@ 0x30
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006256:	b2db      	uxtb	r3, r3
 8006258:	2b40      	cmp	r3, #64	@ 0x40
 800625a:	d10b      	bne.n	8006274 <I2C_ITMasterCplt+0x168>
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	2200      	movs	r2, #0
 8006260:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	2200      	movs	r2, #0
 8006268:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800626c:	6878      	ldr	r0, [r7, #4]
 800626e:	f7ff f8fc 	bl	800546a <HAL_I2C_MemRxCpltCallback>
 8006272:	e00a      	b.n	800628a <I2C_ITMasterCplt+0x17e>
 8006274:	687b      	ldr	r3, [r7, #4]
 8006276:	2200      	movs	r2, #0
 8006278:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	2200      	movs	r2, #0
 8006280:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006284:	6878      	ldr	r0, [r7, #4]
 8006286:	f7ff f8b0 	bl	80053ea <HAL_I2C_MasterRxCpltCallback>
 800628a:	bf00      	nop
 800628c:	3718      	adds	r7, #24
 800628e:	46bd      	mov	sp, r7
 8006290:	bd80      	pop	{r7, pc}
 8006292:	bf00      	nop
 8006294:	fe00e800 	.word	0xfe00e800
 8006298:	ffff0000 	.word	0xffff0000

0800629c <I2C_ITSlaveCplt>:
 800629c:	b580      	push	{r7, lr}
 800629e:	b086      	sub	sp, #24
 80062a0:	af00      	add	r7, sp, #0
 80062a2:	6078      	str	r0, [r7, #4]
 80062a4:	6039      	str	r1, [r7, #0]
 80062a6:	687b      	ldr	r3, [r7, #4]
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	681b      	ldr	r3, [r3, #0]
 80062ac:	613b      	str	r3, [r7, #16]
 80062ae:	683b      	ldr	r3, [r7, #0]
 80062b0:	617b      	str	r3, [r7, #20]
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80062b6:	60fb      	str	r3, [r7, #12]
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80062be:	72fb      	strb	r3, [r7, #11]
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	2220      	movs	r2, #32
 80062c6:	61da      	str	r2, [r3, #28]
 80062c8:	7afb      	ldrb	r3, [r7, #11]
 80062ca:	2b21      	cmp	r3, #33	@ 0x21
 80062cc:	d002      	beq.n	80062d4 <I2C_ITSlaveCplt+0x38>
 80062ce:	7afb      	ldrb	r3, [r7, #11]
 80062d0:	2b29      	cmp	r3, #41	@ 0x29
 80062d2:	d108      	bne.n	80062e6 <I2C_ITSlaveCplt+0x4a>
 80062d4:	f248 0101 	movw	r1, #32769	@ 0x8001
 80062d8:	6878      	ldr	r0, [r7, #4]
 80062da:	f000 fc09 	bl	8006af0 <I2C_Disable_IRQ>
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	2221      	movs	r2, #33	@ 0x21
 80062e2:	631a      	str	r2, [r3, #48]	@ 0x30
 80062e4:	e019      	b.n	800631a <I2C_ITSlaveCplt+0x7e>
 80062e6:	7afb      	ldrb	r3, [r7, #11]
 80062e8:	2b22      	cmp	r3, #34	@ 0x22
 80062ea:	d002      	beq.n	80062f2 <I2C_ITSlaveCplt+0x56>
 80062ec:	7afb      	ldrb	r3, [r7, #11]
 80062ee:	2b2a      	cmp	r3, #42	@ 0x2a
 80062f0:	d108      	bne.n	8006304 <I2C_ITSlaveCplt+0x68>
 80062f2:	f248 0102 	movw	r1, #32770	@ 0x8002
 80062f6:	6878      	ldr	r0, [r7, #4]
 80062f8:	f000 fbfa 	bl	8006af0 <I2C_Disable_IRQ>
 80062fc:	687b      	ldr	r3, [r7, #4]
 80062fe:	2222      	movs	r2, #34	@ 0x22
 8006300:	631a      	str	r2, [r3, #48]	@ 0x30
 8006302:	e00a      	b.n	800631a <I2C_ITSlaveCplt+0x7e>
 8006304:	7afb      	ldrb	r3, [r7, #11]
 8006306:	2b28      	cmp	r3, #40	@ 0x28
 8006308:	d107      	bne.n	800631a <I2C_ITSlaveCplt+0x7e>
 800630a:	f248 0103 	movw	r1, #32771	@ 0x8003
 800630e:	6878      	ldr	r0, [r7, #4]
 8006310:	f000 fbee 	bl	8006af0 <I2C_Disable_IRQ>
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	2200      	movs	r2, #0
 8006318:	631a      	str	r2, [r3, #48]	@ 0x30
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	685a      	ldr	r2, [r3, #4]
 8006320:	687b      	ldr	r3, [r7, #4]
 8006322:	681b      	ldr	r3, [r3, #0]
 8006324:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006328:	605a      	str	r2, [r3, #4]
 800632a:	687b      	ldr	r3, [r7, #4]
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	6859      	ldr	r1, [r3, #4]
 8006330:	687b      	ldr	r3, [r7, #4]
 8006332:	681a      	ldr	r2, [r3, #0]
 8006334:	4b89      	ldr	r3, [pc, #548]	@ (800655c <I2C_ITSlaveCplt+0x2c0>)
 8006336:	400b      	ands	r3, r1
 8006338:	6053      	str	r3, [r2, #4]
 800633a:	6878      	ldr	r0, [r7, #4]
 800633c:	f000 fa7d 	bl	800683a <I2C_Flush_TXDR>
 8006340:	693b      	ldr	r3, [r7, #16]
 8006342:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8006346:	2b00      	cmp	r3, #0
 8006348:	d013      	beq.n	8006372 <I2C_ITSlaveCplt+0xd6>
 800634a:	687b      	ldr	r3, [r7, #4]
 800634c:	681b      	ldr	r3, [r3, #0]
 800634e:	681a      	ldr	r2, [r3, #0]
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006358:	601a      	str	r2, [r3, #0]
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800635e:	2b00      	cmp	r3, #0
 8006360:	d01f      	beq.n	80063a2 <I2C_ITSlaveCplt+0x106>
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	685b      	ldr	r3, [r3, #4]
 800636a:	b29a      	uxth	r2, r3
 800636c:	687b      	ldr	r3, [r7, #4]
 800636e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8006370:	e017      	b.n	80063a2 <I2C_ITSlaveCplt+0x106>
 8006372:	693b      	ldr	r3, [r7, #16]
 8006374:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006378:	2b00      	cmp	r3, #0
 800637a:	d012      	beq.n	80063a2 <I2C_ITSlaveCplt+0x106>
 800637c:	687b      	ldr	r3, [r7, #4]
 800637e:	681b      	ldr	r3, [r3, #0]
 8006380:	681a      	ldr	r2, [r3, #0]
 8006382:	687b      	ldr	r3, [r7, #4]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800638a:	601a      	str	r2, [r3, #0]
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006390:	2b00      	cmp	r3, #0
 8006392:	d006      	beq.n	80063a2 <I2C_ITSlaveCplt+0x106>
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	685b      	ldr	r3, [r3, #4]
 800639c:	b29a      	uxth	r2, r3
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80063a2:	697b      	ldr	r3, [r7, #20]
 80063a4:	f003 0304 	and.w	r3, r3, #4
 80063a8:	2b00      	cmp	r3, #0
 80063aa:	d020      	beq.n	80063ee <I2C_ITSlaveCplt+0x152>
 80063ac:	697b      	ldr	r3, [r7, #20]
 80063ae:	f023 0304 	bic.w	r3, r3, #4
 80063b2:	617b      	str	r3, [r7, #20]
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80063ba:	687b      	ldr	r3, [r7, #4]
 80063bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80063be:	b2d2      	uxtb	r2, r2
 80063c0:	701a      	strb	r2, [r3, #0]
 80063c2:	687b      	ldr	r3, [r7, #4]
 80063c4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80063c6:	1c5a      	adds	r2, r3, #1
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	625a      	str	r2, [r3, #36]	@ 0x24
 80063cc:	687b      	ldr	r3, [r7, #4]
 80063ce:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80063d0:	2b00      	cmp	r3, #0
 80063d2:	d00c      	beq.n	80063ee <I2C_ITSlaveCplt+0x152>
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80063d8:	3b01      	subs	r3, #1
 80063da:	b29a      	uxth	r2, r3
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	851a      	strh	r2, [r3, #40]	@ 0x28
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80063e4:	b29b      	uxth	r3, r3
 80063e6:	3b01      	subs	r3, #1
 80063e8:	b29a      	uxth	r2, r3
 80063ea:	687b      	ldr	r3, [r7, #4]
 80063ec:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80063ee:	687b      	ldr	r3, [r7, #4]
 80063f0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80063f2:	b29b      	uxth	r3, r3
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	d005      	beq.n	8006404 <I2C_ITSlaveCplt+0x168>
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80063fc:	f043 0204 	orr.w	r2, r3, #4
 8006400:	687b      	ldr	r3, [r7, #4]
 8006402:	645a      	str	r2, [r3, #68]	@ 0x44
 8006404:	697b      	ldr	r3, [r7, #20]
 8006406:	f003 0310 	and.w	r3, r3, #16
 800640a:	2b00      	cmp	r3, #0
 800640c:	d049      	beq.n	80064a2 <I2C_ITSlaveCplt+0x206>
 800640e:	693b      	ldr	r3, [r7, #16]
 8006410:	f003 0310 	and.w	r3, r3, #16
 8006414:	2b00      	cmp	r3, #0
 8006416:	d044      	beq.n	80064a2 <I2C_ITSlaveCplt+0x206>
 8006418:	687b      	ldr	r3, [r7, #4]
 800641a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800641c:	b29b      	uxth	r3, r3
 800641e:	2b00      	cmp	r3, #0
 8006420:	d128      	bne.n	8006474 <I2C_ITSlaveCplt+0x1d8>
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006428:	b2db      	uxtb	r3, r3
 800642a:	2b28      	cmp	r3, #40	@ 0x28
 800642c:	d108      	bne.n	8006440 <I2C_ITSlaveCplt+0x1a4>
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8006434:	d104      	bne.n	8006440 <I2C_ITSlaveCplt+0x1a4>
 8006436:	6979      	ldr	r1, [r7, #20]
 8006438:	6878      	ldr	r0, [r7, #4]
 800643a:	f000 f893 	bl	8006564 <I2C_ITListenCplt>
 800643e:	e030      	b.n	80064a2 <I2C_ITSlaveCplt+0x206>
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006446:	b2db      	uxtb	r3, r3
 8006448:	2b29      	cmp	r3, #41	@ 0x29
 800644a:	d10e      	bne.n	800646a <I2C_ITSlaveCplt+0x1ce>
 800644c:	68fb      	ldr	r3, [r7, #12]
 800644e:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8006452:	d00a      	beq.n	800646a <I2C_ITSlaveCplt+0x1ce>
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	2210      	movs	r2, #16
 800645a:	61da      	str	r2, [r3, #28]
 800645c:	6878      	ldr	r0, [r7, #4]
 800645e:	f000 f9ec 	bl	800683a <I2C_Flush_TXDR>
 8006462:	6878      	ldr	r0, [r7, #4]
 8006464:	f7ff fdf6 	bl	8006054 <I2C_ITSlaveSeqCplt>
 8006468:	e01b      	b.n	80064a2 <I2C_ITSlaveCplt+0x206>
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	681b      	ldr	r3, [r3, #0]
 800646e:	2210      	movs	r2, #16
 8006470:	61da      	str	r2, [r3, #28]
 8006472:	e016      	b.n	80064a2 <I2C_ITSlaveCplt+0x206>
 8006474:	687b      	ldr	r3, [r7, #4]
 8006476:	681b      	ldr	r3, [r3, #0]
 8006478:	2210      	movs	r2, #16
 800647a:	61da      	str	r2, [r3, #28]
 800647c:	687b      	ldr	r3, [r7, #4]
 800647e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006480:	f043 0204 	orr.w	r2, r3, #4
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	645a      	str	r2, [r3, #68]	@ 0x44
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	2b00      	cmp	r3, #0
 800648c:	d003      	beq.n	8006496 <I2C_ITSlaveCplt+0x1fa>
 800648e:	68fb      	ldr	r3, [r7, #12]
 8006490:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8006494:	d105      	bne.n	80064a2 <I2C_ITSlaveCplt+0x206>
 8006496:	687b      	ldr	r3, [r7, #4]
 8006498:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800649a:	4619      	mov	r1, r3
 800649c:	6878      	ldr	r0, [r7, #4]
 800649e:	f000 f8b5 	bl	800660c <I2C_ITError>
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	2200      	movs	r2, #0
 80064a6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	2200      	movs	r2, #0
 80064ae:	635a      	str	r2, [r3, #52]	@ 0x34
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80064b4:	2b00      	cmp	r3, #0
 80064b6:	d010      	beq.n	80064da <I2C_ITSlaveCplt+0x23e>
 80064b8:	687b      	ldr	r3, [r7, #4]
 80064ba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80064bc:	4619      	mov	r1, r3
 80064be:	6878      	ldr	r0, [r7, #4]
 80064c0:	f000 f8a4 	bl	800660c <I2C_ITError>
 80064c4:	687b      	ldr	r3, [r7, #4]
 80064c6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80064ca:	b2db      	uxtb	r3, r3
 80064cc:	2b28      	cmp	r3, #40	@ 0x28
 80064ce:	d141      	bne.n	8006554 <I2C_ITSlaveCplt+0x2b8>
 80064d0:	6979      	ldr	r1, [r7, #20]
 80064d2:	6878      	ldr	r0, [r7, #4]
 80064d4:	f000 f846 	bl	8006564 <I2C_ITListenCplt>
 80064d8:	e03c      	b.n	8006554 <I2C_ITSlaveCplt+0x2b8>
 80064da:	687b      	ldr	r3, [r7, #4]
 80064dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80064de:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80064e2:	d014      	beq.n	800650e <I2C_ITSlaveCplt+0x272>
 80064e4:	6878      	ldr	r0, [r7, #4]
 80064e6:	f7ff fdb5 	bl	8006054 <I2C_ITSlaveSeqCplt>
 80064ea:	687b      	ldr	r3, [r7, #4]
 80064ec:	4a1c      	ldr	r2, [pc, #112]	@ (8006560 <I2C_ITSlaveCplt+0x2c4>)
 80064ee:	62da      	str	r2, [r3, #44]	@ 0x2c
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	2220      	movs	r2, #32
 80064f4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	2200      	movs	r2, #0
 80064fc:	631a      	str	r2, [r3, #48]	@ 0x30
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	2200      	movs	r2, #0
 8006502:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006506:	6878      	ldr	r0, [r7, #4]
 8006508:	f7fe ff9b 	bl	8005442 <HAL_I2C_ListenCpltCallback>
 800650c:	e022      	b.n	8006554 <I2C_ITSlaveCplt+0x2b8>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006514:	b2db      	uxtb	r3, r3
 8006516:	2b22      	cmp	r3, #34	@ 0x22
 8006518:	d10e      	bne.n	8006538 <I2C_ITSlaveCplt+0x29c>
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	2220      	movs	r2, #32
 800651e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006522:	687b      	ldr	r3, [r7, #4]
 8006524:	2200      	movs	r2, #0
 8006526:	631a      	str	r2, [r3, #48]	@ 0x30
 8006528:	687b      	ldr	r3, [r7, #4]
 800652a:	2200      	movs	r2, #0
 800652c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006530:	6878      	ldr	r0, [r7, #4]
 8006532:	f7fe ff6e 	bl	8005412 <HAL_I2C_SlaveRxCpltCallback>
 8006536:	e00d      	b.n	8006554 <I2C_ITSlaveCplt+0x2b8>
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	2220      	movs	r2, #32
 800653c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	2200      	movs	r2, #0
 8006544:	631a      	str	r2, [r3, #48]	@ 0x30
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	2200      	movs	r2, #0
 800654a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800654e:	6878      	ldr	r0, [r7, #4]
 8006550:	f7fe ff55 	bl	80053fe <HAL_I2C_SlaveTxCpltCallback>
 8006554:	bf00      	nop
 8006556:	3718      	adds	r7, #24
 8006558:	46bd      	mov	sp, r7
 800655a:	bd80      	pop	{r7, pc}
 800655c:	fe00e800 	.word	0xfe00e800
 8006560:	ffff0000 	.word	0xffff0000

08006564 <I2C_ITListenCplt>:
 8006564:	b580      	push	{r7, lr}
 8006566:	b082      	sub	sp, #8
 8006568:	af00      	add	r7, sp, #0
 800656a:	6078      	str	r0, [r7, #4]
 800656c:	6039      	str	r1, [r7, #0]
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	4a25      	ldr	r2, [pc, #148]	@ (8006608 <I2C_ITListenCplt+0xa4>)
 8006572:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006574:	687b      	ldr	r3, [r7, #4]
 8006576:	2200      	movs	r2, #0
 8006578:	631a      	str	r2, [r3, #48]	@ 0x30
 800657a:	687b      	ldr	r3, [r7, #4]
 800657c:	2220      	movs	r2, #32
 800657e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	2200      	movs	r2, #0
 8006586:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	2200      	movs	r2, #0
 800658e:	635a      	str	r2, [r3, #52]	@ 0x34
 8006590:	683b      	ldr	r3, [r7, #0]
 8006592:	f003 0304 	and.w	r3, r3, #4
 8006596:	2b00      	cmp	r3, #0
 8006598:	d022      	beq.n	80065e0 <I2C_ITListenCplt+0x7c>
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	681b      	ldr	r3, [r3, #0]
 800659e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80065a4:	b2d2      	uxtb	r2, r2
 80065a6:	701a      	strb	r2, [r3, #0]
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80065ac:	1c5a      	adds	r2, r3, #1
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	625a      	str	r2, [r3, #36]	@ 0x24
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d012      	beq.n	80065e0 <I2C_ITListenCplt+0x7c>
 80065ba:	687b      	ldr	r3, [r7, #4]
 80065bc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80065be:	3b01      	subs	r3, #1
 80065c0:	b29a      	uxth	r2, r3
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	851a      	strh	r2, [r3, #40]	@ 0x28
 80065c6:	687b      	ldr	r3, [r7, #4]
 80065c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80065ca:	b29b      	uxth	r3, r3
 80065cc:	3b01      	subs	r3, #1
 80065ce:	b29a      	uxth	r2, r3
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80065d8:	f043 0204 	orr.w	r2, r3, #4
 80065dc:	687b      	ldr	r3, [r7, #4]
 80065de:	645a      	str	r2, [r3, #68]	@ 0x44
 80065e0:	f248 0103 	movw	r1, #32771	@ 0x8003
 80065e4:	6878      	ldr	r0, [r7, #4]
 80065e6:	f000 fa83 	bl	8006af0 <I2C_Disable_IRQ>
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	681b      	ldr	r3, [r3, #0]
 80065ee:	2210      	movs	r2, #16
 80065f0:	61da      	str	r2, [r3, #28]
 80065f2:	687b      	ldr	r3, [r7, #4]
 80065f4:	2200      	movs	r2, #0
 80065f6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80065fa:	6878      	ldr	r0, [r7, #4]
 80065fc:	f7fe ff21 	bl	8005442 <HAL_I2C_ListenCpltCallback>
 8006600:	bf00      	nop
 8006602:	3708      	adds	r7, #8
 8006604:	46bd      	mov	sp, r7
 8006606:	bd80      	pop	{r7, pc}
 8006608:	ffff0000 	.word	0xffff0000

0800660c <I2C_ITError>:
 800660c:	b580      	push	{r7, lr}
 800660e:	b084      	sub	sp, #16
 8006610:	af00      	add	r7, sp, #0
 8006612:	6078      	str	r0, [r7, #4]
 8006614:	6039      	str	r1, [r7, #0]
 8006616:	687b      	ldr	r3, [r7, #4]
 8006618:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800661c:	73fb      	strb	r3, [r7, #15]
 800661e:	687b      	ldr	r3, [r7, #4]
 8006620:	2200      	movs	r2, #0
 8006622:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006626:	687b      	ldr	r3, [r7, #4]
 8006628:	4a6d      	ldr	r2, [pc, #436]	@ (80067e0 <I2C_ITError+0x1d4>)
 800662a:	62da      	str	r2, [r3, #44]	@ 0x2c
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	2200      	movs	r2, #0
 8006630:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8006632:	687b      	ldr	r3, [r7, #4]
 8006634:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8006636:	683b      	ldr	r3, [r7, #0]
 8006638:	431a      	orrs	r2, r3
 800663a:	687b      	ldr	r3, [r7, #4]
 800663c:	645a      	str	r2, [r3, #68]	@ 0x44
 800663e:	7bfb      	ldrb	r3, [r7, #15]
 8006640:	2b28      	cmp	r3, #40	@ 0x28
 8006642:	d005      	beq.n	8006650 <I2C_ITError+0x44>
 8006644:	7bfb      	ldrb	r3, [r7, #15]
 8006646:	2b29      	cmp	r3, #41	@ 0x29
 8006648:	d002      	beq.n	8006650 <I2C_ITError+0x44>
 800664a:	7bfb      	ldrb	r3, [r7, #15]
 800664c:	2b2a      	cmp	r3, #42	@ 0x2a
 800664e:	d10b      	bne.n	8006668 <I2C_ITError+0x5c>
 8006650:	2103      	movs	r1, #3
 8006652:	6878      	ldr	r0, [r7, #4]
 8006654:	f000 fa4c 	bl	8006af0 <I2C_Disable_IRQ>
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	2228      	movs	r2, #40	@ 0x28
 800665c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	4a60      	ldr	r2, [pc, #384]	@ (80067e4 <I2C_ITError+0x1d8>)
 8006664:	635a      	str	r2, [r3, #52]	@ 0x34
 8006666:	e030      	b.n	80066ca <I2C_ITError+0xbe>
 8006668:	f248 0103 	movw	r1, #32771	@ 0x8003
 800666c:	6878      	ldr	r0, [r7, #4]
 800666e:	f000 fa3f 	bl	8006af0 <I2C_Disable_IRQ>
 8006672:	6878      	ldr	r0, [r7, #4]
 8006674:	f000 f8e1 	bl	800683a <I2C_Flush_TXDR>
 8006678:	687b      	ldr	r3, [r7, #4]
 800667a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800667e:	b2db      	uxtb	r3, r3
 8006680:	2b60      	cmp	r3, #96	@ 0x60
 8006682:	d01f      	beq.n	80066c4 <I2C_ITError+0xb8>
 8006684:	687b      	ldr	r3, [r7, #4]
 8006686:	2220      	movs	r2, #32
 8006688:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	681b      	ldr	r3, [r3, #0]
 8006690:	699b      	ldr	r3, [r3, #24]
 8006692:	f003 0320 	and.w	r3, r3, #32
 8006696:	2b20      	cmp	r3, #32
 8006698:	d114      	bne.n	80066c4 <I2C_ITError+0xb8>
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	699b      	ldr	r3, [r3, #24]
 80066a0:	f003 0310 	and.w	r3, r3, #16
 80066a4:	2b10      	cmp	r3, #16
 80066a6:	d109      	bne.n	80066bc <I2C_ITError+0xb0>
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	681b      	ldr	r3, [r3, #0]
 80066ac:	2210      	movs	r2, #16
 80066ae:	61da      	str	r2, [r3, #28]
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80066b4:	f043 0204 	orr.w	r2, r3, #4
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	645a      	str	r2, [r3, #68]	@ 0x44
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	681b      	ldr	r3, [r3, #0]
 80066c0:	2220      	movs	r2, #32
 80066c2:	61da      	str	r2, [r3, #28]
 80066c4:	687b      	ldr	r3, [r7, #4]
 80066c6:	2200      	movs	r2, #0
 80066c8:	635a      	str	r2, [r3, #52]	@ 0x34
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066ce:	60bb      	str	r3, [r7, #8]
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80066d4:	2b00      	cmp	r3, #0
 80066d6:	d039      	beq.n	800674c <I2C_ITError+0x140>
 80066d8:	68bb      	ldr	r3, [r7, #8]
 80066da:	2b11      	cmp	r3, #17
 80066dc:	d002      	beq.n	80066e4 <I2C_ITError+0xd8>
 80066de:	68bb      	ldr	r3, [r7, #8]
 80066e0:	2b21      	cmp	r3, #33	@ 0x21
 80066e2:	d133      	bne.n	800674c <I2C_ITError+0x140>
 80066e4:	687b      	ldr	r3, [r7, #4]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80066ee:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 80066f2:	d107      	bne.n	8006704 <I2C_ITError+0xf8>
 80066f4:	687b      	ldr	r3, [r7, #4]
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	681a      	ldr	r2, [r3, #0]
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006702:	601a      	str	r2, [r3, #0]
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006708:	4618      	mov	r0, r3
 800670a:	f7fe f9df 	bl	8004acc <HAL_DMA_GetState>
 800670e:	4603      	mov	r3, r0
 8006710:	2b01      	cmp	r3, #1
 8006712:	d017      	beq.n	8006744 <I2C_ITError+0x138>
 8006714:	687b      	ldr	r3, [r7, #4]
 8006716:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006718:	4a33      	ldr	r2, [pc, #204]	@ (80067e8 <I2C_ITError+0x1dc>)
 800671a:	639a      	str	r2, [r3, #56]	@ 0x38
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	2200      	movs	r2, #0
 8006720:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006728:	4618      	mov	r0, r3
 800672a:	f7fe f8b9 	bl	80048a0 <HAL_DMA_Abort_IT>
 800672e:	4603      	mov	r3, r0
 8006730:	2b00      	cmp	r3, #0
 8006732:	d04d      	beq.n	80067d0 <I2C_ITError+0x1c4>
 8006734:	687b      	ldr	r3, [r7, #4]
 8006736:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006738:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800673a:	687a      	ldr	r2, [r7, #4]
 800673c:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800673e:	4610      	mov	r0, r2
 8006740:	4798      	blx	r3
 8006742:	e045      	b.n	80067d0 <I2C_ITError+0x1c4>
 8006744:	6878      	ldr	r0, [r7, #4]
 8006746:	f000 f851 	bl	80067ec <I2C_TreatErrorCallback>
 800674a:	e041      	b.n	80067d0 <I2C_ITError+0x1c4>
 800674c:	687b      	ldr	r3, [r7, #4]
 800674e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006750:	2b00      	cmp	r3, #0
 8006752:	d039      	beq.n	80067c8 <I2C_ITError+0x1bc>
 8006754:	68bb      	ldr	r3, [r7, #8]
 8006756:	2b12      	cmp	r3, #18
 8006758:	d002      	beq.n	8006760 <I2C_ITError+0x154>
 800675a:	68bb      	ldr	r3, [r7, #8]
 800675c:	2b22      	cmp	r3, #34	@ 0x22
 800675e:	d133      	bne.n	80067c8 <I2C_ITError+0x1bc>
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	681b      	ldr	r3, [r3, #0]
 8006766:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800676a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800676e:	d107      	bne.n	8006780 <I2C_ITError+0x174>
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	681b      	ldr	r3, [r3, #0]
 8006774:	681a      	ldr	r2, [r3, #0]
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	681b      	ldr	r3, [r3, #0]
 800677a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800677e:	601a      	str	r2, [r3, #0]
 8006780:	687b      	ldr	r3, [r7, #4]
 8006782:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006784:	4618      	mov	r0, r3
 8006786:	f7fe f9a1 	bl	8004acc <HAL_DMA_GetState>
 800678a:	4603      	mov	r3, r0
 800678c:	2b01      	cmp	r3, #1
 800678e:	d017      	beq.n	80067c0 <I2C_ITError+0x1b4>
 8006790:	687b      	ldr	r3, [r7, #4]
 8006792:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006794:	4a14      	ldr	r2, [pc, #80]	@ (80067e8 <I2C_ITError+0x1dc>)
 8006796:	639a      	str	r2, [r3, #56]	@ 0x38
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	2200      	movs	r2, #0
 800679c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80067a4:	4618      	mov	r0, r3
 80067a6:	f7fe f87b 	bl	80048a0 <HAL_DMA_Abort_IT>
 80067aa:	4603      	mov	r3, r0
 80067ac:	2b00      	cmp	r3, #0
 80067ae:	d011      	beq.n	80067d4 <I2C_ITError+0x1c8>
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80067b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80067b6:	687a      	ldr	r2, [r7, #4]
 80067b8:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80067ba:	4610      	mov	r0, r2
 80067bc:	4798      	blx	r3
 80067be:	e009      	b.n	80067d4 <I2C_ITError+0x1c8>
 80067c0:	6878      	ldr	r0, [r7, #4]
 80067c2:	f000 f813 	bl	80067ec <I2C_TreatErrorCallback>
 80067c6:	e005      	b.n	80067d4 <I2C_ITError+0x1c8>
 80067c8:	6878      	ldr	r0, [r7, #4]
 80067ca:	f000 f80f 	bl	80067ec <I2C_TreatErrorCallback>
 80067ce:	e002      	b.n	80067d6 <I2C_ITError+0x1ca>
 80067d0:	bf00      	nop
 80067d2:	e000      	b.n	80067d6 <I2C_ITError+0x1ca>
 80067d4:	bf00      	nop
 80067d6:	bf00      	nop
 80067d8:	3710      	adds	r7, #16
 80067da:	46bd      	mov	sp, r7
 80067dc:	bd80      	pop	{r7, pc}
 80067de:	bf00      	nop
 80067e0:	ffff0000 	.word	0xffff0000
 80067e4:	08005711 	.word	0x08005711
 80067e8:	08006947 	.word	0x08006947

080067ec <I2C_TreatErrorCallback>:
 80067ec:	b580      	push	{r7, lr}
 80067ee:	b082      	sub	sp, #8
 80067f0:	af00      	add	r7, sp, #0
 80067f2:	6078      	str	r0, [r7, #4]
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80067fa:	b2db      	uxtb	r3, r3
 80067fc:	2b60      	cmp	r3, #96	@ 0x60
 80067fe:	d10e      	bne.n	800681e <I2C_TreatErrorCallback+0x32>
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	2220      	movs	r2, #32
 8006804:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006808:	687b      	ldr	r3, [r7, #4]
 800680a:	2200      	movs	r2, #0
 800680c:	631a      	str	r2, [r3, #48]	@ 0x30
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	2200      	movs	r2, #0
 8006812:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006816:	6878      	ldr	r0, [r7, #4]
 8006818:	f7fe fe3b 	bl	8005492 <HAL_I2C_AbortCpltCallback>
 800681c:	e009      	b.n	8006832 <I2C_TreatErrorCallback+0x46>
 800681e:	687b      	ldr	r3, [r7, #4]
 8006820:	2200      	movs	r2, #0
 8006822:	631a      	str	r2, [r3, #48]	@ 0x30
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	2200      	movs	r2, #0
 8006828:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800682c:	6878      	ldr	r0, [r7, #4]
 800682e:	f7fe fe26 	bl	800547e <HAL_I2C_ErrorCallback>
 8006832:	bf00      	nop
 8006834:	3708      	adds	r7, #8
 8006836:	46bd      	mov	sp, r7
 8006838:	bd80      	pop	{r7, pc}

0800683a <I2C_Flush_TXDR>:
 800683a:	b480      	push	{r7}
 800683c:	b083      	sub	sp, #12
 800683e:	af00      	add	r7, sp, #0
 8006840:	6078      	str	r0, [r7, #4]
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	681b      	ldr	r3, [r3, #0]
 8006846:	699b      	ldr	r3, [r3, #24]
 8006848:	f003 0302 	and.w	r3, r3, #2
 800684c:	2b02      	cmp	r3, #2
 800684e:	d103      	bne.n	8006858 <I2C_Flush_TXDR+0x1e>
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	681b      	ldr	r3, [r3, #0]
 8006854:	2200      	movs	r2, #0
 8006856:	629a      	str	r2, [r3, #40]	@ 0x28
 8006858:	687b      	ldr	r3, [r7, #4]
 800685a:	681b      	ldr	r3, [r3, #0]
 800685c:	699b      	ldr	r3, [r3, #24]
 800685e:	f003 0301 	and.w	r3, r3, #1
 8006862:	2b01      	cmp	r3, #1
 8006864:	d007      	beq.n	8006876 <I2C_Flush_TXDR+0x3c>
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	699a      	ldr	r2, [r3, #24]
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	f042 0201 	orr.w	r2, r2, #1
 8006874:	619a      	str	r2, [r3, #24]
 8006876:	bf00      	nop
 8006878:	370c      	adds	r7, #12
 800687a:	46bd      	mov	sp, r7
 800687c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006880:	4770      	bx	lr

08006882 <I2C_DMAMasterTransmitCplt>:
 8006882:	b580      	push	{r7, lr}
 8006884:	b084      	sub	sp, #16
 8006886:	af00      	add	r7, sp, #0
 8006888:	6078      	str	r0, [r7, #4]
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800688e:	60fb      	str	r3, [r7, #12]
 8006890:	68fb      	ldr	r3, [r7, #12]
 8006892:	681b      	ldr	r3, [r3, #0]
 8006894:	681a      	ldr	r2, [r3, #0]
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	681b      	ldr	r3, [r3, #0]
 800689a:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 800689e:	601a      	str	r2, [r3, #0]
 80068a0:	68fb      	ldr	r3, [r7, #12]
 80068a2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80068a4:	b29b      	uxth	r3, r3
 80068a6:	2b00      	cmp	r3, #0
 80068a8:	d104      	bne.n	80068b4 <I2C_DMAMasterTransmitCplt+0x32>
 80068aa:	2120      	movs	r1, #32
 80068ac:	68f8      	ldr	r0, [r7, #12]
 80068ae:	f000 f89b 	bl	80069e8 <I2C_Enable_IRQ>
 80068b2:	e02d      	b.n	8006910 <I2C_DMAMasterTransmitCplt+0x8e>
 80068b4:	68fb      	ldr	r3, [r7, #12]
 80068b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80068b8:	68fa      	ldr	r2, [r7, #12]
 80068ba:	8d12      	ldrh	r2, [r2, #40]	@ 0x28
 80068bc:	441a      	add	r2, r3
 80068be:	68fb      	ldr	r3, [r7, #12]
 80068c0:	625a      	str	r2, [r3, #36]	@ 0x24
 80068c2:	68fb      	ldr	r3, [r7, #12]
 80068c4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80068c6:	b29b      	uxth	r3, r3
 80068c8:	2bff      	cmp	r3, #255	@ 0xff
 80068ca:	d903      	bls.n	80068d4 <I2C_DMAMasterTransmitCplt+0x52>
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	22ff      	movs	r2, #255	@ 0xff
 80068d0:	851a      	strh	r2, [r3, #40]	@ 0x28
 80068d2:	e004      	b.n	80068de <I2C_DMAMasterTransmitCplt+0x5c>
 80068d4:	68fb      	ldr	r3, [r7, #12]
 80068d6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80068d8:	b29a      	uxth	r2, r3
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	851a      	strh	r2, [r3, #40]	@ 0x28
 80068de:	68fb      	ldr	r3, [r7, #12]
 80068e0:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 80068e2:	68fb      	ldr	r3, [r7, #12]
 80068e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80068e6:	4619      	mov	r1, r3
 80068e8:	68fb      	ldr	r3, [r7, #12]
 80068ea:	681b      	ldr	r3, [r3, #0]
 80068ec:	3328      	adds	r3, #40	@ 0x28
 80068ee:	461a      	mov	r2, r3
 80068f0:	68fb      	ldr	r3, [r7, #12]
 80068f2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80068f4:	f7fd ff00 	bl	80046f8 <HAL_DMA_Start_IT>
 80068f8:	4603      	mov	r3, r0
 80068fa:	2b00      	cmp	r3, #0
 80068fc:	d004      	beq.n	8006908 <I2C_DMAMasterTransmitCplt+0x86>
 80068fe:	2110      	movs	r1, #16
 8006900:	68f8      	ldr	r0, [r7, #12]
 8006902:	f7ff fe83 	bl	800660c <I2C_ITError>
 8006906:	e003      	b.n	8006910 <I2C_DMAMasterTransmitCplt+0x8e>
 8006908:	2140      	movs	r1, #64	@ 0x40
 800690a:	68f8      	ldr	r0, [r7, #12]
 800690c:	f000 f86c 	bl	80069e8 <I2C_Enable_IRQ>
 8006910:	bf00      	nop
 8006912:	3710      	adds	r7, #16
 8006914:	46bd      	mov	sp, r7
 8006916:	bd80      	pop	{r7, pc}

08006918 <I2C_DMAError>:
 8006918:	b580      	push	{r7, lr}
 800691a:	b084      	sub	sp, #16
 800691c:	af00      	add	r7, sp, #0
 800691e:	6078      	str	r0, [r7, #4]
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006924:	60fb      	str	r3, [r7, #12]
 8006926:	68fb      	ldr	r3, [r7, #12]
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	685a      	ldr	r2, [r3, #4]
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8006934:	605a      	str	r2, [r3, #4]
 8006936:	2110      	movs	r1, #16
 8006938:	68f8      	ldr	r0, [r7, #12]
 800693a:	f7ff fe67 	bl	800660c <I2C_ITError>
 800693e:	bf00      	nop
 8006940:	3710      	adds	r7, #16
 8006942:	46bd      	mov	sp, r7
 8006944:	bd80      	pop	{r7, pc}

08006946 <I2C_DMAAbort>:
 8006946:	b580      	push	{r7, lr}
 8006948:	b084      	sub	sp, #16
 800694a:	af00      	add	r7, sp, #0
 800694c:	6078      	str	r0, [r7, #4]
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006952:	60fb      	str	r3, [r7, #12]
 8006954:	68fb      	ldr	r3, [r7, #12]
 8006956:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006958:	2b00      	cmp	r3, #0
 800695a:	d003      	beq.n	8006964 <I2C_DMAAbort+0x1e>
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006960:	2200      	movs	r2, #0
 8006962:	639a      	str	r2, [r3, #56]	@ 0x38
 8006964:	68fb      	ldr	r3, [r7, #12]
 8006966:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006968:	2b00      	cmp	r3, #0
 800696a:	d003      	beq.n	8006974 <I2C_DMAAbort+0x2e>
 800696c:	68fb      	ldr	r3, [r7, #12]
 800696e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006970:	2200      	movs	r2, #0
 8006972:	639a      	str	r2, [r3, #56]	@ 0x38
 8006974:	68f8      	ldr	r0, [r7, #12]
 8006976:	f7ff ff39 	bl	80067ec <I2C_TreatErrorCallback>
 800697a:	bf00      	nop
 800697c:	3710      	adds	r7, #16
 800697e:	46bd      	mov	sp, r7
 8006980:	bd80      	pop	{r7, pc}
	...

08006984 <I2C_TransferConfig>:
 8006984:	b480      	push	{r7}
 8006986:	b087      	sub	sp, #28
 8006988:	af00      	add	r7, sp, #0
 800698a:	60f8      	str	r0, [r7, #12]
 800698c:	607b      	str	r3, [r7, #4]
 800698e:	460b      	mov	r3, r1
 8006990:	817b      	strh	r3, [r7, #10]
 8006992:	4613      	mov	r3, r2
 8006994:	727b      	strb	r3, [r7, #9]
 8006996:	897b      	ldrh	r3, [r7, #10]
 8006998:	f3c3 0209 	ubfx	r2, r3, #0, #10
 800699c:	7a7b      	ldrb	r3, [r7, #9]
 800699e:	041b      	lsls	r3, r3, #16
 80069a0:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80069a4:	431a      	orrs	r2, r3
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	431a      	orrs	r2, r3
 80069aa:	6a3b      	ldr	r3, [r7, #32]
 80069ac:	4313      	orrs	r3, r2
 80069ae:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80069b2:	617b      	str	r3, [r7, #20]
 80069b4:	68fb      	ldr	r3, [r7, #12]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	685a      	ldr	r2, [r3, #4]
 80069ba:	6a3b      	ldr	r3, [r7, #32]
 80069bc:	0d5b      	lsrs	r3, r3, #21
 80069be:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 80069c2:	4b08      	ldr	r3, [pc, #32]	@ (80069e4 <I2C_TransferConfig+0x60>)
 80069c4:	430b      	orrs	r3, r1
 80069c6:	43db      	mvns	r3, r3
 80069c8:	ea02 0103 	and.w	r1, r2, r3
 80069cc:	68fb      	ldr	r3, [r7, #12]
 80069ce:	681b      	ldr	r3, [r3, #0]
 80069d0:	697a      	ldr	r2, [r7, #20]
 80069d2:	430a      	orrs	r2, r1
 80069d4:	605a      	str	r2, [r3, #4]
 80069d6:	bf00      	nop
 80069d8:	371c      	adds	r7, #28
 80069da:	46bd      	mov	sp, r7
 80069dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069e0:	4770      	bx	lr
 80069e2:	bf00      	nop
 80069e4:	03ff63ff 	.word	0x03ff63ff

080069e8 <I2C_Enable_IRQ>:
 80069e8:	b480      	push	{r7}
 80069ea:	b085      	sub	sp, #20
 80069ec:	af00      	add	r7, sp, #0
 80069ee:	6078      	str	r0, [r7, #4]
 80069f0:	460b      	mov	r3, r1
 80069f2:	807b      	strh	r3, [r7, #2]
 80069f4:	2300      	movs	r3, #0
 80069f6:	60fb      	str	r3, [r7, #12]
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80069fc:	4a39      	ldr	r2, [pc, #228]	@ (8006ae4 <I2C_Enable_IRQ+0xfc>)
 80069fe:	4293      	cmp	r3, r2
 8006a00:	d032      	beq.n	8006a68 <I2C_Enable_IRQ+0x80>
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a06:	4a38      	ldr	r2, [pc, #224]	@ (8006ae8 <I2C_Enable_IRQ+0x100>)
 8006a08:	4293      	cmp	r3, r2
 8006a0a:	d02d      	beq.n	8006a68 <I2C_Enable_IRQ+0x80>
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a10:	4a36      	ldr	r2, [pc, #216]	@ (8006aec <I2C_Enable_IRQ+0x104>)
 8006a12:	4293      	cmp	r3, r2
 8006a14:	d028      	beq.n	8006a68 <I2C_Enable_IRQ+0x80>
 8006a16:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8006a1a:	2b00      	cmp	r3, #0
 8006a1c:	da03      	bge.n	8006a26 <I2C_Enable_IRQ+0x3e>
 8006a1e:	68fb      	ldr	r3, [r7, #12]
 8006a20:	f043 03b8 	orr.w	r3, r3, #184	@ 0xb8
 8006a24:	60fb      	str	r3, [r7, #12]
 8006a26:	887b      	ldrh	r3, [r7, #2]
 8006a28:	f003 0301 	and.w	r3, r3, #1
 8006a2c:	2b00      	cmp	r3, #0
 8006a2e:	d003      	beq.n	8006a38 <I2C_Enable_IRQ+0x50>
 8006a30:	68fb      	ldr	r3, [r7, #12]
 8006a32:	f043 03f2 	orr.w	r3, r3, #242	@ 0xf2
 8006a36:	60fb      	str	r3, [r7, #12]
 8006a38:	887b      	ldrh	r3, [r7, #2]
 8006a3a:	f003 0302 	and.w	r3, r3, #2
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d003      	beq.n	8006a4a <I2C_Enable_IRQ+0x62>
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	f043 03f4 	orr.w	r3, r3, #244	@ 0xf4
 8006a48:	60fb      	str	r3, [r7, #12]
 8006a4a:	887b      	ldrh	r3, [r7, #2]
 8006a4c:	2b10      	cmp	r3, #16
 8006a4e:	d103      	bne.n	8006a58 <I2C_Enable_IRQ+0x70>
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 8006a56:	60fb      	str	r3, [r7, #12]
 8006a58:	887b      	ldrh	r3, [r7, #2]
 8006a5a:	2b20      	cmp	r3, #32
 8006a5c:	d133      	bne.n	8006ac6 <I2C_Enable_IRQ+0xde>
 8006a5e:	68fb      	ldr	r3, [r7, #12]
 8006a60:	f043 0320 	orr.w	r3, r3, #32
 8006a64:	60fb      	str	r3, [r7, #12]
 8006a66:	e02e      	b.n	8006ac6 <I2C_Enable_IRQ+0xde>
 8006a68:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8006a6c:	2b00      	cmp	r3, #0
 8006a6e:	da03      	bge.n	8006a78 <I2C_Enable_IRQ+0x90>
 8006a70:	68fb      	ldr	r3, [r7, #12]
 8006a72:	f043 03b8 	orr.w	r3, r3, #184	@ 0xb8
 8006a76:	60fb      	str	r3, [r7, #12]
 8006a78:	887b      	ldrh	r3, [r7, #2]
 8006a7a:	f003 0301 	and.w	r3, r3, #1
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	d003      	beq.n	8006a8a <I2C_Enable_IRQ+0xa2>
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	f043 03f2 	orr.w	r3, r3, #242	@ 0xf2
 8006a88:	60fb      	str	r3, [r7, #12]
 8006a8a:	887b      	ldrh	r3, [r7, #2]
 8006a8c:	f003 0302 	and.w	r3, r3, #2
 8006a90:	2b00      	cmp	r3, #0
 8006a92:	d003      	beq.n	8006a9c <I2C_Enable_IRQ+0xb4>
 8006a94:	68fb      	ldr	r3, [r7, #12]
 8006a96:	f043 03f4 	orr.w	r3, r3, #244	@ 0xf4
 8006a9a:	60fb      	str	r3, [r7, #12]
 8006a9c:	887b      	ldrh	r3, [r7, #2]
 8006a9e:	2b10      	cmp	r3, #16
 8006aa0:	d103      	bne.n	8006aaa <I2C_Enable_IRQ+0xc2>
 8006aa2:	68fb      	ldr	r3, [r7, #12]
 8006aa4:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 8006aa8:	60fb      	str	r3, [r7, #12]
 8006aaa:	887b      	ldrh	r3, [r7, #2]
 8006aac:	2b20      	cmp	r3, #32
 8006aae:	d103      	bne.n	8006ab8 <I2C_Enable_IRQ+0xd0>
 8006ab0:	68fb      	ldr	r3, [r7, #12]
 8006ab2:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 8006ab6:	60fb      	str	r3, [r7, #12]
 8006ab8:	887b      	ldrh	r3, [r7, #2]
 8006aba:	2b40      	cmp	r3, #64	@ 0x40
 8006abc:	d103      	bne.n	8006ac6 <I2C_Enable_IRQ+0xde>
 8006abe:	68fb      	ldr	r3, [r7, #12]
 8006ac0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006ac4:	60fb      	str	r3, [r7, #12]
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	681b      	ldr	r3, [r3, #0]
 8006aca:	6819      	ldr	r1, [r3, #0]
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	681b      	ldr	r3, [r3, #0]
 8006ad0:	68fa      	ldr	r2, [r7, #12]
 8006ad2:	430a      	orrs	r2, r1
 8006ad4:	601a      	str	r2, [r3, #0]
 8006ad6:	bf00      	nop
 8006ad8:	3714      	adds	r7, #20
 8006ada:	46bd      	mov	sp, r7
 8006adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ae0:	4770      	bx	lr
 8006ae2:	bf00      	nop
 8006ae4:	08005903 	.word	0x08005903
 8006ae8:	08005d25 	.word	0x08005d25
 8006aec:	08005ad9 	.word	0x08005ad9

08006af0 <I2C_Disable_IRQ>:
 8006af0:	b480      	push	{r7}
 8006af2:	b085      	sub	sp, #20
 8006af4:	af00      	add	r7, sp, #0
 8006af6:	6078      	str	r0, [r7, #4]
 8006af8:	460b      	mov	r3, r1
 8006afa:	807b      	strh	r3, [r7, #2]
 8006afc:	2300      	movs	r3, #0
 8006afe:	60fb      	str	r3, [r7, #12]
 8006b00:	887b      	ldrh	r3, [r7, #2]
 8006b02:	f003 0301 	and.w	r3, r3, #1
 8006b06:	2b00      	cmp	r3, #0
 8006b08:	d00f      	beq.n	8006b2a <I2C_Disable_IRQ+0x3a>
 8006b0a:	68fb      	ldr	r3, [r7, #12]
 8006b0c:	f043 0342 	orr.w	r3, r3, #66	@ 0x42
 8006b10:	60fb      	str	r3, [r7, #12]
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006b18:	b2db      	uxtb	r3, r3
 8006b1a:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8006b1e:	2b28      	cmp	r3, #40	@ 0x28
 8006b20:	d003      	beq.n	8006b2a <I2C_Disable_IRQ+0x3a>
 8006b22:	68fb      	ldr	r3, [r7, #12]
 8006b24:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8006b28:	60fb      	str	r3, [r7, #12]
 8006b2a:	887b      	ldrh	r3, [r7, #2]
 8006b2c:	f003 0302 	and.w	r3, r3, #2
 8006b30:	2b00      	cmp	r3, #0
 8006b32:	d00f      	beq.n	8006b54 <I2C_Disable_IRQ+0x64>
 8006b34:	68fb      	ldr	r3, [r7, #12]
 8006b36:	f043 0344 	orr.w	r3, r3, #68	@ 0x44
 8006b3a:	60fb      	str	r3, [r7, #12]
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006b42:	b2db      	uxtb	r3, r3
 8006b44:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 8006b48:	2b28      	cmp	r3, #40	@ 0x28
 8006b4a:	d003      	beq.n	8006b54 <I2C_Disable_IRQ+0x64>
 8006b4c:	68fb      	ldr	r3, [r7, #12]
 8006b4e:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 8006b52:	60fb      	str	r3, [r7, #12]
 8006b54:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	da03      	bge.n	8006b64 <I2C_Disable_IRQ+0x74>
 8006b5c:	68fb      	ldr	r3, [r7, #12]
 8006b5e:	f043 03b8 	orr.w	r3, r3, #184	@ 0xb8
 8006b62:	60fb      	str	r3, [r7, #12]
 8006b64:	887b      	ldrh	r3, [r7, #2]
 8006b66:	2b10      	cmp	r3, #16
 8006b68:	d103      	bne.n	8006b72 <I2C_Disable_IRQ+0x82>
 8006b6a:	68fb      	ldr	r3, [r7, #12]
 8006b6c:	f043 0390 	orr.w	r3, r3, #144	@ 0x90
 8006b70:	60fb      	str	r3, [r7, #12]
 8006b72:	887b      	ldrh	r3, [r7, #2]
 8006b74:	2b20      	cmp	r3, #32
 8006b76:	d103      	bne.n	8006b80 <I2C_Disable_IRQ+0x90>
 8006b78:	68fb      	ldr	r3, [r7, #12]
 8006b7a:	f043 0320 	orr.w	r3, r3, #32
 8006b7e:	60fb      	str	r3, [r7, #12]
 8006b80:	887b      	ldrh	r3, [r7, #2]
 8006b82:	2b40      	cmp	r3, #64	@ 0x40
 8006b84:	d103      	bne.n	8006b8e <I2C_Disable_IRQ+0x9e>
 8006b86:	68fb      	ldr	r3, [r7, #12]
 8006b88:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8006b8c:	60fb      	str	r3, [r7, #12]
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	6819      	ldr	r1, [r3, #0]
 8006b94:	68fb      	ldr	r3, [r7, #12]
 8006b96:	43da      	mvns	r2, r3
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	400a      	ands	r2, r1
 8006b9e:	601a      	str	r2, [r3, #0]
 8006ba0:	bf00      	nop
 8006ba2:	3714      	adds	r7, #20
 8006ba4:	46bd      	mov	sp, r7
 8006ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006baa:	4770      	bx	lr

08006bac <HAL_I2CEx_ConfigAnalogFilter>:
 8006bac:	b480      	push	{r7}
 8006bae:	b083      	sub	sp, #12
 8006bb0:	af00      	add	r7, sp, #0
 8006bb2:	6078      	str	r0, [r7, #4]
 8006bb4:	6039      	str	r1, [r7, #0]
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006bbc:	b2db      	uxtb	r3, r3
 8006bbe:	2b20      	cmp	r3, #32
 8006bc0:	d138      	bne.n	8006c34 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8006bc8:	2b01      	cmp	r3, #1
 8006bca:	d101      	bne.n	8006bd0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8006bcc:	2302      	movs	r3, #2
 8006bce:	e032      	b.n	8006c36 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	2201      	movs	r2, #1
 8006bd4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	2224      	movs	r2, #36	@ 0x24
 8006bdc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	681a      	ldr	r2, [r3, #0]
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	681b      	ldr	r3, [r3, #0]
 8006bea:	f022 0201 	bic.w	r2, r2, #1
 8006bee:	601a      	str	r2, [r3, #0]
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	681b      	ldr	r3, [r3, #0]
 8006bf4:	681a      	ldr	r2, [r3, #0]
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	681b      	ldr	r3, [r3, #0]
 8006bfa:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8006bfe:	601a      	str	r2, [r3, #0]
 8006c00:	687b      	ldr	r3, [r7, #4]
 8006c02:	681b      	ldr	r3, [r3, #0]
 8006c04:	6819      	ldr	r1, [r3, #0]
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	681b      	ldr	r3, [r3, #0]
 8006c0a:	683a      	ldr	r2, [r7, #0]
 8006c0c:	430a      	orrs	r2, r1
 8006c0e:	601a      	str	r2, [r3, #0]
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	681b      	ldr	r3, [r3, #0]
 8006c14:	681a      	ldr	r2, [r3, #0]
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	681b      	ldr	r3, [r3, #0]
 8006c1a:	f042 0201 	orr.w	r2, r2, #1
 8006c1e:	601a      	str	r2, [r3, #0]
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	2220      	movs	r2, #32
 8006c24:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	2200      	movs	r2, #0
 8006c2c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006c30:	2300      	movs	r3, #0
 8006c32:	e000      	b.n	8006c36 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8006c34:	2302      	movs	r3, #2
 8006c36:	4618      	mov	r0, r3
 8006c38:	370c      	adds	r7, #12
 8006c3a:	46bd      	mov	sp, r7
 8006c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c40:	4770      	bx	lr

08006c42 <HAL_I2CEx_ConfigDigitalFilter>:
 8006c42:	b480      	push	{r7}
 8006c44:	b085      	sub	sp, #20
 8006c46:	af00      	add	r7, sp, #0
 8006c48:	6078      	str	r0, [r7, #4]
 8006c4a:	6039      	str	r1, [r7, #0]
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006c52:	b2db      	uxtb	r3, r3
 8006c54:	2b20      	cmp	r3, #32
 8006c56:	d139      	bne.n	8006ccc <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8006c5e:	2b01      	cmp	r3, #1
 8006c60:	d101      	bne.n	8006c66 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8006c62:	2302      	movs	r3, #2
 8006c64:	e033      	b.n	8006cce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	2201      	movs	r2, #1
 8006c6a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	2224      	movs	r2, #36	@ 0x24
 8006c72:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	681b      	ldr	r3, [r3, #0]
 8006c7a:	681a      	ldr	r2, [r3, #0]
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	f022 0201 	bic.w	r2, r2, #1
 8006c84:	601a      	str	r2, [r3, #0]
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	681b      	ldr	r3, [r3, #0]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	60fb      	str	r3, [r7, #12]
 8006c8e:	68fb      	ldr	r3, [r7, #12]
 8006c90:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8006c94:	60fb      	str	r3, [r7, #12]
 8006c96:	683b      	ldr	r3, [r7, #0]
 8006c98:	021b      	lsls	r3, r3, #8
 8006c9a:	68fa      	ldr	r2, [r7, #12]
 8006c9c:	4313      	orrs	r3, r2
 8006c9e:	60fb      	str	r3, [r7, #12]
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	68fa      	ldr	r2, [r7, #12]
 8006ca6:	601a      	str	r2, [r3, #0]
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	681b      	ldr	r3, [r3, #0]
 8006cac:	681a      	ldr	r2, [r3, #0]
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	681b      	ldr	r3, [r3, #0]
 8006cb2:	f042 0201 	orr.w	r2, r2, #1
 8006cb6:	601a      	str	r2, [r3, #0]
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	2220      	movs	r2, #32
 8006cbc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	2200      	movs	r2, #0
 8006cc4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006cc8:	2300      	movs	r3, #0
 8006cca:	e000      	b.n	8006cce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8006ccc:	2302      	movs	r3, #2
 8006cce:	4618      	mov	r0, r3
 8006cd0:	3714      	adds	r7, #20
 8006cd2:	46bd      	mov	sp, r7
 8006cd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cd8:	4770      	bx	lr
	...

08006cdc <HAL_PWREx_ControlVoltageScaling>:
 8006cdc:	b480      	push	{r7}
 8006cde:	b085      	sub	sp, #20
 8006ce0:	af00      	add	r7, sp, #0
 8006ce2:	6078      	str	r0, [r7, #4]
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	2b00      	cmp	r3, #0
 8006ce8:	d141      	bne.n	8006d6e <HAL_PWREx_ControlVoltageScaling+0x92>
 8006cea:	4b4b      	ldr	r3, [pc, #300]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006cec:	681b      	ldr	r3, [r3, #0]
 8006cee:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8006cf2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006cf6:	d131      	bne.n	8006d5c <HAL_PWREx_ControlVoltageScaling+0x80>
 8006cf8:	4b47      	ldr	r3, [pc, #284]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006cfa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006cfe:	4a46      	ldr	r2, [pc, #280]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d00:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006d04:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006d08:	4b43      	ldr	r3, [pc, #268]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d0a:	681b      	ldr	r3, [r3, #0]
 8006d0c:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006d10:	4a41      	ldr	r2, [pc, #260]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d12:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8006d16:	6013      	str	r3, [r2, #0]
 8006d18:	4b40      	ldr	r3, [pc, #256]	@ (8006e1c <HAL_PWREx_ControlVoltageScaling+0x140>)
 8006d1a:	681b      	ldr	r3, [r3, #0]
 8006d1c:	2232      	movs	r2, #50	@ 0x32
 8006d1e:	fb02 f303 	mul.w	r3, r2, r3
 8006d22:	4a3f      	ldr	r2, [pc, #252]	@ (8006e20 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8006d24:	fba2 2303 	umull	r2, r3, r2, r3
 8006d28:	0c9b      	lsrs	r3, r3, #18
 8006d2a:	3301      	adds	r3, #1
 8006d2c:	60fb      	str	r3, [r7, #12]
 8006d2e:	e002      	b.n	8006d36 <HAL_PWREx_ControlVoltageScaling+0x5a>
 8006d30:	68fb      	ldr	r3, [r7, #12]
 8006d32:	3b01      	subs	r3, #1
 8006d34:	60fb      	str	r3, [r7, #12]
 8006d36:	4b38      	ldr	r3, [pc, #224]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d38:	695b      	ldr	r3, [r3, #20]
 8006d3a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006d3e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006d42:	d102      	bne.n	8006d4a <HAL_PWREx_ControlVoltageScaling+0x6e>
 8006d44:	68fb      	ldr	r3, [r7, #12]
 8006d46:	2b00      	cmp	r3, #0
 8006d48:	d1f2      	bne.n	8006d30 <HAL_PWREx_ControlVoltageScaling+0x54>
 8006d4a:	4b33      	ldr	r3, [pc, #204]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d4c:	695b      	ldr	r3, [r3, #20]
 8006d4e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006d52:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006d56:	d158      	bne.n	8006e0a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006d58:	2303      	movs	r3, #3
 8006d5a:	e057      	b.n	8006e0c <HAL_PWREx_ControlVoltageScaling+0x130>
 8006d5c:	4b2e      	ldr	r3, [pc, #184]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d5e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006d62:	4a2d      	ldr	r2, [pc, #180]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d64:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006d68:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006d6c:	e04d      	b.n	8006e0a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006d74:	d141      	bne.n	8006dfa <HAL_PWREx_ControlVoltageScaling+0x11e>
 8006d76:	4b28      	ldr	r3, [pc, #160]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8006d7e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006d82:	d131      	bne.n	8006de8 <HAL_PWREx_ControlVoltageScaling+0x10c>
 8006d84:	4b24      	ldr	r3, [pc, #144]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d86:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006d8a:	4a23      	ldr	r2, [pc, #140]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d8c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006d90:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006d94:	4b20      	ldr	r3, [pc, #128]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006d9c:	4a1e      	ldr	r2, [pc, #120]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006d9e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8006da2:	6013      	str	r3, [r2, #0]
 8006da4:	4b1d      	ldr	r3, [pc, #116]	@ (8006e1c <HAL_PWREx_ControlVoltageScaling+0x140>)
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	2232      	movs	r2, #50	@ 0x32
 8006daa:	fb02 f303 	mul.w	r3, r2, r3
 8006dae:	4a1c      	ldr	r2, [pc, #112]	@ (8006e20 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8006db0:	fba2 2303 	umull	r2, r3, r2, r3
 8006db4:	0c9b      	lsrs	r3, r3, #18
 8006db6:	3301      	adds	r3, #1
 8006db8:	60fb      	str	r3, [r7, #12]
 8006dba:	e002      	b.n	8006dc2 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8006dbc:	68fb      	ldr	r3, [r7, #12]
 8006dbe:	3b01      	subs	r3, #1
 8006dc0:	60fb      	str	r3, [r7, #12]
 8006dc2:	4b15      	ldr	r3, [pc, #84]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006dc4:	695b      	ldr	r3, [r3, #20]
 8006dc6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006dca:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006dce:	d102      	bne.n	8006dd6 <HAL_PWREx_ControlVoltageScaling+0xfa>
 8006dd0:	68fb      	ldr	r3, [r7, #12]
 8006dd2:	2b00      	cmp	r3, #0
 8006dd4:	d1f2      	bne.n	8006dbc <HAL_PWREx_ControlVoltageScaling+0xe0>
 8006dd6:	4b10      	ldr	r3, [pc, #64]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006dd8:	695b      	ldr	r3, [r3, #20]
 8006dda:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006dde:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006de2:	d112      	bne.n	8006e0a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006de4:	2303      	movs	r3, #3
 8006de6:	e011      	b.n	8006e0c <HAL_PWREx_ControlVoltageScaling+0x130>
 8006de8:	4b0b      	ldr	r3, [pc, #44]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006dea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8006dee:	4a0a      	ldr	r2, [pc, #40]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006df0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006df4:	f8c2 3080 	str.w	r3, [r2, #128]	@ 0x80
 8006df8:	e007      	b.n	8006e0a <HAL_PWREx_ControlVoltageScaling+0x12e>
 8006dfa:	4b07      	ldr	r3, [pc, #28]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8006e02:	4a05      	ldr	r2, [pc, #20]	@ (8006e18 <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8006e04:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8006e08:	6013      	str	r3, [r2, #0]
 8006e0a:	2300      	movs	r3, #0
 8006e0c:	4618      	mov	r0, r3
 8006e0e:	3714      	adds	r7, #20
 8006e10:	46bd      	mov	sp, r7
 8006e12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e16:	4770      	bx	lr
 8006e18:	40007000 	.word	0x40007000
 8006e1c:	2000003c 	.word	0x2000003c
 8006e20:	431bde83 	.word	0x431bde83

08006e24 <HAL_PWREx_DisableUCPDDeadBattery>:
 8006e24:	b480      	push	{r7}
 8006e26:	af00      	add	r7, sp, #0
 8006e28:	4b05      	ldr	r3, [pc, #20]	@ (8006e40 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8006e2a:	689b      	ldr	r3, [r3, #8]
 8006e2c:	4a04      	ldr	r2, [pc, #16]	@ (8006e40 <HAL_PWREx_DisableUCPDDeadBattery+0x1c>)
 8006e2e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8006e32:	6093      	str	r3, [r2, #8]
 8006e34:	bf00      	nop
 8006e36:	46bd      	mov	sp, r7
 8006e38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e3c:	4770      	bx	lr
 8006e3e:	bf00      	nop
 8006e40:	40007000 	.word	0x40007000

08006e44 <HAL_RCC_OscConfig>:
 8006e44:	b580      	push	{r7, lr}
 8006e46:	b088      	sub	sp, #32
 8006e48:	af00      	add	r7, sp, #0
 8006e4a:	6078      	str	r0, [r7, #4]
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	2b00      	cmp	r3, #0
 8006e50:	d101      	bne.n	8006e56 <HAL_RCC_OscConfig+0x12>
 8006e52:	2301      	movs	r3, #1
 8006e54:	e2fe      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	681b      	ldr	r3, [r3, #0]
 8006e5a:	f003 0301 	and.w	r3, r3, #1
 8006e5e:	2b00      	cmp	r3, #0
 8006e60:	d075      	beq.n	8006f4e <HAL_RCC_OscConfig+0x10a>
 8006e62:	4b97      	ldr	r3, [pc, #604]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006e64:	689b      	ldr	r3, [r3, #8]
 8006e66:	f003 030c 	and.w	r3, r3, #12
 8006e6a:	61bb      	str	r3, [r7, #24]
 8006e6c:	4b94      	ldr	r3, [pc, #592]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006e6e:	68db      	ldr	r3, [r3, #12]
 8006e70:	f003 0303 	and.w	r3, r3, #3
 8006e74:	617b      	str	r3, [r7, #20]
 8006e76:	69bb      	ldr	r3, [r7, #24]
 8006e78:	2b0c      	cmp	r3, #12
 8006e7a:	d102      	bne.n	8006e82 <HAL_RCC_OscConfig+0x3e>
 8006e7c:	697b      	ldr	r3, [r7, #20]
 8006e7e:	2b03      	cmp	r3, #3
 8006e80:	d002      	beq.n	8006e88 <HAL_RCC_OscConfig+0x44>
 8006e82:	69bb      	ldr	r3, [r7, #24]
 8006e84:	2b08      	cmp	r3, #8
 8006e86:	d10b      	bne.n	8006ea0 <HAL_RCC_OscConfig+0x5c>
 8006e88:	4b8d      	ldr	r3, [pc, #564]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006e90:	2b00      	cmp	r3, #0
 8006e92:	d05b      	beq.n	8006f4c <HAL_RCC_OscConfig+0x108>
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	685b      	ldr	r3, [r3, #4]
 8006e98:	2b00      	cmp	r3, #0
 8006e9a:	d157      	bne.n	8006f4c <HAL_RCC_OscConfig+0x108>
 8006e9c:	2301      	movs	r3, #1
 8006e9e:	e2d9      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	685b      	ldr	r3, [r3, #4]
 8006ea4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006ea8:	d106      	bne.n	8006eb8 <HAL_RCC_OscConfig+0x74>
 8006eaa:	4b85      	ldr	r3, [pc, #532]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006eac:	681b      	ldr	r3, [r3, #0]
 8006eae:	4a84      	ldr	r2, [pc, #528]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006eb0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006eb4:	6013      	str	r3, [r2, #0]
 8006eb6:	e01d      	b.n	8006ef4 <HAL_RCC_OscConfig+0xb0>
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	685b      	ldr	r3, [r3, #4]
 8006ebc:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006ec0:	d10c      	bne.n	8006edc <HAL_RCC_OscConfig+0x98>
 8006ec2:	4b7f      	ldr	r3, [pc, #508]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ec4:	681b      	ldr	r3, [r3, #0]
 8006ec6:	4a7e      	ldr	r2, [pc, #504]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ec8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006ecc:	6013      	str	r3, [r2, #0]
 8006ece:	4b7c      	ldr	r3, [pc, #496]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ed0:	681b      	ldr	r3, [r3, #0]
 8006ed2:	4a7b      	ldr	r2, [pc, #492]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ed4:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006ed8:	6013      	str	r3, [r2, #0]
 8006eda:	e00b      	b.n	8006ef4 <HAL_RCC_OscConfig+0xb0>
 8006edc:	4b78      	ldr	r3, [pc, #480]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ede:	681b      	ldr	r3, [r3, #0]
 8006ee0:	4a77      	ldr	r2, [pc, #476]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ee2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006ee6:	6013      	str	r3, [r2, #0]
 8006ee8:	4b75      	ldr	r3, [pc, #468]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006eea:	681b      	ldr	r3, [r3, #0]
 8006eec:	4a74      	ldr	r2, [pc, #464]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006eee:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006ef2:	6013      	str	r3, [r2, #0]
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	685b      	ldr	r3, [r3, #4]
 8006ef8:	2b00      	cmp	r3, #0
 8006efa:	d013      	beq.n	8006f24 <HAL_RCC_OscConfig+0xe0>
 8006efc:	f7fd f9e4 	bl	80042c8 <HAL_GetTick>
 8006f00:	6138      	str	r0, [r7, #16]
 8006f02:	e008      	b.n	8006f16 <HAL_RCC_OscConfig+0xd2>
 8006f04:	f7fd f9e0 	bl	80042c8 <HAL_GetTick>
 8006f08:	4602      	mov	r2, r0
 8006f0a:	693b      	ldr	r3, [r7, #16]
 8006f0c:	1ad3      	subs	r3, r2, r3
 8006f0e:	2b64      	cmp	r3, #100	@ 0x64
 8006f10:	d901      	bls.n	8006f16 <HAL_RCC_OscConfig+0xd2>
 8006f12:	2303      	movs	r3, #3
 8006f14:	e29e      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8006f16:	4b6a      	ldr	r3, [pc, #424]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006f18:	681b      	ldr	r3, [r3, #0]
 8006f1a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006f1e:	2b00      	cmp	r3, #0
 8006f20:	d0f0      	beq.n	8006f04 <HAL_RCC_OscConfig+0xc0>
 8006f22:	e014      	b.n	8006f4e <HAL_RCC_OscConfig+0x10a>
 8006f24:	f7fd f9d0 	bl	80042c8 <HAL_GetTick>
 8006f28:	6138      	str	r0, [r7, #16]
 8006f2a:	e008      	b.n	8006f3e <HAL_RCC_OscConfig+0xfa>
 8006f2c:	f7fd f9cc 	bl	80042c8 <HAL_GetTick>
 8006f30:	4602      	mov	r2, r0
 8006f32:	693b      	ldr	r3, [r7, #16]
 8006f34:	1ad3      	subs	r3, r2, r3
 8006f36:	2b64      	cmp	r3, #100	@ 0x64
 8006f38:	d901      	bls.n	8006f3e <HAL_RCC_OscConfig+0xfa>
 8006f3a:	2303      	movs	r3, #3
 8006f3c:	e28a      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8006f3e:	4b60      	ldr	r3, [pc, #384]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006f40:	681b      	ldr	r3, [r3, #0]
 8006f42:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006f46:	2b00      	cmp	r3, #0
 8006f48:	d1f0      	bne.n	8006f2c <HAL_RCC_OscConfig+0xe8>
 8006f4a:	e000      	b.n	8006f4e <HAL_RCC_OscConfig+0x10a>
 8006f4c:	bf00      	nop
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	f003 0302 	and.w	r3, r3, #2
 8006f56:	2b00      	cmp	r3, #0
 8006f58:	d075      	beq.n	8007046 <HAL_RCC_OscConfig+0x202>
 8006f5a:	4b59      	ldr	r3, [pc, #356]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006f5c:	689b      	ldr	r3, [r3, #8]
 8006f5e:	f003 030c 	and.w	r3, r3, #12
 8006f62:	61bb      	str	r3, [r7, #24]
 8006f64:	4b56      	ldr	r3, [pc, #344]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006f66:	68db      	ldr	r3, [r3, #12]
 8006f68:	f003 0303 	and.w	r3, r3, #3
 8006f6c:	617b      	str	r3, [r7, #20]
 8006f6e:	69bb      	ldr	r3, [r7, #24]
 8006f70:	2b0c      	cmp	r3, #12
 8006f72:	d102      	bne.n	8006f7a <HAL_RCC_OscConfig+0x136>
 8006f74:	697b      	ldr	r3, [r7, #20]
 8006f76:	2b02      	cmp	r3, #2
 8006f78:	d002      	beq.n	8006f80 <HAL_RCC_OscConfig+0x13c>
 8006f7a:	69bb      	ldr	r3, [r7, #24]
 8006f7c:	2b04      	cmp	r3, #4
 8006f7e:	d11f      	bne.n	8006fc0 <HAL_RCC_OscConfig+0x17c>
 8006f80:	4b4f      	ldr	r3, [pc, #316]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006f82:	681b      	ldr	r3, [r3, #0]
 8006f84:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	d005      	beq.n	8006f98 <HAL_RCC_OscConfig+0x154>
 8006f8c:	687b      	ldr	r3, [r7, #4]
 8006f8e:	68db      	ldr	r3, [r3, #12]
 8006f90:	2b00      	cmp	r3, #0
 8006f92:	d101      	bne.n	8006f98 <HAL_RCC_OscConfig+0x154>
 8006f94:	2301      	movs	r3, #1
 8006f96:	e25d      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8006f98:	4b49      	ldr	r3, [pc, #292]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006f9a:	685b      	ldr	r3, [r3, #4]
 8006f9c:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	691b      	ldr	r3, [r3, #16]
 8006fa4:	061b      	lsls	r3, r3, #24
 8006fa6:	4946      	ldr	r1, [pc, #280]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006fa8:	4313      	orrs	r3, r2
 8006faa:	604b      	str	r3, [r1, #4]
 8006fac:	4b45      	ldr	r3, [pc, #276]	@ (80070c4 <HAL_RCC_OscConfig+0x280>)
 8006fae:	681b      	ldr	r3, [r3, #0]
 8006fb0:	4618      	mov	r0, r3
 8006fb2:	f7fd f93d 	bl	8004230 <HAL_InitTick>
 8006fb6:	4603      	mov	r3, r0
 8006fb8:	2b00      	cmp	r3, #0
 8006fba:	d043      	beq.n	8007044 <HAL_RCC_OscConfig+0x200>
 8006fbc:	2301      	movs	r3, #1
 8006fbe:	e249      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	68db      	ldr	r3, [r3, #12]
 8006fc4:	2b00      	cmp	r3, #0
 8006fc6:	d023      	beq.n	8007010 <HAL_RCC_OscConfig+0x1cc>
 8006fc8:	4b3d      	ldr	r3, [pc, #244]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	4a3c      	ldr	r2, [pc, #240]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006fce:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006fd2:	6013      	str	r3, [r2, #0]
 8006fd4:	f7fd f978 	bl	80042c8 <HAL_GetTick>
 8006fd8:	6138      	str	r0, [r7, #16]
 8006fda:	e008      	b.n	8006fee <HAL_RCC_OscConfig+0x1aa>
 8006fdc:	f7fd f974 	bl	80042c8 <HAL_GetTick>
 8006fe0:	4602      	mov	r2, r0
 8006fe2:	693b      	ldr	r3, [r7, #16]
 8006fe4:	1ad3      	subs	r3, r2, r3
 8006fe6:	2b02      	cmp	r3, #2
 8006fe8:	d901      	bls.n	8006fee <HAL_RCC_OscConfig+0x1aa>
 8006fea:	2303      	movs	r3, #3
 8006fec:	e232      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8006fee:	4b34      	ldr	r3, [pc, #208]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ff0:	681b      	ldr	r3, [r3, #0]
 8006ff2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006ff6:	2b00      	cmp	r3, #0
 8006ff8:	d0f0      	beq.n	8006fdc <HAL_RCC_OscConfig+0x198>
 8006ffa:	4b31      	ldr	r3, [pc, #196]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8006ffc:	685b      	ldr	r3, [r3, #4]
 8006ffe:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8007002:	687b      	ldr	r3, [r7, #4]
 8007004:	691b      	ldr	r3, [r3, #16]
 8007006:	061b      	lsls	r3, r3, #24
 8007008:	492d      	ldr	r1, [pc, #180]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 800700a:	4313      	orrs	r3, r2
 800700c:	604b      	str	r3, [r1, #4]
 800700e:	e01a      	b.n	8007046 <HAL_RCC_OscConfig+0x202>
 8007010:	4b2b      	ldr	r3, [pc, #172]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8007012:	681b      	ldr	r3, [r3, #0]
 8007014:	4a2a      	ldr	r2, [pc, #168]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8007016:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800701a:	6013      	str	r3, [r2, #0]
 800701c:	f7fd f954 	bl	80042c8 <HAL_GetTick>
 8007020:	6138      	str	r0, [r7, #16]
 8007022:	e008      	b.n	8007036 <HAL_RCC_OscConfig+0x1f2>
 8007024:	f7fd f950 	bl	80042c8 <HAL_GetTick>
 8007028:	4602      	mov	r2, r0
 800702a:	693b      	ldr	r3, [r7, #16]
 800702c:	1ad3      	subs	r3, r2, r3
 800702e:	2b02      	cmp	r3, #2
 8007030:	d901      	bls.n	8007036 <HAL_RCC_OscConfig+0x1f2>
 8007032:	2303      	movs	r3, #3
 8007034:	e20e      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8007036:	4b22      	ldr	r3, [pc, #136]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8007038:	681b      	ldr	r3, [r3, #0]
 800703a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800703e:	2b00      	cmp	r3, #0
 8007040:	d1f0      	bne.n	8007024 <HAL_RCC_OscConfig+0x1e0>
 8007042:	e000      	b.n	8007046 <HAL_RCC_OscConfig+0x202>
 8007044:	bf00      	nop
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	681b      	ldr	r3, [r3, #0]
 800704a:	f003 0308 	and.w	r3, r3, #8
 800704e:	2b00      	cmp	r3, #0
 8007050:	d041      	beq.n	80070d6 <HAL_RCC_OscConfig+0x292>
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	695b      	ldr	r3, [r3, #20]
 8007056:	2b00      	cmp	r3, #0
 8007058:	d01c      	beq.n	8007094 <HAL_RCC_OscConfig+0x250>
 800705a:	4b19      	ldr	r3, [pc, #100]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 800705c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007060:	4a17      	ldr	r2, [pc, #92]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8007062:	f043 0301 	orr.w	r3, r3, #1
 8007066:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 800706a:	f7fd f92d 	bl	80042c8 <HAL_GetTick>
 800706e:	6138      	str	r0, [r7, #16]
 8007070:	e008      	b.n	8007084 <HAL_RCC_OscConfig+0x240>
 8007072:	f7fd f929 	bl	80042c8 <HAL_GetTick>
 8007076:	4602      	mov	r2, r0
 8007078:	693b      	ldr	r3, [r7, #16]
 800707a:	1ad3      	subs	r3, r2, r3
 800707c:	2b02      	cmp	r3, #2
 800707e:	d901      	bls.n	8007084 <HAL_RCC_OscConfig+0x240>
 8007080:	2303      	movs	r3, #3
 8007082:	e1e7      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8007084:	4b0e      	ldr	r3, [pc, #56]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8007086:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800708a:	f003 0302 	and.w	r3, r3, #2
 800708e:	2b00      	cmp	r3, #0
 8007090:	d0ef      	beq.n	8007072 <HAL_RCC_OscConfig+0x22e>
 8007092:	e020      	b.n	80070d6 <HAL_RCC_OscConfig+0x292>
 8007094:	4b0a      	ldr	r3, [pc, #40]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 8007096:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800709a:	4a09      	ldr	r2, [pc, #36]	@ (80070c0 <HAL_RCC_OscConfig+0x27c>)
 800709c:	f023 0301 	bic.w	r3, r3, #1
 80070a0:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80070a4:	f7fd f910 	bl	80042c8 <HAL_GetTick>
 80070a8:	6138      	str	r0, [r7, #16]
 80070aa:	e00d      	b.n	80070c8 <HAL_RCC_OscConfig+0x284>
 80070ac:	f7fd f90c 	bl	80042c8 <HAL_GetTick>
 80070b0:	4602      	mov	r2, r0
 80070b2:	693b      	ldr	r3, [r7, #16]
 80070b4:	1ad3      	subs	r3, r2, r3
 80070b6:	2b02      	cmp	r3, #2
 80070b8:	d906      	bls.n	80070c8 <HAL_RCC_OscConfig+0x284>
 80070ba:	2303      	movs	r3, #3
 80070bc:	e1ca      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 80070be:	bf00      	nop
 80070c0:	40021000 	.word	0x40021000
 80070c4:	20000040 	.word	0x20000040
 80070c8:	4b8c      	ldr	r3, [pc, #560]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80070ca:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80070ce:	f003 0302 	and.w	r3, r3, #2
 80070d2:	2b00      	cmp	r3, #0
 80070d4:	d1ea      	bne.n	80070ac <HAL_RCC_OscConfig+0x268>
 80070d6:	687b      	ldr	r3, [r7, #4]
 80070d8:	681b      	ldr	r3, [r3, #0]
 80070da:	f003 0304 	and.w	r3, r3, #4
 80070de:	2b00      	cmp	r3, #0
 80070e0:	f000 80a6 	beq.w	8007230 <HAL_RCC_OscConfig+0x3ec>
 80070e4:	2300      	movs	r3, #0
 80070e6:	77fb      	strb	r3, [r7, #31]
 80070e8:	4b84      	ldr	r3, [pc, #528]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80070ea:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80070ec:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80070f0:	2b00      	cmp	r3, #0
 80070f2:	d101      	bne.n	80070f8 <HAL_RCC_OscConfig+0x2b4>
 80070f4:	2301      	movs	r3, #1
 80070f6:	e000      	b.n	80070fa <HAL_RCC_OscConfig+0x2b6>
 80070f8:	2300      	movs	r3, #0
 80070fa:	2b00      	cmp	r3, #0
 80070fc:	d00d      	beq.n	800711a <HAL_RCC_OscConfig+0x2d6>
 80070fe:	4b7f      	ldr	r3, [pc, #508]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007100:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007102:	4a7e      	ldr	r2, [pc, #504]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007104:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007108:	6593      	str	r3, [r2, #88]	@ 0x58
 800710a:	4b7c      	ldr	r3, [pc, #496]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 800710c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800710e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007112:	60fb      	str	r3, [r7, #12]
 8007114:	68fb      	ldr	r3, [r7, #12]
 8007116:	2301      	movs	r3, #1
 8007118:	77fb      	strb	r3, [r7, #31]
 800711a:	4b79      	ldr	r3, [pc, #484]	@ (8007300 <HAL_RCC_OscConfig+0x4bc>)
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007122:	2b00      	cmp	r3, #0
 8007124:	d118      	bne.n	8007158 <HAL_RCC_OscConfig+0x314>
 8007126:	4b76      	ldr	r3, [pc, #472]	@ (8007300 <HAL_RCC_OscConfig+0x4bc>)
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	4a75      	ldr	r2, [pc, #468]	@ (8007300 <HAL_RCC_OscConfig+0x4bc>)
 800712c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007130:	6013      	str	r3, [r2, #0]
 8007132:	f7fd f8c9 	bl	80042c8 <HAL_GetTick>
 8007136:	6138      	str	r0, [r7, #16]
 8007138:	e008      	b.n	800714c <HAL_RCC_OscConfig+0x308>
 800713a:	f7fd f8c5 	bl	80042c8 <HAL_GetTick>
 800713e:	4602      	mov	r2, r0
 8007140:	693b      	ldr	r3, [r7, #16]
 8007142:	1ad3      	subs	r3, r2, r3
 8007144:	2b02      	cmp	r3, #2
 8007146:	d901      	bls.n	800714c <HAL_RCC_OscConfig+0x308>
 8007148:	2303      	movs	r3, #3
 800714a:	e183      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 800714c:	4b6c      	ldr	r3, [pc, #432]	@ (8007300 <HAL_RCC_OscConfig+0x4bc>)
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007154:	2b00      	cmp	r3, #0
 8007156:	d0f0      	beq.n	800713a <HAL_RCC_OscConfig+0x2f6>
 8007158:	687b      	ldr	r3, [r7, #4]
 800715a:	689b      	ldr	r3, [r3, #8]
 800715c:	2b01      	cmp	r3, #1
 800715e:	d108      	bne.n	8007172 <HAL_RCC_OscConfig+0x32e>
 8007160:	4b66      	ldr	r3, [pc, #408]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007162:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007166:	4a65      	ldr	r2, [pc, #404]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007168:	f043 0301 	orr.w	r3, r3, #1
 800716c:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8007170:	e024      	b.n	80071bc <HAL_RCC_OscConfig+0x378>
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	689b      	ldr	r3, [r3, #8]
 8007176:	2b05      	cmp	r3, #5
 8007178:	d110      	bne.n	800719c <HAL_RCC_OscConfig+0x358>
 800717a:	4b60      	ldr	r3, [pc, #384]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 800717c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007180:	4a5e      	ldr	r2, [pc, #376]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007182:	f043 0304 	orr.w	r3, r3, #4
 8007186:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800718a:	4b5c      	ldr	r3, [pc, #368]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 800718c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007190:	4a5a      	ldr	r2, [pc, #360]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007192:	f043 0301 	orr.w	r3, r3, #1
 8007196:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800719a:	e00f      	b.n	80071bc <HAL_RCC_OscConfig+0x378>
 800719c:	4b57      	ldr	r3, [pc, #348]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 800719e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80071a2:	4a56      	ldr	r2, [pc, #344]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80071a4:	f023 0301 	bic.w	r3, r3, #1
 80071a8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80071ac:	4b53      	ldr	r3, [pc, #332]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80071ae:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80071b2:	4a52      	ldr	r2, [pc, #328]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80071b4:	f023 0304 	bic.w	r3, r3, #4
 80071b8:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80071bc:	687b      	ldr	r3, [r7, #4]
 80071be:	689b      	ldr	r3, [r3, #8]
 80071c0:	2b00      	cmp	r3, #0
 80071c2:	d016      	beq.n	80071f2 <HAL_RCC_OscConfig+0x3ae>
 80071c4:	f7fd f880 	bl	80042c8 <HAL_GetTick>
 80071c8:	6138      	str	r0, [r7, #16]
 80071ca:	e00a      	b.n	80071e2 <HAL_RCC_OscConfig+0x39e>
 80071cc:	f7fd f87c 	bl	80042c8 <HAL_GetTick>
 80071d0:	4602      	mov	r2, r0
 80071d2:	693b      	ldr	r3, [r7, #16]
 80071d4:	1ad3      	subs	r3, r2, r3
 80071d6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80071da:	4293      	cmp	r3, r2
 80071dc:	d901      	bls.n	80071e2 <HAL_RCC_OscConfig+0x39e>
 80071de:	2303      	movs	r3, #3
 80071e0:	e138      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 80071e2:	4b46      	ldr	r3, [pc, #280]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80071e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80071e8:	f003 0302 	and.w	r3, r3, #2
 80071ec:	2b00      	cmp	r3, #0
 80071ee:	d0ed      	beq.n	80071cc <HAL_RCC_OscConfig+0x388>
 80071f0:	e015      	b.n	800721e <HAL_RCC_OscConfig+0x3da>
 80071f2:	f7fd f869 	bl	80042c8 <HAL_GetTick>
 80071f6:	6138      	str	r0, [r7, #16]
 80071f8:	e00a      	b.n	8007210 <HAL_RCC_OscConfig+0x3cc>
 80071fa:	f7fd f865 	bl	80042c8 <HAL_GetTick>
 80071fe:	4602      	mov	r2, r0
 8007200:	693b      	ldr	r3, [r7, #16]
 8007202:	1ad3      	subs	r3, r2, r3
 8007204:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007208:	4293      	cmp	r3, r2
 800720a:	d901      	bls.n	8007210 <HAL_RCC_OscConfig+0x3cc>
 800720c:	2303      	movs	r3, #3
 800720e:	e121      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8007210:	4b3a      	ldr	r3, [pc, #232]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007212:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007216:	f003 0302 	and.w	r3, r3, #2
 800721a:	2b00      	cmp	r3, #0
 800721c:	d1ed      	bne.n	80071fa <HAL_RCC_OscConfig+0x3b6>
 800721e:	7ffb      	ldrb	r3, [r7, #31]
 8007220:	2b01      	cmp	r3, #1
 8007222:	d105      	bne.n	8007230 <HAL_RCC_OscConfig+0x3ec>
 8007224:	4b35      	ldr	r3, [pc, #212]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007226:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007228:	4a34      	ldr	r2, [pc, #208]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 800722a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800722e:	6593      	str	r3, [r2, #88]	@ 0x58
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	f003 0320 	and.w	r3, r3, #32
 8007238:	2b00      	cmp	r3, #0
 800723a:	d03c      	beq.n	80072b6 <HAL_RCC_OscConfig+0x472>
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	699b      	ldr	r3, [r3, #24]
 8007240:	2b00      	cmp	r3, #0
 8007242:	d01c      	beq.n	800727e <HAL_RCC_OscConfig+0x43a>
 8007244:	4b2d      	ldr	r3, [pc, #180]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007246:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800724a:	4a2c      	ldr	r2, [pc, #176]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 800724c:	f043 0301 	orr.w	r3, r3, #1
 8007250:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8007254:	f7fd f838 	bl	80042c8 <HAL_GetTick>
 8007258:	6138      	str	r0, [r7, #16]
 800725a:	e008      	b.n	800726e <HAL_RCC_OscConfig+0x42a>
 800725c:	f7fd f834 	bl	80042c8 <HAL_GetTick>
 8007260:	4602      	mov	r2, r0
 8007262:	693b      	ldr	r3, [r7, #16]
 8007264:	1ad3      	subs	r3, r2, r3
 8007266:	2b02      	cmp	r3, #2
 8007268:	d901      	bls.n	800726e <HAL_RCC_OscConfig+0x42a>
 800726a:	2303      	movs	r3, #3
 800726c:	e0f2      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 800726e:	4b23      	ldr	r3, [pc, #140]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007270:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8007274:	f003 0302 	and.w	r3, r3, #2
 8007278:	2b00      	cmp	r3, #0
 800727a:	d0ef      	beq.n	800725c <HAL_RCC_OscConfig+0x418>
 800727c:	e01b      	b.n	80072b6 <HAL_RCC_OscConfig+0x472>
 800727e:	4b1f      	ldr	r3, [pc, #124]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007280:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8007284:	4a1d      	ldr	r2, [pc, #116]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 8007286:	f023 0301 	bic.w	r3, r3, #1
 800728a:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 800728e:	f7fd f81b 	bl	80042c8 <HAL_GetTick>
 8007292:	6138      	str	r0, [r7, #16]
 8007294:	e008      	b.n	80072a8 <HAL_RCC_OscConfig+0x464>
 8007296:	f7fd f817 	bl	80042c8 <HAL_GetTick>
 800729a:	4602      	mov	r2, r0
 800729c:	693b      	ldr	r3, [r7, #16]
 800729e:	1ad3      	subs	r3, r2, r3
 80072a0:	2b02      	cmp	r3, #2
 80072a2:	d901      	bls.n	80072a8 <HAL_RCC_OscConfig+0x464>
 80072a4:	2303      	movs	r3, #3
 80072a6:	e0d5      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 80072a8:	4b14      	ldr	r3, [pc, #80]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80072aa:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80072ae:	f003 0302 	and.w	r3, r3, #2
 80072b2:	2b00      	cmp	r3, #0
 80072b4:	d1ef      	bne.n	8007296 <HAL_RCC_OscConfig+0x452>
 80072b6:	687b      	ldr	r3, [r7, #4]
 80072b8:	69db      	ldr	r3, [r3, #28]
 80072ba:	2b00      	cmp	r3, #0
 80072bc:	f000 80c9 	beq.w	8007452 <HAL_RCC_OscConfig+0x60e>
 80072c0:	4b0e      	ldr	r3, [pc, #56]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80072c2:	689b      	ldr	r3, [r3, #8]
 80072c4:	f003 030c 	and.w	r3, r3, #12
 80072c8:	2b0c      	cmp	r3, #12
 80072ca:	f000 8083 	beq.w	80073d4 <HAL_RCC_OscConfig+0x590>
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	69db      	ldr	r3, [r3, #28]
 80072d2:	2b02      	cmp	r3, #2
 80072d4:	d15e      	bne.n	8007394 <HAL_RCC_OscConfig+0x550>
 80072d6:	4b09      	ldr	r3, [pc, #36]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	4a08      	ldr	r2, [pc, #32]	@ (80072fc <HAL_RCC_OscConfig+0x4b8>)
 80072dc:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80072e0:	6013      	str	r3, [r2, #0]
 80072e2:	f7fc fff1 	bl	80042c8 <HAL_GetTick>
 80072e6:	6138      	str	r0, [r7, #16]
 80072e8:	e00c      	b.n	8007304 <HAL_RCC_OscConfig+0x4c0>
 80072ea:	f7fc ffed 	bl	80042c8 <HAL_GetTick>
 80072ee:	4602      	mov	r2, r0
 80072f0:	693b      	ldr	r3, [r7, #16]
 80072f2:	1ad3      	subs	r3, r2, r3
 80072f4:	2b02      	cmp	r3, #2
 80072f6:	d905      	bls.n	8007304 <HAL_RCC_OscConfig+0x4c0>
 80072f8:	2303      	movs	r3, #3
 80072fa:	e0ab      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 80072fc:	40021000 	.word	0x40021000
 8007300:	40007000 	.word	0x40007000
 8007304:	4b55      	ldr	r3, [pc, #340]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800730c:	2b00      	cmp	r3, #0
 800730e:	d1ec      	bne.n	80072ea <HAL_RCC_OscConfig+0x4a6>
 8007310:	4b52      	ldr	r3, [pc, #328]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007312:	68da      	ldr	r2, [r3, #12]
 8007314:	4b52      	ldr	r3, [pc, #328]	@ (8007460 <HAL_RCC_OscConfig+0x61c>)
 8007316:	4013      	ands	r3, r2
 8007318:	687a      	ldr	r2, [r7, #4]
 800731a:	6a11      	ldr	r1, [r2, #32]
 800731c:	687a      	ldr	r2, [r7, #4]
 800731e:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8007320:	3a01      	subs	r2, #1
 8007322:	0112      	lsls	r2, r2, #4
 8007324:	4311      	orrs	r1, r2
 8007326:	687a      	ldr	r2, [r7, #4]
 8007328:	6a92      	ldr	r2, [r2, #40]	@ 0x28
 800732a:	0212      	lsls	r2, r2, #8
 800732c:	4311      	orrs	r1, r2
 800732e:	687a      	ldr	r2, [r7, #4]
 8007330:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8007332:	0852      	lsrs	r2, r2, #1
 8007334:	3a01      	subs	r2, #1
 8007336:	0552      	lsls	r2, r2, #21
 8007338:	4311      	orrs	r1, r2
 800733a:	687a      	ldr	r2, [r7, #4]
 800733c:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800733e:	0852      	lsrs	r2, r2, #1
 8007340:	3a01      	subs	r2, #1
 8007342:	0652      	lsls	r2, r2, #25
 8007344:	4311      	orrs	r1, r2
 8007346:	687a      	ldr	r2, [r7, #4]
 8007348:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 800734a:	06d2      	lsls	r2, r2, #27
 800734c:	430a      	orrs	r2, r1
 800734e:	4943      	ldr	r1, [pc, #268]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007350:	4313      	orrs	r3, r2
 8007352:	60cb      	str	r3, [r1, #12]
 8007354:	4b41      	ldr	r3, [pc, #260]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007356:	681b      	ldr	r3, [r3, #0]
 8007358:	4a40      	ldr	r2, [pc, #256]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 800735a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800735e:	6013      	str	r3, [r2, #0]
 8007360:	4b3e      	ldr	r3, [pc, #248]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007362:	68db      	ldr	r3, [r3, #12]
 8007364:	4a3d      	ldr	r2, [pc, #244]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007366:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800736a:	60d3      	str	r3, [r2, #12]
 800736c:	f7fc ffac 	bl	80042c8 <HAL_GetTick>
 8007370:	6138      	str	r0, [r7, #16]
 8007372:	e008      	b.n	8007386 <HAL_RCC_OscConfig+0x542>
 8007374:	f7fc ffa8 	bl	80042c8 <HAL_GetTick>
 8007378:	4602      	mov	r2, r0
 800737a:	693b      	ldr	r3, [r7, #16]
 800737c:	1ad3      	subs	r3, r2, r3
 800737e:	2b02      	cmp	r3, #2
 8007380:	d901      	bls.n	8007386 <HAL_RCC_OscConfig+0x542>
 8007382:	2303      	movs	r3, #3
 8007384:	e066      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8007386:	4b35      	ldr	r3, [pc, #212]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800738e:	2b00      	cmp	r3, #0
 8007390:	d0f0      	beq.n	8007374 <HAL_RCC_OscConfig+0x530>
 8007392:	e05e      	b.n	8007452 <HAL_RCC_OscConfig+0x60e>
 8007394:	4b31      	ldr	r3, [pc, #196]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 8007396:	681b      	ldr	r3, [r3, #0]
 8007398:	4a30      	ldr	r2, [pc, #192]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 800739a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800739e:	6013      	str	r3, [r2, #0]
 80073a0:	f7fc ff92 	bl	80042c8 <HAL_GetTick>
 80073a4:	6138      	str	r0, [r7, #16]
 80073a6:	e008      	b.n	80073ba <HAL_RCC_OscConfig+0x576>
 80073a8:	f7fc ff8e 	bl	80042c8 <HAL_GetTick>
 80073ac:	4602      	mov	r2, r0
 80073ae:	693b      	ldr	r3, [r7, #16]
 80073b0:	1ad3      	subs	r3, r2, r3
 80073b2:	2b02      	cmp	r3, #2
 80073b4:	d901      	bls.n	80073ba <HAL_RCC_OscConfig+0x576>
 80073b6:	2303      	movs	r3, #3
 80073b8:	e04c      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 80073ba:	4b28      	ldr	r3, [pc, #160]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 80073bc:	681b      	ldr	r3, [r3, #0]
 80073be:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80073c2:	2b00      	cmp	r3, #0
 80073c4:	d1f0      	bne.n	80073a8 <HAL_RCC_OscConfig+0x564>
 80073c6:	4b25      	ldr	r3, [pc, #148]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 80073c8:	68da      	ldr	r2, [r3, #12]
 80073ca:	4924      	ldr	r1, [pc, #144]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 80073cc:	4b25      	ldr	r3, [pc, #148]	@ (8007464 <HAL_RCC_OscConfig+0x620>)
 80073ce:	4013      	ands	r3, r2
 80073d0:	60cb      	str	r3, [r1, #12]
 80073d2:	e03e      	b.n	8007452 <HAL_RCC_OscConfig+0x60e>
 80073d4:	687b      	ldr	r3, [r7, #4]
 80073d6:	69db      	ldr	r3, [r3, #28]
 80073d8:	2b01      	cmp	r3, #1
 80073da:	d101      	bne.n	80073e0 <HAL_RCC_OscConfig+0x59c>
 80073dc:	2301      	movs	r3, #1
 80073de:	e039      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 80073e0:	4b1e      	ldr	r3, [pc, #120]	@ (800745c <HAL_RCC_OscConfig+0x618>)
 80073e2:	68db      	ldr	r3, [r3, #12]
 80073e4:	617b      	str	r3, [r7, #20]
 80073e6:	697b      	ldr	r3, [r7, #20]
 80073e8:	f003 0203 	and.w	r2, r3, #3
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	6a1b      	ldr	r3, [r3, #32]
 80073f0:	429a      	cmp	r2, r3
 80073f2:	d12c      	bne.n	800744e <HAL_RCC_OscConfig+0x60a>
 80073f4:	697b      	ldr	r3, [r7, #20]
 80073f6:	f003 02f0 	and.w	r2, r3, #240	@ 0xf0
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80073fe:	3b01      	subs	r3, #1
 8007400:	011b      	lsls	r3, r3, #4
 8007402:	429a      	cmp	r2, r3
 8007404:	d123      	bne.n	800744e <HAL_RCC_OscConfig+0x60a>
 8007406:	697b      	ldr	r3, [r7, #20]
 8007408:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007410:	021b      	lsls	r3, r3, #8
 8007412:	429a      	cmp	r2, r3
 8007414:	d11b      	bne.n	800744e <HAL_RCC_OscConfig+0x60a>
 8007416:	697b      	ldr	r3, [r7, #20]
 8007418:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007420:	06db      	lsls	r3, r3, #27
 8007422:	429a      	cmp	r2, r3
 8007424:	d113      	bne.n	800744e <HAL_RCC_OscConfig+0x60a>
 8007426:	697b      	ldr	r3, [r7, #20]
 8007428:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007430:	085b      	lsrs	r3, r3, #1
 8007432:	3b01      	subs	r3, #1
 8007434:	055b      	lsls	r3, r3, #21
 8007436:	429a      	cmp	r2, r3
 8007438:	d109      	bne.n	800744e <HAL_RCC_OscConfig+0x60a>
 800743a:	697b      	ldr	r3, [r7, #20]
 800743c:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8007440:	687b      	ldr	r3, [r7, #4]
 8007442:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007444:	085b      	lsrs	r3, r3, #1
 8007446:	3b01      	subs	r3, #1
 8007448:	065b      	lsls	r3, r3, #25
 800744a:	429a      	cmp	r2, r3
 800744c:	d001      	beq.n	8007452 <HAL_RCC_OscConfig+0x60e>
 800744e:	2301      	movs	r3, #1
 8007450:	e000      	b.n	8007454 <HAL_RCC_OscConfig+0x610>
 8007452:	2300      	movs	r3, #0
 8007454:	4618      	mov	r0, r3
 8007456:	3720      	adds	r7, #32
 8007458:	46bd      	mov	sp, r7
 800745a:	bd80      	pop	{r7, pc}
 800745c:	40021000 	.word	0x40021000
 8007460:	019f800c 	.word	0x019f800c
 8007464:	feeefffc 	.word	0xfeeefffc

08007468 <HAL_RCC_ClockConfig>:
 8007468:	b580      	push	{r7, lr}
 800746a:	b086      	sub	sp, #24
 800746c:	af00      	add	r7, sp, #0
 800746e:	6078      	str	r0, [r7, #4]
 8007470:	6039      	str	r1, [r7, #0]
 8007472:	2300      	movs	r3, #0
 8007474:	617b      	str	r3, [r7, #20]
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	2b00      	cmp	r3, #0
 800747a:	d101      	bne.n	8007480 <HAL_RCC_ClockConfig+0x18>
 800747c:	2301      	movs	r3, #1
 800747e:	e11e      	b.n	80076be <HAL_RCC_ClockConfig+0x256>
 8007480:	4b91      	ldr	r3, [pc, #580]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 8007482:	681b      	ldr	r3, [r3, #0]
 8007484:	f003 030f 	and.w	r3, r3, #15
 8007488:	683a      	ldr	r2, [r7, #0]
 800748a:	429a      	cmp	r2, r3
 800748c:	d910      	bls.n	80074b0 <HAL_RCC_ClockConfig+0x48>
 800748e:	4b8e      	ldr	r3, [pc, #568]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	f023 020f 	bic.w	r2, r3, #15
 8007496:	498c      	ldr	r1, [pc, #560]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 8007498:	683b      	ldr	r3, [r7, #0]
 800749a:	4313      	orrs	r3, r2
 800749c:	600b      	str	r3, [r1, #0]
 800749e:	4b8a      	ldr	r3, [pc, #552]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	f003 030f 	and.w	r3, r3, #15
 80074a6:	683a      	ldr	r2, [r7, #0]
 80074a8:	429a      	cmp	r2, r3
 80074aa:	d001      	beq.n	80074b0 <HAL_RCC_ClockConfig+0x48>
 80074ac:	2301      	movs	r3, #1
 80074ae:	e106      	b.n	80076be <HAL_RCC_ClockConfig+0x256>
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	f003 0301 	and.w	r3, r3, #1
 80074b8:	2b00      	cmp	r3, #0
 80074ba:	d073      	beq.n	80075a4 <HAL_RCC_ClockConfig+0x13c>
 80074bc:	687b      	ldr	r3, [r7, #4]
 80074be:	685b      	ldr	r3, [r3, #4]
 80074c0:	2b03      	cmp	r3, #3
 80074c2:	d129      	bne.n	8007518 <HAL_RCC_ClockConfig+0xb0>
 80074c4:	4b81      	ldr	r3, [pc, #516]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80074c6:	681b      	ldr	r3, [r3, #0]
 80074c8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80074cc:	2b00      	cmp	r3, #0
 80074ce:	d101      	bne.n	80074d4 <HAL_RCC_ClockConfig+0x6c>
 80074d0:	2301      	movs	r3, #1
 80074d2:	e0f4      	b.n	80076be <HAL_RCC_ClockConfig+0x256>
 80074d4:	f000 f99e 	bl	8007814 <RCC_GetSysClockFreqFromPLLSource>
 80074d8:	6138      	str	r0, [r7, #16]
 80074da:	693b      	ldr	r3, [r7, #16]
 80074dc:	4a7c      	ldr	r2, [pc, #496]	@ (80076d0 <HAL_RCC_ClockConfig+0x268>)
 80074de:	4293      	cmp	r3, r2
 80074e0:	d93f      	bls.n	8007562 <HAL_RCC_ClockConfig+0xfa>
 80074e2:	4b7a      	ldr	r3, [pc, #488]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80074e4:	689b      	ldr	r3, [r3, #8]
 80074e6:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80074ea:	2b00      	cmp	r3, #0
 80074ec:	d009      	beq.n	8007502 <HAL_RCC_ClockConfig+0x9a>
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	681b      	ldr	r3, [r3, #0]
 80074f2:	f003 0302 	and.w	r3, r3, #2
 80074f6:	2b00      	cmp	r3, #0
 80074f8:	d033      	beq.n	8007562 <HAL_RCC_ClockConfig+0xfa>
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	689b      	ldr	r3, [r3, #8]
 80074fe:	2b00      	cmp	r3, #0
 8007500:	d12f      	bne.n	8007562 <HAL_RCC_ClockConfig+0xfa>
 8007502:	4b72      	ldr	r3, [pc, #456]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007504:	689b      	ldr	r3, [r3, #8]
 8007506:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800750a:	4a70      	ldr	r2, [pc, #448]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 800750c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007510:	6093      	str	r3, [r2, #8]
 8007512:	2380      	movs	r3, #128	@ 0x80
 8007514:	617b      	str	r3, [r7, #20]
 8007516:	e024      	b.n	8007562 <HAL_RCC_ClockConfig+0xfa>
 8007518:	687b      	ldr	r3, [r7, #4]
 800751a:	685b      	ldr	r3, [r3, #4]
 800751c:	2b02      	cmp	r3, #2
 800751e:	d107      	bne.n	8007530 <HAL_RCC_ClockConfig+0xc8>
 8007520:	4b6a      	ldr	r3, [pc, #424]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007522:	681b      	ldr	r3, [r3, #0]
 8007524:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007528:	2b00      	cmp	r3, #0
 800752a:	d109      	bne.n	8007540 <HAL_RCC_ClockConfig+0xd8>
 800752c:	2301      	movs	r3, #1
 800752e:	e0c6      	b.n	80076be <HAL_RCC_ClockConfig+0x256>
 8007530:	4b66      	ldr	r3, [pc, #408]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007532:	681b      	ldr	r3, [r3, #0]
 8007534:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007538:	2b00      	cmp	r3, #0
 800753a:	d101      	bne.n	8007540 <HAL_RCC_ClockConfig+0xd8>
 800753c:	2301      	movs	r3, #1
 800753e:	e0be      	b.n	80076be <HAL_RCC_ClockConfig+0x256>
 8007540:	f000 f8ce 	bl	80076e0 <HAL_RCC_GetSysClockFreq>
 8007544:	6138      	str	r0, [r7, #16]
 8007546:	693b      	ldr	r3, [r7, #16]
 8007548:	4a61      	ldr	r2, [pc, #388]	@ (80076d0 <HAL_RCC_ClockConfig+0x268>)
 800754a:	4293      	cmp	r3, r2
 800754c:	d909      	bls.n	8007562 <HAL_RCC_ClockConfig+0xfa>
 800754e:	4b5f      	ldr	r3, [pc, #380]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007550:	689b      	ldr	r3, [r3, #8]
 8007552:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007556:	4a5d      	ldr	r2, [pc, #372]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007558:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800755c:	6093      	str	r3, [r2, #8]
 800755e:	2380      	movs	r3, #128	@ 0x80
 8007560:	617b      	str	r3, [r7, #20]
 8007562:	4b5a      	ldr	r3, [pc, #360]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007564:	689b      	ldr	r3, [r3, #8]
 8007566:	f023 0203 	bic.w	r2, r3, #3
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	685b      	ldr	r3, [r3, #4]
 800756e:	4957      	ldr	r1, [pc, #348]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007570:	4313      	orrs	r3, r2
 8007572:	608b      	str	r3, [r1, #8]
 8007574:	f7fc fea8 	bl	80042c8 <HAL_GetTick>
 8007578:	60f8      	str	r0, [r7, #12]
 800757a:	e00a      	b.n	8007592 <HAL_RCC_ClockConfig+0x12a>
 800757c:	f7fc fea4 	bl	80042c8 <HAL_GetTick>
 8007580:	4602      	mov	r2, r0
 8007582:	68fb      	ldr	r3, [r7, #12]
 8007584:	1ad3      	subs	r3, r2, r3
 8007586:	f241 3288 	movw	r2, #5000	@ 0x1388
 800758a:	4293      	cmp	r3, r2
 800758c:	d901      	bls.n	8007592 <HAL_RCC_ClockConfig+0x12a>
 800758e:	2303      	movs	r3, #3
 8007590:	e095      	b.n	80076be <HAL_RCC_ClockConfig+0x256>
 8007592:	4b4e      	ldr	r3, [pc, #312]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007594:	689b      	ldr	r3, [r3, #8]
 8007596:	f003 020c 	and.w	r2, r3, #12
 800759a:	687b      	ldr	r3, [r7, #4]
 800759c:	685b      	ldr	r3, [r3, #4]
 800759e:	009b      	lsls	r3, r3, #2
 80075a0:	429a      	cmp	r2, r3
 80075a2:	d1eb      	bne.n	800757c <HAL_RCC_ClockConfig+0x114>
 80075a4:	687b      	ldr	r3, [r7, #4]
 80075a6:	681b      	ldr	r3, [r3, #0]
 80075a8:	f003 0302 	and.w	r3, r3, #2
 80075ac:	2b00      	cmp	r3, #0
 80075ae:	d023      	beq.n	80075f8 <HAL_RCC_ClockConfig+0x190>
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	681b      	ldr	r3, [r3, #0]
 80075b4:	f003 0304 	and.w	r3, r3, #4
 80075b8:	2b00      	cmp	r3, #0
 80075ba:	d005      	beq.n	80075c8 <HAL_RCC_ClockConfig+0x160>
 80075bc:	4b43      	ldr	r3, [pc, #268]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80075be:	689b      	ldr	r3, [r3, #8]
 80075c0:	4a42      	ldr	r2, [pc, #264]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80075c2:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80075c6:	6093      	str	r3, [r2, #8]
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	681b      	ldr	r3, [r3, #0]
 80075cc:	f003 0308 	and.w	r3, r3, #8
 80075d0:	2b00      	cmp	r3, #0
 80075d2:	d007      	beq.n	80075e4 <HAL_RCC_ClockConfig+0x17c>
 80075d4:	4b3d      	ldr	r3, [pc, #244]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80075d6:	689b      	ldr	r3, [r3, #8]
 80075d8:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80075dc:	4a3b      	ldr	r2, [pc, #236]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80075de:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80075e2:	6093      	str	r3, [r2, #8]
 80075e4:	4b39      	ldr	r3, [pc, #228]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80075e6:	689b      	ldr	r3, [r3, #8]
 80075e8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	689b      	ldr	r3, [r3, #8]
 80075f0:	4936      	ldr	r1, [pc, #216]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 80075f2:	4313      	orrs	r3, r2
 80075f4:	608b      	str	r3, [r1, #8]
 80075f6:	e008      	b.n	800760a <HAL_RCC_ClockConfig+0x1a2>
 80075f8:	697b      	ldr	r3, [r7, #20]
 80075fa:	2b80      	cmp	r3, #128	@ 0x80
 80075fc:	d105      	bne.n	800760a <HAL_RCC_ClockConfig+0x1a2>
 80075fe:	4b33      	ldr	r3, [pc, #204]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007600:	689b      	ldr	r3, [r3, #8]
 8007602:	4a32      	ldr	r2, [pc, #200]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007604:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007608:	6093      	str	r3, [r2, #8]
 800760a:	4b2f      	ldr	r3, [pc, #188]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 800760c:	681b      	ldr	r3, [r3, #0]
 800760e:	f003 030f 	and.w	r3, r3, #15
 8007612:	683a      	ldr	r2, [r7, #0]
 8007614:	429a      	cmp	r2, r3
 8007616:	d21d      	bcs.n	8007654 <HAL_RCC_ClockConfig+0x1ec>
 8007618:	4b2b      	ldr	r3, [pc, #172]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	f023 020f 	bic.w	r2, r3, #15
 8007620:	4929      	ldr	r1, [pc, #164]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 8007622:	683b      	ldr	r3, [r7, #0]
 8007624:	4313      	orrs	r3, r2
 8007626:	600b      	str	r3, [r1, #0]
 8007628:	f7fc fe4e 	bl	80042c8 <HAL_GetTick>
 800762c:	60f8      	str	r0, [r7, #12]
 800762e:	e00a      	b.n	8007646 <HAL_RCC_ClockConfig+0x1de>
 8007630:	f7fc fe4a 	bl	80042c8 <HAL_GetTick>
 8007634:	4602      	mov	r2, r0
 8007636:	68fb      	ldr	r3, [r7, #12]
 8007638:	1ad3      	subs	r3, r2, r3
 800763a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800763e:	4293      	cmp	r3, r2
 8007640:	d901      	bls.n	8007646 <HAL_RCC_ClockConfig+0x1de>
 8007642:	2303      	movs	r3, #3
 8007644:	e03b      	b.n	80076be <HAL_RCC_ClockConfig+0x256>
 8007646:	4b20      	ldr	r3, [pc, #128]	@ (80076c8 <HAL_RCC_ClockConfig+0x260>)
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	f003 030f 	and.w	r3, r3, #15
 800764e:	683a      	ldr	r2, [r7, #0]
 8007650:	429a      	cmp	r2, r3
 8007652:	d1ed      	bne.n	8007630 <HAL_RCC_ClockConfig+0x1c8>
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	681b      	ldr	r3, [r3, #0]
 8007658:	f003 0304 	and.w	r3, r3, #4
 800765c:	2b00      	cmp	r3, #0
 800765e:	d008      	beq.n	8007672 <HAL_RCC_ClockConfig+0x20a>
 8007660:	4b1a      	ldr	r3, [pc, #104]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007662:	689b      	ldr	r3, [r3, #8]
 8007664:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	68db      	ldr	r3, [r3, #12]
 800766c:	4917      	ldr	r1, [pc, #92]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 800766e:	4313      	orrs	r3, r2
 8007670:	608b      	str	r3, [r1, #8]
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	681b      	ldr	r3, [r3, #0]
 8007676:	f003 0308 	and.w	r3, r3, #8
 800767a:	2b00      	cmp	r3, #0
 800767c:	d009      	beq.n	8007692 <HAL_RCC_ClockConfig+0x22a>
 800767e:	4b13      	ldr	r3, [pc, #76]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 8007680:	689b      	ldr	r3, [r3, #8]
 8007682:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	691b      	ldr	r3, [r3, #16]
 800768a:	00db      	lsls	r3, r3, #3
 800768c:	490f      	ldr	r1, [pc, #60]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 800768e:	4313      	orrs	r3, r2
 8007690:	608b      	str	r3, [r1, #8]
 8007692:	f000 f825 	bl	80076e0 <HAL_RCC_GetSysClockFreq>
 8007696:	4602      	mov	r2, r0
 8007698:	4b0c      	ldr	r3, [pc, #48]	@ (80076cc <HAL_RCC_ClockConfig+0x264>)
 800769a:	689b      	ldr	r3, [r3, #8]
 800769c:	091b      	lsrs	r3, r3, #4
 800769e:	f003 030f 	and.w	r3, r3, #15
 80076a2:	490c      	ldr	r1, [pc, #48]	@ (80076d4 <HAL_RCC_ClockConfig+0x26c>)
 80076a4:	5ccb      	ldrb	r3, [r1, r3]
 80076a6:	f003 031f 	and.w	r3, r3, #31
 80076aa:	fa22 f303 	lsr.w	r3, r2, r3
 80076ae:	4a0a      	ldr	r2, [pc, #40]	@ (80076d8 <HAL_RCC_ClockConfig+0x270>)
 80076b0:	6013      	str	r3, [r2, #0]
 80076b2:	4b0a      	ldr	r3, [pc, #40]	@ (80076dc <HAL_RCC_ClockConfig+0x274>)
 80076b4:	681b      	ldr	r3, [r3, #0]
 80076b6:	4618      	mov	r0, r3
 80076b8:	f7fc fdba 	bl	8004230 <HAL_InitTick>
 80076bc:	4603      	mov	r3, r0
 80076be:	4618      	mov	r0, r3
 80076c0:	3718      	adds	r7, #24
 80076c2:	46bd      	mov	sp, r7
 80076c4:	bd80      	pop	{r7, pc}
 80076c6:	bf00      	nop
 80076c8:	40022000 	.word	0x40022000
 80076cc:	40021000 	.word	0x40021000
 80076d0:	04c4b400 	.word	0x04c4b400
 80076d4:	0800f24c 	.word	0x0800f24c
 80076d8:	2000003c 	.word	0x2000003c
 80076dc:	20000040 	.word	0x20000040

080076e0 <HAL_RCC_GetSysClockFreq>:
 80076e0:	b480      	push	{r7}
 80076e2:	b087      	sub	sp, #28
 80076e4:	af00      	add	r7, sp, #0
 80076e6:	4b2c      	ldr	r3, [pc, #176]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 80076e8:	689b      	ldr	r3, [r3, #8]
 80076ea:	f003 030c 	and.w	r3, r3, #12
 80076ee:	2b04      	cmp	r3, #4
 80076f0:	d102      	bne.n	80076f8 <HAL_RCC_GetSysClockFreq+0x18>
 80076f2:	4b2a      	ldr	r3, [pc, #168]	@ (800779c <HAL_RCC_GetSysClockFreq+0xbc>)
 80076f4:	613b      	str	r3, [r7, #16]
 80076f6:	e047      	b.n	8007788 <HAL_RCC_GetSysClockFreq+0xa8>
 80076f8:	4b27      	ldr	r3, [pc, #156]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 80076fa:	689b      	ldr	r3, [r3, #8]
 80076fc:	f003 030c 	and.w	r3, r3, #12
 8007700:	2b08      	cmp	r3, #8
 8007702:	d102      	bne.n	800770a <HAL_RCC_GetSysClockFreq+0x2a>
 8007704:	4b26      	ldr	r3, [pc, #152]	@ (80077a0 <HAL_RCC_GetSysClockFreq+0xc0>)
 8007706:	613b      	str	r3, [r7, #16]
 8007708:	e03e      	b.n	8007788 <HAL_RCC_GetSysClockFreq+0xa8>
 800770a:	4b23      	ldr	r3, [pc, #140]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 800770c:	689b      	ldr	r3, [r3, #8]
 800770e:	f003 030c 	and.w	r3, r3, #12
 8007712:	2b0c      	cmp	r3, #12
 8007714:	d136      	bne.n	8007784 <HAL_RCC_GetSysClockFreq+0xa4>
 8007716:	4b20      	ldr	r3, [pc, #128]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 8007718:	68db      	ldr	r3, [r3, #12]
 800771a:	f003 0303 	and.w	r3, r3, #3
 800771e:	60fb      	str	r3, [r7, #12]
 8007720:	4b1d      	ldr	r3, [pc, #116]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 8007722:	68db      	ldr	r3, [r3, #12]
 8007724:	091b      	lsrs	r3, r3, #4
 8007726:	f003 030f 	and.w	r3, r3, #15
 800772a:	3301      	adds	r3, #1
 800772c:	60bb      	str	r3, [r7, #8]
 800772e:	68fb      	ldr	r3, [r7, #12]
 8007730:	2b03      	cmp	r3, #3
 8007732:	d10c      	bne.n	800774e <HAL_RCC_GetSysClockFreq+0x6e>
 8007734:	4a1a      	ldr	r2, [pc, #104]	@ (80077a0 <HAL_RCC_GetSysClockFreq+0xc0>)
 8007736:	68bb      	ldr	r3, [r7, #8]
 8007738:	fbb2 f3f3 	udiv	r3, r2, r3
 800773c:	4a16      	ldr	r2, [pc, #88]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 800773e:	68d2      	ldr	r2, [r2, #12]
 8007740:	0a12      	lsrs	r2, r2, #8
 8007742:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8007746:	fb02 f303 	mul.w	r3, r2, r3
 800774a:	617b      	str	r3, [r7, #20]
 800774c:	e00c      	b.n	8007768 <HAL_RCC_GetSysClockFreq+0x88>
 800774e:	4a13      	ldr	r2, [pc, #76]	@ (800779c <HAL_RCC_GetSysClockFreq+0xbc>)
 8007750:	68bb      	ldr	r3, [r7, #8]
 8007752:	fbb2 f3f3 	udiv	r3, r2, r3
 8007756:	4a10      	ldr	r2, [pc, #64]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 8007758:	68d2      	ldr	r2, [r2, #12]
 800775a:	0a12      	lsrs	r2, r2, #8
 800775c:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8007760:	fb02 f303 	mul.w	r3, r2, r3
 8007764:	617b      	str	r3, [r7, #20]
 8007766:	bf00      	nop
 8007768:	4b0b      	ldr	r3, [pc, #44]	@ (8007798 <HAL_RCC_GetSysClockFreq+0xb8>)
 800776a:	68db      	ldr	r3, [r3, #12]
 800776c:	0e5b      	lsrs	r3, r3, #25
 800776e:	f003 0303 	and.w	r3, r3, #3
 8007772:	3301      	adds	r3, #1
 8007774:	005b      	lsls	r3, r3, #1
 8007776:	607b      	str	r3, [r7, #4]
 8007778:	697a      	ldr	r2, [r7, #20]
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	fbb2 f3f3 	udiv	r3, r2, r3
 8007780:	613b      	str	r3, [r7, #16]
 8007782:	e001      	b.n	8007788 <HAL_RCC_GetSysClockFreq+0xa8>
 8007784:	2300      	movs	r3, #0
 8007786:	613b      	str	r3, [r7, #16]
 8007788:	693b      	ldr	r3, [r7, #16]
 800778a:	4618      	mov	r0, r3
 800778c:	371c      	adds	r7, #28
 800778e:	46bd      	mov	sp, r7
 8007790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007794:	4770      	bx	lr
 8007796:	bf00      	nop
 8007798:	40021000 	.word	0x40021000
 800779c:	00f42400 	.word	0x00f42400
 80077a0:	016e3600 	.word	0x016e3600

080077a4 <HAL_RCC_GetHCLKFreq>:
 80077a4:	b480      	push	{r7}
 80077a6:	af00      	add	r7, sp, #0
 80077a8:	4b03      	ldr	r3, [pc, #12]	@ (80077b8 <HAL_RCC_GetHCLKFreq+0x14>)
 80077aa:	681b      	ldr	r3, [r3, #0]
 80077ac:	4618      	mov	r0, r3
 80077ae:	46bd      	mov	sp, r7
 80077b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077b4:	4770      	bx	lr
 80077b6:	bf00      	nop
 80077b8:	2000003c 	.word	0x2000003c

080077bc <HAL_RCC_GetPCLK1Freq>:
 80077bc:	b580      	push	{r7, lr}
 80077be:	af00      	add	r7, sp, #0
 80077c0:	f7ff fff0 	bl	80077a4 <HAL_RCC_GetHCLKFreq>
 80077c4:	4602      	mov	r2, r0
 80077c6:	4b06      	ldr	r3, [pc, #24]	@ (80077e0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80077c8:	689b      	ldr	r3, [r3, #8]
 80077ca:	0a1b      	lsrs	r3, r3, #8
 80077cc:	f003 0307 	and.w	r3, r3, #7
 80077d0:	4904      	ldr	r1, [pc, #16]	@ (80077e4 <HAL_RCC_GetPCLK1Freq+0x28>)
 80077d2:	5ccb      	ldrb	r3, [r1, r3]
 80077d4:	f003 031f 	and.w	r3, r3, #31
 80077d8:	fa22 f303 	lsr.w	r3, r2, r3
 80077dc:	4618      	mov	r0, r3
 80077de:	bd80      	pop	{r7, pc}
 80077e0:	40021000 	.word	0x40021000
 80077e4:	0800f25c 	.word	0x0800f25c

080077e8 <HAL_RCC_GetPCLK2Freq>:
 80077e8:	b580      	push	{r7, lr}
 80077ea:	af00      	add	r7, sp, #0
 80077ec:	f7ff ffda 	bl	80077a4 <HAL_RCC_GetHCLKFreq>
 80077f0:	4602      	mov	r2, r0
 80077f2:	4b06      	ldr	r3, [pc, #24]	@ (800780c <HAL_RCC_GetPCLK2Freq+0x24>)
 80077f4:	689b      	ldr	r3, [r3, #8]
 80077f6:	0adb      	lsrs	r3, r3, #11
 80077f8:	f003 0307 	and.w	r3, r3, #7
 80077fc:	4904      	ldr	r1, [pc, #16]	@ (8007810 <HAL_RCC_GetPCLK2Freq+0x28>)
 80077fe:	5ccb      	ldrb	r3, [r1, r3]
 8007800:	f003 031f 	and.w	r3, r3, #31
 8007804:	fa22 f303 	lsr.w	r3, r2, r3
 8007808:	4618      	mov	r0, r3
 800780a:	bd80      	pop	{r7, pc}
 800780c:	40021000 	.word	0x40021000
 8007810:	0800f25c 	.word	0x0800f25c

08007814 <RCC_GetSysClockFreqFromPLLSource>:
 8007814:	b480      	push	{r7}
 8007816:	b087      	sub	sp, #28
 8007818:	af00      	add	r7, sp, #0
 800781a:	4b1e      	ldr	r3, [pc, #120]	@ (8007894 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800781c:	68db      	ldr	r3, [r3, #12]
 800781e:	f003 0303 	and.w	r3, r3, #3
 8007822:	613b      	str	r3, [r7, #16]
 8007824:	4b1b      	ldr	r3, [pc, #108]	@ (8007894 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8007826:	68db      	ldr	r3, [r3, #12]
 8007828:	091b      	lsrs	r3, r3, #4
 800782a:	f003 030f 	and.w	r3, r3, #15
 800782e:	3301      	adds	r3, #1
 8007830:	60fb      	str	r3, [r7, #12]
 8007832:	693b      	ldr	r3, [r7, #16]
 8007834:	2b03      	cmp	r3, #3
 8007836:	d10c      	bne.n	8007852 <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8007838:	4a17      	ldr	r2, [pc, #92]	@ (8007898 <RCC_GetSysClockFreqFromPLLSource+0x84>)
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	fbb2 f3f3 	udiv	r3, r2, r3
 8007840:	4a14      	ldr	r2, [pc, #80]	@ (8007894 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 8007842:	68d2      	ldr	r2, [r2, #12]
 8007844:	0a12      	lsrs	r2, r2, #8
 8007846:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 800784a:	fb02 f303 	mul.w	r3, r2, r3
 800784e:	617b      	str	r3, [r7, #20]
 8007850:	e00c      	b.n	800786c <RCC_GetSysClockFreqFromPLLSource+0x58>
 8007852:	4a12      	ldr	r2, [pc, #72]	@ (800789c <RCC_GetSysClockFreqFromPLLSource+0x88>)
 8007854:	68fb      	ldr	r3, [r7, #12]
 8007856:	fbb2 f3f3 	udiv	r3, r2, r3
 800785a:	4a0e      	ldr	r2, [pc, #56]	@ (8007894 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800785c:	68d2      	ldr	r2, [r2, #12]
 800785e:	0a12      	lsrs	r2, r2, #8
 8007860:	f002 027f 	and.w	r2, r2, #127	@ 0x7f
 8007864:	fb02 f303 	mul.w	r3, r2, r3
 8007868:	617b      	str	r3, [r7, #20]
 800786a:	bf00      	nop
 800786c:	4b09      	ldr	r3, [pc, #36]	@ (8007894 <RCC_GetSysClockFreqFromPLLSource+0x80>)
 800786e:	68db      	ldr	r3, [r3, #12]
 8007870:	0e5b      	lsrs	r3, r3, #25
 8007872:	f003 0303 	and.w	r3, r3, #3
 8007876:	3301      	adds	r3, #1
 8007878:	005b      	lsls	r3, r3, #1
 800787a:	60bb      	str	r3, [r7, #8]
 800787c:	697a      	ldr	r2, [r7, #20]
 800787e:	68bb      	ldr	r3, [r7, #8]
 8007880:	fbb2 f3f3 	udiv	r3, r2, r3
 8007884:	607b      	str	r3, [r7, #4]
 8007886:	687b      	ldr	r3, [r7, #4]
 8007888:	4618      	mov	r0, r3
 800788a:	371c      	adds	r7, #28
 800788c:	46bd      	mov	sp, r7
 800788e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007892:	4770      	bx	lr
 8007894:	40021000 	.word	0x40021000
 8007898:	016e3600 	.word	0x016e3600
 800789c:	00f42400 	.word	0x00f42400

080078a0 <HAL_RCCEx_PeriphCLKConfig>:
 80078a0:	b580      	push	{r7, lr}
 80078a2:	b086      	sub	sp, #24
 80078a4:	af00      	add	r7, sp, #0
 80078a6:	6078      	str	r0, [r7, #4]
 80078a8:	2300      	movs	r3, #0
 80078aa:	74fb      	strb	r3, [r7, #19]
 80078ac:	2300      	movs	r3, #0
 80078ae:	74bb      	strb	r3, [r7, #18]
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	681b      	ldr	r3, [r3, #0]
 80078b4:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80078b8:	2b00      	cmp	r3, #0
 80078ba:	f000 8098 	beq.w	80079ee <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80078be:	2300      	movs	r3, #0
 80078c0:	747b      	strb	r3, [r7, #17]
 80078c2:	4b43      	ldr	r3, [pc, #268]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80078c4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80078c6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80078ca:	2b00      	cmp	r3, #0
 80078cc:	d10d      	bne.n	80078ea <HAL_RCCEx_PeriphCLKConfig+0x4a>
 80078ce:	4b40      	ldr	r3, [pc, #256]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80078d0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80078d2:	4a3f      	ldr	r2, [pc, #252]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80078d4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80078d8:	6593      	str	r3, [r2, #88]	@ 0x58
 80078da:	4b3d      	ldr	r3, [pc, #244]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80078dc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80078de:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80078e2:	60bb      	str	r3, [r7, #8]
 80078e4:	68bb      	ldr	r3, [r7, #8]
 80078e6:	2301      	movs	r3, #1
 80078e8:	747b      	strb	r3, [r7, #17]
 80078ea:	4b3a      	ldr	r3, [pc, #232]	@ (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80078ec:	681b      	ldr	r3, [r3, #0]
 80078ee:	4a39      	ldr	r2, [pc, #228]	@ (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 80078f0:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80078f4:	6013      	str	r3, [r2, #0]
 80078f6:	f7fc fce7 	bl	80042c8 <HAL_GetTick>
 80078fa:	60f8      	str	r0, [r7, #12]
 80078fc:	e009      	b.n	8007912 <HAL_RCCEx_PeriphCLKConfig+0x72>
 80078fe:	f7fc fce3 	bl	80042c8 <HAL_GetTick>
 8007902:	4602      	mov	r2, r0
 8007904:	68fb      	ldr	r3, [r7, #12]
 8007906:	1ad3      	subs	r3, r2, r3
 8007908:	2b02      	cmp	r3, #2
 800790a:	d902      	bls.n	8007912 <HAL_RCCEx_PeriphCLKConfig+0x72>
 800790c:	2303      	movs	r3, #3
 800790e:	74fb      	strb	r3, [r7, #19]
 8007910:	e005      	b.n	800791e <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8007912:	4b30      	ldr	r3, [pc, #192]	@ (80079d4 <HAL_RCCEx_PeriphCLKConfig+0x134>)
 8007914:	681b      	ldr	r3, [r3, #0]
 8007916:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800791a:	2b00      	cmp	r3, #0
 800791c:	d0ef      	beq.n	80078fe <HAL_RCCEx_PeriphCLKConfig+0x5e>
 800791e:	7cfb      	ldrb	r3, [r7, #19]
 8007920:	2b00      	cmp	r3, #0
 8007922:	d159      	bne.n	80079d8 <HAL_RCCEx_PeriphCLKConfig+0x138>
 8007924:	4b2a      	ldr	r3, [pc, #168]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007926:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800792a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800792e:	617b      	str	r3, [r7, #20]
 8007930:	697b      	ldr	r3, [r7, #20]
 8007932:	2b00      	cmp	r3, #0
 8007934:	d01e      	beq.n	8007974 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800793a:	697a      	ldr	r2, [r7, #20]
 800793c:	429a      	cmp	r2, r3
 800793e:	d019      	beq.n	8007974 <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8007940:	4b23      	ldr	r3, [pc, #140]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007942:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007946:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800794a:	617b      	str	r3, [r7, #20]
 800794c:	4b20      	ldr	r3, [pc, #128]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800794e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007952:	4a1f      	ldr	r2, [pc, #124]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007954:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007958:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800795c:	4b1c      	ldr	r3, [pc, #112]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800795e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007962:	4a1b      	ldr	r2, [pc, #108]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 8007964:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007968:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800796c:	4a18      	ldr	r2, [pc, #96]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 800796e:	697b      	ldr	r3, [r7, #20]
 8007970:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8007974:	697b      	ldr	r3, [r7, #20]
 8007976:	f003 0301 	and.w	r3, r3, #1
 800797a:	2b00      	cmp	r3, #0
 800797c:	d016      	beq.n	80079ac <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800797e:	f7fc fca3 	bl	80042c8 <HAL_GetTick>
 8007982:	60f8      	str	r0, [r7, #12]
 8007984:	e00b      	b.n	800799e <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8007986:	f7fc fc9f 	bl	80042c8 <HAL_GetTick>
 800798a:	4602      	mov	r2, r0
 800798c:	68fb      	ldr	r3, [r7, #12]
 800798e:	1ad3      	subs	r3, r2, r3
 8007990:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007994:	4293      	cmp	r3, r2
 8007996:	d902      	bls.n	800799e <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8007998:	2303      	movs	r3, #3
 800799a:	74fb      	strb	r3, [r7, #19]
 800799c:	e006      	b.n	80079ac <HAL_RCCEx_PeriphCLKConfig+0x10c>
 800799e:	4b0c      	ldr	r3, [pc, #48]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80079a0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80079a4:	f003 0302 	and.w	r3, r3, #2
 80079a8:	2b00      	cmp	r3, #0
 80079aa:	d0ec      	beq.n	8007986 <HAL_RCCEx_PeriphCLKConfig+0xe6>
 80079ac:	7cfb      	ldrb	r3, [r7, #19]
 80079ae:	2b00      	cmp	r3, #0
 80079b0:	d10b      	bne.n	80079ca <HAL_RCCEx_PeriphCLKConfig+0x12a>
 80079b2:	4b07      	ldr	r3, [pc, #28]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80079b4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80079b8:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80079c0:	4903      	ldr	r1, [pc, #12]	@ (80079d0 <HAL_RCCEx_PeriphCLKConfig+0x130>)
 80079c2:	4313      	orrs	r3, r2
 80079c4:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 80079c8:	e008      	b.n	80079dc <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80079ca:	7cfb      	ldrb	r3, [r7, #19]
 80079cc:	74bb      	strb	r3, [r7, #18]
 80079ce:	e005      	b.n	80079dc <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80079d0:	40021000 	.word	0x40021000
 80079d4:	40007000 	.word	0x40007000
 80079d8:	7cfb      	ldrb	r3, [r7, #19]
 80079da:	74bb      	strb	r3, [r7, #18]
 80079dc:	7c7b      	ldrb	r3, [r7, #17]
 80079de:	2b01      	cmp	r3, #1
 80079e0:	d105      	bne.n	80079ee <HAL_RCCEx_PeriphCLKConfig+0x14e>
 80079e2:	4ba7      	ldr	r3, [pc, #668]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80079e4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80079e6:	4aa6      	ldr	r2, [pc, #664]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80079e8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80079ec:	6593      	str	r3, [r2, #88]	@ 0x58
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	681b      	ldr	r3, [r3, #0]
 80079f2:	f003 0301 	and.w	r3, r3, #1
 80079f6:	2b00      	cmp	r3, #0
 80079f8:	d00a      	beq.n	8007a10 <HAL_RCCEx_PeriphCLKConfig+0x170>
 80079fa:	4ba1      	ldr	r3, [pc, #644]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 80079fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007a00:	f023 0203 	bic.w	r2, r3, #3
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	685b      	ldr	r3, [r3, #4]
 8007a08:	499d      	ldr	r1, [pc, #628]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a0a:	4313      	orrs	r3, r2
 8007a0c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	681b      	ldr	r3, [r3, #0]
 8007a14:	f003 0302 	and.w	r3, r3, #2
 8007a18:	2b00      	cmp	r3, #0
 8007a1a:	d00a      	beq.n	8007a32 <HAL_RCCEx_PeriphCLKConfig+0x192>
 8007a1c:	4b98      	ldr	r3, [pc, #608]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007a22:	f023 020c 	bic.w	r2, r3, #12
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	689b      	ldr	r3, [r3, #8]
 8007a2a:	4995      	ldr	r1, [pc, #596]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a2c:	4313      	orrs	r3, r2
 8007a2e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	681b      	ldr	r3, [r3, #0]
 8007a36:	f003 0304 	and.w	r3, r3, #4
 8007a3a:	2b00      	cmp	r3, #0
 8007a3c:	d00a      	beq.n	8007a54 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8007a3e:	4b90      	ldr	r3, [pc, #576]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a40:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007a44:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	68db      	ldr	r3, [r3, #12]
 8007a4c:	498c      	ldr	r1, [pc, #560]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a4e:	4313      	orrs	r3, r2
 8007a50:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	681b      	ldr	r3, [r3, #0]
 8007a58:	f003 0308 	and.w	r3, r3, #8
 8007a5c:	2b00      	cmp	r3, #0
 8007a5e:	d00a      	beq.n	8007a76 <HAL_RCCEx_PeriphCLKConfig+0x1d6>
 8007a60:	4b87      	ldr	r3, [pc, #540]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a62:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007a66:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	691b      	ldr	r3, [r3, #16]
 8007a6e:	4984      	ldr	r1, [pc, #528]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a70:	4313      	orrs	r3, r2
 8007a72:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	681b      	ldr	r3, [r3, #0]
 8007a7a:	f003 0310 	and.w	r3, r3, #16
 8007a7e:	2b00      	cmp	r3, #0
 8007a80:	d00a      	beq.n	8007a98 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 8007a82:	4b7f      	ldr	r3, [pc, #508]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a84:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007a88:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8007a8c:	687b      	ldr	r3, [r7, #4]
 8007a8e:	695b      	ldr	r3, [r3, #20]
 8007a90:	497b      	ldr	r1, [pc, #492]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007a92:	4313      	orrs	r3, r2
 8007a94:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	681b      	ldr	r3, [r3, #0]
 8007a9c:	f003 0320 	and.w	r3, r3, #32
 8007aa0:	2b00      	cmp	r3, #0
 8007aa2:	d00a      	beq.n	8007aba <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8007aa4:	4b76      	ldr	r3, [pc, #472]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007aa6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007aaa:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	699b      	ldr	r3, [r3, #24]
 8007ab2:	4973      	ldr	r1, [pc, #460]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007ab4:	4313      	orrs	r3, r2
 8007ab6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	681b      	ldr	r3, [r3, #0]
 8007abe:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007ac2:	2b00      	cmp	r3, #0
 8007ac4:	d00a      	beq.n	8007adc <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007ac6:	4b6e      	ldr	r3, [pc, #440]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007ac8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007acc:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8007ad0:	687b      	ldr	r3, [r7, #4]
 8007ad2:	69db      	ldr	r3, [r3, #28]
 8007ad4:	496a      	ldr	r1, [pc, #424]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007ad6:	4313      	orrs	r3, r2
 8007ad8:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007adc:	687b      	ldr	r3, [r7, #4]
 8007ade:	681b      	ldr	r3, [r3, #0]
 8007ae0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007ae4:	2b00      	cmp	r3, #0
 8007ae6:	d00a      	beq.n	8007afe <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8007ae8:	4b65      	ldr	r3, [pc, #404]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007aea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007aee:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	6a1b      	ldr	r3, [r3, #32]
 8007af6:	4962      	ldr	r1, [pc, #392]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007af8:	4313      	orrs	r3, r2
 8007afa:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007afe:	687b      	ldr	r3, [r7, #4]
 8007b00:	681b      	ldr	r3, [r3, #0]
 8007b02:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007b06:	2b00      	cmp	r3, #0
 8007b08:	d00a      	beq.n	8007b20 <HAL_RCCEx_PeriphCLKConfig+0x280>
 8007b0a:	4b5d      	ldr	r3, [pc, #372]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b0c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007b10:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8007b14:	687b      	ldr	r3, [r7, #4]
 8007b16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007b18:	4959      	ldr	r1, [pc, #356]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b1a:	4313      	orrs	r3, r2
 8007b1c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	681b      	ldr	r3, [r3, #0]
 8007b24:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007b28:	2b00      	cmp	r3, #0
 8007b2a:	d00a      	beq.n	8007b42 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 8007b2c:	4b54      	ldr	r3, [pc, #336]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b2e:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8007b32:	f023 0203 	bic.w	r2, r3, #3
 8007b36:	687b      	ldr	r3, [r7, #4]
 8007b38:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007b3a:	4951      	ldr	r1, [pc, #324]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b3c:	4313      	orrs	r3, r2
 8007b3e:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 8007b42:	687b      	ldr	r3, [r7, #4]
 8007b44:	681b      	ldr	r3, [r3, #0]
 8007b46:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	d00a      	beq.n	8007b64 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
 8007b4e:	4b4c      	ldr	r3, [pc, #304]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b50:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007b54:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007b5c:	4948      	ldr	r1, [pc, #288]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b5e:	4313      	orrs	r3, r2
 8007b60:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007b6c:	2b00      	cmp	r3, #0
 8007b6e:	d015      	beq.n	8007b9c <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8007b70:	4b43      	ldr	r3, [pc, #268]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b72:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007b76:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007b7a:	687b      	ldr	r3, [r7, #4]
 8007b7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b7e:	4940      	ldr	r1, [pc, #256]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b80:	4313      	orrs	r3, r2
 8007b82:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007b86:	687b      	ldr	r3, [r7, #4]
 8007b88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b8a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007b8e:	d105      	bne.n	8007b9c <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8007b90:	4b3b      	ldr	r3, [pc, #236]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b92:	68db      	ldr	r3, [r3, #12]
 8007b94:	4a3a      	ldr	r2, [pc, #232]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007b96:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007b9a:	60d3      	str	r3, [r2, #12]
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	681b      	ldr	r3, [r3, #0]
 8007ba0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8007ba4:	2b00      	cmp	r3, #0
 8007ba6:	d015      	beq.n	8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8007ba8:	4b35      	ldr	r3, [pc, #212]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007baa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007bae:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8007bb2:	687b      	ldr	r3, [r7, #4]
 8007bb4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007bb6:	4932      	ldr	r1, [pc, #200]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007bb8:	4313      	orrs	r3, r2
 8007bba:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007bc2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007bc6:	d105      	bne.n	8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8007bc8:	4b2d      	ldr	r3, [pc, #180]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007bca:	68db      	ldr	r3, [r3, #12]
 8007bcc:	4a2c      	ldr	r2, [pc, #176]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007bce:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007bd2:	60d3      	str	r3, [r2, #12]
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8007bdc:	2b00      	cmp	r3, #0
 8007bde:	d015      	beq.n	8007c0c <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8007be0:	4b27      	ldr	r3, [pc, #156]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007be2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007be6:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007bee:	4924      	ldr	r1, [pc, #144]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007bf0:	4313      	orrs	r3, r2
 8007bf2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007bf6:	687b      	ldr	r3, [r7, #4]
 8007bf8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007bfa:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007bfe:	d105      	bne.n	8007c0c <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8007c00:	4b1f      	ldr	r3, [pc, #124]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c02:	68db      	ldr	r3, [r3, #12]
 8007c04:	4a1e      	ldr	r2, [pc, #120]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c06:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007c0a:	60d3      	str	r3, [r2, #12]
 8007c0c:	687b      	ldr	r3, [r7, #4]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8007c14:	2b00      	cmp	r3, #0
 8007c16:	d015      	beq.n	8007c44 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 8007c18:	4b19      	ldr	r3, [pc, #100]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c1a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007c1e:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8007c22:	687b      	ldr	r3, [r7, #4]
 8007c24:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007c26:	4916      	ldr	r1, [pc, #88]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c28:	4313      	orrs	r3, r2
 8007c2a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007c2e:	687b      	ldr	r3, [r7, #4]
 8007c30:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007c32:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007c36:	d105      	bne.n	8007c44 <HAL_RCCEx_PeriphCLKConfig+0x3a4>
 8007c38:	4b11      	ldr	r3, [pc, #68]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c3a:	68db      	ldr	r3, [r3, #12]
 8007c3c:	4a10      	ldr	r2, [pc, #64]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c3e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007c42:	60d3      	str	r3, [r2, #12]
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	681b      	ldr	r3, [r3, #0]
 8007c48:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8007c4c:	2b00      	cmp	r3, #0
 8007c4e:	d019      	beq.n	8007c84 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 8007c50:	4b0b      	ldr	r3, [pc, #44]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c52:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007c56:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007c5e:	4908      	ldr	r1, [pc, #32]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c60:	4313      	orrs	r3, r2
 8007c62:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007c6a:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007c6e:	d109      	bne.n	8007c84 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 8007c70:	4b03      	ldr	r3, [pc, #12]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c72:	68db      	ldr	r3, [r3, #12]
 8007c74:	4a02      	ldr	r2, [pc, #8]	@ (8007c80 <HAL_RCCEx_PeriphCLKConfig+0x3e0>)
 8007c76:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007c7a:	60d3      	str	r3, [r2, #12]
 8007c7c:	e002      	b.n	8007c84 <HAL_RCCEx_PeriphCLKConfig+0x3e4>
 8007c7e:	bf00      	nop
 8007c80:	40021000 	.word	0x40021000
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	681b      	ldr	r3, [r3, #0]
 8007c88:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8007c8c:	2b00      	cmp	r3, #0
 8007c8e:	d015      	beq.n	8007cbc <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8007c90:	4b29      	ldr	r3, [pc, #164]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007c92:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007c96:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007c9e:	4926      	ldr	r1, [pc, #152]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007ca0:	4313      	orrs	r3, r2
 8007ca2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007ca6:	687b      	ldr	r3, [r7, #4]
 8007ca8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007caa:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007cae:	d105      	bne.n	8007cbc <HAL_RCCEx_PeriphCLKConfig+0x41c>
 8007cb0:	4b21      	ldr	r3, [pc, #132]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007cb2:	68db      	ldr	r3, [r3, #12]
 8007cb4:	4a20      	ldr	r2, [pc, #128]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007cb6:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007cba:	60d3      	str	r3, [r2, #12]
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	681b      	ldr	r3, [r3, #0]
 8007cc0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d015      	beq.n	8007cf4 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8007cc8:	4b1b      	ldr	r3, [pc, #108]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007cca:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007cce:	f023 4240 	bic.w	r2, r3, #3221225472	@ 0xc0000000
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007cd6:	4918      	ldr	r1, [pc, #96]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007cd8:	4313      	orrs	r3, r2
 8007cda:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007ce2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007ce6:	d105      	bne.n	8007cf4 <HAL_RCCEx_PeriphCLKConfig+0x454>
 8007ce8:	4b13      	ldr	r3, [pc, #76]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007cea:	68db      	ldr	r3, [r3, #12]
 8007cec:	4a12      	ldr	r2, [pc, #72]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007cee:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007cf2:	60d3      	str	r3, [r2, #12]
 8007cf4:	687b      	ldr	r3, [r7, #4]
 8007cf6:	681b      	ldr	r3, [r3, #0]
 8007cf8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8007cfc:	2b00      	cmp	r3, #0
 8007cfe:	d015      	beq.n	8007d2c <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8007d00:	4b0d      	ldr	r3, [pc, #52]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007d02:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8007d06:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007d0e:	490a      	ldr	r1, [pc, #40]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007d10:	4313      	orrs	r3, r2
 8007d12:	f8c1 309c 	str.w	r3, [r1, #156]	@ 0x9c
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007d1a:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007d1e:	d105      	bne.n	8007d2c <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8007d20:	4b05      	ldr	r3, [pc, #20]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007d22:	68db      	ldr	r3, [r3, #12]
 8007d24:	4a04      	ldr	r2, [pc, #16]	@ (8007d38 <HAL_RCCEx_PeriphCLKConfig+0x498>)
 8007d26:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007d2a:	60d3      	str	r3, [r2, #12]
 8007d2c:	7cbb      	ldrb	r3, [r7, #18]
 8007d2e:	4618      	mov	r0, r3
 8007d30:	3718      	adds	r7, #24
 8007d32:	46bd      	mov	sp, r7
 8007d34:	bd80      	pop	{r7, pc}
 8007d36:	bf00      	nop
 8007d38:	40021000 	.word	0x40021000

08007d3c <HAL_TIM_Base_Init>:
 8007d3c:	b580      	push	{r7, lr}
 8007d3e:	b082      	sub	sp, #8
 8007d40:	af00      	add	r7, sp, #0
 8007d42:	6078      	str	r0, [r7, #4]
 8007d44:	687b      	ldr	r3, [r7, #4]
 8007d46:	2b00      	cmp	r3, #0
 8007d48:	d101      	bne.n	8007d4e <HAL_TIM_Base_Init+0x12>
 8007d4a:	2301      	movs	r3, #1
 8007d4c:	e049      	b.n	8007de2 <HAL_TIM_Base_Init+0xa6>
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007d54:	b2db      	uxtb	r3, r3
 8007d56:	2b00      	cmp	r3, #0
 8007d58:	d106      	bne.n	8007d68 <HAL_TIM_Base_Init+0x2c>
 8007d5a:	687b      	ldr	r3, [r7, #4]
 8007d5c:	2200      	movs	r2, #0
 8007d5e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007d62:	6878      	ldr	r0, [r7, #4]
 8007d64:	f7fb fe16 	bl	8003994 <HAL_TIM_Base_MspInit>
 8007d68:	687b      	ldr	r3, [r7, #4]
 8007d6a:	2202      	movs	r2, #2
 8007d6c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	681a      	ldr	r2, [r3, #0]
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	3304      	adds	r3, #4
 8007d78:	4619      	mov	r1, r3
 8007d7a:	4610      	mov	r0, r2
 8007d7c:	f001 f842 	bl	8008e04 <TIM_Base_SetConfig>
 8007d80:	687b      	ldr	r3, [r7, #4]
 8007d82:	2201      	movs	r2, #1
 8007d84:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8007d88:	687b      	ldr	r3, [r7, #4]
 8007d8a:	2201      	movs	r2, #1
 8007d8c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007d90:	687b      	ldr	r3, [r7, #4]
 8007d92:	2201      	movs	r2, #1
 8007d94:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007d98:	687b      	ldr	r3, [r7, #4]
 8007d9a:	2201      	movs	r2, #1
 8007d9c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	2201      	movs	r2, #1
 8007da4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	2201      	movs	r2, #1
 8007dac:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007db0:	687b      	ldr	r3, [r7, #4]
 8007db2:	2201      	movs	r2, #1
 8007db4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007db8:	687b      	ldr	r3, [r7, #4]
 8007dba:	2201      	movs	r2, #1
 8007dbc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007dc0:	687b      	ldr	r3, [r7, #4]
 8007dc2:	2201      	movs	r2, #1
 8007dc4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007dc8:	687b      	ldr	r3, [r7, #4]
 8007dca:	2201      	movs	r2, #1
 8007dcc:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007dd0:	687b      	ldr	r3, [r7, #4]
 8007dd2:	2201      	movs	r2, #1
 8007dd4:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	2201      	movs	r2, #1
 8007ddc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007de0:	2300      	movs	r3, #0
 8007de2:	4618      	mov	r0, r3
 8007de4:	3708      	adds	r7, #8
 8007de6:	46bd      	mov	sp, r7
 8007de8:	bd80      	pop	{r7, pc}
	...

08007dec <HAL_TIM_Base_Start_IT>:
 8007dec:	b480      	push	{r7}
 8007dee:	b085      	sub	sp, #20
 8007df0:	af00      	add	r7, sp, #0
 8007df2:	6078      	str	r0, [r7, #4]
 8007df4:	687b      	ldr	r3, [r7, #4]
 8007df6:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007dfa:	b2db      	uxtb	r3, r3
 8007dfc:	2b01      	cmp	r3, #1
 8007dfe:	d001      	beq.n	8007e04 <HAL_TIM_Base_Start_IT+0x18>
 8007e00:	2301      	movs	r3, #1
 8007e02:	e054      	b.n	8007eae <HAL_TIM_Base_Start_IT+0xc2>
 8007e04:	687b      	ldr	r3, [r7, #4]
 8007e06:	2202      	movs	r2, #2
 8007e08:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007e0c:	687b      	ldr	r3, [r7, #4]
 8007e0e:	681b      	ldr	r3, [r3, #0]
 8007e10:	68da      	ldr	r2, [r3, #12]
 8007e12:	687b      	ldr	r3, [r7, #4]
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	f042 0201 	orr.w	r2, r2, #1
 8007e1a:	60da      	str	r2, [r3, #12]
 8007e1c:	687b      	ldr	r3, [r7, #4]
 8007e1e:	681b      	ldr	r3, [r3, #0]
 8007e20:	4a26      	ldr	r2, [pc, #152]	@ (8007ebc <HAL_TIM_Base_Start_IT+0xd0>)
 8007e22:	4293      	cmp	r3, r2
 8007e24:	d022      	beq.n	8007e6c <HAL_TIM_Base_Start_IT+0x80>
 8007e26:	687b      	ldr	r3, [r7, #4]
 8007e28:	681b      	ldr	r3, [r3, #0]
 8007e2a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007e2e:	d01d      	beq.n	8007e6c <HAL_TIM_Base_Start_IT+0x80>
 8007e30:	687b      	ldr	r3, [r7, #4]
 8007e32:	681b      	ldr	r3, [r3, #0]
 8007e34:	4a22      	ldr	r2, [pc, #136]	@ (8007ec0 <HAL_TIM_Base_Start_IT+0xd4>)
 8007e36:	4293      	cmp	r3, r2
 8007e38:	d018      	beq.n	8007e6c <HAL_TIM_Base_Start_IT+0x80>
 8007e3a:	687b      	ldr	r3, [r7, #4]
 8007e3c:	681b      	ldr	r3, [r3, #0]
 8007e3e:	4a21      	ldr	r2, [pc, #132]	@ (8007ec4 <HAL_TIM_Base_Start_IT+0xd8>)
 8007e40:	4293      	cmp	r3, r2
 8007e42:	d013      	beq.n	8007e6c <HAL_TIM_Base_Start_IT+0x80>
 8007e44:	687b      	ldr	r3, [r7, #4]
 8007e46:	681b      	ldr	r3, [r3, #0]
 8007e48:	4a1f      	ldr	r2, [pc, #124]	@ (8007ec8 <HAL_TIM_Base_Start_IT+0xdc>)
 8007e4a:	4293      	cmp	r3, r2
 8007e4c:	d00e      	beq.n	8007e6c <HAL_TIM_Base_Start_IT+0x80>
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	4a1e      	ldr	r2, [pc, #120]	@ (8007ecc <HAL_TIM_Base_Start_IT+0xe0>)
 8007e54:	4293      	cmp	r3, r2
 8007e56:	d009      	beq.n	8007e6c <HAL_TIM_Base_Start_IT+0x80>
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	681b      	ldr	r3, [r3, #0]
 8007e5c:	4a1c      	ldr	r2, [pc, #112]	@ (8007ed0 <HAL_TIM_Base_Start_IT+0xe4>)
 8007e5e:	4293      	cmp	r3, r2
 8007e60:	d004      	beq.n	8007e6c <HAL_TIM_Base_Start_IT+0x80>
 8007e62:	687b      	ldr	r3, [r7, #4]
 8007e64:	681b      	ldr	r3, [r3, #0]
 8007e66:	4a1b      	ldr	r2, [pc, #108]	@ (8007ed4 <HAL_TIM_Base_Start_IT+0xe8>)
 8007e68:	4293      	cmp	r3, r2
 8007e6a:	d115      	bne.n	8007e98 <HAL_TIM_Base_Start_IT+0xac>
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	681b      	ldr	r3, [r3, #0]
 8007e70:	689a      	ldr	r2, [r3, #8]
 8007e72:	4b19      	ldr	r3, [pc, #100]	@ (8007ed8 <HAL_TIM_Base_Start_IT+0xec>)
 8007e74:	4013      	ands	r3, r2
 8007e76:	60fb      	str	r3, [r7, #12]
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	2b06      	cmp	r3, #6
 8007e7c:	d015      	beq.n	8007eaa <HAL_TIM_Base_Start_IT+0xbe>
 8007e7e:	68fb      	ldr	r3, [r7, #12]
 8007e80:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007e84:	d011      	beq.n	8007eaa <HAL_TIM_Base_Start_IT+0xbe>
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	681b      	ldr	r3, [r3, #0]
 8007e8a:	681a      	ldr	r2, [r3, #0]
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	681b      	ldr	r3, [r3, #0]
 8007e90:	f042 0201 	orr.w	r2, r2, #1
 8007e94:	601a      	str	r2, [r3, #0]
 8007e96:	e008      	b.n	8007eaa <HAL_TIM_Base_Start_IT+0xbe>
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	681b      	ldr	r3, [r3, #0]
 8007e9c:	681a      	ldr	r2, [r3, #0]
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	681b      	ldr	r3, [r3, #0]
 8007ea2:	f042 0201 	orr.w	r2, r2, #1
 8007ea6:	601a      	str	r2, [r3, #0]
 8007ea8:	e000      	b.n	8007eac <HAL_TIM_Base_Start_IT+0xc0>
 8007eaa:	bf00      	nop
 8007eac:	2300      	movs	r3, #0
 8007eae:	4618      	mov	r0, r3
 8007eb0:	3714      	adds	r7, #20
 8007eb2:	46bd      	mov	sp, r7
 8007eb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eb8:	4770      	bx	lr
 8007eba:	bf00      	nop
 8007ebc:	40012c00 	.word	0x40012c00
 8007ec0:	40000400 	.word	0x40000400
 8007ec4:	40000800 	.word	0x40000800
 8007ec8:	40000c00 	.word	0x40000c00
 8007ecc:	40013400 	.word	0x40013400
 8007ed0:	40014000 	.word	0x40014000
 8007ed4:	40015000 	.word	0x40015000
 8007ed8:	00010007 	.word	0x00010007

08007edc <HAL_TIM_PWM_Init>:
 8007edc:	b580      	push	{r7, lr}
 8007ede:	b082      	sub	sp, #8
 8007ee0:	af00      	add	r7, sp, #0
 8007ee2:	6078      	str	r0, [r7, #4]
 8007ee4:	687b      	ldr	r3, [r7, #4]
 8007ee6:	2b00      	cmp	r3, #0
 8007ee8:	d101      	bne.n	8007eee <HAL_TIM_PWM_Init+0x12>
 8007eea:	2301      	movs	r3, #1
 8007eec:	e049      	b.n	8007f82 <HAL_TIM_PWM_Init+0xa6>
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007ef4:	b2db      	uxtb	r3, r3
 8007ef6:	2b00      	cmp	r3, #0
 8007ef8:	d106      	bne.n	8007f08 <HAL_TIM_PWM_Init+0x2c>
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	2200      	movs	r2, #0
 8007efe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007f02:	6878      	ldr	r0, [r7, #4]
 8007f04:	f7fb fd18 	bl	8003938 <HAL_TIM_PWM_MspInit>
 8007f08:	687b      	ldr	r3, [r7, #4]
 8007f0a:	2202      	movs	r2, #2
 8007f0c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007f10:	687b      	ldr	r3, [r7, #4]
 8007f12:	681a      	ldr	r2, [r3, #0]
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	3304      	adds	r3, #4
 8007f18:	4619      	mov	r1, r3
 8007f1a:	4610      	mov	r0, r2
 8007f1c:	f000 ff72 	bl	8008e04 <TIM_Base_SetConfig>
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	2201      	movs	r2, #1
 8007f24:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8007f28:	687b      	ldr	r3, [r7, #4]
 8007f2a:	2201      	movs	r2, #1
 8007f2c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007f30:	687b      	ldr	r3, [r7, #4]
 8007f32:	2201      	movs	r2, #1
 8007f34:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	2201      	movs	r2, #1
 8007f3c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007f40:	687b      	ldr	r3, [r7, #4]
 8007f42:	2201      	movs	r2, #1
 8007f44:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007f48:	687b      	ldr	r3, [r7, #4]
 8007f4a:	2201      	movs	r2, #1
 8007f4c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007f50:	687b      	ldr	r3, [r7, #4]
 8007f52:	2201      	movs	r2, #1
 8007f54:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	2201      	movs	r2, #1
 8007f5c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007f60:	687b      	ldr	r3, [r7, #4]
 8007f62:	2201      	movs	r2, #1
 8007f64:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	2201      	movs	r2, #1
 8007f6c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007f70:	687b      	ldr	r3, [r7, #4]
 8007f72:	2201      	movs	r2, #1
 8007f74:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8007f78:	687b      	ldr	r3, [r7, #4]
 8007f7a:	2201      	movs	r2, #1
 8007f7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007f80:	2300      	movs	r3, #0
 8007f82:	4618      	mov	r0, r3
 8007f84:	3708      	adds	r7, #8
 8007f86:	46bd      	mov	sp, r7
 8007f88:	bd80      	pop	{r7, pc}
	...

08007f8c <HAL_TIM_PWM_Start>:
 8007f8c:	b580      	push	{r7, lr}
 8007f8e:	b084      	sub	sp, #16
 8007f90:	af00      	add	r7, sp, #0
 8007f92:	6078      	str	r0, [r7, #4]
 8007f94:	6039      	str	r1, [r7, #0]
 8007f96:	683b      	ldr	r3, [r7, #0]
 8007f98:	2b00      	cmp	r3, #0
 8007f9a:	d109      	bne.n	8007fb0 <HAL_TIM_PWM_Start+0x24>
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8007fa2:	b2db      	uxtb	r3, r3
 8007fa4:	2b01      	cmp	r3, #1
 8007fa6:	bf14      	ite	ne
 8007fa8:	2301      	movne	r3, #1
 8007faa:	2300      	moveq	r3, #0
 8007fac:	b2db      	uxtb	r3, r3
 8007fae:	e03c      	b.n	800802a <HAL_TIM_PWM_Start+0x9e>
 8007fb0:	683b      	ldr	r3, [r7, #0]
 8007fb2:	2b04      	cmp	r3, #4
 8007fb4:	d109      	bne.n	8007fca <HAL_TIM_PWM_Start+0x3e>
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007fbc:	b2db      	uxtb	r3, r3
 8007fbe:	2b01      	cmp	r3, #1
 8007fc0:	bf14      	ite	ne
 8007fc2:	2301      	movne	r3, #1
 8007fc4:	2300      	moveq	r3, #0
 8007fc6:	b2db      	uxtb	r3, r3
 8007fc8:	e02f      	b.n	800802a <HAL_TIM_PWM_Start+0x9e>
 8007fca:	683b      	ldr	r3, [r7, #0]
 8007fcc:	2b08      	cmp	r3, #8
 8007fce:	d109      	bne.n	8007fe4 <HAL_TIM_PWM_Start+0x58>
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8007fd6:	b2db      	uxtb	r3, r3
 8007fd8:	2b01      	cmp	r3, #1
 8007fda:	bf14      	ite	ne
 8007fdc:	2301      	movne	r3, #1
 8007fde:	2300      	moveq	r3, #0
 8007fe0:	b2db      	uxtb	r3, r3
 8007fe2:	e022      	b.n	800802a <HAL_TIM_PWM_Start+0x9e>
 8007fe4:	683b      	ldr	r3, [r7, #0]
 8007fe6:	2b0c      	cmp	r3, #12
 8007fe8:	d109      	bne.n	8007ffe <HAL_TIM_PWM_Start+0x72>
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007ff0:	b2db      	uxtb	r3, r3
 8007ff2:	2b01      	cmp	r3, #1
 8007ff4:	bf14      	ite	ne
 8007ff6:	2301      	movne	r3, #1
 8007ff8:	2300      	moveq	r3, #0
 8007ffa:	b2db      	uxtb	r3, r3
 8007ffc:	e015      	b.n	800802a <HAL_TIM_PWM_Start+0x9e>
 8007ffe:	683b      	ldr	r3, [r7, #0]
 8008000:	2b10      	cmp	r3, #16
 8008002:	d109      	bne.n	8008018 <HAL_TIM_PWM_Start+0x8c>
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800800a:	b2db      	uxtb	r3, r3
 800800c:	2b01      	cmp	r3, #1
 800800e:	bf14      	ite	ne
 8008010:	2301      	movne	r3, #1
 8008012:	2300      	moveq	r3, #0
 8008014:	b2db      	uxtb	r3, r3
 8008016:	e008      	b.n	800802a <HAL_TIM_PWM_Start+0x9e>
 8008018:	687b      	ldr	r3, [r7, #4]
 800801a:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800801e:	b2db      	uxtb	r3, r3
 8008020:	2b01      	cmp	r3, #1
 8008022:	bf14      	ite	ne
 8008024:	2301      	movne	r3, #1
 8008026:	2300      	moveq	r3, #0
 8008028:	b2db      	uxtb	r3, r3
 800802a:	2b00      	cmp	r3, #0
 800802c:	d001      	beq.n	8008032 <HAL_TIM_PWM_Start+0xa6>
 800802e:	2301      	movs	r3, #1
 8008030:	e0a6      	b.n	8008180 <HAL_TIM_PWM_Start+0x1f4>
 8008032:	683b      	ldr	r3, [r7, #0]
 8008034:	2b00      	cmp	r3, #0
 8008036:	d104      	bne.n	8008042 <HAL_TIM_PWM_Start+0xb6>
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	2202      	movs	r2, #2
 800803c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008040:	e023      	b.n	800808a <HAL_TIM_PWM_Start+0xfe>
 8008042:	683b      	ldr	r3, [r7, #0]
 8008044:	2b04      	cmp	r3, #4
 8008046:	d104      	bne.n	8008052 <HAL_TIM_PWM_Start+0xc6>
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	2202      	movs	r2, #2
 800804c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008050:	e01b      	b.n	800808a <HAL_TIM_PWM_Start+0xfe>
 8008052:	683b      	ldr	r3, [r7, #0]
 8008054:	2b08      	cmp	r3, #8
 8008056:	d104      	bne.n	8008062 <HAL_TIM_PWM_Start+0xd6>
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	2202      	movs	r2, #2
 800805c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008060:	e013      	b.n	800808a <HAL_TIM_PWM_Start+0xfe>
 8008062:	683b      	ldr	r3, [r7, #0]
 8008064:	2b0c      	cmp	r3, #12
 8008066:	d104      	bne.n	8008072 <HAL_TIM_PWM_Start+0xe6>
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	2202      	movs	r2, #2
 800806c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008070:	e00b      	b.n	800808a <HAL_TIM_PWM_Start+0xfe>
 8008072:	683b      	ldr	r3, [r7, #0]
 8008074:	2b10      	cmp	r3, #16
 8008076:	d104      	bne.n	8008082 <HAL_TIM_PWM_Start+0xf6>
 8008078:	687b      	ldr	r3, [r7, #4]
 800807a:	2202      	movs	r2, #2
 800807c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008080:	e003      	b.n	800808a <HAL_TIM_PWM_Start+0xfe>
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	2202      	movs	r2, #2
 8008086:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	681b      	ldr	r3, [r3, #0]
 800808e:	2201      	movs	r2, #1
 8008090:	6839      	ldr	r1, [r7, #0]
 8008092:	4618      	mov	r0, r3
 8008094:	f001 fc5a 	bl	800994c <TIM_CCxChannelCmd>
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	681b      	ldr	r3, [r3, #0]
 800809c:	4a3a      	ldr	r2, [pc, #232]	@ (8008188 <HAL_TIM_PWM_Start+0x1fc>)
 800809e:	4293      	cmp	r3, r2
 80080a0:	d018      	beq.n	80080d4 <HAL_TIM_PWM_Start+0x148>
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	681b      	ldr	r3, [r3, #0]
 80080a6:	4a39      	ldr	r2, [pc, #228]	@ (800818c <HAL_TIM_PWM_Start+0x200>)
 80080a8:	4293      	cmp	r3, r2
 80080aa:	d013      	beq.n	80080d4 <HAL_TIM_PWM_Start+0x148>
 80080ac:	687b      	ldr	r3, [r7, #4]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	4a37      	ldr	r2, [pc, #220]	@ (8008190 <HAL_TIM_PWM_Start+0x204>)
 80080b2:	4293      	cmp	r3, r2
 80080b4:	d00e      	beq.n	80080d4 <HAL_TIM_PWM_Start+0x148>
 80080b6:	687b      	ldr	r3, [r7, #4]
 80080b8:	681b      	ldr	r3, [r3, #0]
 80080ba:	4a36      	ldr	r2, [pc, #216]	@ (8008194 <HAL_TIM_PWM_Start+0x208>)
 80080bc:	4293      	cmp	r3, r2
 80080be:	d009      	beq.n	80080d4 <HAL_TIM_PWM_Start+0x148>
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	681b      	ldr	r3, [r3, #0]
 80080c4:	4a34      	ldr	r2, [pc, #208]	@ (8008198 <HAL_TIM_PWM_Start+0x20c>)
 80080c6:	4293      	cmp	r3, r2
 80080c8:	d004      	beq.n	80080d4 <HAL_TIM_PWM_Start+0x148>
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	681b      	ldr	r3, [r3, #0]
 80080ce:	4a33      	ldr	r2, [pc, #204]	@ (800819c <HAL_TIM_PWM_Start+0x210>)
 80080d0:	4293      	cmp	r3, r2
 80080d2:	d101      	bne.n	80080d8 <HAL_TIM_PWM_Start+0x14c>
 80080d4:	2301      	movs	r3, #1
 80080d6:	e000      	b.n	80080da <HAL_TIM_PWM_Start+0x14e>
 80080d8:	2300      	movs	r3, #0
 80080da:	2b00      	cmp	r3, #0
 80080dc:	d007      	beq.n	80080ee <HAL_TIM_PWM_Start+0x162>
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80080ec:	645a      	str	r2, [r3, #68]	@ 0x44
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	681b      	ldr	r3, [r3, #0]
 80080f2:	4a25      	ldr	r2, [pc, #148]	@ (8008188 <HAL_TIM_PWM_Start+0x1fc>)
 80080f4:	4293      	cmp	r3, r2
 80080f6:	d022      	beq.n	800813e <HAL_TIM_PWM_Start+0x1b2>
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	681b      	ldr	r3, [r3, #0]
 80080fc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008100:	d01d      	beq.n	800813e <HAL_TIM_PWM_Start+0x1b2>
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	681b      	ldr	r3, [r3, #0]
 8008106:	4a26      	ldr	r2, [pc, #152]	@ (80081a0 <HAL_TIM_PWM_Start+0x214>)
 8008108:	4293      	cmp	r3, r2
 800810a:	d018      	beq.n	800813e <HAL_TIM_PWM_Start+0x1b2>
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	4a24      	ldr	r2, [pc, #144]	@ (80081a4 <HAL_TIM_PWM_Start+0x218>)
 8008112:	4293      	cmp	r3, r2
 8008114:	d013      	beq.n	800813e <HAL_TIM_PWM_Start+0x1b2>
 8008116:	687b      	ldr	r3, [r7, #4]
 8008118:	681b      	ldr	r3, [r3, #0]
 800811a:	4a23      	ldr	r2, [pc, #140]	@ (80081a8 <HAL_TIM_PWM_Start+0x21c>)
 800811c:	4293      	cmp	r3, r2
 800811e:	d00e      	beq.n	800813e <HAL_TIM_PWM_Start+0x1b2>
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	681b      	ldr	r3, [r3, #0]
 8008124:	4a19      	ldr	r2, [pc, #100]	@ (800818c <HAL_TIM_PWM_Start+0x200>)
 8008126:	4293      	cmp	r3, r2
 8008128:	d009      	beq.n	800813e <HAL_TIM_PWM_Start+0x1b2>
 800812a:	687b      	ldr	r3, [r7, #4]
 800812c:	681b      	ldr	r3, [r3, #0]
 800812e:	4a18      	ldr	r2, [pc, #96]	@ (8008190 <HAL_TIM_PWM_Start+0x204>)
 8008130:	4293      	cmp	r3, r2
 8008132:	d004      	beq.n	800813e <HAL_TIM_PWM_Start+0x1b2>
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	681b      	ldr	r3, [r3, #0]
 8008138:	4a18      	ldr	r2, [pc, #96]	@ (800819c <HAL_TIM_PWM_Start+0x210>)
 800813a:	4293      	cmp	r3, r2
 800813c:	d115      	bne.n	800816a <HAL_TIM_PWM_Start+0x1de>
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	681b      	ldr	r3, [r3, #0]
 8008142:	689a      	ldr	r2, [r3, #8]
 8008144:	4b19      	ldr	r3, [pc, #100]	@ (80081ac <HAL_TIM_PWM_Start+0x220>)
 8008146:	4013      	ands	r3, r2
 8008148:	60fb      	str	r3, [r7, #12]
 800814a:	68fb      	ldr	r3, [r7, #12]
 800814c:	2b06      	cmp	r3, #6
 800814e:	d015      	beq.n	800817c <HAL_TIM_PWM_Start+0x1f0>
 8008150:	68fb      	ldr	r3, [r7, #12]
 8008152:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008156:	d011      	beq.n	800817c <HAL_TIM_PWM_Start+0x1f0>
 8008158:	687b      	ldr	r3, [r7, #4]
 800815a:	681b      	ldr	r3, [r3, #0]
 800815c:	681a      	ldr	r2, [r3, #0]
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	681b      	ldr	r3, [r3, #0]
 8008162:	f042 0201 	orr.w	r2, r2, #1
 8008166:	601a      	str	r2, [r3, #0]
 8008168:	e008      	b.n	800817c <HAL_TIM_PWM_Start+0x1f0>
 800816a:	687b      	ldr	r3, [r7, #4]
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	681a      	ldr	r2, [r3, #0]
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	f042 0201 	orr.w	r2, r2, #1
 8008178:	601a      	str	r2, [r3, #0]
 800817a:	e000      	b.n	800817e <HAL_TIM_PWM_Start+0x1f2>
 800817c:	bf00      	nop
 800817e:	2300      	movs	r3, #0
 8008180:	4618      	mov	r0, r3
 8008182:	3710      	adds	r7, #16
 8008184:	46bd      	mov	sp, r7
 8008186:	bd80      	pop	{r7, pc}
 8008188:	40012c00 	.word	0x40012c00
 800818c:	40013400 	.word	0x40013400
 8008190:	40014000 	.word	0x40014000
 8008194:	40014400 	.word	0x40014400
 8008198:	40014800 	.word	0x40014800
 800819c:	40015000 	.word	0x40015000
 80081a0:	40000400 	.word	0x40000400
 80081a4:	40000800 	.word	0x40000800
 80081a8:	40000c00 	.word	0x40000c00
 80081ac:	00010007 	.word	0x00010007

080081b0 <HAL_TIM_IC_Init>:
 80081b0:	b580      	push	{r7, lr}
 80081b2:	b082      	sub	sp, #8
 80081b4:	af00      	add	r7, sp, #0
 80081b6:	6078      	str	r0, [r7, #4]
 80081b8:	687b      	ldr	r3, [r7, #4]
 80081ba:	2b00      	cmp	r3, #0
 80081bc:	d101      	bne.n	80081c2 <HAL_TIM_IC_Init+0x12>
 80081be:	2301      	movs	r3, #1
 80081c0:	e049      	b.n	8008256 <HAL_TIM_IC_Init+0xa6>
 80081c2:	687b      	ldr	r3, [r7, #4]
 80081c4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80081c8:	b2db      	uxtb	r3, r3
 80081ca:	2b00      	cmp	r3, #0
 80081cc:	d106      	bne.n	80081dc <HAL_TIM_IC_Init+0x2c>
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	2200      	movs	r2, #0
 80081d2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80081d6:	6878      	ldr	r0, [r7, #4]
 80081d8:	f000 f841 	bl	800825e <HAL_TIM_IC_MspInit>
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	2202      	movs	r2, #2
 80081e0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80081e4:	687b      	ldr	r3, [r7, #4]
 80081e6:	681a      	ldr	r2, [r3, #0]
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	3304      	adds	r3, #4
 80081ec:	4619      	mov	r1, r3
 80081ee:	4610      	mov	r0, r2
 80081f0:	f000 fe08 	bl	8008e04 <TIM_Base_SetConfig>
 80081f4:	687b      	ldr	r3, [r7, #4]
 80081f6:	2201      	movs	r2, #1
 80081f8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80081fc:	687b      	ldr	r3, [r7, #4]
 80081fe:	2201      	movs	r2, #1
 8008200:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	2201      	movs	r2, #1
 8008208:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800820c:	687b      	ldr	r3, [r7, #4]
 800820e:	2201      	movs	r2, #1
 8008210:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008214:	687b      	ldr	r3, [r7, #4]
 8008216:	2201      	movs	r2, #1
 8008218:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800821c:	687b      	ldr	r3, [r7, #4]
 800821e:	2201      	movs	r2, #1
 8008220:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008224:	687b      	ldr	r3, [r7, #4]
 8008226:	2201      	movs	r2, #1
 8008228:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800822c:	687b      	ldr	r3, [r7, #4]
 800822e:	2201      	movs	r2, #1
 8008230:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008234:	687b      	ldr	r3, [r7, #4]
 8008236:	2201      	movs	r2, #1
 8008238:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800823c:	687b      	ldr	r3, [r7, #4]
 800823e:	2201      	movs	r2, #1
 8008240:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008244:	687b      	ldr	r3, [r7, #4]
 8008246:	2201      	movs	r2, #1
 8008248:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800824c:	687b      	ldr	r3, [r7, #4]
 800824e:	2201      	movs	r2, #1
 8008250:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008254:	2300      	movs	r3, #0
 8008256:	4618      	mov	r0, r3
 8008258:	3708      	adds	r7, #8
 800825a:	46bd      	mov	sp, r7
 800825c:	bd80      	pop	{r7, pc}

0800825e <HAL_TIM_IC_MspInit>:
 800825e:	b480      	push	{r7}
 8008260:	b083      	sub	sp, #12
 8008262:	af00      	add	r7, sp, #0
 8008264:	6078      	str	r0, [r7, #4]
 8008266:	bf00      	nop
 8008268:	370c      	adds	r7, #12
 800826a:	46bd      	mov	sp, r7
 800826c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008270:	4770      	bx	lr
	...

08008274 <HAL_TIM_IC_Start_IT>:
 8008274:	b580      	push	{r7, lr}
 8008276:	b084      	sub	sp, #16
 8008278:	af00      	add	r7, sp, #0
 800827a:	6078      	str	r0, [r7, #4]
 800827c:	6039      	str	r1, [r7, #0]
 800827e:	2300      	movs	r3, #0
 8008280:	73fb      	strb	r3, [r7, #15]
 8008282:	683b      	ldr	r3, [r7, #0]
 8008284:	2b00      	cmp	r3, #0
 8008286:	d104      	bne.n	8008292 <HAL_TIM_IC_Start_IT+0x1e>
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800828e:	b2db      	uxtb	r3, r3
 8008290:	e023      	b.n	80082da <HAL_TIM_IC_Start_IT+0x66>
 8008292:	683b      	ldr	r3, [r7, #0]
 8008294:	2b04      	cmp	r3, #4
 8008296:	d104      	bne.n	80082a2 <HAL_TIM_IC_Start_IT+0x2e>
 8008298:	687b      	ldr	r3, [r7, #4]
 800829a:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800829e:	b2db      	uxtb	r3, r3
 80082a0:	e01b      	b.n	80082da <HAL_TIM_IC_Start_IT+0x66>
 80082a2:	683b      	ldr	r3, [r7, #0]
 80082a4:	2b08      	cmp	r3, #8
 80082a6:	d104      	bne.n	80082b2 <HAL_TIM_IC_Start_IT+0x3e>
 80082a8:	687b      	ldr	r3, [r7, #4]
 80082aa:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80082ae:	b2db      	uxtb	r3, r3
 80082b0:	e013      	b.n	80082da <HAL_TIM_IC_Start_IT+0x66>
 80082b2:	683b      	ldr	r3, [r7, #0]
 80082b4:	2b0c      	cmp	r3, #12
 80082b6:	d104      	bne.n	80082c2 <HAL_TIM_IC_Start_IT+0x4e>
 80082b8:	687b      	ldr	r3, [r7, #4]
 80082ba:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80082be:	b2db      	uxtb	r3, r3
 80082c0:	e00b      	b.n	80082da <HAL_TIM_IC_Start_IT+0x66>
 80082c2:	683b      	ldr	r3, [r7, #0]
 80082c4:	2b10      	cmp	r3, #16
 80082c6:	d104      	bne.n	80082d2 <HAL_TIM_IC_Start_IT+0x5e>
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80082ce:	b2db      	uxtb	r3, r3
 80082d0:	e003      	b.n	80082da <HAL_TIM_IC_Start_IT+0x66>
 80082d2:	687b      	ldr	r3, [r7, #4]
 80082d4:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80082d8:	b2db      	uxtb	r3, r3
 80082da:	73bb      	strb	r3, [r7, #14]
 80082dc:	683b      	ldr	r3, [r7, #0]
 80082de:	2b00      	cmp	r3, #0
 80082e0:	d104      	bne.n	80082ec <HAL_TIM_IC_Start_IT+0x78>
 80082e2:	687b      	ldr	r3, [r7, #4]
 80082e4:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80082e8:	b2db      	uxtb	r3, r3
 80082ea:	e013      	b.n	8008314 <HAL_TIM_IC_Start_IT+0xa0>
 80082ec:	683b      	ldr	r3, [r7, #0]
 80082ee:	2b04      	cmp	r3, #4
 80082f0:	d104      	bne.n	80082fc <HAL_TIM_IC_Start_IT+0x88>
 80082f2:	687b      	ldr	r3, [r7, #4]
 80082f4:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80082f8:	b2db      	uxtb	r3, r3
 80082fa:	e00b      	b.n	8008314 <HAL_TIM_IC_Start_IT+0xa0>
 80082fc:	683b      	ldr	r3, [r7, #0]
 80082fe:	2b08      	cmp	r3, #8
 8008300:	d104      	bne.n	800830c <HAL_TIM_IC_Start_IT+0x98>
 8008302:	687b      	ldr	r3, [r7, #4]
 8008304:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 8008308:	b2db      	uxtb	r3, r3
 800830a:	e003      	b.n	8008314 <HAL_TIM_IC_Start_IT+0xa0>
 800830c:	687b      	ldr	r3, [r7, #4]
 800830e:	f893 3047 	ldrb.w	r3, [r3, #71]	@ 0x47
 8008312:	b2db      	uxtb	r3, r3
 8008314:	737b      	strb	r3, [r7, #13]
 8008316:	7bbb      	ldrb	r3, [r7, #14]
 8008318:	2b01      	cmp	r3, #1
 800831a:	d102      	bne.n	8008322 <HAL_TIM_IC_Start_IT+0xae>
 800831c:	7b7b      	ldrb	r3, [r7, #13]
 800831e:	2b01      	cmp	r3, #1
 8008320:	d001      	beq.n	8008326 <HAL_TIM_IC_Start_IT+0xb2>
 8008322:	2301      	movs	r3, #1
 8008324:	e0e2      	b.n	80084ec <HAL_TIM_IC_Start_IT+0x278>
 8008326:	683b      	ldr	r3, [r7, #0]
 8008328:	2b00      	cmp	r3, #0
 800832a:	d104      	bne.n	8008336 <HAL_TIM_IC_Start_IT+0xc2>
 800832c:	687b      	ldr	r3, [r7, #4]
 800832e:	2202      	movs	r2, #2
 8008330:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008334:	e023      	b.n	800837e <HAL_TIM_IC_Start_IT+0x10a>
 8008336:	683b      	ldr	r3, [r7, #0]
 8008338:	2b04      	cmp	r3, #4
 800833a:	d104      	bne.n	8008346 <HAL_TIM_IC_Start_IT+0xd2>
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	2202      	movs	r2, #2
 8008340:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008344:	e01b      	b.n	800837e <HAL_TIM_IC_Start_IT+0x10a>
 8008346:	683b      	ldr	r3, [r7, #0]
 8008348:	2b08      	cmp	r3, #8
 800834a:	d104      	bne.n	8008356 <HAL_TIM_IC_Start_IT+0xe2>
 800834c:	687b      	ldr	r3, [r7, #4]
 800834e:	2202      	movs	r2, #2
 8008350:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008354:	e013      	b.n	800837e <HAL_TIM_IC_Start_IT+0x10a>
 8008356:	683b      	ldr	r3, [r7, #0]
 8008358:	2b0c      	cmp	r3, #12
 800835a:	d104      	bne.n	8008366 <HAL_TIM_IC_Start_IT+0xf2>
 800835c:	687b      	ldr	r3, [r7, #4]
 800835e:	2202      	movs	r2, #2
 8008360:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008364:	e00b      	b.n	800837e <HAL_TIM_IC_Start_IT+0x10a>
 8008366:	683b      	ldr	r3, [r7, #0]
 8008368:	2b10      	cmp	r3, #16
 800836a:	d104      	bne.n	8008376 <HAL_TIM_IC_Start_IT+0x102>
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	2202      	movs	r2, #2
 8008370:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008374:	e003      	b.n	800837e <HAL_TIM_IC_Start_IT+0x10a>
 8008376:	687b      	ldr	r3, [r7, #4]
 8008378:	2202      	movs	r2, #2
 800837a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800837e:	683b      	ldr	r3, [r7, #0]
 8008380:	2b00      	cmp	r3, #0
 8008382:	d104      	bne.n	800838e <HAL_TIM_IC_Start_IT+0x11a>
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	2202      	movs	r2, #2
 8008388:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800838c:	e013      	b.n	80083b6 <HAL_TIM_IC_Start_IT+0x142>
 800838e:	683b      	ldr	r3, [r7, #0]
 8008390:	2b04      	cmp	r3, #4
 8008392:	d104      	bne.n	800839e <HAL_TIM_IC_Start_IT+0x12a>
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	2202      	movs	r2, #2
 8008398:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800839c:	e00b      	b.n	80083b6 <HAL_TIM_IC_Start_IT+0x142>
 800839e:	683b      	ldr	r3, [r7, #0]
 80083a0:	2b08      	cmp	r3, #8
 80083a2:	d104      	bne.n	80083ae <HAL_TIM_IC_Start_IT+0x13a>
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	2202      	movs	r2, #2
 80083a8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80083ac:	e003      	b.n	80083b6 <HAL_TIM_IC_Start_IT+0x142>
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	2202      	movs	r2, #2
 80083b2:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80083b6:	683b      	ldr	r3, [r7, #0]
 80083b8:	2b0c      	cmp	r3, #12
 80083ba:	d841      	bhi.n	8008440 <HAL_TIM_IC_Start_IT+0x1cc>
 80083bc:	a201      	add	r2, pc, #4	@ (adr r2, 80083c4 <HAL_TIM_IC_Start_IT+0x150>)
 80083be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80083c2:	bf00      	nop
 80083c4:	080083f9 	.word	0x080083f9
 80083c8:	08008441 	.word	0x08008441
 80083cc:	08008441 	.word	0x08008441
 80083d0:	08008441 	.word	0x08008441
 80083d4:	0800840b 	.word	0x0800840b
 80083d8:	08008441 	.word	0x08008441
 80083dc:	08008441 	.word	0x08008441
 80083e0:	08008441 	.word	0x08008441
 80083e4:	0800841d 	.word	0x0800841d
 80083e8:	08008441 	.word	0x08008441
 80083ec:	08008441 	.word	0x08008441
 80083f0:	08008441 	.word	0x08008441
 80083f4:	0800842f 	.word	0x0800842f
 80083f8:	687b      	ldr	r3, [r7, #4]
 80083fa:	681b      	ldr	r3, [r3, #0]
 80083fc:	68da      	ldr	r2, [r3, #12]
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	681b      	ldr	r3, [r3, #0]
 8008402:	f042 0202 	orr.w	r2, r2, #2
 8008406:	60da      	str	r2, [r3, #12]
 8008408:	e01d      	b.n	8008446 <HAL_TIM_IC_Start_IT+0x1d2>
 800840a:	687b      	ldr	r3, [r7, #4]
 800840c:	681b      	ldr	r3, [r3, #0]
 800840e:	68da      	ldr	r2, [r3, #12]
 8008410:	687b      	ldr	r3, [r7, #4]
 8008412:	681b      	ldr	r3, [r3, #0]
 8008414:	f042 0204 	orr.w	r2, r2, #4
 8008418:	60da      	str	r2, [r3, #12]
 800841a:	e014      	b.n	8008446 <HAL_TIM_IC_Start_IT+0x1d2>
 800841c:	687b      	ldr	r3, [r7, #4]
 800841e:	681b      	ldr	r3, [r3, #0]
 8008420:	68da      	ldr	r2, [r3, #12]
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	681b      	ldr	r3, [r3, #0]
 8008426:	f042 0208 	orr.w	r2, r2, #8
 800842a:	60da      	str	r2, [r3, #12]
 800842c:	e00b      	b.n	8008446 <HAL_TIM_IC_Start_IT+0x1d2>
 800842e:	687b      	ldr	r3, [r7, #4]
 8008430:	681b      	ldr	r3, [r3, #0]
 8008432:	68da      	ldr	r2, [r3, #12]
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	681b      	ldr	r3, [r3, #0]
 8008438:	f042 0210 	orr.w	r2, r2, #16
 800843c:	60da      	str	r2, [r3, #12]
 800843e:	e002      	b.n	8008446 <HAL_TIM_IC_Start_IT+0x1d2>
 8008440:	2301      	movs	r3, #1
 8008442:	73fb      	strb	r3, [r7, #15]
 8008444:	bf00      	nop
 8008446:	7bfb      	ldrb	r3, [r7, #15]
 8008448:	2b00      	cmp	r3, #0
 800844a:	d14e      	bne.n	80084ea <HAL_TIM_IC_Start_IT+0x276>
 800844c:	687b      	ldr	r3, [r7, #4]
 800844e:	681b      	ldr	r3, [r3, #0]
 8008450:	2201      	movs	r2, #1
 8008452:	6839      	ldr	r1, [r7, #0]
 8008454:	4618      	mov	r0, r3
 8008456:	f001 fa79 	bl	800994c <TIM_CCxChannelCmd>
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	681b      	ldr	r3, [r3, #0]
 800845e:	4a25      	ldr	r2, [pc, #148]	@ (80084f4 <HAL_TIM_IC_Start_IT+0x280>)
 8008460:	4293      	cmp	r3, r2
 8008462:	d022      	beq.n	80084aa <HAL_TIM_IC_Start_IT+0x236>
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	681b      	ldr	r3, [r3, #0]
 8008468:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800846c:	d01d      	beq.n	80084aa <HAL_TIM_IC_Start_IT+0x236>
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	681b      	ldr	r3, [r3, #0]
 8008472:	4a21      	ldr	r2, [pc, #132]	@ (80084f8 <HAL_TIM_IC_Start_IT+0x284>)
 8008474:	4293      	cmp	r3, r2
 8008476:	d018      	beq.n	80084aa <HAL_TIM_IC_Start_IT+0x236>
 8008478:	687b      	ldr	r3, [r7, #4]
 800847a:	681b      	ldr	r3, [r3, #0]
 800847c:	4a1f      	ldr	r2, [pc, #124]	@ (80084fc <HAL_TIM_IC_Start_IT+0x288>)
 800847e:	4293      	cmp	r3, r2
 8008480:	d013      	beq.n	80084aa <HAL_TIM_IC_Start_IT+0x236>
 8008482:	687b      	ldr	r3, [r7, #4]
 8008484:	681b      	ldr	r3, [r3, #0]
 8008486:	4a1e      	ldr	r2, [pc, #120]	@ (8008500 <HAL_TIM_IC_Start_IT+0x28c>)
 8008488:	4293      	cmp	r3, r2
 800848a:	d00e      	beq.n	80084aa <HAL_TIM_IC_Start_IT+0x236>
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	681b      	ldr	r3, [r3, #0]
 8008490:	4a1c      	ldr	r2, [pc, #112]	@ (8008504 <HAL_TIM_IC_Start_IT+0x290>)
 8008492:	4293      	cmp	r3, r2
 8008494:	d009      	beq.n	80084aa <HAL_TIM_IC_Start_IT+0x236>
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	681b      	ldr	r3, [r3, #0]
 800849a:	4a1b      	ldr	r2, [pc, #108]	@ (8008508 <HAL_TIM_IC_Start_IT+0x294>)
 800849c:	4293      	cmp	r3, r2
 800849e:	d004      	beq.n	80084aa <HAL_TIM_IC_Start_IT+0x236>
 80084a0:	687b      	ldr	r3, [r7, #4]
 80084a2:	681b      	ldr	r3, [r3, #0]
 80084a4:	4a19      	ldr	r2, [pc, #100]	@ (800850c <HAL_TIM_IC_Start_IT+0x298>)
 80084a6:	4293      	cmp	r3, r2
 80084a8:	d115      	bne.n	80084d6 <HAL_TIM_IC_Start_IT+0x262>
 80084aa:	687b      	ldr	r3, [r7, #4]
 80084ac:	681b      	ldr	r3, [r3, #0]
 80084ae:	689a      	ldr	r2, [r3, #8]
 80084b0:	4b17      	ldr	r3, [pc, #92]	@ (8008510 <HAL_TIM_IC_Start_IT+0x29c>)
 80084b2:	4013      	ands	r3, r2
 80084b4:	60bb      	str	r3, [r7, #8]
 80084b6:	68bb      	ldr	r3, [r7, #8]
 80084b8:	2b06      	cmp	r3, #6
 80084ba:	d015      	beq.n	80084e8 <HAL_TIM_IC_Start_IT+0x274>
 80084bc:	68bb      	ldr	r3, [r7, #8]
 80084be:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80084c2:	d011      	beq.n	80084e8 <HAL_TIM_IC_Start_IT+0x274>
 80084c4:	687b      	ldr	r3, [r7, #4]
 80084c6:	681b      	ldr	r3, [r3, #0]
 80084c8:	681a      	ldr	r2, [r3, #0]
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	681b      	ldr	r3, [r3, #0]
 80084ce:	f042 0201 	orr.w	r2, r2, #1
 80084d2:	601a      	str	r2, [r3, #0]
 80084d4:	e008      	b.n	80084e8 <HAL_TIM_IC_Start_IT+0x274>
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	681b      	ldr	r3, [r3, #0]
 80084da:	681a      	ldr	r2, [r3, #0]
 80084dc:	687b      	ldr	r3, [r7, #4]
 80084de:	681b      	ldr	r3, [r3, #0]
 80084e0:	f042 0201 	orr.w	r2, r2, #1
 80084e4:	601a      	str	r2, [r3, #0]
 80084e6:	e000      	b.n	80084ea <HAL_TIM_IC_Start_IT+0x276>
 80084e8:	bf00      	nop
 80084ea:	7bfb      	ldrb	r3, [r7, #15]
 80084ec:	4618      	mov	r0, r3
 80084ee:	3710      	adds	r7, #16
 80084f0:	46bd      	mov	sp, r7
 80084f2:	bd80      	pop	{r7, pc}
 80084f4:	40012c00 	.word	0x40012c00
 80084f8:	40000400 	.word	0x40000400
 80084fc:	40000800 	.word	0x40000800
 8008500:	40000c00 	.word	0x40000c00
 8008504:	40013400 	.word	0x40013400
 8008508:	40014000 	.word	0x40014000
 800850c:	40015000 	.word	0x40015000
 8008510:	00010007 	.word	0x00010007

08008514 <HAL_TIM_IRQHandler>:
 8008514:	b580      	push	{r7, lr}
 8008516:	b084      	sub	sp, #16
 8008518:	af00      	add	r7, sp, #0
 800851a:	6078      	str	r0, [r7, #4]
 800851c:	687b      	ldr	r3, [r7, #4]
 800851e:	681b      	ldr	r3, [r3, #0]
 8008520:	68db      	ldr	r3, [r3, #12]
 8008522:	60fb      	str	r3, [r7, #12]
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	681b      	ldr	r3, [r3, #0]
 8008528:	691b      	ldr	r3, [r3, #16]
 800852a:	60bb      	str	r3, [r7, #8]
 800852c:	68bb      	ldr	r3, [r7, #8]
 800852e:	f003 0302 	and.w	r3, r3, #2
 8008532:	2b00      	cmp	r3, #0
 8008534:	d020      	beq.n	8008578 <HAL_TIM_IRQHandler+0x64>
 8008536:	68fb      	ldr	r3, [r7, #12]
 8008538:	f003 0302 	and.w	r3, r3, #2
 800853c:	2b00      	cmp	r3, #0
 800853e:	d01b      	beq.n	8008578 <HAL_TIM_IRQHandler+0x64>
 8008540:	687b      	ldr	r3, [r7, #4]
 8008542:	681b      	ldr	r3, [r3, #0]
 8008544:	f06f 0202 	mvn.w	r2, #2
 8008548:	611a      	str	r2, [r3, #16]
 800854a:	687b      	ldr	r3, [r7, #4]
 800854c:	2201      	movs	r2, #1
 800854e:	771a      	strb	r2, [r3, #28]
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	681b      	ldr	r3, [r3, #0]
 8008554:	699b      	ldr	r3, [r3, #24]
 8008556:	f003 0303 	and.w	r3, r3, #3
 800855a:	2b00      	cmp	r3, #0
 800855c:	d003      	beq.n	8008566 <HAL_TIM_IRQHandler+0x52>
 800855e:	6878      	ldr	r0, [r7, #4]
 8008560:	f7fa f998 	bl	8002894 <HAL_TIM_IC_CaptureCallback>
 8008564:	e005      	b.n	8008572 <HAL_TIM_IRQHandler+0x5e>
 8008566:	6878      	ldr	r0, [r7, #4]
 8008568:	f000 fc2e 	bl	8008dc8 <HAL_TIM_OC_DelayElapsedCallback>
 800856c:	6878      	ldr	r0, [r7, #4]
 800856e:	f000 fc35 	bl	8008ddc <HAL_TIM_PWM_PulseFinishedCallback>
 8008572:	687b      	ldr	r3, [r7, #4]
 8008574:	2200      	movs	r2, #0
 8008576:	771a      	strb	r2, [r3, #28]
 8008578:	68bb      	ldr	r3, [r7, #8]
 800857a:	f003 0304 	and.w	r3, r3, #4
 800857e:	2b00      	cmp	r3, #0
 8008580:	d020      	beq.n	80085c4 <HAL_TIM_IRQHandler+0xb0>
 8008582:	68fb      	ldr	r3, [r7, #12]
 8008584:	f003 0304 	and.w	r3, r3, #4
 8008588:	2b00      	cmp	r3, #0
 800858a:	d01b      	beq.n	80085c4 <HAL_TIM_IRQHandler+0xb0>
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	681b      	ldr	r3, [r3, #0]
 8008590:	f06f 0204 	mvn.w	r2, #4
 8008594:	611a      	str	r2, [r3, #16]
 8008596:	687b      	ldr	r3, [r7, #4]
 8008598:	2202      	movs	r2, #2
 800859a:	771a      	strb	r2, [r3, #28]
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	681b      	ldr	r3, [r3, #0]
 80085a0:	699b      	ldr	r3, [r3, #24]
 80085a2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80085a6:	2b00      	cmp	r3, #0
 80085a8:	d003      	beq.n	80085b2 <HAL_TIM_IRQHandler+0x9e>
 80085aa:	6878      	ldr	r0, [r7, #4]
 80085ac:	f7fa f972 	bl	8002894 <HAL_TIM_IC_CaptureCallback>
 80085b0:	e005      	b.n	80085be <HAL_TIM_IRQHandler+0xaa>
 80085b2:	6878      	ldr	r0, [r7, #4]
 80085b4:	f000 fc08 	bl	8008dc8 <HAL_TIM_OC_DelayElapsedCallback>
 80085b8:	6878      	ldr	r0, [r7, #4]
 80085ba:	f000 fc0f 	bl	8008ddc <HAL_TIM_PWM_PulseFinishedCallback>
 80085be:	687b      	ldr	r3, [r7, #4]
 80085c0:	2200      	movs	r2, #0
 80085c2:	771a      	strb	r2, [r3, #28]
 80085c4:	68bb      	ldr	r3, [r7, #8]
 80085c6:	f003 0308 	and.w	r3, r3, #8
 80085ca:	2b00      	cmp	r3, #0
 80085cc:	d020      	beq.n	8008610 <HAL_TIM_IRQHandler+0xfc>
 80085ce:	68fb      	ldr	r3, [r7, #12]
 80085d0:	f003 0308 	and.w	r3, r3, #8
 80085d4:	2b00      	cmp	r3, #0
 80085d6:	d01b      	beq.n	8008610 <HAL_TIM_IRQHandler+0xfc>
 80085d8:	687b      	ldr	r3, [r7, #4]
 80085da:	681b      	ldr	r3, [r3, #0]
 80085dc:	f06f 0208 	mvn.w	r2, #8
 80085e0:	611a      	str	r2, [r3, #16]
 80085e2:	687b      	ldr	r3, [r7, #4]
 80085e4:	2204      	movs	r2, #4
 80085e6:	771a      	strb	r2, [r3, #28]
 80085e8:	687b      	ldr	r3, [r7, #4]
 80085ea:	681b      	ldr	r3, [r3, #0]
 80085ec:	69db      	ldr	r3, [r3, #28]
 80085ee:	f003 0303 	and.w	r3, r3, #3
 80085f2:	2b00      	cmp	r3, #0
 80085f4:	d003      	beq.n	80085fe <HAL_TIM_IRQHandler+0xea>
 80085f6:	6878      	ldr	r0, [r7, #4]
 80085f8:	f7fa f94c 	bl	8002894 <HAL_TIM_IC_CaptureCallback>
 80085fc:	e005      	b.n	800860a <HAL_TIM_IRQHandler+0xf6>
 80085fe:	6878      	ldr	r0, [r7, #4]
 8008600:	f000 fbe2 	bl	8008dc8 <HAL_TIM_OC_DelayElapsedCallback>
 8008604:	6878      	ldr	r0, [r7, #4]
 8008606:	f000 fbe9 	bl	8008ddc <HAL_TIM_PWM_PulseFinishedCallback>
 800860a:	687b      	ldr	r3, [r7, #4]
 800860c:	2200      	movs	r2, #0
 800860e:	771a      	strb	r2, [r3, #28]
 8008610:	68bb      	ldr	r3, [r7, #8]
 8008612:	f003 0310 	and.w	r3, r3, #16
 8008616:	2b00      	cmp	r3, #0
 8008618:	d020      	beq.n	800865c <HAL_TIM_IRQHandler+0x148>
 800861a:	68fb      	ldr	r3, [r7, #12]
 800861c:	f003 0310 	and.w	r3, r3, #16
 8008620:	2b00      	cmp	r3, #0
 8008622:	d01b      	beq.n	800865c <HAL_TIM_IRQHandler+0x148>
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	681b      	ldr	r3, [r3, #0]
 8008628:	f06f 0210 	mvn.w	r2, #16
 800862c:	611a      	str	r2, [r3, #16]
 800862e:	687b      	ldr	r3, [r7, #4]
 8008630:	2208      	movs	r2, #8
 8008632:	771a      	strb	r2, [r3, #28]
 8008634:	687b      	ldr	r3, [r7, #4]
 8008636:	681b      	ldr	r3, [r3, #0]
 8008638:	69db      	ldr	r3, [r3, #28]
 800863a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800863e:	2b00      	cmp	r3, #0
 8008640:	d003      	beq.n	800864a <HAL_TIM_IRQHandler+0x136>
 8008642:	6878      	ldr	r0, [r7, #4]
 8008644:	f7fa f926 	bl	8002894 <HAL_TIM_IC_CaptureCallback>
 8008648:	e005      	b.n	8008656 <HAL_TIM_IRQHandler+0x142>
 800864a:	6878      	ldr	r0, [r7, #4]
 800864c:	f000 fbbc 	bl	8008dc8 <HAL_TIM_OC_DelayElapsedCallback>
 8008650:	6878      	ldr	r0, [r7, #4]
 8008652:	f000 fbc3 	bl	8008ddc <HAL_TIM_PWM_PulseFinishedCallback>
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	2200      	movs	r2, #0
 800865a:	771a      	strb	r2, [r3, #28]
 800865c:	68bb      	ldr	r3, [r7, #8]
 800865e:	f003 0301 	and.w	r3, r3, #1
 8008662:	2b00      	cmp	r3, #0
 8008664:	d00c      	beq.n	8008680 <HAL_TIM_IRQHandler+0x16c>
 8008666:	68fb      	ldr	r3, [r7, #12]
 8008668:	f003 0301 	and.w	r3, r3, #1
 800866c:	2b00      	cmp	r3, #0
 800866e:	d007      	beq.n	8008680 <HAL_TIM_IRQHandler+0x16c>
 8008670:	687b      	ldr	r3, [r7, #4]
 8008672:	681b      	ldr	r3, [r3, #0]
 8008674:	f06f 0201 	mvn.w	r2, #1
 8008678:	611a      	str	r2, [r3, #16]
 800867a:	6878      	ldr	r0, [r7, #4]
 800867c:	f7fa f88c 	bl	8002798 <HAL_TIM_PeriodElapsedCallback>
 8008680:	68bb      	ldr	r3, [r7, #8]
 8008682:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008686:	2b00      	cmp	r3, #0
 8008688:	d104      	bne.n	8008694 <HAL_TIM_IRQHandler+0x180>
 800868a:	68bb      	ldr	r3, [r7, #8]
 800868c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8008690:	2b00      	cmp	r3, #0
 8008692:	d00c      	beq.n	80086ae <HAL_TIM_IRQHandler+0x19a>
 8008694:	68fb      	ldr	r3, [r7, #12]
 8008696:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800869a:	2b00      	cmp	r3, #0
 800869c:	d007      	beq.n	80086ae <HAL_TIM_IRQHandler+0x19a>
 800869e:	687b      	ldr	r3, [r7, #4]
 80086a0:	681b      	ldr	r3, [r3, #0]
 80086a2:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 80086a6:	611a      	str	r2, [r3, #16]
 80086a8:	6878      	ldr	r0, [r7, #4]
 80086aa:	f001 faa9 	bl	8009c00 <HAL_TIMEx_BreakCallback>
 80086ae:	68bb      	ldr	r3, [r7, #8]
 80086b0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80086b4:	2b00      	cmp	r3, #0
 80086b6:	d00c      	beq.n	80086d2 <HAL_TIM_IRQHandler+0x1be>
 80086b8:	68fb      	ldr	r3, [r7, #12]
 80086ba:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80086be:	2b00      	cmp	r3, #0
 80086c0:	d007      	beq.n	80086d2 <HAL_TIM_IRQHandler+0x1be>
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	681b      	ldr	r3, [r3, #0]
 80086c6:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 80086ca:	611a      	str	r2, [r3, #16]
 80086cc:	6878      	ldr	r0, [r7, #4]
 80086ce:	f001 faa1 	bl	8009c14 <HAL_TIMEx_Break2Callback>
 80086d2:	68bb      	ldr	r3, [r7, #8]
 80086d4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80086d8:	2b00      	cmp	r3, #0
 80086da:	d00c      	beq.n	80086f6 <HAL_TIM_IRQHandler+0x1e2>
 80086dc:	68fb      	ldr	r3, [r7, #12]
 80086de:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80086e2:	2b00      	cmp	r3, #0
 80086e4:	d007      	beq.n	80086f6 <HAL_TIM_IRQHandler+0x1e2>
 80086e6:	687b      	ldr	r3, [r7, #4]
 80086e8:	681b      	ldr	r3, [r3, #0]
 80086ea:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 80086ee:	611a      	str	r2, [r3, #16]
 80086f0:	6878      	ldr	r0, [r7, #4]
 80086f2:	f000 fb7d 	bl	8008df0 <HAL_TIM_TriggerCallback>
 80086f6:	68bb      	ldr	r3, [r7, #8]
 80086f8:	f003 0320 	and.w	r3, r3, #32
 80086fc:	2b00      	cmp	r3, #0
 80086fe:	d00c      	beq.n	800871a <HAL_TIM_IRQHandler+0x206>
 8008700:	68fb      	ldr	r3, [r7, #12]
 8008702:	f003 0320 	and.w	r3, r3, #32
 8008706:	2b00      	cmp	r3, #0
 8008708:	d007      	beq.n	800871a <HAL_TIM_IRQHandler+0x206>
 800870a:	687b      	ldr	r3, [r7, #4]
 800870c:	681b      	ldr	r3, [r3, #0]
 800870e:	f06f 0220 	mvn.w	r2, #32
 8008712:	611a      	str	r2, [r3, #16]
 8008714:	6878      	ldr	r0, [r7, #4]
 8008716:	f001 fa69 	bl	8009bec <HAL_TIMEx_CommutCallback>
 800871a:	68bb      	ldr	r3, [r7, #8]
 800871c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8008720:	2b00      	cmp	r3, #0
 8008722:	d00c      	beq.n	800873e <HAL_TIM_IRQHandler+0x22a>
 8008724:	68fb      	ldr	r3, [r7, #12]
 8008726:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800872a:	2b00      	cmp	r3, #0
 800872c:	d007      	beq.n	800873e <HAL_TIM_IRQHandler+0x22a>
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	681b      	ldr	r3, [r3, #0]
 8008732:	f46f 1280 	mvn.w	r2, #1048576	@ 0x100000
 8008736:	611a      	str	r2, [r3, #16]
 8008738:	6878      	ldr	r0, [r7, #4]
 800873a:	f001 fa75 	bl	8009c28 <HAL_TIMEx_EncoderIndexCallback>
 800873e:	68bb      	ldr	r3, [r7, #8]
 8008740:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8008744:	2b00      	cmp	r3, #0
 8008746:	d00c      	beq.n	8008762 <HAL_TIM_IRQHandler+0x24e>
 8008748:	68fb      	ldr	r3, [r7, #12]
 800874a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800874e:	2b00      	cmp	r3, #0
 8008750:	d007      	beq.n	8008762 <HAL_TIM_IRQHandler+0x24e>
 8008752:	687b      	ldr	r3, [r7, #4]
 8008754:	681b      	ldr	r3, [r3, #0]
 8008756:	f46f 1200 	mvn.w	r2, #2097152	@ 0x200000
 800875a:	611a      	str	r2, [r3, #16]
 800875c:	6878      	ldr	r0, [r7, #4]
 800875e:	f001 fa6d 	bl	8009c3c <HAL_TIMEx_DirectionChangeCallback>
 8008762:	68bb      	ldr	r3, [r7, #8]
 8008764:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8008768:	2b00      	cmp	r3, #0
 800876a:	d00c      	beq.n	8008786 <HAL_TIM_IRQHandler+0x272>
 800876c:	68fb      	ldr	r3, [r7, #12]
 800876e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8008772:	2b00      	cmp	r3, #0
 8008774:	d007      	beq.n	8008786 <HAL_TIM_IRQHandler+0x272>
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	681b      	ldr	r3, [r3, #0]
 800877a:	f46f 0280 	mvn.w	r2, #4194304	@ 0x400000
 800877e:	611a      	str	r2, [r3, #16]
 8008780:	6878      	ldr	r0, [r7, #4]
 8008782:	f001 fa65 	bl	8009c50 <HAL_TIMEx_IndexErrorCallback>
 8008786:	68bb      	ldr	r3, [r7, #8]
 8008788:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800878c:	2b00      	cmp	r3, #0
 800878e:	d00c      	beq.n	80087aa <HAL_TIM_IRQHandler+0x296>
 8008790:	68fb      	ldr	r3, [r7, #12]
 8008792:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008796:	2b00      	cmp	r3, #0
 8008798:	d007      	beq.n	80087aa <HAL_TIM_IRQHandler+0x296>
 800879a:	687b      	ldr	r3, [r7, #4]
 800879c:	681b      	ldr	r3, [r3, #0]
 800879e:	f46f 0200 	mvn.w	r2, #8388608	@ 0x800000
 80087a2:	611a      	str	r2, [r3, #16]
 80087a4:	6878      	ldr	r0, [r7, #4]
 80087a6:	f001 fa5d 	bl	8009c64 <HAL_TIMEx_TransitionErrorCallback>
 80087aa:	bf00      	nop
 80087ac:	3710      	adds	r7, #16
 80087ae:	46bd      	mov	sp, r7
 80087b0:	bd80      	pop	{r7, pc}

080087b2 <HAL_TIM_IC_ConfigChannel>:
 80087b2:	b580      	push	{r7, lr}
 80087b4:	b086      	sub	sp, #24
 80087b6:	af00      	add	r7, sp, #0
 80087b8:	60f8      	str	r0, [r7, #12]
 80087ba:	60b9      	str	r1, [r7, #8]
 80087bc:	607a      	str	r2, [r7, #4]
 80087be:	2300      	movs	r3, #0
 80087c0:	75fb      	strb	r3, [r7, #23]
 80087c2:	68fb      	ldr	r3, [r7, #12]
 80087c4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80087c8:	2b01      	cmp	r3, #1
 80087ca:	d101      	bne.n	80087d0 <HAL_TIM_IC_ConfigChannel+0x1e>
 80087cc:	2302      	movs	r3, #2
 80087ce:	e088      	b.n	80088e2 <HAL_TIM_IC_ConfigChannel+0x130>
 80087d0:	68fb      	ldr	r3, [r7, #12]
 80087d2:	2201      	movs	r2, #1
 80087d4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80087d8:	687b      	ldr	r3, [r7, #4]
 80087da:	2b00      	cmp	r3, #0
 80087dc:	d11b      	bne.n	8008816 <HAL_TIM_IC_ConfigChannel+0x64>
 80087de:	68fb      	ldr	r3, [r7, #12]
 80087e0:	6818      	ldr	r0, [r3, #0]
 80087e2:	68bb      	ldr	r3, [r7, #8]
 80087e4:	6819      	ldr	r1, [r3, #0]
 80087e6:	68bb      	ldr	r3, [r7, #8]
 80087e8:	685a      	ldr	r2, [r3, #4]
 80087ea:	68bb      	ldr	r3, [r7, #8]
 80087ec:	68db      	ldr	r3, [r3, #12]
 80087ee:	f000 fee7 	bl	80095c0 <TIM_TI1_SetConfig>
 80087f2:	68fb      	ldr	r3, [r7, #12]
 80087f4:	681b      	ldr	r3, [r3, #0]
 80087f6:	699a      	ldr	r2, [r3, #24]
 80087f8:	68fb      	ldr	r3, [r7, #12]
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	f022 020c 	bic.w	r2, r2, #12
 8008800:	619a      	str	r2, [r3, #24]
 8008802:	68fb      	ldr	r3, [r7, #12]
 8008804:	681b      	ldr	r3, [r3, #0]
 8008806:	6999      	ldr	r1, [r3, #24]
 8008808:	68bb      	ldr	r3, [r7, #8]
 800880a:	689a      	ldr	r2, [r3, #8]
 800880c:	68fb      	ldr	r3, [r7, #12]
 800880e:	681b      	ldr	r3, [r3, #0]
 8008810:	430a      	orrs	r2, r1
 8008812:	619a      	str	r2, [r3, #24]
 8008814:	e060      	b.n	80088d8 <HAL_TIM_IC_ConfigChannel+0x126>
 8008816:	687b      	ldr	r3, [r7, #4]
 8008818:	2b04      	cmp	r3, #4
 800881a:	d11c      	bne.n	8008856 <HAL_TIM_IC_ConfigChannel+0xa4>
 800881c:	68fb      	ldr	r3, [r7, #12]
 800881e:	6818      	ldr	r0, [r3, #0]
 8008820:	68bb      	ldr	r3, [r7, #8]
 8008822:	6819      	ldr	r1, [r3, #0]
 8008824:	68bb      	ldr	r3, [r7, #8]
 8008826:	685a      	ldr	r2, [r3, #4]
 8008828:	68bb      	ldr	r3, [r7, #8]
 800882a:	68db      	ldr	r3, [r3, #12]
 800882c:	f000 ff6b 	bl	8009706 <TIM_TI2_SetConfig>
 8008830:	68fb      	ldr	r3, [r7, #12]
 8008832:	681b      	ldr	r3, [r3, #0]
 8008834:	699a      	ldr	r2, [r3, #24]
 8008836:	68fb      	ldr	r3, [r7, #12]
 8008838:	681b      	ldr	r3, [r3, #0]
 800883a:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800883e:	619a      	str	r2, [r3, #24]
 8008840:	68fb      	ldr	r3, [r7, #12]
 8008842:	681b      	ldr	r3, [r3, #0]
 8008844:	6999      	ldr	r1, [r3, #24]
 8008846:	68bb      	ldr	r3, [r7, #8]
 8008848:	689b      	ldr	r3, [r3, #8]
 800884a:	021a      	lsls	r2, r3, #8
 800884c:	68fb      	ldr	r3, [r7, #12]
 800884e:	681b      	ldr	r3, [r3, #0]
 8008850:	430a      	orrs	r2, r1
 8008852:	619a      	str	r2, [r3, #24]
 8008854:	e040      	b.n	80088d8 <HAL_TIM_IC_ConfigChannel+0x126>
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	2b08      	cmp	r3, #8
 800885a:	d11b      	bne.n	8008894 <HAL_TIM_IC_ConfigChannel+0xe2>
 800885c:	68fb      	ldr	r3, [r7, #12]
 800885e:	6818      	ldr	r0, [r3, #0]
 8008860:	68bb      	ldr	r3, [r7, #8]
 8008862:	6819      	ldr	r1, [r3, #0]
 8008864:	68bb      	ldr	r3, [r7, #8]
 8008866:	685a      	ldr	r2, [r3, #4]
 8008868:	68bb      	ldr	r3, [r7, #8]
 800886a:	68db      	ldr	r3, [r3, #12]
 800886c:	f000 ffb8 	bl	80097e0 <TIM_TI3_SetConfig>
 8008870:	68fb      	ldr	r3, [r7, #12]
 8008872:	681b      	ldr	r3, [r3, #0]
 8008874:	69da      	ldr	r2, [r3, #28]
 8008876:	68fb      	ldr	r3, [r7, #12]
 8008878:	681b      	ldr	r3, [r3, #0]
 800887a:	f022 020c 	bic.w	r2, r2, #12
 800887e:	61da      	str	r2, [r3, #28]
 8008880:	68fb      	ldr	r3, [r7, #12]
 8008882:	681b      	ldr	r3, [r3, #0]
 8008884:	69d9      	ldr	r1, [r3, #28]
 8008886:	68bb      	ldr	r3, [r7, #8]
 8008888:	689a      	ldr	r2, [r3, #8]
 800888a:	68fb      	ldr	r3, [r7, #12]
 800888c:	681b      	ldr	r3, [r3, #0]
 800888e:	430a      	orrs	r2, r1
 8008890:	61da      	str	r2, [r3, #28]
 8008892:	e021      	b.n	80088d8 <HAL_TIM_IC_ConfigChannel+0x126>
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	2b0c      	cmp	r3, #12
 8008898:	d11c      	bne.n	80088d4 <HAL_TIM_IC_ConfigChannel+0x122>
 800889a:	68fb      	ldr	r3, [r7, #12]
 800889c:	6818      	ldr	r0, [r3, #0]
 800889e:	68bb      	ldr	r3, [r7, #8]
 80088a0:	6819      	ldr	r1, [r3, #0]
 80088a2:	68bb      	ldr	r3, [r7, #8]
 80088a4:	685a      	ldr	r2, [r3, #4]
 80088a6:	68bb      	ldr	r3, [r7, #8]
 80088a8:	68db      	ldr	r3, [r3, #12]
 80088aa:	f000 ffd5 	bl	8009858 <TIM_TI4_SetConfig>
 80088ae:	68fb      	ldr	r3, [r7, #12]
 80088b0:	681b      	ldr	r3, [r3, #0]
 80088b2:	69da      	ldr	r2, [r3, #28]
 80088b4:	68fb      	ldr	r3, [r7, #12]
 80088b6:	681b      	ldr	r3, [r3, #0]
 80088b8:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80088bc:	61da      	str	r2, [r3, #28]
 80088be:	68fb      	ldr	r3, [r7, #12]
 80088c0:	681b      	ldr	r3, [r3, #0]
 80088c2:	69d9      	ldr	r1, [r3, #28]
 80088c4:	68bb      	ldr	r3, [r7, #8]
 80088c6:	689b      	ldr	r3, [r3, #8]
 80088c8:	021a      	lsls	r2, r3, #8
 80088ca:	68fb      	ldr	r3, [r7, #12]
 80088cc:	681b      	ldr	r3, [r3, #0]
 80088ce:	430a      	orrs	r2, r1
 80088d0:	61da      	str	r2, [r3, #28]
 80088d2:	e001      	b.n	80088d8 <HAL_TIM_IC_ConfigChannel+0x126>
 80088d4:	2301      	movs	r3, #1
 80088d6:	75fb      	strb	r3, [r7, #23]
 80088d8:	68fb      	ldr	r3, [r7, #12]
 80088da:	2200      	movs	r2, #0
 80088dc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80088e0:	7dfb      	ldrb	r3, [r7, #23]
 80088e2:	4618      	mov	r0, r3
 80088e4:	3718      	adds	r7, #24
 80088e6:	46bd      	mov	sp, r7
 80088e8:	bd80      	pop	{r7, pc}
	...

080088ec <HAL_TIM_PWM_ConfigChannel>:
 80088ec:	b580      	push	{r7, lr}
 80088ee:	b086      	sub	sp, #24
 80088f0:	af00      	add	r7, sp, #0
 80088f2:	60f8      	str	r0, [r7, #12]
 80088f4:	60b9      	str	r1, [r7, #8]
 80088f6:	607a      	str	r2, [r7, #4]
 80088f8:	2300      	movs	r3, #0
 80088fa:	75fb      	strb	r3, [r7, #23]
 80088fc:	68fb      	ldr	r3, [r7, #12]
 80088fe:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008902:	2b01      	cmp	r3, #1
 8008904:	d101      	bne.n	800890a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8008906:	2302      	movs	r3, #2
 8008908:	e0ff      	b.n	8008b0a <HAL_TIM_PWM_ConfigChannel+0x21e>
 800890a:	68fb      	ldr	r3, [r7, #12]
 800890c:	2201      	movs	r2, #1
 800890e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	2b14      	cmp	r3, #20
 8008916:	f200 80f0 	bhi.w	8008afa <HAL_TIM_PWM_ConfigChannel+0x20e>
 800891a:	a201      	add	r2, pc, #4	@ (adr r2, 8008920 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800891c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008920:	08008975 	.word	0x08008975
 8008924:	08008afb 	.word	0x08008afb
 8008928:	08008afb 	.word	0x08008afb
 800892c:	08008afb 	.word	0x08008afb
 8008930:	080089b5 	.word	0x080089b5
 8008934:	08008afb 	.word	0x08008afb
 8008938:	08008afb 	.word	0x08008afb
 800893c:	08008afb 	.word	0x08008afb
 8008940:	080089f7 	.word	0x080089f7
 8008944:	08008afb 	.word	0x08008afb
 8008948:	08008afb 	.word	0x08008afb
 800894c:	08008afb 	.word	0x08008afb
 8008950:	08008a37 	.word	0x08008a37
 8008954:	08008afb 	.word	0x08008afb
 8008958:	08008afb 	.word	0x08008afb
 800895c:	08008afb 	.word	0x08008afb
 8008960:	08008a79 	.word	0x08008a79
 8008964:	08008afb 	.word	0x08008afb
 8008968:	08008afb 	.word	0x08008afb
 800896c:	08008afb 	.word	0x08008afb
 8008970:	08008ab9 	.word	0x08008ab9
 8008974:	68fb      	ldr	r3, [r7, #12]
 8008976:	681b      	ldr	r3, [r3, #0]
 8008978:	68b9      	ldr	r1, [r7, #8]
 800897a:	4618      	mov	r0, r3
 800897c:	f000 faf6 	bl	8008f6c <TIM_OC1_SetConfig>
 8008980:	68fb      	ldr	r3, [r7, #12]
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	699a      	ldr	r2, [r3, #24]
 8008986:	68fb      	ldr	r3, [r7, #12]
 8008988:	681b      	ldr	r3, [r3, #0]
 800898a:	f042 0208 	orr.w	r2, r2, #8
 800898e:	619a      	str	r2, [r3, #24]
 8008990:	68fb      	ldr	r3, [r7, #12]
 8008992:	681b      	ldr	r3, [r3, #0]
 8008994:	699a      	ldr	r2, [r3, #24]
 8008996:	68fb      	ldr	r3, [r7, #12]
 8008998:	681b      	ldr	r3, [r3, #0]
 800899a:	f022 0204 	bic.w	r2, r2, #4
 800899e:	619a      	str	r2, [r3, #24]
 80089a0:	68fb      	ldr	r3, [r7, #12]
 80089a2:	681b      	ldr	r3, [r3, #0]
 80089a4:	6999      	ldr	r1, [r3, #24]
 80089a6:	68bb      	ldr	r3, [r7, #8]
 80089a8:	691a      	ldr	r2, [r3, #16]
 80089aa:	68fb      	ldr	r3, [r7, #12]
 80089ac:	681b      	ldr	r3, [r3, #0]
 80089ae:	430a      	orrs	r2, r1
 80089b0:	619a      	str	r2, [r3, #24]
 80089b2:	e0a5      	b.n	8008b00 <HAL_TIM_PWM_ConfigChannel+0x214>
 80089b4:	68fb      	ldr	r3, [r7, #12]
 80089b6:	681b      	ldr	r3, [r3, #0]
 80089b8:	68b9      	ldr	r1, [r7, #8]
 80089ba:	4618      	mov	r0, r3
 80089bc:	f000 fb70 	bl	80090a0 <TIM_OC2_SetConfig>
 80089c0:	68fb      	ldr	r3, [r7, #12]
 80089c2:	681b      	ldr	r3, [r3, #0]
 80089c4:	699a      	ldr	r2, [r3, #24]
 80089c6:	68fb      	ldr	r3, [r7, #12]
 80089c8:	681b      	ldr	r3, [r3, #0]
 80089ca:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80089ce:	619a      	str	r2, [r3, #24]
 80089d0:	68fb      	ldr	r3, [r7, #12]
 80089d2:	681b      	ldr	r3, [r3, #0]
 80089d4:	699a      	ldr	r2, [r3, #24]
 80089d6:	68fb      	ldr	r3, [r7, #12]
 80089d8:	681b      	ldr	r3, [r3, #0]
 80089da:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80089de:	619a      	str	r2, [r3, #24]
 80089e0:	68fb      	ldr	r3, [r7, #12]
 80089e2:	681b      	ldr	r3, [r3, #0]
 80089e4:	6999      	ldr	r1, [r3, #24]
 80089e6:	68bb      	ldr	r3, [r7, #8]
 80089e8:	691b      	ldr	r3, [r3, #16]
 80089ea:	021a      	lsls	r2, r3, #8
 80089ec:	68fb      	ldr	r3, [r7, #12]
 80089ee:	681b      	ldr	r3, [r3, #0]
 80089f0:	430a      	orrs	r2, r1
 80089f2:	619a      	str	r2, [r3, #24]
 80089f4:	e084      	b.n	8008b00 <HAL_TIM_PWM_ConfigChannel+0x214>
 80089f6:	68fb      	ldr	r3, [r7, #12]
 80089f8:	681b      	ldr	r3, [r3, #0]
 80089fa:	68b9      	ldr	r1, [r7, #8]
 80089fc:	4618      	mov	r0, r3
 80089fe:	f000 fbe3 	bl	80091c8 <TIM_OC3_SetConfig>
 8008a02:	68fb      	ldr	r3, [r7, #12]
 8008a04:	681b      	ldr	r3, [r3, #0]
 8008a06:	69da      	ldr	r2, [r3, #28]
 8008a08:	68fb      	ldr	r3, [r7, #12]
 8008a0a:	681b      	ldr	r3, [r3, #0]
 8008a0c:	f042 0208 	orr.w	r2, r2, #8
 8008a10:	61da      	str	r2, [r3, #28]
 8008a12:	68fb      	ldr	r3, [r7, #12]
 8008a14:	681b      	ldr	r3, [r3, #0]
 8008a16:	69da      	ldr	r2, [r3, #28]
 8008a18:	68fb      	ldr	r3, [r7, #12]
 8008a1a:	681b      	ldr	r3, [r3, #0]
 8008a1c:	f022 0204 	bic.w	r2, r2, #4
 8008a20:	61da      	str	r2, [r3, #28]
 8008a22:	68fb      	ldr	r3, [r7, #12]
 8008a24:	681b      	ldr	r3, [r3, #0]
 8008a26:	69d9      	ldr	r1, [r3, #28]
 8008a28:	68bb      	ldr	r3, [r7, #8]
 8008a2a:	691a      	ldr	r2, [r3, #16]
 8008a2c:	68fb      	ldr	r3, [r7, #12]
 8008a2e:	681b      	ldr	r3, [r3, #0]
 8008a30:	430a      	orrs	r2, r1
 8008a32:	61da      	str	r2, [r3, #28]
 8008a34:	e064      	b.n	8008b00 <HAL_TIM_PWM_ConfigChannel+0x214>
 8008a36:	68fb      	ldr	r3, [r7, #12]
 8008a38:	681b      	ldr	r3, [r3, #0]
 8008a3a:	68b9      	ldr	r1, [r7, #8]
 8008a3c:	4618      	mov	r0, r3
 8008a3e:	f000 fc55 	bl	80092ec <TIM_OC4_SetConfig>
 8008a42:	68fb      	ldr	r3, [r7, #12]
 8008a44:	681b      	ldr	r3, [r3, #0]
 8008a46:	69da      	ldr	r2, [r3, #28]
 8008a48:	68fb      	ldr	r3, [r7, #12]
 8008a4a:	681b      	ldr	r3, [r3, #0]
 8008a4c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008a50:	61da      	str	r2, [r3, #28]
 8008a52:	68fb      	ldr	r3, [r7, #12]
 8008a54:	681b      	ldr	r3, [r3, #0]
 8008a56:	69da      	ldr	r2, [r3, #28]
 8008a58:	68fb      	ldr	r3, [r7, #12]
 8008a5a:	681b      	ldr	r3, [r3, #0]
 8008a5c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008a60:	61da      	str	r2, [r3, #28]
 8008a62:	68fb      	ldr	r3, [r7, #12]
 8008a64:	681b      	ldr	r3, [r3, #0]
 8008a66:	69d9      	ldr	r1, [r3, #28]
 8008a68:	68bb      	ldr	r3, [r7, #8]
 8008a6a:	691b      	ldr	r3, [r3, #16]
 8008a6c:	021a      	lsls	r2, r3, #8
 8008a6e:	68fb      	ldr	r3, [r7, #12]
 8008a70:	681b      	ldr	r3, [r3, #0]
 8008a72:	430a      	orrs	r2, r1
 8008a74:	61da      	str	r2, [r3, #28]
 8008a76:	e043      	b.n	8008b00 <HAL_TIM_PWM_ConfigChannel+0x214>
 8008a78:	68fb      	ldr	r3, [r7, #12]
 8008a7a:	681b      	ldr	r3, [r3, #0]
 8008a7c:	68b9      	ldr	r1, [r7, #8]
 8008a7e:	4618      	mov	r0, r3
 8008a80:	f000 fcc8 	bl	8009414 <TIM_OC5_SetConfig>
 8008a84:	68fb      	ldr	r3, [r7, #12]
 8008a86:	681b      	ldr	r3, [r3, #0]
 8008a88:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008a8a:	68fb      	ldr	r3, [r7, #12]
 8008a8c:	681b      	ldr	r3, [r3, #0]
 8008a8e:	f042 0208 	orr.w	r2, r2, #8
 8008a92:	651a      	str	r2, [r3, #80]	@ 0x50
 8008a94:	68fb      	ldr	r3, [r7, #12]
 8008a96:	681b      	ldr	r3, [r3, #0]
 8008a98:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008a9a:	68fb      	ldr	r3, [r7, #12]
 8008a9c:	681b      	ldr	r3, [r3, #0]
 8008a9e:	f022 0204 	bic.w	r2, r2, #4
 8008aa2:	651a      	str	r2, [r3, #80]	@ 0x50
 8008aa4:	68fb      	ldr	r3, [r7, #12]
 8008aa6:	681b      	ldr	r3, [r3, #0]
 8008aa8:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8008aaa:	68bb      	ldr	r3, [r7, #8]
 8008aac:	691a      	ldr	r2, [r3, #16]
 8008aae:	68fb      	ldr	r3, [r7, #12]
 8008ab0:	681b      	ldr	r3, [r3, #0]
 8008ab2:	430a      	orrs	r2, r1
 8008ab4:	651a      	str	r2, [r3, #80]	@ 0x50
 8008ab6:	e023      	b.n	8008b00 <HAL_TIM_PWM_ConfigChannel+0x214>
 8008ab8:	68fb      	ldr	r3, [r7, #12]
 8008aba:	681b      	ldr	r3, [r3, #0]
 8008abc:	68b9      	ldr	r1, [r7, #8]
 8008abe:	4618      	mov	r0, r3
 8008ac0:	f000 fd12 	bl	80094e8 <TIM_OC6_SetConfig>
 8008ac4:	68fb      	ldr	r3, [r7, #12]
 8008ac6:	681b      	ldr	r3, [r3, #0]
 8008ac8:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008aca:	68fb      	ldr	r3, [r7, #12]
 8008acc:	681b      	ldr	r3, [r3, #0]
 8008ace:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008ad2:	651a      	str	r2, [r3, #80]	@ 0x50
 8008ad4:	68fb      	ldr	r3, [r7, #12]
 8008ad6:	681b      	ldr	r3, [r3, #0]
 8008ad8:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8008ada:	68fb      	ldr	r3, [r7, #12]
 8008adc:	681b      	ldr	r3, [r3, #0]
 8008ade:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008ae2:	651a      	str	r2, [r3, #80]	@ 0x50
 8008ae4:	68fb      	ldr	r3, [r7, #12]
 8008ae6:	681b      	ldr	r3, [r3, #0]
 8008ae8:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 8008aea:	68bb      	ldr	r3, [r7, #8]
 8008aec:	691b      	ldr	r3, [r3, #16]
 8008aee:	021a      	lsls	r2, r3, #8
 8008af0:	68fb      	ldr	r3, [r7, #12]
 8008af2:	681b      	ldr	r3, [r3, #0]
 8008af4:	430a      	orrs	r2, r1
 8008af6:	651a      	str	r2, [r3, #80]	@ 0x50
 8008af8:	e002      	b.n	8008b00 <HAL_TIM_PWM_ConfigChannel+0x214>
 8008afa:	2301      	movs	r3, #1
 8008afc:	75fb      	strb	r3, [r7, #23]
 8008afe:	bf00      	nop
 8008b00:	68fb      	ldr	r3, [r7, #12]
 8008b02:	2200      	movs	r2, #0
 8008b04:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008b08:	7dfb      	ldrb	r3, [r7, #23]
 8008b0a:	4618      	mov	r0, r3
 8008b0c:	3718      	adds	r7, #24
 8008b0e:	46bd      	mov	sp, r7
 8008b10:	bd80      	pop	{r7, pc}
 8008b12:	bf00      	nop

08008b14 <HAL_TIM_ConfigClockSource>:
 8008b14:	b580      	push	{r7, lr}
 8008b16:	b084      	sub	sp, #16
 8008b18:	af00      	add	r7, sp, #0
 8008b1a:	6078      	str	r0, [r7, #4]
 8008b1c:	6039      	str	r1, [r7, #0]
 8008b1e:	2300      	movs	r3, #0
 8008b20:	73fb      	strb	r3, [r7, #15]
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008b28:	2b01      	cmp	r3, #1
 8008b2a:	d101      	bne.n	8008b30 <HAL_TIM_ConfigClockSource+0x1c>
 8008b2c:	2302      	movs	r3, #2
 8008b2e:	e0f6      	b.n	8008d1e <HAL_TIM_ConfigClockSource+0x20a>
 8008b30:	687b      	ldr	r3, [r7, #4]
 8008b32:	2201      	movs	r2, #1
 8008b34:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	2202      	movs	r2, #2
 8008b3c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008b40:	687b      	ldr	r3, [r7, #4]
 8008b42:	681b      	ldr	r3, [r3, #0]
 8008b44:	689b      	ldr	r3, [r3, #8]
 8008b46:	60bb      	str	r3, [r7, #8]
 8008b48:	68bb      	ldr	r3, [r7, #8]
 8008b4a:	f423 1344 	bic.w	r3, r3, #3211264	@ 0x310000
 8008b4e:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8008b52:	60bb      	str	r3, [r7, #8]
 8008b54:	68bb      	ldr	r3, [r7, #8]
 8008b56:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008b5a:	60bb      	str	r3, [r7, #8]
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	681b      	ldr	r3, [r3, #0]
 8008b60:	68ba      	ldr	r2, [r7, #8]
 8008b62:	609a      	str	r2, [r3, #8]
 8008b64:	683b      	ldr	r3, [r7, #0]
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	4a6f      	ldr	r2, [pc, #444]	@ (8008d28 <HAL_TIM_ConfigClockSource+0x214>)
 8008b6a:	4293      	cmp	r3, r2
 8008b6c:	f000 80c1 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008b70:	4a6d      	ldr	r2, [pc, #436]	@ (8008d28 <HAL_TIM_ConfigClockSource+0x214>)
 8008b72:	4293      	cmp	r3, r2
 8008b74:	f200 80c6 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008b78:	4a6c      	ldr	r2, [pc, #432]	@ (8008d2c <HAL_TIM_ConfigClockSource+0x218>)
 8008b7a:	4293      	cmp	r3, r2
 8008b7c:	f000 80b9 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008b80:	4a6a      	ldr	r2, [pc, #424]	@ (8008d2c <HAL_TIM_ConfigClockSource+0x218>)
 8008b82:	4293      	cmp	r3, r2
 8008b84:	f200 80be 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008b88:	4a69      	ldr	r2, [pc, #420]	@ (8008d30 <HAL_TIM_ConfigClockSource+0x21c>)
 8008b8a:	4293      	cmp	r3, r2
 8008b8c:	f000 80b1 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008b90:	4a67      	ldr	r2, [pc, #412]	@ (8008d30 <HAL_TIM_ConfigClockSource+0x21c>)
 8008b92:	4293      	cmp	r3, r2
 8008b94:	f200 80b6 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008b98:	4a66      	ldr	r2, [pc, #408]	@ (8008d34 <HAL_TIM_ConfigClockSource+0x220>)
 8008b9a:	4293      	cmp	r3, r2
 8008b9c:	f000 80a9 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008ba0:	4a64      	ldr	r2, [pc, #400]	@ (8008d34 <HAL_TIM_ConfigClockSource+0x220>)
 8008ba2:	4293      	cmp	r3, r2
 8008ba4:	f200 80ae 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008ba8:	4a63      	ldr	r2, [pc, #396]	@ (8008d38 <HAL_TIM_ConfigClockSource+0x224>)
 8008baa:	4293      	cmp	r3, r2
 8008bac:	f000 80a1 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008bb0:	4a61      	ldr	r2, [pc, #388]	@ (8008d38 <HAL_TIM_ConfigClockSource+0x224>)
 8008bb2:	4293      	cmp	r3, r2
 8008bb4:	f200 80a6 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008bb8:	4a60      	ldr	r2, [pc, #384]	@ (8008d3c <HAL_TIM_ConfigClockSource+0x228>)
 8008bba:	4293      	cmp	r3, r2
 8008bbc:	f000 8099 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008bc0:	4a5e      	ldr	r2, [pc, #376]	@ (8008d3c <HAL_TIM_ConfigClockSource+0x228>)
 8008bc2:	4293      	cmp	r3, r2
 8008bc4:	f200 809e 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008bc8:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8008bcc:	f000 8091 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008bd0:	f1b3 1f10 	cmp.w	r3, #1048592	@ 0x100010
 8008bd4:	f200 8096 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008bd8:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008bdc:	f000 8089 	beq.w	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008be0:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008be4:	f200 808e 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008be8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008bec:	d03e      	beq.n	8008c6c <HAL_TIM_ConfigClockSource+0x158>
 8008bee:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008bf2:	f200 8087 	bhi.w	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008bf6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008bfa:	f000 8086 	beq.w	8008d0a <HAL_TIM_ConfigClockSource+0x1f6>
 8008bfe:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008c02:	d87f      	bhi.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c04:	2b70      	cmp	r3, #112	@ 0x70
 8008c06:	d01a      	beq.n	8008c3e <HAL_TIM_ConfigClockSource+0x12a>
 8008c08:	2b70      	cmp	r3, #112	@ 0x70
 8008c0a:	d87b      	bhi.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c0c:	2b60      	cmp	r3, #96	@ 0x60
 8008c0e:	d050      	beq.n	8008cb2 <HAL_TIM_ConfigClockSource+0x19e>
 8008c10:	2b60      	cmp	r3, #96	@ 0x60
 8008c12:	d877      	bhi.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c14:	2b50      	cmp	r3, #80	@ 0x50
 8008c16:	d03c      	beq.n	8008c92 <HAL_TIM_ConfigClockSource+0x17e>
 8008c18:	2b50      	cmp	r3, #80	@ 0x50
 8008c1a:	d873      	bhi.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c1c:	2b40      	cmp	r3, #64	@ 0x40
 8008c1e:	d058      	beq.n	8008cd2 <HAL_TIM_ConfigClockSource+0x1be>
 8008c20:	2b40      	cmp	r3, #64	@ 0x40
 8008c22:	d86f      	bhi.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c24:	2b30      	cmp	r3, #48	@ 0x30
 8008c26:	d064      	beq.n	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008c28:	2b30      	cmp	r3, #48	@ 0x30
 8008c2a:	d86b      	bhi.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c2c:	2b20      	cmp	r3, #32
 8008c2e:	d060      	beq.n	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008c30:	2b20      	cmp	r3, #32
 8008c32:	d867      	bhi.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c34:	2b00      	cmp	r3, #0
 8008c36:	d05c      	beq.n	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008c38:	2b10      	cmp	r3, #16
 8008c3a:	d05a      	beq.n	8008cf2 <HAL_TIM_ConfigClockSource+0x1de>
 8008c3c:	e062      	b.n	8008d04 <HAL_TIM_ConfigClockSource+0x1f0>
 8008c3e:	687b      	ldr	r3, [r7, #4]
 8008c40:	6818      	ldr	r0, [r3, #0]
 8008c42:	683b      	ldr	r3, [r7, #0]
 8008c44:	6899      	ldr	r1, [r3, #8]
 8008c46:	683b      	ldr	r3, [r7, #0]
 8008c48:	685a      	ldr	r2, [r3, #4]
 8008c4a:	683b      	ldr	r3, [r7, #0]
 8008c4c:	68db      	ldr	r3, [r3, #12]
 8008c4e:	f000 fe5d 	bl	800990c <TIM_ETR_SetConfig>
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	681b      	ldr	r3, [r3, #0]
 8008c56:	689b      	ldr	r3, [r3, #8]
 8008c58:	60bb      	str	r3, [r7, #8]
 8008c5a:	68bb      	ldr	r3, [r7, #8]
 8008c5c:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8008c60:	60bb      	str	r3, [r7, #8]
 8008c62:	687b      	ldr	r3, [r7, #4]
 8008c64:	681b      	ldr	r3, [r3, #0]
 8008c66:	68ba      	ldr	r2, [r7, #8]
 8008c68:	609a      	str	r2, [r3, #8]
 8008c6a:	e04f      	b.n	8008d0c <HAL_TIM_ConfigClockSource+0x1f8>
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	6818      	ldr	r0, [r3, #0]
 8008c70:	683b      	ldr	r3, [r7, #0]
 8008c72:	6899      	ldr	r1, [r3, #8]
 8008c74:	683b      	ldr	r3, [r7, #0]
 8008c76:	685a      	ldr	r2, [r3, #4]
 8008c78:	683b      	ldr	r3, [r7, #0]
 8008c7a:	68db      	ldr	r3, [r3, #12]
 8008c7c:	f000 fe46 	bl	800990c <TIM_ETR_SetConfig>
 8008c80:	687b      	ldr	r3, [r7, #4]
 8008c82:	681b      	ldr	r3, [r3, #0]
 8008c84:	689a      	ldr	r2, [r3, #8]
 8008c86:	687b      	ldr	r3, [r7, #4]
 8008c88:	681b      	ldr	r3, [r3, #0]
 8008c8a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8008c8e:	609a      	str	r2, [r3, #8]
 8008c90:	e03c      	b.n	8008d0c <HAL_TIM_ConfigClockSource+0x1f8>
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	6818      	ldr	r0, [r3, #0]
 8008c96:	683b      	ldr	r3, [r7, #0]
 8008c98:	6859      	ldr	r1, [r3, #4]
 8008c9a:	683b      	ldr	r3, [r7, #0]
 8008c9c:	68db      	ldr	r3, [r3, #12]
 8008c9e:	461a      	mov	r2, r3
 8008ca0:	f000 fd02 	bl	80096a8 <TIM_TI1_ConfigInputStage>
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	681b      	ldr	r3, [r3, #0]
 8008ca8:	2150      	movs	r1, #80	@ 0x50
 8008caa:	4618      	mov	r0, r3
 8008cac:	f000 fe11 	bl	80098d2 <TIM_ITRx_SetConfig>
 8008cb0:	e02c      	b.n	8008d0c <HAL_TIM_ConfigClockSource+0x1f8>
 8008cb2:	687b      	ldr	r3, [r7, #4]
 8008cb4:	6818      	ldr	r0, [r3, #0]
 8008cb6:	683b      	ldr	r3, [r7, #0]
 8008cb8:	6859      	ldr	r1, [r3, #4]
 8008cba:	683b      	ldr	r3, [r7, #0]
 8008cbc:	68db      	ldr	r3, [r3, #12]
 8008cbe:	461a      	mov	r2, r3
 8008cc0:	f000 fd5e 	bl	8009780 <TIM_TI2_ConfigInputStage>
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	681b      	ldr	r3, [r3, #0]
 8008cc8:	2160      	movs	r1, #96	@ 0x60
 8008cca:	4618      	mov	r0, r3
 8008ccc:	f000 fe01 	bl	80098d2 <TIM_ITRx_SetConfig>
 8008cd0:	e01c      	b.n	8008d0c <HAL_TIM_ConfigClockSource+0x1f8>
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	6818      	ldr	r0, [r3, #0]
 8008cd6:	683b      	ldr	r3, [r7, #0]
 8008cd8:	6859      	ldr	r1, [r3, #4]
 8008cda:	683b      	ldr	r3, [r7, #0]
 8008cdc:	68db      	ldr	r3, [r3, #12]
 8008cde:	461a      	mov	r2, r3
 8008ce0:	f000 fce2 	bl	80096a8 <TIM_TI1_ConfigInputStage>
 8008ce4:	687b      	ldr	r3, [r7, #4]
 8008ce6:	681b      	ldr	r3, [r3, #0]
 8008ce8:	2140      	movs	r1, #64	@ 0x40
 8008cea:	4618      	mov	r0, r3
 8008cec:	f000 fdf1 	bl	80098d2 <TIM_ITRx_SetConfig>
 8008cf0:	e00c      	b.n	8008d0c <HAL_TIM_ConfigClockSource+0x1f8>
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	681a      	ldr	r2, [r3, #0]
 8008cf6:	683b      	ldr	r3, [r7, #0]
 8008cf8:	681b      	ldr	r3, [r3, #0]
 8008cfa:	4619      	mov	r1, r3
 8008cfc:	4610      	mov	r0, r2
 8008cfe:	f000 fde8 	bl	80098d2 <TIM_ITRx_SetConfig>
 8008d02:	e003      	b.n	8008d0c <HAL_TIM_ConfigClockSource+0x1f8>
 8008d04:	2301      	movs	r3, #1
 8008d06:	73fb      	strb	r3, [r7, #15]
 8008d08:	e000      	b.n	8008d0c <HAL_TIM_ConfigClockSource+0x1f8>
 8008d0a:	bf00      	nop
 8008d0c:	687b      	ldr	r3, [r7, #4]
 8008d0e:	2201      	movs	r2, #1
 8008d10:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008d14:	687b      	ldr	r3, [r7, #4]
 8008d16:	2200      	movs	r2, #0
 8008d18:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008d1c:	7bfb      	ldrb	r3, [r7, #15]
 8008d1e:	4618      	mov	r0, r3
 8008d20:	3710      	adds	r7, #16
 8008d22:	46bd      	mov	sp, r7
 8008d24:	bd80      	pop	{r7, pc}
 8008d26:	bf00      	nop
 8008d28:	00100070 	.word	0x00100070
 8008d2c:	00100060 	.word	0x00100060
 8008d30:	00100050 	.word	0x00100050
 8008d34:	00100040 	.word	0x00100040
 8008d38:	00100030 	.word	0x00100030
 8008d3c:	00100020 	.word	0x00100020

08008d40 <HAL_TIM_ReadCapturedValue>:
 8008d40:	b480      	push	{r7}
 8008d42:	b085      	sub	sp, #20
 8008d44:	af00      	add	r7, sp, #0
 8008d46:	6078      	str	r0, [r7, #4]
 8008d48:	6039      	str	r1, [r7, #0]
 8008d4a:	2300      	movs	r3, #0
 8008d4c:	60fb      	str	r3, [r7, #12]
 8008d4e:	683b      	ldr	r3, [r7, #0]
 8008d50:	2b0c      	cmp	r3, #12
 8008d52:	d831      	bhi.n	8008db8 <HAL_TIM_ReadCapturedValue+0x78>
 8008d54:	a201      	add	r2, pc, #4	@ (adr r2, 8008d5c <HAL_TIM_ReadCapturedValue+0x1c>)
 8008d56:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008d5a:	bf00      	nop
 8008d5c:	08008d91 	.word	0x08008d91
 8008d60:	08008db9 	.word	0x08008db9
 8008d64:	08008db9 	.word	0x08008db9
 8008d68:	08008db9 	.word	0x08008db9
 8008d6c:	08008d9b 	.word	0x08008d9b
 8008d70:	08008db9 	.word	0x08008db9
 8008d74:	08008db9 	.word	0x08008db9
 8008d78:	08008db9 	.word	0x08008db9
 8008d7c:	08008da5 	.word	0x08008da5
 8008d80:	08008db9 	.word	0x08008db9
 8008d84:	08008db9 	.word	0x08008db9
 8008d88:	08008db9 	.word	0x08008db9
 8008d8c:	08008daf 	.word	0x08008daf
 8008d90:	687b      	ldr	r3, [r7, #4]
 8008d92:	681b      	ldr	r3, [r3, #0]
 8008d94:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008d96:	60fb      	str	r3, [r7, #12]
 8008d98:	e00f      	b.n	8008dba <HAL_TIM_ReadCapturedValue+0x7a>
 8008d9a:	687b      	ldr	r3, [r7, #4]
 8008d9c:	681b      	ldr	r3, [r3, #0]
 8008d9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008da0:	60fb      	str	r3, [r7, #12]
 8008da2:	e00a      	b.n	8008dba <HAL_TIM_ReadCapturedValue+0x7a>
 8008da4:	687b      	ldr	r3, [r7, #4]
 8008da6:	681b      	ldr	r3, [r3, #0]
 8008da8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008daa:	60fb      	str	r3, [r7, #12]
 8008dac:	e005      	b.n	8008dba <HAL_TIM_ReadCapturedValue+0x7a>
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	681b      	ldr	r3, [r3, #0]
 8008db2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008db4:	60fb      	str	r3, [r7, #12]
 8008db6:	e000      	b.n	8008dba <HAL_TIM_ReadCapturedValue+0x7a>
 8008db8:	bf00      	nop
 8008dba:	68fb      	ldr	r3, [r7, #12]
 8008dbc:	4618      	mov	r0, r3
 8008dbe:	3714      	adds	r7, #20
 8008dc0:	46bd      	mov	sp, r7
 8008dc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dc6:	4770      	bx	lr

08008dc8 <HAL_TIM_OC_DelayElapsedCallback>:
 8008dc8:	b480      	push	{r7}
 8008dca:	b083      	sub	sp, #12
 8008dcc:	af00      	add	r7, sp, #0
 8008dce:	6078      	str	r0, [r7, #4]
 8008dd0:	bf00      	nop
 8008dd2:	370c      	adds	r7, #12
 8008dd4:	46bd      	mov	sp, r7
 8008dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dda:	4770      	bx	lr

08008ddc <HAL_TIM_PWM_PulseFinishedCallback>:
 8008ddc:	b480      	push	{r7}
 8008dde:	b083      	sub	sp, #12
 8008de0:	af00      	add	r7, sp, #0
 8008de2:	6078      	str	r0, [r7, #4]
 8008de4:	bf00      	nop
 8008de6:	370c      	adds	r7, #12
 8008de8:	46bd      	mov	sp, r7
 8008dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dee:	4770      	bx	lr

08008df0 <HAL_TIM_TriggerCallback>:
 8008df0:	b480      	push	{r7}
 8008df2:	b083      	sub	sp, #12
 8008df4:	af00      	add	r7, sp, #0
 8008df6:	6078      	str	r0, [r7, #4]
 8008df8:	bf00      	nop
 8008dfa:	370c      	adds	r7, #12
 8008dfc:	46bd      	mov	sp, r7
 8008dfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e02:	4770      	bx	lr

08008e04 <TIM_Base_SetConfig>:
 8008e04:	b480      	push	{r7}
 8008e06:	b085      	sub	sp, #20
 8008e08:	af00      	add	r7, sp, #0
 8008e0a:	6078      	str	r0, [r7, #4]
 8008e0c:	6039      	str	r1, [r7, #0]
 8008e0e:	687b      	ldr	r3, [r7, #4]
 8008e10:	681b      	ldr	r3, [r3, #0]
 8008e12:	60fb      	str	r3, [r7, #12]
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	4a4c      	ldr	r2, [pc, #304]	@ (8008f48 <TIM_Base_SetConfig+0x144>)
 8008e18:	4293      	cmp	r3, r2
 8008e1a:	d017      	beq.n	8008e4c <TIM_Base_SetConfig+0x48>
 8008e1c:	687b      	ldr	r3, [r7, #4]
 8008e1e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008e22:	d013      	beq.n	8008e4c <TIM_Base_SetConfig+0x48>
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	4a49      	ldr	r2, [pc, #292]	@ (8008f4c <TIM_Base_SetConfig+0x148>)
 8008e28:	4293      	cmp	r3, r2
 8008e2a:	d00f      	beq.n	8008e4c <TIM_Base_SetConfig+0x48>
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	4a48      	ldr	r2, [pc, #288]	@ (8008f50 <TIM_Base_SetConfig+0x14c>)
 8008e30:	4293      	cmp	r3, r2
 8008e32:	d00b      	beq.n	8008e4c <TIM_Base_SetConfig+0x48>
 8008e34:	687b      	ldr	r3, [r7, #4]
 8008e36:	4a47      	ldr	r2, [pc, #284]	@ (8008f54 <TIM_Base_SetConfig+0x150>)
 8008e38:	4293      	cmp	r3, r2
 8008e3a:	d007      	beq.n	8008e4c <TIM_Base_SetConfig+0x48>
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	4a46      	ldr	r2, [pc, #280]	@ (8008f58 <TIM_Base_SetConfig+0x154>)
 8008e40:	4293      	cmp	r3, r2
 8008e42:	d003      	beq.n	8008e4c <TIM_Base_SetConfig+0x48>
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	4a45      	ldr	r2, [pc, #276]	@ (8008f5c <TIM_Base_SetConfig+0x158>)
 8008e48:	4293      	cmp	r3, r2
 8008e4a:	d108      	bne.n	8008e5e <TIM_Base_SetConfig+0x5a>
 8008e4c:	68fb      	ldr	r3, [r7, #12]
 8008e4e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008e52:	60fb      	str	r3, [r7, #12]
 8008e54:	683b      	ldr	r3, [r7, #0]
 8008e56:	685b      	ldr	r3, [r3, #4]
 8008e58:	68fa      	ldr	r2, [r7, #12]
 8008e5a:	4313      	orrs	r3, r2
 8008e5c:	60fb      	str	r3, [r7, #12]
 8008e5e:	687b      	ldr	r3, [r7, #4]
 8008e60:	4a39      	ldr	r2, [pc, #228]	@ (8008f48 <TIM_Base_SetConfig+0x144>)
 8008e62:	4293      	cmp	r3, r2
 8008e64:	d023      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e66:	687b      	ldr	r3, [r7, #4]
 8008e68:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008e6c:	d01f      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e6e:	687b      	ldr	r3, [r7, #4]
 8008e70:	4a36      	ldr	r2, [pc, #216]	@ (8008f4c <TIM_Base_SetConfig+0x148>)
 8008e72:	4293      	cmp	r3, r2
 8008e74:	d01b      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e76:	687b      	ldr	r3, [r7, #4]
 8008e78:	4a35      	ldr	r2, [pc, #212]	@ (8008f50 <TIM_Base_SetConfig+0x14c>)
 8008e7a:	4293      	cmp	r3, r2
 8008e7c:	d017      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e7e:	687b      	ldr	r3, [r7, #4]
 8008e80:	4a34      	ldr	r2, [pc, #208]	@ (8008f54 <TIM_Base_SetConfig+0x150>)
 8008e82:	4293      	cmp	r3, r2
 8008e84:	d013      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e86:	687b      	ldr	r3, [r7, #4]
 8008e88:	4a33      	ldr	r2, [pc, #204]	@ (8008f58 <TIM_Base_SetConfig+0x154>)
 8008e8a:	4293      	cmp	r3, r2
 8008e8c:	d00f      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e8e:	687b      	ldr	r3, [r7, #4]
 8008e90:	4a33      	ldr	r2, [pc, #204]	@ (8008f60 <TIM_Base_SetConfig+0x15c>)
 8008e92:	4293      	cmp	r3, r2
 8008e94:	d00b      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e96:	687b      	ldr	r3, [r7, #4]
 8008e98:	4a32      	ldr	r2, [pc, #200]	@ (8008f64 <TIM_Base_SetConfig+0x160>)
 8008e9a:	4293      	cmp	r3, r2
 8008e9c:	d007      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008e9e:	687b      	ldr	r3, [r7, #4]
 8008ea0:	4a31      	ldr	r2, [pc, #196]	@ (8008f68 <TIM_Base_SetConfig+0x164>)
 8008ea2:	4293      	cmp	r3, r2
 8008ea4:	d003      	beq.n	8008eae <TIM_Base_SetConfig+0xaa>
 8008ea6:	687b      	ldr	r3, [r7, #4]
 8008ea8:	4a2c      	ldr	r2, [pc, #176]	@ (8008f5c <TIM_Base_SetConfig+0x158>)
 8008eaa:	4293      	cmp	r3, r2
 8008eac:	d108      	bne.n	8008ec0 <TIM_Base_SetConfig+0xbc>
 8008eae:	68fb      	ldr	r3, [r7, #12]
 8008eb0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008eb4:	60fb      	str	r3, [r7, #12]
 8008eb6:	683b      	ldr	r3, [r7, #0]
 8008eb8:	68db      	ldr	r3, [r3, #12]
 8008eba:	68fa      	ldr	r2, [r7, #12]
 8008ebc:	4313      	orrs	r3, r2
 8008ebe:	60fb      	str	r3, [r7, #12]
 8008ec0:	68fb      	ldr	r3, [r7, #12]
 8008ec2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8008ec6:	683b      	ldr	r3, [r7, #0]
 8008ec8:	695b      	ldr	r3, [r3, #20]
 8008eca:	4313      	orrs	r3, r2
 8008ecc:	60fb      	str	r3, [r7, #12]
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	68fa      	ldr	r2, [r7, #12]
 8008ed2:	601a      	str	r2, [r3, #0]
 8008ed4:	683b      	ldr	r3, [r7, #0]
 8008ed6:	689a      	ldr	r2, [r3, #8]
 8008ed8:	687b      	ldr	r3, [r7, #4]
 8008eda:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008edc:	683b      	ldr	r3, [r7, #0]
 8008ede:	681a      	ldr	r2, [r3, #0]
 8008ee0:	687b      	ldr	r3, [r7, #4]
 8008ee2:	629a      	str	r2, [r3, #40]	@ 0x28
 8008ee4:	687b      	ldr	r3, [r7, #4]
 8008ee6:	4a18      	ldr	r2, [pc, #96]	@ (8008f48 <TIM_Base_SetConfig+0x144>)
 8008ee8:	4293      	cmp	r3, r2
 8008eea:	d013      	beq.n	8008f14 <TIM_Base_SetConfig+0x110>
 8008eec:	687b      	ldr	r3, [r7, #4]
 8008eee:	4a1a      	ldr	r2, [pc, #104]	@ (8008f58 <TIM_Base_SetConfig+0x154>)
 8008ef0:	4293      	cmp	r3, r2
 8008ef2:	d00f      	beq.n	8008f14 <TIM_Base_SetConfig+0x110>
 8008ef4:	687b      	ldr	r3, [r7, #4]
 8008ef6:	4a1a      	ldr	r2, [pc, #104]	@ (8008f60 <TIM_Base_SetConfig+0x15c>)
 8008ef8:	4293      	cmp	r3, r2
 8008efa:	d00b      	beq.n	8008f14 <TIM_Base_SetConfig+0x110>
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	4a19      	ldr	r2, [pc, #100]	@ (8008f64 <TIM_Base_SetConfig+0x160>)
 8008f00:	4293      	cmp	r3, r2
 8008f02:	d007      	beq.n	8008f14 <TIM_Base_SetConfig+0x110>
 8008f04:	687b      	ldr	r3, [r7, #4]
 8008f06:	4a18      	ldr	r2, [pc, #96]	@ (8008f68 <TIM_Base_SetConfig+0x164>)
 8008f08:	4293      	cmp	r3, r2
 8008f0a:	d003      	beq.n	8008f14 <TIM_Base_SetConfig+0x110>
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	4a13      	ldr	r2, [pc, #76]	@ (8008f5c <TIM_Base_SetConfig+0x158>)
 8008f10:	4293      	cmp	r3, r2
 8008f12:	d103      	bne.n	8008f1c <TIM_Base_SetConfig+0x118>
 8008f14:	683b      	ldr	r3, [r7, #0]
 8008f16:	691a      	ldr	r2, [r3, #16]
 8008f18:	687b      	ldr	r3, [r7, #4]
 8008f1a:	631a      	str	r2, [r3, #48]	@ 0x30
 8008f1c:	687b      	ldr	r3, [r7, #4]
 8008f1e:	2201      	movs	r2, #1
 8008f20:	615a      	str	r2, [r3, #20]
 8008f22:	687b      	ldr	r3, [r7, #4]
 8008f24:	691b      	ldr	r3, [r3, #16]
 8008f26:	f003 0301 	and.w	r3, r3, #1
 8008f2a:	2b01      	cmp	r3, #1
 8008f2c:	d105      	bne.n	8008f3a <TIM_Base_SetConfig+0x136>
 8008f2e:	687b      	ldr	r3, [r7, #4]
 8008f30:	691b      	ldr	r3, [r3, #16]
 8008f32:	f023 0201 	bic.w	r2, r3, #1
 8008f36:	687b      	ldr	r3, [r7, #4]
 8008f38:	611a      	str	r2, [r3, #16]
 8008f3a:	bf00      	nop
 8008f3c:	3714      	adds	r7, #20
 8008f3e:	46bd      	mov	sp, r7
 8008f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f44:	4770      	bx	lr
 8008f46:	bf00      	nop
 8008f48:	40012c00 	.word	0x40012c00
 8008f4c:	40000400 	.word	0x40000400
 8008f50:	40000800 	.word	0x40000800
 8008f54:	40000c00 	.word	0x40000c00
 8008f58:	40013400 	.word	0x40013400
 8008f5c:	40015000 	.word	0x40015000
 8008f60:	40014000 	.word	0x40014000
 8008f64:	40014400 	.word	0x40014400
 8008f68:	40014800 	.word	0x40014800

08008f6c <TIM_OC1_SetConfig>:
 8008f6c:	b480      	push	{r7}
 8008f6e:	b087      	sub	sp, #28
 8008f70:	af00      	add	r7, sp, #0
 8008f72:	6078      	str	r0, [r7, #4]
 8008f74:	6039      	str	r1, [r7, #0]
 8008f76:	687b      	ldr	r3, [r7, #4]
 8008f78:	6a1b      	ldr	r3, [r3, #32]
 8008f7a:	617b      	str	r3, [r7, #20]
 8008f7c:	687b      	ldr	r3, [r7, #4]
 8008f7e:	6a1b      	ldr	r3, [r3, #32]
 8008f80:	f023 0201 	bic.w	r2, r3, #1
 8008f84:	687b      	ldr	r3, [r7, #4]
 8008f86:	621a      	str	r2, [r3, #32]
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	685b      	ldr	r3, [r3, #4]
 8008f8c:	613b      	str	r3, [r7, #16]
 8008f8e:	687b      	ldr	r3, [r7, #4]
 8008f90:	699b      	ldr	r3, [r3, #24]
 8008f92:	60fb      	str	r3, [r7, #12]
 8008f94:	68fb      	ldr	r3, [r7, #12]
 8008f96:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8008f9a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008f9e:	60fb      	str	r3, [r7, #12]
 8008fa0:	68fb      	ldr	r3, [r7, #12]
 8008fa2:	f023 0303 	bic.w	r3, r3, #3
 8008fa6:	60fb      	str	r3, [r7, #12]
 8008fa8:	683b      	ldr	r3, [r7, #0]
 8008faa:	681b      	ldr	r3, [r3, #0]
 8008fac:	68fa      	ldr	r2, [r7, #12]
 8008fae:	4313      	orrs	r3, r2
 8008fb0:	60fb      	str	r3, [r7, #12]
 8008fb2:	697b      	ldr	r3, [r7, #20]
 8008fb4:	f023 0302 	bic.w	r3, r3, #2
 8008fb8:	617b      	str	r3, [r7, #20]
 8008fba:	683b      	ldr	r3, [r7, #0]
 8008fbc:	689b      	ldr	r3, [r3, #8]
 8008fbe:	697a      	ldr	r2, [r7, #20]
 8008fc0:	4313      	orrs	r3, r2
 8008fc2:	617b      	str	r3, [r7, #20]
 8008fc4:	687b      	ldr	r3, [r7, #4]
 8008fc6:	4a30      	ldr	r2, [pc, #192]	@ (8009088 <TIM_OC1_SetConfig+0x11c>)
 8008fc8:	4293      	cmp	r3, r2
 8008fca:	d013      	beq.n	8008ff4 <TIM_OC1_SetConfig+0x88>
 8008fcc:	687b      	ldr	r3, [r7, #4]
 8008fce:	4a2f      	ldr	r2, [pc, #188]	@ (800908c <TIM_OC1_SetConfig+0x120>)
 8008fd0:	4293      	cmp	r3, r2
 8008fd2:	d00f      	beq.n	8008ff4 <TIM_OC1_SetConfig+0x88>
 8008fd4:	687b      	ldr	r3, [r7, #4]
 8008fd6:	4a2e      	ldr	r2, [pc, #184]	@ (8009090 <TIM_OC1_SetConfig+0x124>)
 8008fd8:	4293      	cmp	r3, r2
 8008fda:	d00b      	beq.n	8008ff4 <TIM_OC1_SetConfig+0x88>
 8008fdc:	687b      	ldr	r3, [r7, #4]
 8008fde:	4a2d      	ldr	r2, [pc, #180]	@ (8009094 <TIM_OC1_SetConfig+0x128>)
 8008fe0:	4293      	cmp	r3, r2
 8008fe2:	d007      	beq.n	8008ff4 <TIM_OC1_SetConfig+0x88>
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	4a2c      	ldr	r2, [pc, #176]	@ (8009098 <TIM_OC1_SetConfig+0x12c>)
 8008fe8:	4293      	cmp	r3, r2
 8008fea:	d003      	beq.n	8008ff4 <TIM_OC1_SetConfig+0x88>
 8008fec:	687b      	ldr	r3, [r7, #4]
 8008fee:	4a2b      	ldr	r2, [pc, #172]	@ (800909c <TIM_OC1_SetConfig+0x130>)
 8008ff0:	4293      	cmp	r3, r2
 8008ff2:	d10c      	bne.n	800900e <TIM_OC1_SetConfig+0xa2>
 8008ff4:	697b      	ldr	r3, [r7, #20]
 8008ff6:	f023 0308 	bic.w	r3, r3, #8
 8008ffa:	617b      	str	r3, [r7, #20]
 8008ffc:	683b      	ldr	r3, [r7, #0]
 8008ffe:	68db      	ldr	r3, [r3, #12]
 8009000:	697a      	ldr	r2, [r7, #20]
 8009002:	4313      	orrs	r3, r2
 8009004:	617b      	str	r3, [r7, #20]
 8009006:	697b      	ldr	r3, [r7, #20]
 8009008:	f023 0304 	bic.w	r3, r3, #4
 800900c:	617b      	str	r3, [r7, #20]
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	4a1d      	ldr	r2, [pc, #116]	@ (8009088 <TIM_OC1_SetConfig+0x11c>)
 8009012:	4293      	cmp	r3, r2
 8009014:	d013      	beq.n	800903e <TIM_OC1_SetConfig+0xd2>
 8009016:	687b      	ldr	r3, [r7, #4]
 8009018:	4a1c      	ldr	r2, [pc, #112]	@ (800908c <TIM_OC1_SetConfig+0x120>)
 800901a:	4293      	cmp	r3, r2
 800901c:	d00f      	beq.n	800903e <TIM_OC1_SetConfig+0xd2>
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	4a1b      	ldr	r2, [pc, #108]	@ (8009090 <TIM_OC1_SetConfig+0x124>)
 8009022:	4293      	cmp	r3, r2
 8009024:	d00b      	beq.n	800903e <TIM_OC1_SetConfig+0xd2>
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	4a1a      	ldr	r2, [pc, #104]	@ (8009094 <TIM_OC1_SetConfig+0x128>)
 800902a:	4293      	cmp	r3, r2
 800902c:	d007      	beq.n	800903e <TIM_OC1_SetConfig+0xd2>
 800902e:	687b      	ldr	r3, [r7, #4]
 8009030:	4a19      	ldr	r2, [pc, #100]	@ (8009098 <TIM_OC1_SetConfig+0x12c>)
 8009032:	4293      	cmp	r3, r2
 8009034:	d003      	beq.n	800903e <TIM_OC1_SetConfig+0xd2>
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	4a18      	ldr	r2, [pc, #96]	@ (800909c <TIM_OC1_SetConfig+0x130>)
 800903a:	4293      	cmp	r3, r2
 800903c:	d111      	bne.n	8009062 <TIM_OC1_SetConfig+0xf6>
 800903e:	693b      	ldr	r3, [r7, #16]
 8009040:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8009044:	613b      	str	r3, [r7, #16]
 8009046:	693b      	ldr	r3, [r7, #16]
 8009048:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800904c:	613b      	str	r3, [r7, #16]
 800904e:	683b      	ldr	r3, [r7, #0]
 8009050:	695b      	ldr	r3, [r3, #20]
 8009052:	693a      	ldr	r2, [r7, #16]
 8009054:	4313      	orrs	r3, r2
 8009056:	613b      	str	r3, [r7, #16]
 8009058:	683b      	ldr	r3, [r7, #0]
 800905a:	699b      	ldr	r3, [r3, #24]
 800905c:	693a      	ldr	r2, [r7, #16]
 800905e:	4313      	orrs	r3, r2
 8009060:	613b      	str	r3, [r7, #16]
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	693a      	ldr	r2, [r7, #16]
 8009066:	605a      	str	r2, [r3, #4]
 8009068:	687b      	ldr	r3, [r7, #4]
 800906a:	68fa      	ldr	r2, [r7, #12]
 800906c:	619a      	str	r2, [r3, #24]
 800906e:	683b      	ldr	r3, [r7, #0]
 8009070:	685a      	ldr	r2, [r3, #4]
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	635a      	str	r2, [r3, #52]	@ 0x34
 8009076:	687b      	ldr	r3, [r7, #4]
 8009078:	697a      	ldr	r2, [r7, #20]
 800907a:	621a      	str	r2, [r3, #32]
 800907c:	bf00      	nop
 800907e:	371c      	adds	r7, #28
 8009080:	46bd      	mov	sp, r7
 8009082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009086:	4770      	bx	lr
 8009088:	40012c00 	.word	0x40012c00
 800908c:	40013400 	.word	0x40013400
 8009090:	40014000 	.word	0x40014000
 8009094:	40014400 	.word	0x40014400
 8009098:	40014800 	.word	0x40014800
 800909c:	40015000 	.word	0x40015000

080090a0 <TIM_OC2_SetConfig>:
 80090a0:	b480      	push	{r7}
 80090a2:	b087      	sub	sp, #28
 80090a4:	af00      	add	r7, sp, #0
 80090a6:	6078      	str	r0, [r7, #4]
 80090a8:	6039      	str	r1, [r7, #0]
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	6a1b      	ldr	r3, [r3, #32]
 80090ae:	617b      	str	r3, [r7, #20]
 80090b0:	687b      	ldr	r3, [r7, #4]
 80090b2:	6a1b      	ldr	r3, [r3, #32]
 80090b4:	f023 0210 	bic.w	r2, r3, #16
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	621a      	str	r2, [r3, #32]
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	685b      	ldr	r3, [r3, #4]
 80090c0:	613b      	str	r3, [r7, #16]
 80090c2:	687b      	ldr	r3, [r7, #4]
 80090c4:	699b      	ldr	r3, [r3, #24]
 80090c6:	60fb      	str	r3, [r7, #12]
 80090c8:	68fb      	ldr	r3, [r7, #12]
 80090ca:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80090ce:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 80090d2:	60fb      	str	r3, [r7, #12]
 80090d4:	68fb      	ldr	r3, [r7, #12]
 80090d6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80090da:	60fb      	str	r3, [r7, #12]
 80090dc:	683b      	ldr	r3, [r7, #0]
 80090de:	681b      	ldr	r3, [r3, #0]
 80090e0:	021b      	lsls	r3, r3, #8
 80090e2:	68fa      	ldr	r2, [r7, #12]
 80090e4:	4313      	orrs	r3, r2
 80090e6:	60fb      	str	r3, [r7, #12]
 80090e8:	697b      	ldr	r3, [r7, #20]
 80090ea:	f023 0320 	bic.w	r3, r3, #32
 80090ee:	617b      	str	r3, [r7, #20]
 80090f0:	683b      	ldr	r3, [r7, #0]
 80090f2:	689b      	ldr	r3, [r3, #8]
 80090f4:	011b      	lsls	r3, r3, #4
 80090f6:	697a      	ldr	r2, [r7, #20]
 80090f8:	4313      	orrs	r3, r2
 80090fa:	617b      	str	r3, [r7, #20]
 80090fc:	687b      	ldr	r3, [r7, #4]
 80090fe:	4a2c      	ldr	r2, [pc, #176]	@ (80091b0 <TIM_OC2_SetConfig+0x110>)
 8009100:	4293      	cmp	r3, r2
 8009102:	d007      	beq.n	8009114 <TIM_OC2_SetConfig+0x74>
 8009104:	687b      	ldr	r3, [r7, #4]
 8009106:	4a2b      	ldr	r2, [pc, #172]	@ (80091b4 <TIM_OC2_SetConfig+0x114>)
 8009108:	4293      	cmp	r3, r2
 800910a:	d003      	beq.n	8009114 <TIM_OC2_SetConfig+0x74>
 800910c:	687b      	ldr	r3, [r7, #4]
 800910e:	4a2a      	ldr	r2, [pc, #168]	@ (80091b8 <TIM_OC2_SetConfig+0x118>)
 8009110:	4293      	cmp	r3, r2
 8009112:	d10d      	bne.n	8009130 <TIM_OC2_SetConfig+0x90>
 8009114:	697b      	ldr	r3, [r7, #20]
 8009116:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800911a:	617b      	str	r3, [r7, #20]
 800911c:	683b      	ldr	r3, [r7, #0]
 800911e:	68db      	ldr	r3, [r3, #12]
 8009120:	011b      	lsls	r3, r3, #4
 8009122:	697a      	ldr	r2, [r7, #20]
 8009124:	4313      	orrs	r3, r2
 8009126:	617b      	str	r3, [r7, #20]
 8009128:	697b      	ldr	r3, [r7, #20]
 800912a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800912e:	617b      	str	r3, [r7, #20]
 8009130:	687b      	ldr	r3, [r7, #4]
 8009132:	4a1f      	ldr	r2, [pc, #124]	@ (80091b0 <TIM_OC2_SetConfig+0x110>)
 8009134:	4293      	cmp	r3, r2
 8009136:	d013      	beq.n	8009160 <TIM_OC2_SetConfig+0xc0>
 8009138:	687b      	ldr	r3, [r7, #4]
 800913a:	4a1e      	ldr	r2, [pc, #120]	@ (80091b4 <TIM_OC2_SetConfig+0x114>)
 800913c:	4293      	cmp	r3, r2
 800913e:	d00f      	beq.n	8009160 <TIM_OC2_SetConfig+0xc0>
 8009140:	687b      	ldr	r3, [r7, #4]
 8009142:	4a1e      	ldr	r2, [pc, #120]	@ (80091bc <TIM_OC2_SetConfig+0x11c>)
 8009144:	4293      	cmp	r3, r2
 8009146:	d00b      	beq.n	8009160 <TIM_OC2_SetConfig+0xc0>
 8009148:	687b      	ldr	r3, [r7, #4]
 800914a:	4a1d      	ldr	r2, [pc, #116]	@ (80091c0 <TIM_OC2_SetConfig+0x120>)
 800914c:	4293      	cmp	r3, r2
 800914e:	d007      	beq.n	8009160 <TIM_OC2_SetConfig+0xc0>
 8009150:	687b      	ldr	r3, [r7, #4]
 8009152:	4a1c      	ldr	r2, [pc, #112]	@ (80091c4 <TIM_OC2_SetConfig+0x124>)
 8009154:	4293      	cmp	r3, r2
 8009156:	d003      	beq.n	8009160 <TIM_OC2_SetConfig+0xc0>
 8009158:	687b      	ldr	r3, [r7, #4]
 800915a:	4a17      	ldr	r2, [pc, #92]	@ (80091b8 <TIM_OC2_SetConfig+0x118>)
 800915c:	4293      	cmp	r3, r2
 800915e:	d113      	bne.n	8009188 <TIM_OC2_SetConfig+0xe8>
 8009160:	693b      	ldr	r3, [r7, #16]
 8009162:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8009166:	613b      	str	r3, [r7, #16]
 8009168:	693b      	ldr	r3, [r7, #16]
 800916a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800916e:	613b      	str	r3, [r7, #16]
 8009170:	683b      	ldr	r3, [r7, #0]
 8009172:	695b      	ldr	r3, [r3, #20]
 8009174:	009b      	lsls	r3, r3, #2
 8009176:	693a      	ldr	r2, [r7, #16]
 8009178:	4313      	orrs	r3, r2
 800917a:	613b      	str	r3, [r7, #16]
 800917c:	683b      	ldr	r3, [r7, #0]
 800917e:	699b      	ldr	r3, [r3, #24]
 8009180:	009b      	lsls	r3, r3, #2
 8009182:	693a      	ldr	r2, [r7, #16]
 8009184:	4313      	orrs	r3, r2
 8009186:	613b      	str	r3, [r7, #16]
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	693a      	ldr	r2, [r7, #16]
 800918c:	605a      	str	r2, [r3, #4]
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	68fa      	ldr	r2, [r7, #12]
 8009192:	619a      	str	r2, [r3, #24]
 8009194:	683b      	ldr	r3, [r7, #0]
 8009196:	685a      	ldr	r2, [r3, #4]
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	639a      	str	r2, [r3, #56]	@ 0x38
 800919c:	687b      	ldr	r3, [r7, #4]
 800919e:	697a      	ldr	r2, [r7, #20]
 80091a0:	621a      	str	r2, [r3, #32]
 80091a2:	bf00      	nop
 80091a4:	371c      	adds	r7, #28
 80091a6:	46bd      	mov	sp, r7
 80091a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091ac:	4770      	bx	lr
 80091ae:	bf00      	nop
 80091b0:	40012c00 	.word	0x40012c00
 80091b4:	40013400 	.word	0x40013400
 80091b8:	40015000 	.word	0x40015000
 80091bc:	40014000 	.word	0x40014000
 80091c0:	40014400 	.word	0x40014400
 80091c4:	40014800 	.word	0x40014800

080091c8 <TIM_OC3_SetConfig>:
 80091c8:	b480      	push	{r7}
 80091ca:	b087      	sub	sp, #28
 80091cc:	af00      	add	r7, sp, #0
 80091ce:	6078      	str	r0, [r7, #4]
 80091d0:	6039      	str	r1, [r7, #0]
 80091d2:	687b      	ldr	r3, [r7, #4]
 80091d4:	6a1b      	ldr	r3, [r3, #32]
 80091d6:	617b      	str	r3, [r7, #20]
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	6a1b      	ldr	r3, [r3, #32]
 80091dc:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80091e0:	687b      	ldr	r3, [r7, #4]
 80091e2:	621a      	str	r2, [r3, #32]
 80091e4:	687b      	ldr	r3, [r7, #4]
 80091e6:	685b      	ldr	r3, [r3, #4]
 80091e8:	613b      	str	r3, [r7, #16]
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	69db      	ldr	r3, [r3, #28]
 80091ee:	60fb      	str	r3, [r7, #12]
 80091f0:	68fb      	ldr	r3, [r7, #12]
 80091f2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80091f6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80091fa:	60fb      	str	r3, [r7, #12]
 80091fc:	68fb      	ldr	r3, [r7, #12]
 80091fe:	f023 0303 	bic.w	r3, r3, #3
 8009202:	60fb      	str	r3, [r7, #12]
 8009204:	683b      	ldr	r3, [r7, #0]
 8009206:	681b      	ldr	r3, [r3, #0]
 8009208:	68fa      	ldr	r2, [r7, #12]
 800920a:	4313      	orrs	r3, r2
 800920c:	60fb      	str	r3, [r7, #12]
 800920e:	697b      	ldr	r3, [r7, #20]
 8009210:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8009214:	617b      	str	r3, [r7, #20]
 8009216:	683b      	ldr	r3, [r7, #0]
 8009218:	689b      	ldr	r3, [r3, #8]
 800921a:	021b      	lsls	r3, r3, #8
 800921c:	697a      	ldr	r2, [r7, #20]
 800921e:	4313      	orrs	r3, r2
 8009220:	617b      	str	r3, [r7, #20]
 8009222:	687b      	ldr	r3, [r7, #4]
 8009224:	4a2b      	ldr	r2, [pc, #172]	@ (80092d4 <TIM_OC3_SetConfig+0x10c>)
 8009226:	4293      	cmp	r3, r2
 8009228:	d007      	beq.n	800923a <TIM_OC3_SetConfig+0x72>
 800922a:	687b      	ldr	r3, [r7, #4]
 800922c:	4a2a      	ldr	r2, [pc, #168]	@ (80092d8 <TIM_OC3_SetConfig+0x110>)
 800922e:	4293      	cmp	r3, r2
 8009230:	d003      	beq.n	800923a <TIM_OC3_SetConfig+0x72>
 8009232:	687b      	ldr	r3, [r7, #4]
 8009234:	4a29      	ldr	r2, [pc, #164]	@ (80092dc <TIM_OC3_SetConfig+0x114>)
 8009236:	4293      	cmp	r3, r2
 8009238:	d10d      	bne.n	8009256 <TIM_OC3_SetConfig+0x8e>
 800923a:	697b      	ldr	r3, [r7, #20]
 800923c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009240:	617b      	str	r3, [r7, #20]
 8009242:	683b      	ldr	r3, [r7, #0]
 8009244:	68db      	ldr	r3, [r3, #12]
 8009246:	021b      	lsls	r3, r3, #8
 8009248:	697a      	ldr	r2, [r7, #20]
 800924a:	4313      	orrs	r3, r2
 800924c:	617b      	str	r3, [r7, #20]
 800924e:	697b      	ldr	r3, [r7, #20]
 8009250:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8009254:	617b      	str	r3, [r7, #20]
 8009256:	687b      	ldr	r3, [r7, #4]
 8009258:	4a1e      	ldr	r2, [pc, #120]	@ (80092d4 <TIM_OC3_SetConfig+0x10c>)
 800925a:	4293      	cmp	r3, r2
 800925c:	d013      	beq.n	8009286 <TIM_OC3_SetConfig+0xbe>
 800925e:	687b      	ldr	r3, [r7, #4]
 8009260:	4a1d      	ldr	r2, [pc, #116]	@ (80092d8 <TIM_OC3_SetConfig+0x110>)
 8009262:	4293      	cmp	r3, r2
 8009264:	d00f      	beq.n	8009286 <TIM_OC3_SetConfig+0xbe>
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	4a1d      	ldr	r2, [pc, #116]	@ (80092e0 <TIM_OC3_SetConfig+0x118>)
 800926a:	4293      	cmp	r3, r2
 800926c:	d00b      	beq.n	8009286 <TIM_OC3_SetConfig+0xbe>
 800926e:	687b      	ldr	r3, [r7, #4]
 8009270:	4a1c      	ldr	r2, [pc, #112]	@ (80092e4 <TIM_OC3_SetConfig+0x11c>)
 8009272:	4293      	cmp	r3, r2
 8009274:	d007      	beq.n	8009286 <TIM_OC3_SetConfig+0xbe>
 8009276:	687b      	ldr	r3, [r7, #4]
 8009278:	4a1b      	ldr	r2, [pc, #108]	@ (80092e8 <TIM_OC3_SetConfig+0x120>)
 800927a:	4293      	cmp	r3, r2
 800927c:	d003      	beq.n	8009286 <TIM_OC3_SetConfig+0xbe>
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	4a16      	ldr	r2, [pc, #88]	@ (80092dc <TIM_OC3_SetConfig+0x114>)
 8009282:	4293      	cmp	r3, r2
 8009284:	d113      	bne.n	80092ae <TIM_OC3_SetConfig+0xe6>
 8009286:	693b      	ldr	r3, [r7, #16]
 8009288:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800928c:	613b      	str	r3, [r7, #16]
 800928e:	693b      	ldr	r3, [r7, #16]
 8009290:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8009294:	613b      	str	r3, [r7, #16]
 8009296:	683b      	ldr	r3, [r7, #0]
 8009298:	695b      	ldr	r3, [r3, #20]
 800929a:	011b      	lsls	r3, r3, #4
 800929c:	693a      	ldr	r2, [r7, #16]
 800929e:	4313      	orrs	r3, r2
 80092a0:	613b      	str	r3, [r7, #16]
 80092a2:	683b      	ldr	r3, [r7, #0]
 80092a4:	699b      	ldr	r3, [r3, #24]
 80092a6:	011b      	lsls	r3, r3, #4
 80092a8:	693a      	ldr	r2, [r7, #16]
 80092aa:	4313      	orrs	r3, r2
 80092ac:	613b      	str	r3, [r7, #16]
 80092ae:	687b      	ldr	r3, [r7, #4]
 80092b0:	693a      	ldr	r2, [r7, #16]
 80092b2:	605a      	str	r2, [r3, #4]
 80092b4:	687b      	ldr	r3, [r7, #4]
 80092b6:	68fa      	ldr	r2, [r7, #12]
 80092b8:	61da      	str	r2, [r3, #28]
 80092ba:	683b      	ldr	r3, [r7, #0]
 80092bc:	685a      	ldr	r2, [r3, #4]
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	63da      	str	r2, [r3, #60]	@ 0x3c
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	697a      	ldr	r2, [r7, #20]
 80092c6:	621a      	str	r2, [r3, #32]
 80092c8:	bf00      	nop
 80092ca:	371c      	adds	r7, #28
 80092cc:	46bd      	mov	sp, r7
 80092ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092d2:	4770      	bx	lr
 80092d4:	40012c00 	.word	0x40012c00
 80092d8:	40013400 	.word	0x40013400
 80092dc:	40015000 	.word	0x40015000
 80092e0:	40014000 	.word	0x40014000
 80092e4:	40014400 	.word	0x40014400
 80092e8:	40014800 	.word	0x40014800

080092ec <TIM_OC4_SetConfig>:
 80092ec:	b480      	push	{r7}
 80092ee:	b087      	sub	sp, #28
 80092f0:	af00      	add	r7, sp, #0
 80092f2:	6078      	str	r0, [r7, #4]
 80092f4:	6039      	str	r1, [r7, #0]
 80092f6:	687b      	ldr	r3, [r7, #4]
 80092f8:	6a1b      	ldr	r3, [r3, #32]
 80092fa:	617b      	str	r3, [r7, #20]
 80092fc:	687b      	ldr	r3, [r7, #4]
 80092fe:	6a1b      	ldr	r3, [r3, #32]
 8009300:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8009304:	687b      	ldr	r3, [r7, #4]
 8009306:	621a      	str	r2, [r3, #32]
 8009308:	687b      	ldr	r3, [r7, #4]
 800930a:	685b      	ldr	r3, [r3, #4]
 800930c:	613b      	str	r3, [r7, #16]
 800930e:	687b      	ldr	r3, [r7, #4]
 8009310:	69db      	ldr	r3, [r3, #28]
 8009312:	60fb      	str	r3, [r7, #12]
 8009314:	68fb      	ldr	r3, [r7, #12]
 8009316:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800931a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800931e:	60fb      	str	r3, [r7, #12]
 8009320:	68fb      	ldr	r3, [r7, #12]
 8009322:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009326:	60fb      	str	r3, [r7, #12]
 8009328:	683b      	ldr	r3, [r7, #0]
 800932a:	681b      	ldr	r3, [r3, #0]
 800932c:	021b      	lsls	r3, r3, #8
 800932e:	68fa      	ldr	r2, [r7, #12]
 8009330:	4313      	orrs	r3, r2
 8009332:	60fb      	str	r3, [r7, #12]
 8009334:	697b      	ldr	r3, [r7, #20]
 8009336:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800933a:	617b      	str	r3, [r7, #20]
 800933c:	683b      	ldr	r3, [r7, #0]
 800933e:	689b      	ldr	r3, [r3, #8]
 8009340:	031b      	lsls	r3, r3, #12
 8009342:	697a      	ldr	r2, [r7, #20]
 8009344:	4313      	orrs	r3, r2
 8009346:	617b      	str	r3, [r7, #20]
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	4a2c      	ldr	r2, [pc, #176]	@ (80093fc <TIM_OC4_SetConfig+0x110>)
 800934c:	4293      	cmp	r3, r2
 800934e:	d007      	beq.n	8009360 <TIM_OC4_SetConfig+0x74>
 8009350:	687b      	ldr	r3, [r7, #4]
 8009352:	4a2b      	ldr	r2, [pc, #172]	@ (8009400 <TIM_OC4_SetConfig+0x114>)
 8009354:	4293      	cmp	r3, r2
 8009356:	d003      	beq.n	8009360 <TIM_OC4_SetConfig+0x74>
 8009358:	687b      	ldr	r3, [r7, #4]
 800935a:	4a2a      	ldr	r2, [pc, #168]	@ (8009404 <TIM_OC4_SetConfig+0x118>)
 800935c:	4293      	cmp	r3, r2
 800935e:	d10d      	bne.n	800937c <TIM_OC4_SetConfig+0x90>
 8009360:	697b      	ldr	r3, [r7, #20]
 8009362:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8009366:	617b      	str	r3, [r7, #20]
 8009368:	683b      	ldr	r3, [r7, #0]
 800936a:	68db      	ldr	r3, [r3, #12]
 800936c:	031b      	lsls	r3, r3, #12
 800936e:	697a      	ldr	r2, [r7, #20]
 8009370:	4313      	orrs	r3, r2
 8009372:	617b      	str	r3, [r7, #20]
 8009374:	697b      	ldr	r3, [r7, #20]
 8009376:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800937a:	617b      	str	r3, [r7, #20]
 800937c:	687b      	ldr	r3, [r7, #4]
 800937e:	4a1f      	ldr	r2, [pc, #124]	@ (80093fc <TIM_OC4_SetConfig+0x110>)
 8009380:	4293      	cmp	r3, r2
 8009382:	d013      	beq.n	80093ac <TIM_OC4_SetConfig+0xc0>
 8009384:	687b      	ldr	r3, [r7, #4]
 8009386:	4a1e      	ldr	r2, [pc, #120]	@ (8009400 <TIM_OC4_SetConfig+0x114>)
 8009388:	4293      	cmp	r3, r2
 800938a:	d00f      	beq.n	80093ac <TIM_OC4_SetConfig+0xc0>
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	4a1e      	ldr	r2, [pc, #120]	@ (8009408 <TIM_OC4_SetConfig+0x11c>)
 8009390:	4293      	cmp	r3, r2
 8009392:	d00b      	beq.n	80093ac <TIM_OC4_SetConfig+0xc0>
 8009394:	687b      	ldr	r3, [r7, #4]
 8009396:	4a1d      	ldr	r2, [pc, #116]	@ (800940c <TIM_OC4_SetConfig+0x120>)
 8009398:	4293      	cmp	r3, r2
 800939a:	d007      	beq.n	80093ac <TIM_OC4_SetConfig+0xc0>
 800939c:	687b      	ldr	r3, [r7, #4]
 800939e:	4a1c      	ldr	r2, [pc, #112]	@ (8009410 <TIM_OC4_SetConfig+0x124>)
 80093a0:	4293      	cmp	r3, r2
 80093a2:	d003      	beq.n	80093ac <TIM_OC4_SetConfig+0xc0>
 80093a4:	687b      	ldr	r3, [r7, #4]
 80093a6:	4a17      	ldr	r2, [pc, #92]	@ (8009404 <TIM_OC4_SetConfig+0x118>)
 80093a8:	4293      	cmp	r3, r2
 80093aa:	d113      	bne.n	80093d4 <TIM_OC4_SetConfig+0xe8>
 80093ac:	693b      	ldr	r3, [r7, #16]
 80093ae:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80093b2:	613b      	str	r3, [r7, #16]
 80093b4:	693b      	ldr	r3, [r7, #16]
 80093b6:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80093ba:	613b      	str	r3, [r7, #16]
 80093bc:	683b      	ldr	r3, [r7, #0]
 80093be:	695b      	ldr	r3, [r3, #20]
 80093c0:	019b      	lsls	r3, r3, #6
 80093c2:	693a      	ldr	r2, [r7, #16]
 80093c4:	4313      	orrs	r3, r2
 80093c6:	613b      	str	r3, [r7, #16]
 80093c8:	683b      	ldr	r3, [r7, #0]
 80093ca:	699b      	ldr	r3, [r3, #24]
 80093cc:	019b      	lsls	r3, r3, #6
 80093ce:	693a      	ldr	r2, [r7, #16]
 80093d0:	4313      	orrs	r3, r2
 80093d2:	613b      	str	r3, [r7, #16]
 80093d4:	687b      	ldr	r3, [r7, #4]
 80093d6:	693a      	ldr	r2, [r7, #16]
 80093d8:	605a      	str	r2, [r3, #4]
 80093da:	687b      	ldr	r3, [r7, #4]
 80093dc:	68fa      	ldr	r2, [r7, #12]
 80093de:	61da      	str	r2, [r3, #28]
 80093e0:	683b      	ldr	r3, [r7, #0]
 80093e2:	685a      	ldr	r2, [r3, #4]
 80093e4:	687b      	ldr	r3, [r7, #4]
 80093e6:	641a      	str	r2, [r3, #64]	@ 0x40
 80093e8:	687b      	ldr	r3, [r7, #4]
 80093ea:	697a      	ldr	r2, [r7, #20]
 80093ec:	621a      	str	r2, [r3, #32]
 80093ee:	bf00      	nop
 80093f0:	371c      	adds	r7, #28
 80093f2:	46bd      	mov	sp, r7
 80093f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093f8:	4770      	bx	lr
 80093fa:	bf00      	nop
 80093fc:	40012c00 	.word	0x40012c00
 8009400:	40013400 	.word	0x40013400
 8009404:	40015000 	.word	0x40015000
 8009408:	40014000 	.word	0x40014000
 800940c:	40014400 	.word	0x40014400
 8009410:	40014800 	.word	0x40014800

08009414 <TIM_OC5_SetConfig>:
 8009414:	b480      	push	{r7}
 8009416:	b087      	sub	sp, #28
 8009418:	af00      	add	r7, sp, #0
 800941a:	6078      	str	r0, [r7, #4]
 800941c:	6039      	str	r1, [r7, #0]
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	6a1b      	ldr	r3, [r3, #32]
 8009422:	613b      	str	r3, [r7, #16]
 8009424:	687b      	ldr	r3, [r7, #4]
 8009426:	6a1b      	ldr	r3, [r3, #32]
 8009428:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800942c:	687b      	ldr	r3, [r7, #4]
 800942e:	621a      	str	r2, [r3, #32]
 8009430:	687b      	ldr	r3, [r7, #4]
 8009432:	685b      	ldr	r3, [r3, #4]
 8009434:	617b      	str	r3, [r7, #20]
 8009436:	687b      	ldr	r3, [r7, #4]
 8009438:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800943a:	60fb      	str	r3, [r7, #12]
 800943c:	68fb      	ldr	r3, [r7, #12]
 800943e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8009442:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009446:	60fb      	str	r3, [r7, #12]
 8009448:	683b      	ldr	r3, [r7, #0]
 800944a:	681b      	ldr	r3, [r3, #0]
 800944c:	68fa      	ldr	r2, [r7, #12]
 800944e:	4313      	orrs	r3, r2
 8009450:	60fb      	str	r3, [r7, #12]
 8009452:	693b      	ldr	r3, [r7, #16]
 8009454:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8009458:	613b      	str	r3, [r7, #16]
 800945a:	683b      	ldr	r3, [r7, #0]
 800945c:	689b      	ldr	r3, [r3, #8]
 800945e:	041b      	lsls	r3, r3, #16
 8009460:	693a      	ldr	r2, [r7, #16]
 8009462:	4313      	orrs	r3, r2
 8009464:	613b      	str	r3, [r7, #16]
 8009466:	687b      	ldr	r3, [r7, #4]
 8009468:	4a19      	ldr	r2, [pc, #100]	@ (80094d0 <TIM_OC5_SetConfig+0xbc>)
 800946a:	4293      	cmp	r3, r2
 800946c:	d013      	beq.n	8009496 <TIM_OC5_SetConfig+0x82>
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	4a18      	ldr	r2, [pc, #96]	@ (80094d4 <TIM_OC5_SetConfig+0xc0>)
 8009472:	4293      	cmp	r3, r2
 8009474:	d00f      	beq.n	8009496 <TIM_OC5_SetConfig+0x82>
 8009476:	687b      	ldr	r3, [r7, #4]
 8009478:	4a17      	ldr	r2, [pc, #92]	@ (80094d8 <TIM_OC5_SetConfig+0xc4>)
 800947a:	4293      	cmp	r3, r2
 800947c:	d00b      	beq.n	8009496 <TIM_OC5_SetConfig+0x82>
 800947e:	687b      	ldr	r3, [r7, #4]
 8009480:	4a16      	ldr	r2, [pc, #88]	@ (80094dc <TIM_OC5_SetConfig+0xc8>)
 8009482:	4293      	cmp	r3, r2
 8009484:	d007      	beq.n	8009496 <TIM_OC5_SetConfig+0x82>
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	4a15      	ldr	r2, [pc, #84]	@ (80094e0 <TIM_OC5_SetConfig+0xcc>)
 800948a:	4293      	cmp	r3, r2
 800948c:	d003      	beq.n	8009496 <TIM_OC5_SetConfig+0x82>
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	4a14      	ldr	r2, [pc, #80]	@ (80094e4 <TIM_OC5_SetConfig+0xd0>)
 8009492:	4293      	cmp	r3, r2
 8009494:	d109      	bne.n	80094aa <TIM_OC5_SetConfig+0x96>
 8009496:	697b      	ldr	r3, [r7, #20]
 8009498:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800949c:	617b      	str	r3, [r7, #20]
 800949e:	683b      	ldr	r3, [r7, #0]
 80094a0:	695b      	ldr	r3, [r3, #20]
 80094a2:	021b      	lsls	r3, r3, #8
 80094a4:	697a      	ldr	r2, [r7, #20]
 80094a6:	4313      	orrs	r3, r2
 80094a8:	617b      	str	r3, [r7, #20]
 80094aa:	687b      	ldr	r3, [r7, #4]
 80094ac:	697a      	ldr	r2, [r7, #20]
 80094ae:	605a      	str	r2, [r3, #4]
 80094b0:	687b      	ldr	r3, [r7, #4]
 80094b2:	68fa      	ldr	r2, [r7, #12]
 80094b4:	651a      	str	r2, [r3, #80]	@ 0x50
 80094b6:	683b      	ldr	r3, [r7, #0]
 80094b8:	685a      	ldr	r2, [r3, #4]
 80094ba:	687b      	ldr	r3, [r7, #4]
 80094bc:	649a      	str	r2, [r3, #72]	@ 0x48
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	693a      	ldr	r2, [r7, #16]
 80094c2:	621a      	str	r2, [r3, #32]
 80094c4:	bf00      	nop
 80094c6:	371c      	adds	r7, #28
 80094c8:	46bd      	mov	sp, r7
 80094ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094ce:	4770      	bx	lr
 80094d0:	40012c00 	.word	0x40012c00
 80094d4:	40013400 	.word	0x40013400
 80094d8:	40014000 	.word	0x40014000
 80094dc:	40014400 	.word	0x40014400
 80094e0:	40014800 	.word	0x40014800
 80094e4:	40015000 	.word	0x40015000

080094e8 <TIM_OC6_SetConfig>:
 80094e8:	b480      	push	{r7}
 80094ea:	b087      	sub	sp, #28
 80094ec:	af00      	add	r7, sp, #0
 80094ee:	6078      	str	r0, [r7, #4]
 80094f0:	6039      	str	r1, [r7, #0]
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	6a1b      	ldr	r3, [r3, #32]
 80094f6:	613b      	str	r3, [r7, #16]
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	6a1b      	ldr	r3, [r3, #32]
 80094fc:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	621a      	str	r2, [r3, #32]
 8009504:	687b      	ldr	r3, [r7, #4]
 8009506:	685b      	ldr	r3, [r3, #4]
 8009508:	617b      	str	r3, [r7, #20]
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800950e:	60fb      	str	r3, [r7, #12]
 8009510:	68fb      	ldr	r3, [r7, #12]
 8009512:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8009516:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 800951a:	60fb      	str	r3, [r7, #12]
 800951c:	683b      	ldr	r3, [r7, #0]
 800951e:	681b      	ldr	r3, [r3, #0]
 8009520:	021b      	lsls	r3, r3, #8
 8009522:	68fa      	ldr	r2, [r7, #12]
 8009524:	4313      	orrs	r3, r2
 8009526:	60fb      	str	r3, [r7, #12]
 8009528:	693b      	ldr	r3, [r7, #16]
 800952a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800952e:	613b      	str	r3, [r7, #16]
 8009530:	683b      	ldr	r3, [r7, #0]
 8009532:	689b      	ldr	r3, [r3, #8]
 8009534:	051b      	lsls	r3, r3, #20
 8009536:	693a      	ldr	r2, [r7, #16]
 8009538:	4313      	orrs	r3, r2
 800953a:	613b      	str	r3, [r7, #16]
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	4a1a      	ldr	r2, [pc, #104]	@ (80095a8 <TIM_OC6_SetConfig+0xc0>)
 8009540:	4293      	cmp	r3, r2
 8009542:	d013      	beq.n	800956c <TIM_OC6_SetConfig+0x84>
 8009544:	687b      	ldr	r3, [r7, #4]
 8009546:	4a19      	ldr	r2, [pc, #100]	@ (80095ac <TIM_OC6_SetConfig+0xc4>)
 8009548:	4293      	cmp	r3, r2
 800954a:	d00f      	beq.n	800956c <TIM_OC6_SetConfig+0x84>
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	4a18      	ldr	r2, [pc, #96]	@ (80095b0 <TIM_OC6_SetConfig+0xc8>)
 8009550:	4293      	cmp	r3, r2
 8009552:	d00b      	beq.n	800956c <TIM_OC6_SetConfig+0x84>
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	4a17      	ldr	r2, [pc, #92]	@ (80095b4 <TIM_OC6_SetConfig+0xcc>)
 8009558:	4293      	cmp	r3, r2
 800955a:	d007      	beq.n	800956c <TIM_OC6_SetConfig+0x84>
 800955c:	687b      	ldr	r3, [r7, #4]
 800955e:	4a16      	ldr	r2, [pc, #88]	@ (80095b8 <TIM_OC6_SetConfig+0xd0>)
 8009560:	4293      	cmp	r3, r2
 8009562:	d003      	beq.n	800956c <TIM_OC6_SetConfig+0x84>
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	4a15      	ldr	r2, [pc, #84]	@ (80095bc <TIM_OC6_SetConfig+0xd4>)
 8009568:	4293      	cmp	r3, r2
 800956a:	d109      	bne.n	8009580 <TIM_OC6_SetConfig+0x98>
 800956c:	697b      	ldr	r3, [r7, #20]
 800956e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8009572:	617b      	str	r3, [r7, #20]
 8009574:	683b      	ldr	r3, [r7, #0]
 8009576:	695b      	ldr	r3, [r3, #20]
 8009578:	029b      	lsls	r3, r3, #10
 800957a:	697a      	ldr	r2, [r7, #20]
 800957c:	4313      	orrs	r3, r2
 800957e:	617b      	str	r3, [r7, #20]
 8009580:	687b      	ldr	r3, [r7, #4]
 8009582:	697a      	ldr	r2, [r7, #20]
 8009584:	605a      	str	r2, [r3, #4]
 8009586:	687b      	ldr	r3, [r7, #4]
 8009588:	68fa      	ldr	r2, [r7, #12]
 800958a:	651a      	str	r2, [r3, #80]	@ 0x50
 800958c:	683b      	ldr	r3, [r7, #0]
 800958e:	685a      	ldr	r2, [r3, #4]
 8009590:	687b      	ldr	r3, [r7, #4]
 8009592:	64da      	str	r2, [r3, #76]	@ 0x4c
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	693a      	ldr	r2, [r7, #16]
 8009598:	621a      	str	r2, [r3, #32]
 800959a:	bf00      	nop
 800959c:	371c      	adds	r7, #28
 800959e:	46bd      	mov	sp, r7
 80095a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095a4:	4770      	bx	lr
 80095a6:	bf00      	nop
 80095a8:	40012c00 	.word	0x40012c00
 80095ac:	40013400 	.word	0x40013400
 80095b0:	40014000 	.word	0x40014000
 80095b4:	40014400 	.word	0x40014400
 80095b8:	40014800 	.word	0x40014800
 80095bc:	40015000 	.word	0x40015000

080095c0 <TIM_TI1_SetConfig>:
 80095c0:	b480      	push	{r7}
 80095c2:	b087      	sub	sp, #28
 80095c4:	af00      	add	r7, sp, #0
 80095c6:	60f8      	str	r0, [r7, #12]
 80095c8:	60b9      	str	r1, [r7, #8]
 80095ca:	607a      	str	r2, [r7, #4]
 80095cc:	603b      	str	r3, [r7, #0]
 80095ce:	68fb      	ldr	r3, [r7, #12]
 80095d0:	6a1b      	ldr	r3, [r3, #32]
 80095d2:	613b      	str	r3, [r7, #16]
 80095d4:	68fb      	ldr	r3, [r7, #12]
 80095d6:	6a1b      	ldr	r3, [r3, #32]
 80095d8:	f023 0201 	bic.w	r2, r3, #1
 80095dc:	68fb      	ldr	r3, [r7, #12]
 80095de:	621a      	str	r2, [r3, #32]
 80095e0:	68fb      	ldr	r3, [r7, #12]
 80095e2:	699b      	ldr	r3, [r3, #24]
 80095e4:	617b      	str	r3, [r7, #20]
 80095e6:	68fb      	ldr	r3, [r7, #12]
 80095e8:	4a28      	ldr	r2, [pc, #160]	@ (800968c <TIM_TI1_SetConfig+0xcc>)
 80095ea:	4293      	cmp	r3, r2
 80095ec:	d01b      	beq.n	8009626 <TIM_TI1_SetConfig+0x66>
 80095ee:	68fb      	ldr	r3, [r7, #12]
 80095f0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80095f4:	d017      	beq.n	8009626 <TIM_TI1_SetConfig+0x66>
 80095f6:	68fb      	ldr	r3, [r7, #12]
 80095f8:	4a25      	ldr	r2, [pc, #148]	@ (8009690 <TIM_TI1_SetConfig+0xd0>)
 80095fa:	4293      	cmp	r3, r2
 80095fc:	d013      	beq.n	8009626 <TIM_TI1_SetConfig+0x66>
 80095fe:	68fb      	ldr	r3, [r7, #12]
 8009600:	4a24      	ldr	r2, [pc, #144]	@ (8009694 <TIM_TI1_SetConfig+0xd4>)
 8009602:	4293      	cmp	r3, r2
 8009604:	d00f      	beq.n	8009626 <TIM_TI1_SetConfig+0x66>
 8009606:	68fb      	ldr	r3, [r7, #12]
 8009608:	4a23      	ldr	r2, [pc, #140]	@ (8009698 <TIM_TI1_SetConfig+0xd8>)
 800960a:	4293      	cmp	r3, r2
 800960c:	d00b      	beq.n	8009626 <TIM_TI1_SetConfig+0x66>
 800960e:	68fb      	ldr	r3, [r7, #12]
 8009610:	4a22      	ldr	r2, [pc, #136]	@ (800969c <TIM_TI1_SetConfig+0xdc>)
 8009612:	4293      	cmp	r3, r2
 8009614:	d007      	beq.n	8009626 <TIM_TI1_SetConfig+0x66>
 8009616:	68fb      	ldr	r3, [r7, #12]
 8009618:	4a21      	ldr	r2, [pc, #132]	@ (80096a0 <TIM_TI1_SetConfig+0xe0>)
 800961a:	4293      	cmp	r3, r2
 800961c:	d003      	beq.n	8009626 <TIM_TI1_SetConfig+0x66>
 800961e:	68fb      	ldr	r3, [r7, #12]
 8009620:	4a20      	ldr	r2, [pc, #128]	@ (80096a4 <TIM_TI1_SetConfig+0xe4>)
 8009622:	4293      	cmp	r3, r2
 8009624:	d101      	bne.n	800962a <TIM_TI1_SetConfig+0x6a>
 8009626:	2301      	movs	r3, #1
 8009628:	e000      	b.n	800962c <TIM_TI1_SetConfig+0x6c>
 800962a:	2300      	movs	r3, #0
 800962c:	2b00      	cmp	r3, #0
 800962e:	d008      	beq.n	8009642 <TIM_TI1_SetConfig+0x82>
 8009630:	697b      	ldr	r3, [r7, #20]
 8009632:	f023 0303 	bic.w	r3, r3, #3
 8009636:	617b      	str	r3, [r7, #20]
 8009638:	697a      	ldr	r2, [r7, #20]
 800963a:	687b      	ldr	r3, [r7, #4]
 800963c:	4313      	orrs	r3, r2
 800963e:	617b      	str	r3, [r7, #20]
 8009640:	e003      	b.n	800964a <TIM_TI1_SetConfig+0x8a>
 8009642:	697b      	ldr	r3, [r7, #20]
 8009644:	f043 0301 	orr.w	r3, r3, #1
 8009648:	617b      	str	r3, [r7, #20]
 800964a:	697b      	ldr	r3, [r7, #20]
 800964c:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8009650:	617b      	str	r3, [r7, #20]
 8009652:	683b      	ldr	r3, [r7, #0]
 8009654:	011b      	lsls	r3, r3, #4
 8009656:	b2db      	uxtb	r3, r3
 8009658:	697a      	ldr	r2, [r7, #20]
 800965a:	4313      	orrs	r3, r2
 800965c:	617b      	str	r3, [r7, #20]
 800965e:	693b      	ldr	r3, [r7, #16]
 8009660:	f023 030a 	bic.w	r3, r3, #10
 8009664:	613b      	str	r3, [r7, #16]
 8009666:	68bb      	ldr	r3, [r7, #8]
 8009668:	f003 030a 	and.w	r3, r3, #10
 800966c:	693a      	ldr	r2, [r7, #16]
 800966e:	4313      	orrs	r3, r2
 8009670:	613b      	str	r3, [r7, #16]
 8009672:	68fb      	ldr	r3, [r7, #12]
 8009674:	697a      	ldr	r2, [r7, #20]
 8009676:	619a      	str	r2, [r3, #24]
 8009678:	68fb      	ldr	r3, [r7, #12]
 800967a:	693a      	ldr	r2, [r7, #16]
 800967c:	621a      	str	r2, [r3, #32]
 800967e:	bf00      	nop
 8009680:	371c      	adds	r7, #28
 8009682:	46bd      	mov	sp, r7
 8009684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009688:	4770      	bx	lr
 800968a:	bf00      	nop
 800968c:	40012c00 	.word	0x40012c00
 8009690:	40000400 	.word	0x40000400
 8009694:	40000800 	.word	0x40000800
 8009698:	40000c00 	.word	0x40000c00
 800969c:	40013400 	.word	0x40013400
 80096a0:	40014000 	.word	0x40014000
 80096a4:	40015000 	.word	0x40015000

080096a8 <TIM_TI1_ConfigInputStage>:
 80096a8:	b480      	push	{r7}
 80096aa:	b087      	sub	sp, #28
 80096ac:	af00      	add	r7, sp, #0
 80096ae:	60f8      	str	r0, [r7, #12]
 80096b0:	60b9      	str	r1, [r7, #8]
 80096b2:	607a      	str	r2, [r7, #4]
 80096b4:	68fb      	ldr	r3, [r7, #12]
 80096b6:	6a1b      	ldr	r3, [r3, #32]
 80096b8:	617b      	str	r3, [r7, #20]
 80096ba:	68fb      	ldr	r3, [r7, #12]
 80096bc:	6a1b      	ldr	r3, [r3, #32]
 80096be:	f023 0201 	bic.w	r2, r3, #1
 80096c2:	68fb      	ldr	r3, [r7, #12]
 80096c4:	621a      	str	r2, [r3, #32]
 80096c6:	68fb      	ldr	r3, [r7, #12]
 80096c8:	699b      	ldr	r3, [r3, #24]
 80096ca:	613b      	str	r3, [r7, #16]
 80096cc:	693b      	ldr	r3, [r7, #16]
 80096ce:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80096d2:	613b      	str	r3, [r7, #16]
 80096d4:	687b      	ldr	r3, [r7, #4]
 80096d6:	011b      	lsls	r3, r3, #4
 80096d8:	693a      	ldr	r2, [r7, #16]
 80096da:	4313      	orrs	r3, r2
 80096dc:	613b      	str	r3, [r7, #16]
 80096de:	697b      	ldr	r3, [r7, #20]
 80096e0:	f023 030a 	bic.w	r3, r3, #10
 80096e4:	617b      	str	r3, [r7, #20]
 80096e6:	697a      	ldr	r2, [r7, #20]
 80096e8:	68bb      	ldr	r3, [r7, #8]
 80096ea:	4313      	orrs	r3, r2
 80096ec:	617b      	str	r3, [r7, #20]
 80096ee:	68fb      	ldr	r3, [r7, #12]
 80096f0:	693a      	ldr	r2, [r7, #16]
 80096f2:	619a      	str	r2, [r3, #24]
 80096f4:	68fb      	ldr	r3, [r7, #12]
 80096f6:	697a      	ldr	r2, [r7, #20]
 80096f8:	621a      	str	r2, [r3, #32]
 80096fa:	bf00      	nop
 80096fc:	371c      	adds	r7, #28
 80096fe:	46bd      	mov	sp, r7
 8009700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009704:	4770      	bx	lr

08009706 <TIM_TI2_SetConfig>:
 8009706:	b480      	push	{r7}
 8009708:	b087      	sub	sp, #28
 800970a:	af00      	add	r7, sp, #0
 800970c:	60f8      	str	r0, [r7, #12]
 800970e:	60b9      	str	r1, [r7, #8]
 8009710:	607a      	str	r2, [r7, #4]
 8009712:	603b      	str	r3, [r7, #0]
 8009714:	68fb      	ldr	r3, [r7, #12]
 8009716:	6a1b      	ldr	r3, [r3, #32]
 8009718:	617b      	str	r3, [r7, #20]
 800971a:	68fb      	ldr	r3, [r7, #12]
 800971c:	6a1b      	ldr	r3, [r3, #32]
 800971e:	f023 0210 	bic.w	r2, r3, #16
 8009722:	68fb      	ldr	r3, [r7, #12]
 8009724:	621a      	str	r2, [r3, #32]
 8009726:	68fb      	ldr	r3, [r7, #12]
 8009728:	699b      	ldr	r3, [r3, #24]
 800972a:	613b      	str	r3, [r7, #16]
 800972c:	693b      	ldr	r3, [r7, #16]
 800972e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009732:	613b      	str	r3, [r7, #16]
 8009734:	687b      	ldr	r3, [r7, #4]
 8009736:	021b      	lsls	r3, r3, #8
 8009738:	693a      	ldr	r2, [r7, #16]
 800973a:	4313      	orrs	r3, r2
 800973c:	613b      	str	r3, [r7, #16]
 800973e:	693b      	ldr	r3, [r7, #16]
 8009740:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8009744:	613b      	str	r3, [r7, #16]
 8009746:	683b      	ldr	r3, [r7, #0]
 8009748:	031b      	lsls	r3, r3, #12
 800974a:	b29b      	uxth	r3, r3
 800974c:	693a      	ldr	r2, [r7, #16]
 800974e:	4313      	orrs	r3, r2
 8009750:	613b      	str	r3, [r7, #16]
 8009752:	697b      	ldr	r3, [r7, #20]
 8009754:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8009758:	617b      	str	r3, [r7, #20]
 800975a:	68bb      	ldr	r3, [r7, #8]
 800975c:	011b      	lsls	r3, r3, #4
 800975e:	f003 03a0 	and.w	r3, r3, #160	@ 0xa0
 8009762:	697a      	ldr	r2, [r7, #20]
 8009764:	4313      	orrs	r3, r2
 8009766:	617b      	str	r3, [r7, #20]
 8009768:	68fb      	ldr	r3, [r7, #12]
 800976a:	693a      	ldr	r2, [r7, #16]
 800976c:	619a      	str	r2, [r3, #24]
 800976e:	68fb      	ldr	r3, [r7, #12]
 8009770:	697a      	ldr	r2, [r7, #20]
 8009772:	621a      	str	r2, [r3, #32]
 8009774:	bf00      	nop
 8009776:	371c      	adds	r7, #28
 8009778:	46bd      	mov	sp, r7
 800977a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800977e:	4770      	bx	lr

08009780 <TIM_TI2_ConfigInputStage>:
 8009780:	b480      	push	{r7}
 8009782:	b087      	sub	sp, #28
 8009784:	af00      	add	r7, sp, #0
 8009786:	60f8      	str	r0, [r7, #12]
 8009788:	60b9      	str	r1, [r7, #8]
 800978a:	607a      	str	r2, [r7, #4]
 800978c:	68fb      	ldr	r3, [r7, #12]
 800978e:	6a1b      	ldr	r3, [r3, #32]
 8009790:	617b      	str	r3, [r7, #20]
 8009792:	68fb      	ldr	r3, [r7, #12]
 8009794:	6a1b      	ldr	r3, [r3, #32]
 8009796:	f023 0210 	bic.w	r2, r3, #16
 800979a:	68fb      	ldr	r3, [r7, #12]
 800979c:	621a      	str	r2, [r3, #32]
 800979e:	68fb      	ldr	r3, [r7, #12]
 80097a0:	699b      	ldr	r3, [r3, #24]
 80097a2:	613b      	str	r3, [r7, #16]
 80097a4:	693b      	ldr	r3, [r7, #16]
 80097a6:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 80097aa:	613b      	str	r3, [r7, #16]
 80097ac:	687b      	ldr	r3, [r7, #4]
 80097ae:	031b      	lsls	r3, r3, #12
 80097b0:	693a      	ldr	r2, [r7, #16]
 80097b2:	4313      	orrs	r3, r2
 80097b4:	613b      	str	r3, [r7, #16]
 80097b6:	697b      	ldr	r3, [r7, #20]
 80097b8:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 80097bc:	617b      	str	r3, [r7, #20]
 80097be:	68bb      	ldr	r3, [r7, #8]
 80097c0:	011b      	lsls	r3, r3, #4
 80097c2:	697a      	ldr	r2, [r7, #20]
 80097c4:	4313      	orrs	r3, r2
 80097c6:	617b      	str	r3, [r7, #20]
 80097c8:	68fb      	ldr	r3, [r7, #12]
 80097ca:	693a      	ldr	r2, [r7, #16]
 80097cc:	619a      	str	r2, [r3, #24]
 80097ce:	68fb      	ldr	r3, [r7, #12]
 80097d0:	697a      	ldr	r2, [r7, #20]
 80097d2:	621a      	str	r2, [r3, #32]
 80097d4:	bf00      	nop
 80097d6:	371c      	adds	r7, #28
 80097d8:	46bd      	mov	sp, r7
 80097da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097de:	4770      	bx	lr

080097e0 <TIM_TI3_SetConfig>:
 80097e0:	b480      	push	{r7}
 80097e2:	b087      	sub	sp, #28
 80097e4:	af00      	add	r7, sp, #0
 80097e6:	60f8      	str	r0, [r7, #12]
 80097e8:	60b9      	str	r1, [r7, #8]
 80097ea:	607a      	str	r2, [r7, #4]
 80097ec:	603b      	str	r3, [r7, #0]
 80097ee:	68fb      	ldr	r3, [r7, #12]
 80097f0:	6a1b      	ldr	r3, [r3, #32]
 80097f2:	617b      	str	r3, [r7, #20]
 80097f4:	68fb      	ldr	r3, [r7, #12]
 80097f6:	6a1b      	ldr	r3, [r3, #32]
 80097f8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80097fc:	68fb      	ldr	r3, [r7, #12]
 80097fe:	621a      	str	r2, [r3, #32]
 8009800:	68fb      	ldr	r3, [r7, #12]
 8009802:	69db      	ldr	r3, [r3, #28]
 8009804:	613b      	str	r3, [r7, #16]
 8009806:	693b      	ldr	r3, [r7, #16]
 8009808:	f023 0303 	bic.w	r3, r3, #3
 800980c:	613b      	str	r3, [r7, #16]
 800980e:	693a      	ldr	r2, [r7, #16]
 8009810:	687b      	ldr	r3, [r7, #4]
 8009812:	4313      	orrs	r3, r2
 8009814:	613b      	str	r3, [r7, #16]
 8009816:	693b      	ldr	r3, [r7, #16]
 8009818:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 800981c:	613b      	str	r3, [r7, #16]
 800981e:	683b      	ldr	r3, [r7, #0]
 8009820:	011b      	lsls	r3, r3, #4
 8009822:	b2db      	uxtb	r3, r3
 8009824:	693a      	ldr	r2, [r7, #16]
 8009826:	4313      	orrs	r3, r2
 8009828:	613b      	str	r3, [r7, #16]
 800982a:	697b      	ldr	r3, [r7, #20]
 800982c:	f423 6320 	bic.w	r3, r3, #2560	@ 0xa00
 8009830:	617b      	str	r3, [r7, #20]
 8009832:	68bb      	ldr	r3, [r7, #8]
 8009834:	021b      	lsls	r3, r3, #8
 8009836:	f403 6320 	and.w	r3, r3, #2560	@ 0xa00
 800983a:	697a      	ldr	r2, [r7, #20]
 800983c:	4313      	orrs	r3, r2
 800983e:	617b      	str	r3, [r7, #20]
 8009840:	68fb      	ldr	r3, [r7, #12]
 8009842:	693a      	ldr	r2, [r7, #16]
 8009844:	61da      	str	r2, [r3, #28]
 8009846:	68fb      	ldr	r3, [r7, #12]
 8009848:	697a      	ldr	r2, [r7, #20]
 800984a:	621a      	str	r2, [r3, #32]
 800984c:	bf00      	nop
 800984e:	371c      	adds	r7, #28
 8009850:	46bd      	mov	sp, r7
 8009852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009856:	4770      	bx	lr

08009858 <TIM_TI4_SetConfig>:
 8009858:	b480      	push	{r7}
 800985a:	b087      	sub	sp, #28
 800985c:	af00      	add	r7, sp, #0
 800985e:	60f8      	str	r0, [r7, #12]
 8009860:	60b9      	str	r1, [r7, #8]
 8009862:	607a      	str	r2, [r7, #4]
 8009864:	603b      	str	r3, [r7, #0]
 8009866:	68fb      	ldr	r3, [r7, #12]
 8009868:	6a1b      	ldr	r3, [r3, #32]
 800986a:	617b      	str	r3, [r7, #20]
 800986c:	68fb      	ldr	r3, [r7, #12]
 800986e:	6a1b      	ldr	r3, [r3, #32]
 8009870:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8009874:	68fb      	ldr	r3, [r7, #12]
 8009876:	621a      	str	r2, [r3, #32]
 8009878:	68fb      	ldr	r3, [r7, #12]
 800987a:	69db      	ldr	r3, [r3, #28]
 800987c:	613b      	str	r3, [r7, #16]
 800987e:	693b      	ldr	r3, [r7, #16]
 8009880:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009884:	613b      	str	r3, [r7, #16]
 8009886:	687b      	ldr	r3, [r7, #4]
 8009888:	021b      	lsls	r3, r3, #8
 800988a:	693a      	ldr	r2, [r7, #16]
 800988c:	4313      	orrs	r3, r2
 800988e:	613b      	str	r3, [r7, #16]
 8009890:	693b      	ldr	r3, [r7, #16]
 8009892:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8009896:	613b      	str	r3, [r7, #16]
 8009898:	683b      	ldr	r3, [r7, #0]
 800989a:	031b      	lsls	r3, r3, #12
 800989c:	b29b      	uxth	r3, r3
 800989e:	693a      	ldr	r2, [r7, #16]
 80098a0:	4313      	orrs	r3, r2
 80098a2:	613b      	str	r3, [r7, #16]
 80098a4:	697b      	ldr	r3, [r7, #20]
 80098a6:	f423 4320 	bic.w	r3, r3, #40960	@ 0xa000
 80098aa:	617b      	str	r3, [r7, #20]
 80098ac:	68bb      	ldr	r3, [r7, #8]
 80098ae:	031b      	lsls	r3, r3, #12
 80098b0:	f403 4320 	and.w	r3, r3, #40960	@ 0xa000
 80098b4:	697a      	ldr	r2, [r7, #20]
 80098b6:	4313      	orrs	r3, r2
 80098b8:	617b      	str	r3, [r7, #20]
 80098ba:	68fb      	ldr	r3, [r7, #12]
 80098bc:	693a      	ldr	r2, [r7, #16]
 80098be:	61da      	str	r2, [r3, #28]
 80098c0:	68fb      	ldr	r3, [r7, #12]
 80098c2:	697a      	ldr	r2, [r7, #20]
 80098c4:	621a      	str	r2, [r3, #32]
 80098c6:	bf00      	nop
 80098c8:	371c      	adds	r7, #28
 80098ca:	46bd      	mov	sp, r7
 80098cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098d0:	4770      	bx	lr

080098d2 <TIM_ITRx_SetConfig>:
 80098d2:	b480      	push	{r7}
 80098d4:	b085      	sub	sp, #20
 80098d6:	af00      	add	r7, sp, #0
 80098d8:	6078      	str	r0, [r7, #4]
 80098da:	6039      	str	r1, [r7, #0]
 80098dc:	687b      	ldr	r3, [r7, #4]
 80098de:	689b      	ldr	r3, [r3, #8]
 80098e0:	60fb      	str	r3, [r7, #12]
 80098e2:	68fb      	ldr	r3, [r7, #12]
 80098e4:	f423 1340 	bic.w	r3, r3, #3145728	@ 0x300000
 80098e8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80098ec:	60fb      	str	r3, [r7, #12]
 80098ee:	683a      	ldr	r2, [r7, #0]
 80098f0:	68fb      	ldr	r3, [r7, #12]
 80098f2:	4313      	orrs	r3, r2
 80098f4:	f043 0307 	orr.w	r3, r3, #7
 80098f8:	60fb      	str	r3, [r7, #12]
 80098fa:	687b      	ldr	r3, [r7, #4]
 80098fc:	68fa      	ldr	r2, [r7, #12]
 80098fe:	609a      	str	r2, [r3, #8]
 8009900:	bf00      	nop
 8009902:	3714      	adds	r7, #20
 8009904:	46bd      	mov	sp, r7
 8009906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800990a:	4770      	bx	lr

0800990c <TIM_ETR_SetConfig>:
 800990c:	b480      	push	{r7}
 800990e:	b087      	sub	sp, #28
 8009910:	af00      	add	r7, sp, #0
 8009912:	60f8      	str	r0, [r7, #12]
 8009914:	60b9      	str	r1, [r7, #8]
 8009916:	607a      	str	r2, [r7, #4]
 8009918:	603b      	str	r3, [r7, #0]
 800991a:	68fb      	ldr	r3, [r7, #12]
 800991c:	689b      	ldr	r3, [r3, #8]
 800991e:	617b      	str	r3, [r7, #20]
 8009920:	697b      	ldr	r3, [r7, #20]
 8009922:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8009926:	617b      	str	r3, [r7, #20]
 8009928:	683b      	ldr	r3, [r7, #0]
 800992a:	021a      	lsls	r2, r3, #8
 800992c:	687b      	ldr	r3, [r7, #4]
 800992e:	431a      	orrs	r2, r3
 8009930:	68bb      	ldr	r3, [r7, #8]
 8009932:	4313      	orrs	r3, r2
 8009934:	697a      	ldr	r2, [r7, #20]
 8009936:	4313      	orrs	r3, r2
 8009938:	617b      	str	r3, [r7, #20]
 800993a:	68fb      	ldr	r3, [r7, #12]
 800993c:	697a      	ldr	r2, [r7, #20]
 800993e:	609a      	str	r2, [r3, #8]
 8009940:	bf00      	nop
 8009942:	371c      	adds	r7, #28
 8009944:	46bd      	mov	sp, r7
 8009946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800994a:	4770      	bx	lr

0800994c <TIM_CCxChannelCmd>:
 800994c:	b480      	push	{r7}
 800994e:	b087      	sub	sp, #28
 8009950:	af00      	add	r7, sp, #0
 8009952:	60f8      	str	r0, [r7, #12]
 8009954:	60b9      	str	r1, [r7, #8]
 8009956:	607a      	str	r2, [r7, #4]
 8009958:	68bb      	ldr	r3, [r7, #8]
 800995a:	f003 031f 	and.w	r3, r3, #31
 800995e:	2201      	movs	r2, #1
 8009960:	fa02 f303 	lsl.w	r3, r2, r3
 8009964:	617b      	str	r3, [r7, #20]
 8009966:	68fb      	ldr	r3, [r7, #12]
 8009968:	6a1a      	ldr	r2, [r3, #32]
 800996a:	697b      	ldr	r3, [r7, #20]
 800996c:	43db      	mvns	r3, r3
 800996e:	401a      	ands	r2, r3
 8009970:	68fb      	ldr	r3, [r7, #12]
 8009972:	621a      	str	r2, [r3, #32]
 8009974:	68fb      	ldr	r3, [r7, #12]
 8009976:	6a1a      	ldr	r2, [r3, #32]
 8009978:	68bb      	ldr	r3, [r7, #8]
 800997a:	f003 031f 	and.w	r3, r3, #31
 800997e:	6879      	ldr	r1, [r7, #4]
 8009980:	fa01 f303 	lsl.w	r3, r1, r3
 8009984:	431a      	orrs	r2, r3
 8009986:	68fb      	ldr	r3, [r7, #12]
 8009988:	621a      	str	r2, [r3, #32]
 800998a:	bf00      	nop
 800998c:	371c      	adds	r7, #28
 800998e:	46bd      	mov	sp, r7
 8009990:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009994:	4770      	bx	lr
	...

08009998 <HAL_TIMEx_MasterConfigSynchronization>:
 8009998:	b480      	push	{r7}
 800999a:	b085      	sub	sp, #20
 800999c:	af00      	add	r7, sp, #0
 800999e:	6078      	str	r0, [r7, #4]
 80099a0:	6039      	str	r1, [r7, #0]
 80099a2:	687b      	ldr	r3, [r7, #4]
 80099a4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80099a8:	2b01      	cmp	r3, #1
 80099aa:	d101      	bne.n	80099b0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80099ac:	2302      	movs	r3, #2
 80099ae:	e074      	b.n	8009a9a <HAL_TIMEx_MasterConfigSynchronization+0x102>
 80099b0:	687b      	ldr	r3, [r7, #4]
 80099b2:	2201      	movs	r2, #1
 80099b4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80099b8:	687b      	ldr	r3, [r7, #4]
 80099ba:	2202      	movs	r2, #2
 80099bc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	681b      	ldr	r3, [r3, #0]
 80099c4:	685b      	ldr	r3, [r3, #4]
 80099c6:	60fb      	str	r3, [r7, #12]
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	681b      	ldr	r3, [r3, #0]
 80099cc:	689b      	ldr	r3, [r3, #8]
 80099ce:	60bb      	str	r3, [r7, #8]
 80099d0:	687b      	ldr	r3, [r7, #4]
 80099d2:	681b      	ldr	r3, [r3, #0]
 80099d4:	4a34      	ldr	r2, [pc, #208]	@ (8009aa8 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 80099d6:	4293      	cmp	r3, r2
 80099d8:	d009      	beq.n	80099ee <HAL_TIMEx_MasterConfigSynchronization+0x56>
 80099da:	687b      	ldr	r3, [r7, #4]
 80099dc:	681b      	ldr	r3, [r3, #0]
 80099de:	4a33      	ldr	r2, [pc, #204]	@ (8009aac <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 80099e0:	4293      	cmp	r3, r2
 80099e2:	d004      	beq.n	80099ee <HAL_TIMEx_MasterConfigSynchronization+0x56>
 80099e4:	687b      	ldr	r3, [r7, #4]
 80099e6:	681b      	ldr	r3, [r3, #0]
 80099e8:	4a31      	ldr	r2, [pc, #196]	@ (8009ab0 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80099ea:	4293      	cmp	r3, r2
 80099ec:	d108      	bne.n	8009a00 <HAL_TIMEx_MasterConfigSynchronization+0x68>
 80099ee:	68fb      	ldr	r3, [r7, #12]
 80099f0:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 80099f4:	60fb      	str	r3, [r7, #12]
 80099f6:	683b      	ldr	r3, [r7, #0]
 80099f8:	685b      	ldr	r3, [r3, #4]
 80099fa:	68fa      	ldr	r2, [r7, #12]
 80099fc:	4313      	orrs	r3, r2
 80099fe:	60fb      	str	r3, [r7, #12]
 8009a00:	68fb      	ldr	r3, [r7, #12]
 8009a02:	f023 7300 	bic.w	r3, r3, #33554432	@ 0x2000000
 8009a06:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009a0a:	60fb      	str	r3, [r7, #12]
 8009a0c:	683b      	ldr	r3, [r7, #0]
 8009a0e:	681b      	ldr	r3, [r3, #0]
 8009a10:	68fa      	ldr	r2, [r7, #12]
 8009a12:	4313      	orrs	r3, r2
 8009a14:	60fb      	str	r3, [r7, #12]
 8009a16:	687b      	ldr	r3, [r7, #4]
 8009a18:	681b      	ldr	r3, [r3, #0]
 8009a1a:	68fa      	ldr	r2, [r7, #12]
 8009a1c:	605a      	str	r2, [r3, #4]
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	681b      	ldr	r3, [r3, #0]
 8009a22:	4a21      	ldr	r2, [pc, #132]	@ (8009aa8 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 8009a24:	4293      	cmp	r3, r2
 8009a26:	d022      	beq.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8009a28:	687b      	ldr	r3, [r7, #4]
 8009a2a:	681b      	ldr	r3, [r3, #0]
 8009a2c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8009a30:	d01d      	beq.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8009a32:	687b      	ldr	r3, [r7, #4]
 8009a34:	681b      	ldr	r3, [r3, #0]
 8009a36:	4a1f      	ldr	r2, [pc, #124]	@ (8009ab4 <HAL_TIMEx_MasterConfigSynchronization+0x11c>)
 8009a38:	4293      	cmp	r3, r2
 8009a3a:	d018      	beq.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8009a3c:	687b      	ldr	r3, [r7, #4]
 8009a3e:	681b      	ldr	r3, [r3, #0]
 8009a40:	4a1d      	ldr	r2, [pc, #116]	@ (8009ab8 <HAL_TIMEx_MasterConfigSynchronization+0x120>)
 8009a42:	4293      	cmp	r3, r2
 8009a44:	d013      	beq.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8009a46:	687b      	ldr	r3, [r7, #4]
 8009a48:	681b      	ldr	r3, [r3, #0]
 8009a4a:	4a1c      	ldr	r2, [pc, #112]	@ (8009abc <HAL_TIMEx_MasterConfigSynchronization+0x124>)
 8009a4c:	4293      	cmp	r3, r2
 8009a4e:	d00e      	beq.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8009a50:	687b      	ldr	r3, [r7, #4]
 8009a52:	681b      	ldr	r3, [r3, #0]
 8009a54:	4a15      	ldr	r2, [pc, #84]	@ (8009aac <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8009a56:	4293      	cmp	r3, r2
 8009a58:	d009      	beq.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8009a5a:	687b      	ldr	r3, [r7, #4]
 8009a5c:	681b      	ldr	r3, [r3, #0]
 8009a5e:	4a18      	ldr	r2, [pc, #96]	@ (8009ac0 <HAL_TIMEx_MasterConfigSynchronization+0x128>)
 8009a60:	4293      	cmp	r3, r2
 8009a62:	d004      	beq.n	8009a6e <HAL_TIMEx_MasterConfigSynchronization+0xd6>
 8009a64:	687b      	ldr	r3, [r7, #4]
 8009a66:	681b      	ldr	r3, [r3, #0]
 8009a68:	4a11      	ldr	r2, [pc, #68]	@ (8009ab0 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8009a6a:	4293      	cmp	r3, r2
 8009a6c:	d10c      	bne.n	8009a88 <HAL_TIMEx_MasterConfigSynchronization+0xf0>
 8009a6e:	68bb      	ldr	r3, [r7, #8]
 8009a70:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009a74:	60bb      	str	r3, [r7, #8]
 8009a76:	683b      	ldr	r3, [r7, #0]
 8009a78:	689b      	ldr	r3, [r3, #8]
 8009a7a:	68ba      	ldr	r2, [r7, #8]
 8009a7c:	4313      	orrs	r3, r2
 8009a7e:	60bb      	str	r3, [r7, #8]
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	681b      	ldr	r3, [r3, #0]
 8009a84:	68ba      	ldr	r2, [r7, #8]
 8009a86:	609a      	str	r2, [r3, #8]
 8009a88:	687b      	ldr	r3, [r7, #4]
 8009a8a:	2201      	movs	r2, #1
 8009a8c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8009a90:	687b      	ldr	r3, [r7, #4]
 8009a92:	2200      	movs	r2, #0
 8009a94:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009a98:	2300      	movs	r3, #0
 8009a9a:	4618      	mov	r0, r3
 8009a9c:	3714      	adds	r7, #20
 8009a9e:	46bd      	mov	sp, r7
 8009aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aa4:	4770      	bx	lr
 8009aa6:	bf00      	nop
 8009aa8:	40012c00 	.word	0x40012c00
 8009aac:	40013400 	.word	0x40013400
 8009ab0:	40015000 	.word	0x40015000
 8009ab4:	40000400 	.word	0x40000400
 8009ab8:	40000800 	.word	0x40000800
 8009abc:	40000c00 	.word	0x40000c00
 8009ac0:	40014000 	.word	0x40014000

08009ac4 <HAL_TIMEx_ConfigBreakDeadTime>:
 8009ac4:	b480      	push	{r7}
 8009ac6:	b085      	sub	sp, #20
 8009ac8:	af00      	add	r7, sp, #0
 8009aca:	6078      	str	r0, [r7, #4]
 8009acc:	6039      	str	r1, [r7, #0]
 8009ace:	2300      	movs	r3, #0
 8009ad0:	60fb      	str	r3, [r7, #12]
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8009ad8:	2b01      	cmp	r3, #1
 8009ada:	d101      	bne.n	8009ae0 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8009adc:	2302      	movs	r3, #2
 8009ade:	e078      	b.n	8009bd2 <HAL_TIMEx_ConfigBreakDeadTime+0x10e>
 8009ae0:	687b      	ldr	r3, [r7, #4]
 8009ae2:	2201      	movs	r2, #1
 8009ae4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009ae8:	68fb      	ldr	r3, [r7, #12]
 8009aea:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8009aee:	683b      	ldr	r3, [r7, #0]
 8009af0:	68db      	ldr	r3, [r3, #12]
 8009af2:	4313      	orrs	r3, r2
 8009af4:	60fb      	str	r3, [r7, #12]
 8009af6:	68fb      	ldr	r3, [r7, #12]
 8009af8:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8009afc:	683b      	ldr	r3, [r7, #0]
 8009afe:	689b      	ldr	r3, [r3, #8]
 8009b00:	4313      	orrs	r3, r2
 8009b02:	60fb      	str	r3, [r7, #12]
 8009b04:	68fb      	ldr	r3, [r7, #12]
 8009b06:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 8009b0a:	683b      	ldr	r3, [r7, #0]
 8009b0c:	685b      	ldr	r3, [r3, #4]
 8009b0e:	4313      	orrs	r3, r2
 8009b10:	60fb      	str	r3, [r7, #12]
 8009b12:	68fb      	ldr	r3, [r7, #12]
 8009b14:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8009b18:	683b      	ldr	r3, [r7, #0]
 8009b1a:	681b      	ldr	r3, [r3, #0]
 8009b1c:	4313      	orrs	r3, r2
 8009b1e:	60fb      	str	r3, [r7, #12]
 8009b20:	68fb      	ldr	r3, [r7, #12]
 8009b22:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8009b26:	683b      	ldr	r3, [r7, #0]
 8009b28:	691b      	ldr	r3, [r3, #16]
 8009b2a:	4313      	orrs	r3, r2
 8009b2c:	60fb      	str	r3, [r7, #12]
 8009b2e:	68fb      	ldr	r3, [r7, #12]
 8009b30:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 8009b34:	683b      	ldr	r3, [r7, #0]
 8009b36:	695b      	ldr	r3, [r3, #20]
 8009b38:	4313      	orrs	r3, r2
 8009b3a:	60fb      	str	r3, [r7, #12]
 8009b3c:	68fb      	ldr	r3, [r7, #12]
 8009b3e:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 8009b42:	683b      	ldr	r3, [r7, #0]
 8009b44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009b46:	4313      	orrs	r3, r2
 8009b48:	60fb      	str	r3, [r7, #12]
 8009b4a:	68fb      	ldr	r3, [r7, #12]
 8009b4c:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 8009b50:	683b      	ldr	r3, [r7, #0]
 8009b52:	699b      	ldr	r3, [r3, #24]
 8009b54:	041b      	lsls	r3, r3, #16
 8009b56:	4313      	orrs	r3, r2
 8009b58:	60fb      	str	r3, [r7, #12]
 8009b5a:	68fb      	ldr	r3, [r7, #12]
 8009b5c:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8009b60:	683b      	ldr	r3, [r7, #0]
 8009b62:	69db      	ldr	r3, [r3, #28]
 8009b64:	4313      	orrs	r3, r2
 8009b66:	60fb      	str	r3, [r7, #12]
 8009b68:	687b      	ldr	r3, [r7, #4]
 8009b6a:	681b      	ldr	r3, [r3, #0]
 8009b6c:	4a1c      	ldr	r2, [pc, #112]	@ (8009be0 <HAL_TIMEx_ConfigBreakDeadTime+0x11c>)
 8009b6e:	4293      	cmp	r3, r2
 8009b70:	d009      	beq.n	8009b86 <HAL_TIMEx_ConfigBreakDeadTime+0xc2>
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	681b      	ldr	r3, [r3, #0]
 8009b76:	4a1b      	ldr	r2, [pc, #108]	@ (8009be4 <HAL_TIMEx_ConfigBreakDeadTime+0x120>)
 8009b78:	4293      	cmp	r3, r2
 8009b7a:	d004      	beq.n	8009b86 <HAL_TIMEx_ConfigBreakDeadTime+0xc2>
 8009b7c:	687b      	ldr	r3, [r7, #4]
 8009b7e:	681b      	ldr	r3, [r3, #0]
 8009b80:	4a19      	ldr	r2, [pc, #100]	@ (8009be8 <HAL_TIMEx_ConfigBreakDeadTime+0x124>)
 8009b82:	4293      	cmp	r3, r2
 8009b84:	d11c      	bne.n	8009bc0 <HAL_TIMEx_ConfigBreakDeadTime+0xfc>
 8009b86:	68fb      	ldr	r3, [r7, #12]
 8009b88:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 8009b8c:	683b      	ldr	r3, [r7, #0]
 8009b8e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009b90:	051b      	lsls	r3, r3, #20
 8009b92:	4313      	orrs	r3, r2
 8009b94:	60fb      	str	r3, [r7, #12]
 8009b96:	68fb      	ldr	r3, [r7, #12]
 8009b98:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8009b9c:	683b      	ldr	r3, [r7, #0]
 8009b9e:	6a1b      	ldr	r3, [r3, #32]
 8009ba0:	4313      	orrs	r3, r2
 8009ba2:	60fb      	str	r3, [r7, #12]
 8009ba4:	68fb      	ldr	r3, [r7, #12]
 8009ba6:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8009baa:	683b      	ldr	r3, [r7, #0]
 8009bac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009bae:	4313      	orrs	r3, r2
 8009bb0:	60fb      	str	r3, [r7, #12]
 8009bb2:	68fb      	ldr	r3, [r7, #12]
 8009bb4:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8009bb8:	683b      	ldr	r3, [r7, #0]
 8009bba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009bbc:	4313      	orrs	r3, r2
 8009bbe:	60fb      	str	r3, [r7, #12]
 8009bc0:	687b      	ldr	r3, [r7, #4]
 8009bc2:	681b      	ldr	r3, [r3, #0]
 8009bc4:	68fa      	ldr	r2, [r7, #12]
 8009bc6:	645a      	str	r2, [r3, #68]	@ 0x44
 8009bc8:	687b      	ldr	r3, [r7, #4]
 8009bca:	2200      	movs	r2, #0
 8009bcc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8009bd0:	2300      	movs	r3, #0
 8009bd2:	4618      	mov	r0, r3
 8009bd4:	3714      	adds	r7, #20
 8009bd6:	46bd      	mov	sp, r7
 8009bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bdc:	4770      	bx	lr
 8009bde:	bf00      	nop
 8009be0:	40012c00 	.word	0x40012c00
 8009be4:	40013400 	.word	0x40013400
 8009be8:	40015000 	.word	0x40015000

08009bec <HAL_TIMEx_CommutCallback>:
 8009bec:	b480      	push	{r7}
 8009bee:	b083      	sub	sp, #12
 8009bf0:	af00      	add	r7, sp, #0
 8009bf2:	6078      	str	r0, [r7, #4]
 8009bf4:	bf00      	nop
 8009bf6:	370c      	adds	r7, #12
 8009bf8:	46bd      	mov	sp, r7
 8009bfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bfe:	4770      	bx	lr

08009c00 <HAL_TIMEx_BreakCallback>:
 8009c00:	b480      	push	{r7}
 8009c02:	b083      	sub	sp, #12
 8009c04:	af00      	add	r7, sp, #0
 8009c06:	6078      	str	r0, [r7, #4]
 8009c08:	bf00      	nop
 8009c0a:	370c      	adds	r7, #12
 8009c0c:	46bd      	mov	sp, r7
 8009c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c12:	4770      	bx	lr

08009c14 <HAL_TIMEx_Break2Callback>:
 8009c14:	b480      	push	{r7}
 8009c16:	b083      	sub	sp, #12
 8009c18:	af00      	add	r7, sp, #0
 8009c1a:	6078      	str	r0, [r7, #4]
 8009c1c:	bf00      	nop
 8009c1e:	370c      	adds	r7, #12
 8009c20:	46bd      	mov	sp, r7
 8009c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c26:	4770      	bx	lr

08009c28 <HAL_TIMEx_EncoderIndexCallback>:
 8009c28:	b480      	push	{r7}
 8009c2a:	b083      	sub	sp, #12
 8009c2c:	af00      	add	r7, sp, #0
 8009c2e:	6078      	str	r0, [r7, #4]
 8009c30:	bf00      	nop
 8009c32:	370c      	adds	r7, #12
 8009c34:	46bd      	mov	sp, r7
 8009c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c3a:	4770      	bx	lr

08009c3c <HAL_TIMEx_DirectionChangeCallback>:
 8009c3c:	b480      	push	{r7}
 8009c3e:	b083      	sub	sp, #12
 8009c40:	af00      	add	r7, sp, #0
 8009c42:	6078      	str	r0, [r7, #4]
 8009c44:	bf00      	nop
 8009c46:	370c      	adds	r7, #12
 8009c48:	46bd      	mov	sp, r7
 8009c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c4e:	4770      	bx	lr

08009c50 <HAL_TIMEx_IndexErrorCallback>:
 8009c50:	b480      	push	{r7}
 8009c52:	b083      	sub	sp, #12
 8009c54:	af00      	add	r7, sp, #0
 8009c56:	6078      	str	r0, [r7, #4]
 8009c58:	bf00      	nop
 8009c5a:	370c      	adds	r7, #12
 8009c5c:	46bd      	mov	sp, r7
 8009c5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c62:	4770      	bx	lr

08009c64 <HAL_TIMEx_TransitionErrorCallback>:
 8009c64:	b480      	push	{r7}
 8009c66:	b083      	sub	sp, #12
 8009c68:	af00      	add	r7, sp, #0
 8009c6a:	6078      	str	r0, [r7, #4]
 8009c6c:	bf00      	nop
 8009c6e:	370c      	adds	r7, #12
 8009c70:	46bd      	mov	sp, r7
 8009c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c76:	4770      	bx	lr

08009c78 <HAL_UART_Init>:
 8009c78:	b580      	push	{r7, lr}
 8009c7a:	b082      	sub	sp, #8
 8009c7c:	af00      	add	r7, sp, #0
 8009c7e:	6078      	str	r0, [r7, #4]
 8009c80:	687b      	ldr	r3, [r7, #4]
 8009c82:	2b00      	cmp	r3, #0
 8009c84:	d101      	bne.n	8009c8a <HAL_UART_Init+0x12>
 8009c86:	2301      	movs	r3, #1
 8009c88:	e042      	b.n	8009d10 <HAL_UART_Init+0x98>
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009c90:	2b00      	cmp	r3, #0
 8009c92:	d106      	bne.n	8009ca2 <HAL_UART_Init+0x2a>
 8009c94:	687b      	ldr	r3, [r7, #4]
 8009c96:	2200      	movs	r2, #0
 8009c98:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009c9c:	6878      	ldr	r0, [r7, #4]
 8009c9e:	f7fa f96f 	bl	8003f80 <HAL_UART_MspInit>
 8009ca2:	687b      	ldr	r3, [r7, #4]
 8009ca4:	2224      	movs	r2, #36	@ 0x24
 8009ca6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009caa:	687b      	ldr	r3, [r7, #4]
 8009cac:	681b      	ldr	r3, [r3, #0]
 8009cae:	681a      	ldr	r2, [r3, #0]
 8009cb0:	687b      	ldr	r3, [r7, #4]
 8009cb2:	681b      	ldr	r3, [r3, #0]
 8009cb4:	f022 0201 	bic.w	r2, r2, #1
 8009cb8:	601a      	str	r2, [r3, #0]
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009cbe:	2b00      	cmp	r3, #0
 8009cc0:	d002      	beq.n	8009cc8 <HAL_UART_Init+0x50>
 8009cc2:	6878      	ldr	r0, [r7, #4]
 8009cc4:	f000 ff60 	bl	800ab88 <UART_AdvFeatureConfig>
 8009cc8:	6878      	ldr	r0, [r7, #4]
 8009cca:	f000 fc61 	bl	800a590 <UART_SetConfig>
 8009cce:	4603      	mov	r3, r0
 8009cd0:	2b01      	cmp	r3, #1
 8009cd2:	d101      	bne.n	8009cd8 <HAL_UART_Init+0x60>
 8009cd4:	2301      	movs	r3, #1
 8009cd6:	e01b      	b.n	8009d10 <HAL_UART_Init+0x98>
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	681b      	ldr	r3, [r3, #0]
 8009cdc:	685a      	ldr	r2, [r3, #4]
 8009cde:	687b      	ldr	r3, [r7, #4]
 8009ce0:	681b      	ldr	r3, [r3, #0]
 8009ce2:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8009ce6:	605a      	str	r2, [r3, #4]
 8009ce8:	687b      	ldr	r3, [r7, #4]
 8009cea:	681b      	ldr	r3, [r3, #0]
 8009cec:	689a      	ldr	r2, [r3, #8]
 8009cee:	687b      	ldr	r3, [r7, #4]
 8009cf0:	681b      	ldr	r3, [r3, #0]
 8009cf2:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8009cf6:	609a      	str	r2, [r3, #8]
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	681b      	ldr	r3, [r3, #0]
 8009cfc:	681a      	ldr	r2, [r3, #0]
 8009cfe:	687b      	ldr	r3, [r7, #4]
 8009d00:	681b      	ldr	r3, [r3, #0]
 8009d02:	f042 0201 	orr.w	r2, r2, #1
 8009d06:	601a      	str	r2, [r3, #0]
 8009d08:	6878      	ldr	r0, [r7, #4]
 8009d0a:	f000 ffdf 	bl	800accc <UART_CheckIdleState>
 8009d0e:	4603      	mov	r3, r0
 8009d10:	4618      	mov	r0, r3
 8009d12:	3708      	adds	r7, #8
 8009d14:	46bd      	mov	sp, r7
 8009d16:	bd80      	pop	{r7, pc}

08009d18 <HAL_UART_Transmit>:
 8009d18:	b580      	push	{r7, lr}
 8009d1a:	b08a      	sub	sp, #40	@ 0x28
 8009d1c:	af02      	add	r7, sp, #8
 8009d1e:	60f8      	str	r0, [r7, #12]
 8009d20:	60b9      	str	r1, [r7, #8]
 8009d22:	603b      	str	r3, [r7, #0]
 8009d24:	4613      	mov	r3, r2
 8009d26:	80fb      	strh	r3, [r7, #6]
 8009d28:	68fb      	ldr	r3, [r7, #12]
 8009d2a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8009d2e:	2b20      	cmp	r3, #32
 8009d30:	d17b      	bne.n	8009e2a <HAL_UART_Transmit+0x112>
 8009d32:	68bb      	ldr	r3, [r7, #8]
 8009d34:	2b00      	cmp	r3, #0
 8009d36:	d002      	beq.n	8009d3e <HAL_UART_Transmit+0x26>
 8009d38:	88fb      	ldrh	r3, [r7, #6]
 8009d3a:	2b00      	cmp	r3, #0
 8009d3c:	d101      	bne.n	8009d42 <HAL_UART_Transmit+0x2a>
 8009d3e:	2301      	movs	r3, #1
 8009d40:	e074      	b.n	8009e2c <HAL_UART_Transmit+0x114>
 8009d42:	68fb      	ldr	r3, [r7, #12]
 8009d44:	2200      	movs	r2, #0
 8009d46:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009d4a:	68fb      	ldr	r3, [r7, #12]
 8009d4c:	2221      	movs	r2, #33	@ 0x21
 8009d4e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009d52:	f7fa fab9 	bl	80042c8 <HAL_GetTick>
 8009d56:	6178      	str	r0, [r7, #20]
 8009d58:	68fb      	ldr	r3, [r7, #12]
 8009d5a:	88fa      	ldrh	r2, [r7, #6]
 8009d5c:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
 8009d60:	68fb      	ldr	r3, [r7, #12]
 8009d62:	88fa      	ldrh	r2, [r7, #6]
 8009d64:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8009d68:	68fb      	ldr	r3, [r7, #12]
 8009d6a:	689b      	ldr	r3, [r3, #8]
 8009d6c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8009d70:	d108      	bne.n	8009d84 <HAL_UART_Transmit+0x6c>
 8009d72:	68fb      	ldr	r3, [r7, #12]
 8009d74:	691b      	ldr	r3, [r3, #16]
 8009d76:	2b00      	cmp	r3, #0
 8009d78:	d104      	bne.n	8009d84 <HAL_UART_Transmit+0x6c>
 8009d7a:	2300      	movs	r3, #0
 8009d7c:	61fb      	str	r3, [r7, #28]
 8009d7e:	68bb      	ldr	r3, [r7, #8]
 8009d80:	61bb      	str	r3, [r7, #24]
 8009d82:	e003      	b.n	8009d8c <HAL_UART_Transmit+0x74>
 8009d84:	68bb      	ldr	r3, [r7, #8]
 8009d86:	61fb      	str	r3, [r7, #28]
 8009d88:	2300      	movs	r3, #0
 8009d8a:	61bb      	str	r3, [r7, #24]
 8009d8c:	e030      	b.n	8009df0 <HAL_UART_Transmit+0xd8>
 8009d8e:	683b      	ldr	r3, [r7, #0]
 8009d90:	9300      	str	r3, [sp, #0]
 8009d92:	697b      	ldr	r3, [r7, #20]
 8009d94:	2200      	movs	r2, #0
 8009d96:	2180      	movs	r1, #128	@ 0x80
 8009d98:	68f8      	ldr	r0, [r7, #12]
 8009d9a:	f001 f841 	bl	800ae20 <UART_WaitOnFlagUntilTimeout>
 8009d9e:	4603      	mov	r3, r0
 8009da0:	2b00      	cmp	r3, #0
 8009da2:	d005      	beq.n	8009db0 <HAL_UART_Transmit+0x98>
 8009da4:	68fb      	ldr	r3, [r7, #12]
 8009da6:	2220      	movs	r2, #32
 8009da8:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009dac:	2303      	movs	r3, #3
 8009dae:	e03d      	b.n	8009e2c <HAL_UART_Transmit+0x114>
 8009db0:	69fb      	ldr	r3, [r7, #28]
 8009db2:	2b00      	cmp	r3, #0
 8009db4:	d10b      	bne.n	8009dce <HAL_UART_Transmit+0xb6>
 8009db6:	69bb      	ldr	r3, [r7, #24]
 8009db8:	881b      	ldrh	r3, [r3, #0]
 8009dba:	461a      	mov	r2, r3
 8009dbc:	68fb      	ldr	r3, [r7, #12]
 8009dbe:	681b      	ldr	r3, [r3, #0]
 8009dc0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009dc4:	629a      	str	r2, [r3, #40]	@ 0x28
 8009dc6:	69bb      	ldr	r3, [r7, #24]
 8009dc8:	3302      	adds	r3, #2
 8009dca:	61bb      	str	r3, [r7, #24]
 8009dcc:	e007      	b.n	8009dde <HAL_UART_Transmit+0xc6>
 8009dce:	69fb      	ldr	r3, [r7, #28]
 8009dd0:	781a      	ldrb	r2, [r3, #0]
 8009dd2:	68fb      	ldr	r3, [r7, #12]
 8009dd4:	681b      	ldr	r3, [r3, #0]
 8009dd6:	629a      	str	r2, [r3, #40]	@ 0x28
 8009dd8:	69fb      	ldr	r3, [r7, #28]
 8009dda:	3301      	adds	r3, #1
 8009ddc:	61fb      	str	r3, [r7, #28]
 8009dde:	68fb      	ldr	r3, [r7, #12]
 8009de0:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 8009de4:	b29b      	uxth	r3, r3
 8009de6:	3b01      	subs	r3, #1
 8009de8:	b29a      	uxth	r2, r3
 8009dea:	68fb      	ldr	r3, [r7, #12]
 8009dec:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8009df0:	68fb      	ldr	r3, [r7, #12]
 8009df2:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 8009df6:	b29b      	uxth	r3, r3
 8009df8:	2b00      	cmp	r3, #0
 8009dfa:	d1c8      	bne.n	8009d8e <HAL_UART_Transmit+0x76>
 8009dfc:	683b      	ldr	r3, [r7, #0]
 8009dfe:	9300      	str	r3, [sp, #0]
 8009e00:	697b      	ldr	r3, [r7, #20]
 8009e02:	2200      	movs	r2, #0
 8009e04:	2140      	movs	r1, #64	@ 0x40
 8009e06:	68f8      	ldr	r0, [r7, #12]
 8009e08:	f001 f80a 	bl	800ae20 <UART_WaitOnFlagUntilTimeout>
 8009e0c:	4603      	mov	r3, r0
 8009e0e:	2b00      	cmp	r3, #0
 8009e10:	d005      	beq.n	8009e1e <HAL_UART_Transmit+0x106>
 8009e12:	68fb      	ldr	r3, [r7, #12]
 8009e14:	2220      	movs	r2, #32
 8009e16:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009e1a:	2303      	movs	r3, #3
 8009e1c:	e006      	b.n	8009e2c <HAL_UART_Transmit+0x114>
 8009e1e:	68fb      	ldr	r3, [r7, #12]
 8009e20:	2220      	movs	r2, #32
 8009e22:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009e26:	2300      	movs	r3, #0
 8009e28:	e000      	b.n	8009e2c <HAL_UART_Transmit+0x114>
 8009e2a:	2302      	movs	r3, #2
 8009e2c:	4618      	mov	r0, r3
 8009e2e:	3720      	adds	r7, #32
 8009e30:	46bd      	mov	sp, r7
 8009e32:	bd80      	pop	{r7, pc}

08009e34 <HAL_UART_Receive_IT>:
 8009e34:	b580      	push	{r7, lr}
 8009e36:	b08a      	sub	sp, #40	@ 0x28
 8009e38:	af00      	add	r7, sp, #0
 8009e3a:	60f8      	str	r0, [r7, #12]
 8009e3c:	60b9      	str	r1, [r7, #8]
 8009e3e:	4613      	mov	r3, r2
 8009e40:	80fb      	strh	r3, [r7, #6]
 8009e42:	68fb      	ldr	r3, [r7, #12]
 8009e44:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8009e48:	2b20      	cmp	r3, #32
 8009e4a:	d137      	bne.n	8009ebc <HAL_UART_Receive_IT+0x88>
 8009e4c:	68bb      	ldr	r3, [r7, #8]
 8009e4e:	2b00      	cmp	r3, #0
 8009e50:	d002      	beq.n	8009e58 <HAL_UART_Receive_IT+0x24>
 8009e52:	88fb      	ldrh	r3, [r7, #6]
 8009e54:	2b00      	cmp	r3, #0
 8009e56:	d101      	bne.n	8009e5c <HAL_UART_Receive_IT+0x28>
 8009e58:	2301      	movs	r3, #1
 8009e5a:	e030      	b.n	8009ebe <HAL_UART_Receive_IT+0x8a>
 8009e5c:	68fb      	ldr	r3, [r7, #12]
 8009e5e:	2200      	movs	r2, #0
 8009e60:	66da      	str	r2, [r3, #108]	@ 0x6c
 8009e62:	68fb      	ldr	r3, [r7, #12]
 8009e64:	681b      	ldr	r3, [r3, #0]
 8009e66:	4a18      	ldr	r2, [pc, #96]	@ (8009ec8 <HAL_UART_Receive_IT+0x94>)
 8009e68:	4293      	cmp	r3, r2
 8009e6a:	d01f      	beq.n	8009eac <HAL_UART_Receive_IT+0x78>
 8009e6c:	68fb      	ldr	r3, [r7, #12]
 8009e6e:	681b      	ldr	r3, [r3, #0]
 8009e70:	685b      	ldr	r3, [r3, #4]
 8009e72:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8009e76:	2b00      	cmp	r3, #0
 8009e78:	d018      	beq.n	8009eac <HAL_UART_Receive_IT+0x78>
 8009e7a:	68fb      	ldr	r3, [r7, #12]
 8009e7c:	681b      	ldr	r3, [r3, #0]
 8009e7e:	617b      	str	r3, [r7, #20]
 8009e80:	697b      	ldr	r3, [r7, #20]
 8009e82:	e853 3f00 	ldrex	r3, [r3]
 8009e86:	613b      	str	r3, [r7, #16]
 8009e88:	693b      	ldr	r3, [r7, #16]
 8009e8a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8009e8e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009e90:	68fb      	ldr	r3, [r7, #12]
 8009e92:	681b      	ldr	r3, [r3, #0]
 8009e94:	461a      	mov	r2, r3
 8009e96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009e98:	623b      	str	r3, [r7, #32]
 8009e9a:	61fa      	str	r2, [r7, #28]
 8009e9c:	69f9      	ldr	r1, [r7, #28]
 8009e9e:	6a3a      	ldr	r2, [r7, #32]
 8009ea0:	e841 2300 	strex	r3, r2, [r1]
 8009ea4:	61bb      	str	r3, [r7, #24]
 8009ea6:	69bb      	ldr	r3, [r7, #24]
 8009ea8:	2b00      	cmp	r3, #0
 8009eaa:	d1e6      	bne.n	8009e7a <HAL_UART_Receive_IT+0x46>
 8009eac:	88fb      	ldrh	r3, [r7, #6]
 8009eae:	461a      	mov	r2, r3
 8009eb0:	68b9      	ldr	r1, [r7, #8]
 8009eb2:	68f8      	ldr	r0, [r7, #12]
 8009eb4:	f001 f822 	bl	800aefc <UART_Start_Receive_IT>
 8009eb8:	4603      	mov	r3, r0
 8009eba:	e000      	b.n	8009ebe <HAL_UART_Receive_IT+0x8a>
 8009ebc:	2302      	movs	r3, #2
 8009ebe:	4618      	mov	r0, r3
 8009ec0:	3728      	adds	r7, #40	@ 0x28
 8009ec2:	46bd      	mov	sp, r7
 8009ec4:	bd80      	pop	{r7, pc}
 8009ec6:	bf00      	nop
 8009ec8:	40008000 	.word	0x40008000

08009ecc <HAL_UART_IRQHandler>:
 8009ecc:	b580      	push	{r7, lr}
 8009ece:	b0ba      	sub	sp, #232	@ 0xe8
 8009ed0:	af00      	add	r7, sp, #0
 8009ed2:	6078      	str	r0, [r7, #4]
 8009ed4:	687b      	ldr	r3, [r7, #4]
 8009ed6:	681b      	ldr	r3, [r3, #0]
 8009ed8:	69db      	ldr	r3, [r3, #28]
 8009eda:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8009ede:	687b      	ldr	r3, [r7, #4]
 8009ee0:	681b      	ldr	r3, [r3, #0]
 8009ee2:	681b      	ldr	r3, [r3, #0]
 8009ee4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	681b      	ldr	r3, [r3, #0]
 8009eec:	689b      	ldr	r3, [r3, #8]
 8009eee:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8009ef2:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 8009ef6:	f640 030f 	movw	r3, #2063	@ 0x80f
 8009efa:	4013      	ands	r3, r2
 8009efc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8009f00:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8009f04:	2b00      	cmp	r3, #0
 8009f06:	d11b      	bne.n	8009f40 <HAL_UART_IRQHandler+0x74>
 8009f08:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009f0c:	f003 0320 	and.w	r3, r3, #32
 8009f10:	2b00      	cmp	r3, #0
 8009f12:	d015      	beq.n	8009f40 <HAL_UART_IRQHandler+0x74>
 8009f14:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009f18:	f003 0320 	and.w	r3, r3, #32
 8009f1c:	2b00      	cmp	r3, #0
 8009f1e:	d105      	bne.n	8009f2c <HAL_UART_IRQHandler+0x60>
 8009f20:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8009f24:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8009f28:	2b00      	cmp	r3, #0
 8009f2a:	d009      	beq.n	8009f40 <HAL_UART_IRQHandler+0x74>
 8009f2c:	687b      	ldr	r3, [r7, #4]
 8009f2e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009f30:	2b00      	cmp	r3, #0
 8009f32:	f000 8300 	beq.w	800a536 <HAL_UART_IRQHandler+0x66a>
 8009f36:	687b      	ldr	r3, [r7, #4]
 8009f38:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8009f3a:	6878      	ldr	r0, [r7, #4]
 8009f3c:	4798      	blx	r3
 8009f3e:	e2fa      	b.n	800a536 <HAL_UART_IRQHandler+0x66a>
 8009f40:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	f000 8123 	beq.w	800a190 <HAL_UART_IRQHandler+0x2c4>
 8009f4a:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 8009f4e:	4b8d      	ldr	r3, [pc, #564]	@ (800a184 <HAL_UART_IRQHandler+0x2b8>)
 8009f50:	4013      	ands	r3, r2
 8009f52:	2b00      	cmp	r3, #0
 8009f54:	d106      	bne.n	8009f64 <HAL_UART_IRQHandler+0x98>
 8009f56:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 8009f5a:	4b8b      	ldr	r3, [pc, #556]	@ (800a188 <HAL_UART_IRQHandler+0x2bc>)
 8009f5c:	4013      	ands	r3, r2
 8009f5e:	2b00      	cmp	r3, #0
 8009f60:	f000 8116 	beq.w	800a190 <HAL_UART_IRQHandler+0x2c4>
 8009f64:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009f68:	f003 0301 	and.w	r3, r3, #1
 8009f6c:	2b00      	cmp	r3, #0
 8009f6e:	d011      	beq.n	8009f94 <HAL_UART_IRQHandler+0xc8>
 8009f70:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8009f74:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009f78:	2b00      	cmp	r3, #0
 8009f7a:	d00b      	beq.n	8009f94 <HAL_UART_IRQHandler+0xc8>
 8009f7c:	687b      	ldr	r3, [r7, #4]
 8009f7e:	681b      	ldr	r3, [r3, #0]
 8009f80:	2201      	movs	r2, #1
 8009f82:	621a      	str	r2, [r3, #32]
 8009f84:	687b      	ldr	r3, [r7, #4]
 8009f86:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009f8a:	f043 0201 	orr.w	r2, r3, #1
 8009f8e:	687b      	ldr	r3, [r7, #4]
 8009f90:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009f94:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009f98:	f003 0302 	and.w	r3, r3, #2
 8009f9c:	2b00      	cmp	r3, #0
 8009f9e:	d011      	beq.n	8009fc4 <HAL_UART_IRQHandler+0xf8>
 8009fa0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8009fa4:	f003 0301 	and.w	r3, r3, #1
 8009fa8:	2b00      	cmp	r3, #0
 8009faa:	d00b      	beq.n	8009fc4 <HAL_UART_IRQHandler+0xf8>
 8009fac:	687b      	ldr	r3, [r7, #4]
 8009fae:	681b      	ldr	r3, [r3, #0]
 8009fb0:	2202      	movs	r2, #2
 8009fb2:	621a      	str	r2, [r3, #32]
 8009fb4:	687b      	ldr	r3, [r7, #4]
 8009fb6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009fba:	f043 0204 	orr.w	r2, r3, #4
 8009fbe:	687b      	ldr	r3, [r7, #4]
 8009fc0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009fc4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009fc8:	f003 0304 	and.w	r3, r3, #4
 8009fcc:	2b00      	cmp	r3, #0
 8009fce:	d011      	beq.n	8009ff4 <HAL_UART_IRQHandler+0x128>
 8009fd0:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8009fd4:	f003 0301 	and.w	r3, r3, #1
 8009fd8:	2b00      	cmp	r3, #0
 8009fda:	d00b      	beq.n	8009ff4 <HAL_UART_IRQHandler+0x128>
 8009fdc:	687b      	ldr	r3, [r7, #4]
 8009fde:	681b      	ldr	r3, [r3, #0]
 8009fe0:	2204      	movs	r2, #4
 8009fe2:	621a      	str	r2, [r3, #32]
 8009fe4:	687b      	ldr	r3, [r7, #4]
 8009fe6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009fea:	f043 0202 	orr.w	r2, r3, #2
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009ff4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8009ff8:	f003 0308 	and.w	r3, r3, #8
 8009ffc:	2b00      	cmp	r3, #0
 8009ffe:	d017      	beq.n	800a030 <HAL_UART_IRQHandler+0x164>
 800a000:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a004:	f003 0320 	and.w	r3, r3, #32
 800a008:	2b00      	cmp	r3, #0
 800a00a:	d105      	bne.n	800a018 <HAL_UART_IRQHandler+0x14c>
 800a00c:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 800a010:	4b5c      	ldr	r3, [pc, #368]	@ (800a184 <HAL_UART_IRQHandler+0x2b8>)
 800a012:	4013      	ands	r3, r2
 800a014:	2b00      	cmp	r3, #0
 800a016:	d00b      	beq.n	800a030 <HAL_UART_IRQHandler+0x164>
 800a018:	687b      	ldr	r3, [r7, #4]
 800a01a:	681b      	ldr	r3, [r3, #0]
 800a01c:	2208      	movs	r2, #8
 800a01e:	621a      	str	r2, [r3, #32]
 800a020:	687b      	ldr	r3, [r7, #4]
 800a022:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a026:	f043 0208 	orr.w	r2, r3, #8
 800a02a:	687b      	ldr	r3, [r7, #4]
 800a02c:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a030:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a034:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800a038:	2b00      	cmp	r3, #0
 800a03a:	d012      	beq.n	800a062 <HAL_UART_IRQHandler+0x196>
 800a03c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a040:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800a044:	2b00      	cmp	r3, #0
 800a046:	d00c      	beq.n	800a062 <HAL_UART_IRQHandler+0x196>
 800a048:	687b      	ldr	r3, [r7, #4]
 800a04a:	681b      	ldr	r3, [r3, #0]
 800a04c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800a050:	621a      	str	r2, [r3, #32]
 800a052:	687b      	ldr	r3, [r7, #4]
 800a054:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a058:	f043 0220 	orr.w	r2, r3, #32
 800a05c:	687b      	ldr	r3, [r7, #4]
 800a05e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a068:	2b00      	cmp	r3, #0
 800a06a:	f000 8266 	beq.w	800a53a <HAL_UART_IRQHandler+0x66e>
 800a06e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a072:	f003 0320 	and.w	r3, r3, #32
 800a076:	2b00      	cmp	r3, #0
 800a078:	d013      	beq.n	800a0a2 <HAL_UART_IRQHandler+0x1d6>
 800a07a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a07e:	f003 0320 	and.w	r3, r3, #32
 800a082:	2b00      	cmp	r3, #0
 800a084:	d105      	bne.n	800a092 <HAL_UART_IRQHandler+0x1c6>
 800a086:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a08a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800a08e:	2b00      	cmp	r3, #0
 800a090:	d007      	beq.n	800a0a2 <HAL_UART_IRQHandler+0x1d6>
 800a092:	687b      	ldr	r3, [r7, #4]
 800a094:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a096:	2b00      	cmp	r3, #0
 800a098:	d003      	beq.n	800a0a2 <HAL_UART_IRQHandler+0x1d6>
 800a09a:	687b      	ldr	r3, [r7, #4]
 800a09c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800a09e:	6878      	ldr	r0, [r7, #4]
 800a0a0:	4798      	blx	r3
 800a0a2:	687b      	ldr	r3, [r7, #4]
 800a0a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a0a8:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	681b      	ldr	r3, [r3, #0]
 800a0b0:	689b      	ldr	r3, [r3, #8]
 800a0b2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a0b6:	2b40      	cmp	r3, #64	@ 0x40
 800a0b8:	d005      	beq.n	800a0c6 <HAL_UART_IRQHandler+0x1fa>
 800a0ba:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800a0be:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800a0c2:	2b00      	cmp	r3, #0
 800a0c4:	d054      	beq.n	800a170 <HAL_UART_IRQHandler+0x2a4>
 800a0c6:	6878      	ldr	r0, [r7, #4]
 800a0c8:	f001 f83a 	bl	800b140 <UART_EndRxTransfer>
 800a0cc:	687b      	ldr	r3, [r7, #4]
 800a0ce:	681b      	ldr	r3, [r3, #0]
 800a0d0:	689b      	ldr	r3, [r3, #8]
 800a0d2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a0d6:	2b40      	cmp	r3, #64	@ 0x40
 800a0d8:	d146      	bne.n	800a168 <HAL_UART_IRQHandler+0x29c>
 800a0da:	687b      	ldr	r3, [r7, #4]
 800a0dc:	681b      	ldr	r3, [r3, #0]
 800a0de:	3308      	adds	r3, #8
 800a0e0:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800a0e4:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800a0e8:	e853 3f00 	ldrex	r3, [r3]
 800a0ec:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800a0f0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a0f4:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a0f8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800a0fc:	687b      	ldr	r3, [r7, #4]
 800a0fe:	681b      	ldr	r3, [r3, #0]
 800a100:	3308      	adds	r3, #8
 800a102:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 800a106:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 800a10a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800a10e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800a112:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 800a116:	e841 2300 	strex	r3, r2, [r1]
 800a11a:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800a11e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800a122:	2b00      	cmp	r3, #0
 800a124:	d1d9      	bne.n	800a0da <HAL_UART_IRQHandler+0x20e>
 800a126:	687b      	ldr	r3, [r7, #4]
 800a128:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a12c:	2b00      	cmp	r3, #0
 800a12e:	d017      	beq.n	800a160 <HAL_UART_IRQHandler+0x294>
 800a130:	687b      	ldr	r3, [r7, #4]
 800a132:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a136:	4a15      	ldr	r2, [pc, #84]	@ (800a18c <HAL_UART_IRQHandler+0x2c0>)
 800a138:	639a      	str	r2, [r3, #56]	@ 0x38
 800a13a:	687b      	ldr	r3, [r7, #4]
 800a13c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a140:	4618      	mov	r0, r3
 800a142:	f7fa fbad 	bl	80048a0 <HAL_DMA_Abort_IT>
 800a146:	4603      	mov	r3, r0
 800a148:	2b00      	cmp	r3, #0
 800a14a:	d019      	beq.n	800a180 <HAL_UART_IRQHandler+0x2b4>
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a152:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a154:	687a      	ldr	r2, [r7, #4]
 800a156:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800a15a:	4610      	mov	r0, r2
 800a15c:	4798      	blx	r3
 800a15e:	e00f      	b.n	800a180 <HAL_UART_IRQHandler+0x2b4>
 800a160:	6878      	ldr	r0, [r7, #4]
 800a162:	f000 f9ff 	bl	800a564 <HAL_UART_ErrorCallback>
 800a166:	e00b      	b.n	800a180 <HAL_UART_IRQHandler+0x2b4>
 800a168:	6878      	ldr	r0, [r7, #4]
 800a16a:	f000 f9fb 	bl	800a564 <HAL_UART_ErrorCallback>
 800a16e:	e007      	b.n	800a180 <HAL_UART_IRQHandler+0x2b4>
 800a170:	6878      	ldr	r0, [r7, #4]
 800a172:	f000 f9f7 	bl	800a564 <HAL_UART_ErrorCallback>
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	2200      	movs	r2, #0
 800a17a:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a17e:	e1dc      	b.n	800a53a <HAL_UART_IRQHandler+0x66e>
 800a180:	bf00      	nop
 800a182:	e1da      	b.n	800a53a <HAL_UART_IRQHandler+0x66e>
 800a184:	10000001 	.word	0x10000001
 800a188:	04000120 	.word	0x04000120
 800a18c:	0800b20d 	.word	0x0800b20d
 800a190:	687b      	ldr	r3, [r7, #4]
 800a192:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800a194:	2b01      	cmp	r3, #1
 800a196:	f040 8170 	bne.w	800a47a <HAL_UART_IRQHandler+0x5ae>
 800a19a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a19e:	f003 0310 	and.w	r3, r3, #16
 800a1a2:	2b00      	cmp	r3, #0
 800a1a4:	f000 8169 	beq.w	800a47a <HAL_UART_IRQHandler+0x5ae>
 800a1a8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a1ac:	f003 0310 	and.w	r3, r3, #16
 800a1b0:	2b00      	cmp	r3, #0
 800a1b2:	f000 8162 	beq.w	800a47a <HAL_UART_IRQHandler+0x5ae>
 800a1b6:	687b      	ldr	r3, [r7, #4]
 800a1b8:	681b      	ldr	r3, [r3, #0]
 800a1ba:	2210      	movs	r2, #16
 800a1bc:	621a      	str	r2, [r3, #32]
 800a1be:	687b      	ldr	r3, [r7, #4]
 800a1c0:	681b      	ldr	r3, [r3, #0]
 800a1c2:	689b      	ldr	r3, [r3, #8]
 800a1c4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a1c8:	2b40      	cmp	r3, #64	@ 0x40
 800a1ca:	f040 80d8 	bne.w	800a37e <HAL_UART_IRQHandler+0x4b2>
 800a1ce:	687b      	ldr	r3, [r7, #4]
 800a1d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a1d4:	681b      	ldr	r3, [r3, #0]
 800a1d6:	685b      	ldr	r3, [r3, #4]
 800a1d8:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 800a1dc:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 800a1e0:	2b00      	cmp	r3, #0
 800a1e2:	f000 80af 	beq.w	800a344 <HAL_UART_IRQHandler+0x478>
 800a1e6:	687b      	ldr	r3, [r7, #4]
 800a1e8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800a1ec:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800a1f0:	429a      	cmp	r2, r3
 800a1f2:	f080 80a7 	bcs.w	800a344 <HAL_UART_IRQHandler+0x478>
 800a1f6:	687b      	ldr	r3, [r7, #4]
 800a1f8:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800a1fc:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800a200:	687b      	ldr	r3, [r7, #4]
 800a202:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a206:	681b      	ldr	r3, [r3, #0]
 800a208:	681b      	ldr	r3, [r3, #0]
 800a20a:	f003 0320 	and.w	r3, r3, #32
 800a20e:	2b00      	cmp	r3, #0
 800a210:	f040 8087 	bne.w	800a322 <HAL_UART_IRQHandler+0x456>
 800a214:	687b      	ldr	r3, [r7, #4]
 800a216:	681b      	ldr	r3, [r3, #0]
 800a218:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800a21c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800a220:	e853 3f00 	ldrex	r3, [r3]
 800a224:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800a228:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800a22c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800a230:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800a234:	687b      	ldr	r3, [r7, #4]
 800a236:	681b      	ldr	r3, [r3, #0]
 800a238:	461a      	mov	r2, r3
 800a23a:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800a23e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800a242:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 800a246:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800a24a:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800a24e:	e841 2300 	strex	r3, r2, [r1]
 800a252:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800a256:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a25a:	2b00      	cmp	r3, #0
 800a25c:	d1da      	bne.n	800a214 <HAL_UART_IRQHandler+0x348>
 800a25e:	687b      	ldr	r3, [r7, #4]
 800a260:	681b      	ldr	r3, [r3, #0]
 800a262:	3308      	adds	r3, #8
 800a264:	677b      	str	r3, [r7, #116]	@ 0x74
 800a266:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a268:	e853 3f00 	ldrex	r3, [r3]
 800a26c:	673b      	str	r3, [r7, #112]	@ 0x70
 800a26e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800a270:	f023 0301 	bic.w	r3, r3, #1
 800a274:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800a278:	687b      	ldr	r3, [r7, #4]
 800a27a:	681b      	ldr	r3, [r3, #0]
 800a27c:	3308      	adds	r3, #8
 800a27e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800a282:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 800a286:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800a288:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800a28a:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800a28e:	e841 2300 	strex	r3, r2, [r1]
 800a292:	67bb      	str	r3, [r7, #120]	@ 0x78
 800a294:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800a296:	2b00      	cmp	r3, #0
 800a298:	d1e1      	bne.n	800a25e <HAL_UART_IRQHandler+0x392>
 800a29a:	687b      	ldr	r3, [r7, #4]
 800a29c:	681b      	ldr	r3, [r3, #0]
 800a29e:	3308      	adds	r3, #8
 800a2a0:	663b      	str	r3, [r7, #96]	@ 0x60
 800a2a2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800a2a4:	e853 3f00 	ldrex	r3, [r3]
 800a2a8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800a2aa:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800a2ac:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a2b0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800a2b4:	687b      	ldr	r3, [r7, #4]
 800a2b6:	681b      	ldr	r3, [r3, #0]
 800a2b8:	3308      	adds	r3, #8
 800a2ba:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 800a2be:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800a2c0:	66bb      	str	r3, [r7, #104]	@ 0x68
 800a2c2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800a2c4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800a2c6:	e841 2300 	strex	r3, r2, [r1]
 800a2ca:	667b      	str	r3, [r7, #100]	@ 0x64
 800a2cc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a2ce:	2b00      	cmp	r3, #0
 800a2d0:	d1e3      	bne.n	800a29a <HAL_UART_IRQHandler+0x3ce>
 800a2d2:	687b      	ldr	r3, [r7, #4]
 800a2d4:	2220      	movs	r2, #32
 800a2d6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	2200      	movs	r2, #0
 800a2de:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a2e0:	687b      	ldr	r3, [r7, #4]
 800a2e2:	681b      	ldr	r3, [r3, #0]
 800a2e4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a2e6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a2e8:	e853 3f00 	ldrex	r3, [r3]
 800a2ec:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a2ee:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a2f0:	f023 0310 	bic.w	r3, r3, #16
 800a2f4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a2f8:	687b      	ldr	r3, [r7, #4]
 800a2fa:	681b      	ldr	r3, [r3, #0]
 800a2fc:	461a      	mov	r2, r3
 800a2fe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a302:	65bb      	str	r3, [r7, #88]	@ 0x58
 800a304:	657a      	str	r2, [r7, #84]	@ 0x54
 800a306:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800a308:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800a30a:	e841 2300 	strex	r3, r2, [r1]
 800a30e:	653b      	str	r3, [r7, #80]	@ 0x50
 800a310:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800a312:	2b00      	cmp	r3, #0
 800a314:	d1e4      	bne.n	800a2e0 <HAL_UART_IRQHandler+0x414>
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a31c:	4618      	mov	r0, r3
 800a31e:	f7fa fa66 	bl	80047ee <HAL_DMA_Abort>
 800a322:	687b      	ldr	r3, [r7, #4]
 800a324:	2202      	movs	r2, #2
 800a326:	671a      	str	r2, [r3, #112]	@ 0x70
 800a328:	687b      	ldr	r3, [r7, #4]
 800a32a:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a334:	b29b      	uxth	r3, r3
 800a336:	1ad3      	subs	r3, r2, r3
 800a338:	b29b      	uxth	r3, r3
 800a33a:	4619      	mov	r1, r3
 800a33c:	6878      	ldr	r0, [r7, #4]
 800a33e:	f000 f91b 	bl	800a578 <HAL_UARTEx_RxEventCallback>
 800a342:	e0fc      	b.n	800a53e <HAL_UART_IRQHandler+0x672>
 800a344:	687b      	ldr	r3, [r7, #4]
 800a346:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800a34a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 800a34e:	429a      	cmp	r2, r3
 800a350:	f040 80f5 	bne.w	800a53e <HAL_UART_IRQHandler+0x672>
 800a354:	687b      	ldr	r3, [r7, #4]
 800a356:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800a35a:	681b      	ldr	r3, [r3, #0]
 800a35c:	681b      	ldr	r3, [r3, #0]
 800a35e:	f003 0320 	and.w	r3, r3, #32
 800a362:	2b20      	cmp	r3, #32
 800a364:	f040 80eb 	bne.w	800a53e <HAL_UART_IRQHandler+0x672>
 800a368:	687b      	ldr	r3, [r7, #4]
 800a36a:	2202      	movs	r2, #2
 800a36c:	671a      	str	r2, [r3, #112]	@ 0x70
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800a374:	4619      	mov	r1, r3
 800a376:	6878      	ldr	r0, [r7, #4]
 800a378:	f000 f8fe 	bl	800a578 <HAL_UARTEx_RxEventCallback>
 800a37c:	e0df      	b.n	800a53e <HAL_UART_IRQHandler+0x672>
 800a37e:	687b      	ldr	r3, [r7, #4]
 800a380:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 800a384:	687b      	ldr	r3, [r7, #4]
 800a386:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a38a:	b29b      	uxth	r3, r3
 800a38c:	1ad3      	subs	r3, r2, r3
 800a38e:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 800a392:	687b      	ldr	r3, [r7, #4]
 800a394:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a398:	b29b      	uxth	r3, r3
 800a39a:	2b00      	cmp	r3, #0
 800a39c:	f000 80d1 	beq.w	800a542 <HAL_UART_IRQHandler+0x676>
 800a3a0:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800a3a4:	2b00      	cmp	r3, #0
 800a3a6:	f000 80cc 	beq.w	800a542 <HAL_UART_IRQHandler+0x676>
 800a3aa:	687b      	ldr	r3, [r7, #4]
 800a3ac:	681b      	ldr	r3, [r3, #0]
 800a3ae:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a3b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a3b2:	e853 3f00 	ldrex	r3, [r3]
 800a3b6:	637b      	str	r3, [r7, #52]	@ 0x34
 800a3b8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a3ba:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a3be:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800a3c2:	687b      	ldr	r3, [r7, #4]
 800a3c4:	681b      	ldr	r3, [r3, #0]
 800a3c6:	461a      	mov	r2, r3
 800a3c8:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800a3cc:	647b      	str	r3, [r7, #68]	@ 0x44
 800a3ce:	643a      	str	r2, [r7, #64]	@ 0x40
 800a3d0:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800a3d2:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800a3d4:	e841 2300 	strex	r3, r2, [r1]
 800a3d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a3da:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a3dc:	2b00      	cmp	r3, #0
 800a3de:	d1e4      	bne.n	800a3aa <HAL_UART_IRQHandler+0x4de>
 800a3e0:	687b      	ldr	r3, [r7, #4]
 800a3e2:	681b      	ldr	r3, [r3, #0]
 800a3e4:	3308      	adds	r3, #8
 800a3e6:	627b      	str	r3, [r7, #36]	@ 0x24
 800a3e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a3ea:	e853 3f00 	ldrex	r3, [r3]
 800a3ee:	623b      	str	r3, [r7, #32]
 800a3f0:	6a3b      	ldr	r3, [r7, #32]
 800a3f2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a3f6:	f023 0301 	bic.w	r3, r3, #1
 800a3fa:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800a3fe:	687b      	ldr	r3, [r7, #4]
 800a400:	681b      	ldr	r3, [r3, #0]
 800a402:	3308      	adds	r3, #8
 800a404:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 800a408:	633a      	str	r2, [r7, #48]	@ 0x30
 800a40a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a40c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a40e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a410:	e841 2300 	strex	r3, r2, [r1]
 800a414:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a416:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a418:	2b00      	cmp	r3, #0
 800a41a:	d1e1      	bne.n	800a3e0 <HAL_UART_IRQHandler+0x514>
 800a41c:	687b      	ldr	r3, [r7, #4]
 800a41e:	2220      	movs	r2, #32
 800a420:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a424:	687b      	ldr	r3, [r7, #4]
 800a426:	2200      	movs	r2, #0
 800a428:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	2200      	movs	r2, #0
 800a42e:	675a      	str	r2, [r3, #116]	@ 0x74
 800a430:	687b      	ldr	r3, [r7, #4]
 800a432:	681b      	ldr	r3, [r3, #0]
 800a434:	613b      	str	r3, [r7, #16]
 800a436:	693b      	ldr	r3, [r7, #16]
 800a438:	e853 3f00 	ldrex	r3, [r3]
 800a43c:	60fb      	str	r3, [r7, #12]
 800a43e:	68fb      	ldr	r3, [r7, #12]
 800a440:	f023 0310 	bic.w	r3, r3, #16
 800a444:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 800a448:	687b      	ldr	r3, [r7, #4]
 800a44a:	681b      	ldr	r3, [r3, #0]
 800a44c:	461a      	mov	r2, r3
 800a44e:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800a452:	61fb      	str	r3, [r7, #28]
 800a454:	61ba      	str	r2, [r7, #24]
 800a456:	69b9      	ldr	r1, [r7, #24]
 800a458:	69fa      	ldr	r2, [r7, #28]
 800a45a:	e841 2300 	strex	r3, r2, [r1]
 800a45e:	617b      	str	r3, [r7, #20]
 800a460:	697b      	ldr	r3, [r7, #20]
 800a462:	2b00      	cmp	r3, #0
 800a464:	d1e4      	bne.n	800a430 <HAL_UART_IRQHandler+0x564>
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	2202      	movs	r2, #2
 800a46a:	671a      	str	r2, [r3, #112]	@ 0x70
 800a46c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 800a470:	4619      	mov	r1, r3
 800a472:	6878      	ldr	r0, [r7, #4]
 800a474:	f000 f880 	bl	800a578 <HAL_UARTEx_RxEventCallback>
 800a478:	e063      	b.n	800a542 <HAL_UART_IRQHandler+0x676>
 800a47a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a47e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800a482:	2b00      	cmp	r3, #0
 800a484:	d00e      	beq.n	800a4a4 <HAL_UART_IRQHandler+0x5d8>
 800a486:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a48a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800a48e:	2b00      	cmp	r3, #0
 800a490:	d008      	beq.n	800a4a4 <HAL_UART_IRQHandler+0x5d8>
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	681b      	ldr	r3, [r3, #0]
 800a496:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 800a49a:	621a      	str	r2, [r3, #32]
 800a49c:	6878      	ldr	r0, [r7, #4]
 800a49e:	f001 fc17 	bl	800bcd0 <HAL_UARTEx_WakeupCallback>
 800a4a2:	e051      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a4a4:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a4a8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a4ac:	2b00      	cmp	r3, #0
 800a4ae:	d014      	beq.n	800a4da <HAL_UART_IRQHandler+0x60e>
 800a4b0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a4b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800a4b8:	2b00      	cmp	r3, #0
 800a4ba:	d105      	bne.n	800a4c8 <HAL_UART_IRQHandler+0x5fc>
 800a4bc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800a4c0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a4c4:	2b00      	cmp	r3, #0
 800a4c6:	d008      	beq.n	800a4da <HAL_UART_IRQHandler+0x60e>
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a4cc:	2b00      	cmp	r3, #0
 800a4ce:	d03a      	beq.n	800a546 <HAL_UART_IRQHandler+0x67a>
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800a4d4:	6878      	ldr	r0, [r7, #4]
 800a4d6:	4798      	blx	r3
 800a4d8:	e035      	b.n	800a546 <HAL_UART_IRQHandler+0x67a>
 800a4da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a4de:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a4e2:	2b00      	cmp	r3, #0
 800a4e4:	d009      	beq.n	800a4fa <HAL_UART_IRQHandler+0x62e>
 800a4e6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a4ea:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800a4ee:	2b00      	cmp	r3, #0
 800a4f0:	d003      	beq.n	800a4fa <HAL_UART_IRQHandler+0x62e>
 800a4f2:	6878      	ldr	r0, [r7, #4]
 800a4f4:	f000 fea0 	bl	800b238 <UART_EndTransmit_IT>
 800a4f8:	e026      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a4fa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a4fe:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a502:	2b00      	cmp	r3, #0
 800a504:	d009      	beq.n	800a51a <HAL_UART_IRQHandler+0x64e>
 800a506:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a50a:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 800a50e:	2b00      	cmp	r3, #0
 800a510:	d003      	beq.n	800a51a <HAL_UART_IRQHandler+0x64e>
 800a512:	6878      	ldr	r0, [r7, #4]
 800a514:	f001 fbf0 	bl	800bcf8 <HAL_UARTEx_TxFifoEmptyCallback>
 800a518:	e016      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a51a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800a51e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 800a522:	2b00      	cmp	r3, #0
 800a524:	d010      	beq.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a526:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800a52a:	2b00      	cmp	r3, #0
 800a52c:	da0c      	bge.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a52e:	6878      	ldr	r0, [r7, #4]
 800a530:	f001 fbd8 	bl	800bce4 <HAL_UARTEx_RxFifoFullCallback>
 800a534:	e008      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a536:	bf00      	nop
 800a538:	e006      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a53a:	bf00      	nop
 800a53c:	e004      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a53e:	bf00      	nop
 800a540:	e002      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a542:	bf00      	nop
 800a544:	e000      	b.n	800a548 <HAL_UART_IRQHandler+0x67c>
 800a546:	bf00      	nop
 800a548:	37e8      	adds	r7, #232	@ 0xe8
 800a54a:	46bd      	mov	sp, r7
 800a54c:	bd80      	pop	{r7, pc}
 800a54e:	bf00      	nop

0800a550 <HAL_UART_TxCpltCallback>:
 800a550:	b480      	push	{r7}
 800a552:	b083      	sub	sp, #12
 800a554:	af00      	add	r7, sp, #0
 800a556:	6078      	str	r0, [r7, #4]
 800a558:	bf00      	nop
 800a55a:	370c      	adds	r7, #12
 800a55c:	46bd      	mov	sp, r7
 800a55e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a562:	4770      	bx	lr

0800a564 <HAL_UART_ErrorCallback>:
 800a564:	b480      	push	{r7}
 800a566:	b083      	sub	sp, #12
 800a568:	af00      	add	r7, sp, #0
 800a56a:	6078      	str	r0, [r7, #4]
 800a56c:	bf00      	nop
 800a56e:	370c      	adds	r7, #12
 800a570:	46bd      	mov	sp, r7
 800a572:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a576:	4770      	bx	lr

0800a578 <HAL_UARTEx_RxEventCallback>:
 800a578:	b480      	push	{r7}
 800a57a:	b083      	sub	sp, #12
 800a57c:	af00      	add	r7, sp, #0
 800a57e:	6078      	str	r0, [r7, #4]
 800a580:	460b      	mov	r3, r1
 800a582:	807b      	strh	r3, [r7, #2]
 800a584:	bf00      	nop
 800a586:	370c      	adds	r7, #12
 800a588:	46bd      	mov	sp, r7
 800a58a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a58e:	4770      	bx	lr

0800a590 <UART_SetConfig>:
 800a590:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800a594:	b08c      	sub	sp, #48	@ 0x30
 800a596:	af00      	add	r7, sp, #0
 800a598:	6178      	str	r0, [r7, #20]
 800a59a:	2300      	movs	r3, #0
 800a59c:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800a5a0:	697b      	ldr	r3, [r7, #20]
 800a5a2:	689a      	ldr	r2, [r3, #8]
 800a5a4:	697b      	ldr	r3, [r7, #20]
 800a5a6:	691b      	ldr	r3, [r3, #16]
 800a5a8:	431a      	orrs	r2, r3
 800a5aa:	697b      	ldr	r3, [r7, #20]
 800a5ac:	695b      	ldr	r3, [r3, #20]
 800a5ae:	431a      	orrs	r2, r3
 800a5b0:	697b      	ldr	r3, [r7, #20]
 800a5b2:	69db      	ldr	r3, [r3, #28]
 800a5b4:	4313      	orrs	r3, r2
 800a5b6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a5b8:	697b      	ldr	r3, [r7, #20]
 800a5ba:	681b      	ldr	r3, [r3, #0]
 800a5bc:	681a      	ldr	r2, [r3, #0]
 800a5be:	4baa      	ldr	r3, [pc, #680]	@ (800a868 <UART_SetConfig+0x2d8>)
 800a5c0:	4013      	ands	r3, r2
 800a5c2:	697a      	ldr	r2, [r7, #20]
 800a5c4:	6812      	ldr	r2, [r2, #0]
 800a5c6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a5c8:	430b      	orrs	r3, r1
 800a5ca:	6013      	str	r3, [r2, #0]
 800a5cc:	697b      	ldr	r3, [r7, #20]
 800a5ce:	681b      	ldr	r3, [r3, #0]
 800a5d0:	685b      	ldr	r3, [r3, #4]
 800a5d2:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800a5d6:	697b      	ldr	r3, [r7, #20]
 800a5d8:	68da      	ldr	r2, [r3, #12]
 800a5da:	697b      	ldr	r3, [r7, #20]
 800a5dc:	681b      	ldr	r3, [r3, #0]
 800a5de:	430a      	orrs	r2, r1
 800a5e0:	605a      	str	r2, [r3, #4]
 800a5e2:	697b      	ldr	r3, [r7, #20]
 800a5e4:	699b      	ldr	r3, [r3, #24]
 800a5e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a5e8:	697b      	ldr	r3, [r7, #20]
 800a5ea:	681b      	ldr	r3, [r3, #0]
 800a5ec:	4a9f      	ldr	r2, [pc, #636]	@ (800a86c <UART_SetConfig+0x2dc>)
 800a5ee:	4293      	cmp	r3, r2
 800a5f0:	d004      	beq.n	800a5fc <UART_SetConfig+0x6c>
 800a5f2:	697b      	ldr	r3, [r7, #20]
 800a5f4:	6a1b      	ldr	r3, [r3, #32]
 800a5f6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a5f8:	4313      	orrs	r3, r2
 800a5fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a5fc:	697b      	ldr	r3, [r7, #20]
 800a5fe:	681b      	ldr	r3, [r3, #0]
 800a600:	689b      	ldr	r3, [r3, #8]
 800a602:	f023 436e 	bic.w	r3, r3, #3992977408	@ 0xee000000
 800a606:	f423 6330 	bic.w	r3, r3, #2816	@ 0xb00
 800a60a:	697a      	ldr	r2, [r7, #20]
 800a60c:	6812      	ldr	r2, [r2, #0]
 800a60e:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a610:	430b      	orrs	r3, r1
 800a612:	6093      	str	r3, [r2, #8]
 800a614:	697b      	ldr	r3, [r7, #20]
 800a616:	681b      	ldr	r3, [r3, #0]
 800a618:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800a61a:	f023 010f 	bic.w	r1, r3, #15
 800a61e:	697b      	ldr	r3, [r7, #20]
 800a620:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800a622:	697b      	ldr	r3, [r7, #20]
 800a624:	681b      	ldr	r3, [r3, #0]
 800a626:	430a      	orrs	r2, r1
 800a628:	62da      	str	r2, [r3, #44]	@ 0x2c
 800a62a:	697b      	ldr	r3, [r7, #20]
 800a62c:	681b      	ldr	r3, [r3, #0]
 800a62e:	4a90      	ldr	r2, [pc, #576]	@ (800a870 <UART_SetConfig+0x2e0>)
 800a630:	4293      	cmp	r3, r2
 800a632:	d125      	bne.n	800a680 <UART_SetConfig+0xf0>
 800a634:	4b8f      	ldr	r3, [pc, #572]	@ (800a874 <UART_SetConfig+0x2e4>)
 800a636:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a63a:	f003 0303 	and.w	r3, r3, #3
 800a63e:	2b03      	cmp	r3, #3
 800a640:	d81a      	bhi.n	800a678 <UART_SetConfig+0xe8>
 800a642:	a201      	add	r2, pc, #4	@ (adr r2, 800a648 <UART_SetConfig+0xb8>)
 800a644:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a648:	0800a659 	.word	0x0800a659
 800a64c:	0800a669 	.word	0x0800a669
 800a650:	0800a661 	.word	0x0800a661
 800a654:	0800a671 	.word	0x0800a671
 800a658:	2301      	movs	r3, #1
 800a65a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a65e:	e116      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a660:	2302      	movs	r3, #2
 800a662:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a666:	e112      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a668:	2304      	movs	r3, #4
 800a66a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a66e:	e10e      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a670:	2308      	movs	r3, #8
 800a672:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a676:	e10a      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a678:	2310      	movs	r3, #16
 800a67a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a67e:	e106      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a680:	697b      	ldr	r3, [r7, #20]
 800a682:	681b      	ldr	r3, [r3, #0]
 800a684:	4a7c      	ldr	r2, [pc, #496]	@ (800a878 <UART_SetConfig+0x2e8>)
 800a686:	4293      	cmp	r3, r2
 800a688:	d138      	bne.n	800a6fc <UART_SetConfig+0x16c>
 800a68a:	4b7a      	ldr	r3, [pc, #488]	@ (800a874 <UART_SetConfig+0x2e4>)
 800a68c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a690:	f003 030c 	and.w	r3, r3, #12
 800a694:	2b0c      	cmp	r3, #12
 800a696:	d82d      	bhi.n	800a6f4 <UART_SetConfig+0x164>
 800a698:	a201      	add	r2, pc, #4	@ (adr r2, 800a6a0 <UART_SetConfig+0x110>)
 800a69a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a69e:	bf00      	nop
 800a6a0:	0800a6d5 	.word	0x0800a6d5
 800a6a4:	0800a6f5 	.word	0x0800a6f5
 800a6a8:	0800a6f5 	.word	0x0800a6f5
 800a6ac:	0800a6f5 	.word	0x0800a6f5
 800a6b0:	0800a6e5 	.word	0x0800a6e5
 800a6b4:	0800a6f5 	.word	0x0800a6f5
 800a6b8:	0800a6f5 	.word	0x0800a6f5
 800a6bc:	0800a6f5 	.word	0x0800a6f5
 800a6c0:	0800a6dd 	.word	0x0800a6dd
 800a6c4:	0800a6f5 	.word	0x0800a6f5
 800a6c8:	0800a6f5 	.word	0x0800a6f5
 800a6cc:	0800a6f5 	.word	0x0800a6f5
 800a6d0:	0800a6ed 	.word	0x0800a6ed
 800a6d4:	2300      	movs	r3, #0
 800a6d6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a6da:	e0d8      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a6dc:	2302      	movs	r3, #2
 800a6de:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a6e2:	e0d4      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a6e4:	2304      	movs	r3, #4
 800a6e6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a6ea:	e0d0      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a6ec:	2308      	movs	r3, #8
 800a6ee:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a6f2:	e0cc      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a6f4:	2310      	movs	r3, #16
 800a6f6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a6fa:	e0c8      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a6fc:	697b      	ldr	r3, [r7, #20]
 800a6fe:	681b      	ldr	r3, [r3, #0]
 800a700:	4a5e      	ldr	r2, [pc, #376]	@ (800a87c <UART_SetConfig+0x2ec>)
 800a702:	4293      	cmp	r3, r2
 800a704:	d125      	bne.n	800a752 <UART_SetConfig+0x1c2>
 800a706:	4b5b      	ldr	r3, [pc, #364]	@ (800a874 <UART_SetConfig+0x2e4>)
 800a708:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a70c:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800a710:	2b30      	cmp	r3, #48	@ 0x30
 800a712:	d016      	beq.n	800a742 <UART_SetConfig+0x1b2>
 800a714:	2b30      	cmp	r3, #48	@ 0x30
 800a716:	d818      	bhi.n	800a74a <UART_SetConfig+0x1ba>
 800a718:	2b20      	cmp	r3, #32
 800a71a:	d00a      	beq.n	800a732 <UART_SetConfig+0x1a2>
 800a71c:	2b20      	cmp	r3, #32
 800a71e:	d814      	bhi.n	800a74a <UART_SetConfig+0x1ba>
 800a720:	2b00      	cmp	r3, #0
 800a722:	d002      	beq.n	800a72a <UART_SetConfig+0x19a>
 800a724:	2b10      	cmp	r3, #16
 800a726:	d008      	beq.n	800a73a <UART_SetConfig+0x1aa>
 800a728:	e00f      	b.n	800a74a <UART_SetConfig+0x1ba>
 800a72a:	2300      	movs	r3, #0
 800a72c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a730:	e0ad      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a732:	2302      	movs	r3, #2
 800a734:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a738:	e0a9      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a73a:	2304      	movs	r3, #4
 800a73c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a740:	e0a5      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a742:	2308      	movs	r3, #8
 800a744:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a748:	e0a1      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a74a:	2310      	movs	r3, #16
 800a74c:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a750:	e09d      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a752:	697b      	ldr	r3, [r7, #20]
 800a754:	681b      	ldr	r3, [r3, #0]
 800a756:	4a4a      	ldr	r2, [pc, #296]	@ (800a880 <UART_SetConfig+0x2f0>)
 800a758:	4293      	cmp	r3, r2
 800a75a:	d125      	bne.n	800a7a8 <UART_SetConfig+0x218>
 800a75c:	4b45      	ldr	r3, [pc, #276]	@ (800a874 <UART_SetConfig+0x2e4>)
 800a75e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a762:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800a766:	2bc0      	cmp	r3, #192	@ 0xc0
 800a768:	d016      	beq.n	800a798 <UART_SetConfig+0x208>
 800a76a:	2bc0      	cmp	r3, #192	@ 0xc0
 800a76c:	d818      	bhi.n	800a7a0 <UART_SetConfig+0x210>
 800a76e:	2b80      	cmp	r3, #128	@ 0x80
 800a770:	d00a      	beq.n	800a788 <UART_SetConfig+0x1f8>
 800a772:	2b80      	cmp	r3, #128	@ 0x80
 800a774:	d814      	bhi.n	800a7a0 <UART_SetConfig+0x210>
 800a776:	2b00      	cmp	r3, #0
 800a778:	d002      	beq.n	800a780 <UART_SetConfig+0x1f0>
 800a77a:	2b40      	cmp	r3, #64	@ 0x40
 800a77c:	d008      	beq.n	800a790 <UART_SetConfig+0x200>
 800a77e:	e00f      	b.n	800a7a0 <UART_SetConfig+0x210>
 800a780:	2300      	movs	r3, #0
 800a782:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a786:	e082      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a788:	2302      	movs	r3, #2
 800a78a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a78e:	e07e      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a790:	2304      	movs	r3, #4
 800a792:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a796:	e07a      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a798:	2308      	movs	r3, #8
 800a79a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a79e:	e076      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a7a0:	2310      	movs	r3, #16
 800a7a2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7a6:	e072      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a7a8:	697b      	ldr	r3, [r7, #20]
 800a7aa:	681b      	ldr	r3, [r3, #0]
 800a7ac:	4a35      	ldr	r2, [pc, #212]	@ (800a884 <UART_SetConfig+0x2f4>)
 800a7ae:	4293      	cmp	r3, r2
 800a7b0:	d12a      	bne.n	800a808 <UART_SetConfig+0x278>
 800a7b2:	4b30      	ldr	r3, [pc, #192]	@ (800a874 <UART_SetConfig+0x2e4>)
 800a7b4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a7b8:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800a7bc:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a7c0:	d01a      	beq.n	800a7f8 <UART_SetConfig+0x268>
 800a7c2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a7c6:	d81b      	bhi.n	800a800 <UART_SetConfig+0x270>
 800a7c8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a7cc:	d00c      	beq.n	800a7e8 <UART_SetConfig+0x258>
 800a7ce:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a7d2:	d815      	bhi.n	800a800 <UART_SetConfig+0x270>
 800a7d4:	2b00      	cmp	r3, #0
 800a7d6:	d003      	beq.n	800a7e0 <UART_SetConfig+0x250>
 800a7d8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800a7dc:	d008      	beq.n	800a7f0 <UART_SetConfig+0x260>
 800a7de:	e00f      	b.n	800a800 <UART_SetConfig+0x270>
 800a7e0:	2300      	movs	r3, #0
 800a7e2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7e6:	e052      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a7e8:	2302      	movs	r3, #2
 800a7ea:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7ee:	e04e      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a7f0:	2304      	movs	r3, #4
 800a7f2:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7f6:	e04a      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a7f8:	2308      	movs	r3, #8
 800a7fa:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a7fe:	e046      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a800:	2310      	movs	r3, #16
 800a802:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a806:	e042      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a808:	697b      	ldr	r3, [r7, #20]
 800a80a:	681b      	ldr	r3, [r3, #0]
 800a80c:	4a17      	ldr	r2, [pc, #92]	@ (800a86c <UART_SetConfig+0x2dc>)
 800a80e:	4293      	cmp	r3, r2
 800a810:	d13a      	bne.n	800a888 <UART_SetConfig+0x2f8>
 800a812:	4b18      	ldr	r3, [pc, #96]	@ (800a874 <UART_SetConfig+0x2e4>)
 800a814:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800a818:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800a81c:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a820:	d01a      	beq.n	800a858 <UART_SetConfig+0x2c8>
 800a822:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a826:	d81b      	bhi.n	800a860 <UART_SetConfig+0x2d0>
 800a828:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a82c:	d00c      	beq.n	800a848 <UART_SetConfig+0x2b8>
 800a82e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a832:	d815      	bhi.n	800a860 <UART_SetConfig+0x2d0>
 800a834:	2b00      	cmp	r3, #0
 800a836:	d003      	beq.n	800a840 <UART_SetConfig+0x2b0>
 800a838:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a83c:	d008      	beq.n	800a850 <UART_SetConfig+0x2c0>
 800a83e:	e00f      	b.n	800a860 <UART_SetConfig+0x2d0>
 800a840:	2300      	movs	r3, #0
 800a842:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a846:	e022      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a848:	2302      	movs	r3, #2
 800a84a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a84e:	e01e      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a850:	2304      	movs	r3, #4
 800a852:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a856:	e01a      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a858:	2308      	movs	r3, #8
 800a85a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a85e:	e016      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a860:	2310      	movs	r3, #16
 800a862:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a866:	e012      	b.n	800a88e <UART_SetConfig+0x2fe>
 800a868:	cfff69f3 	.word	0xcfff69f3
 800a86c:	40008000 	.word	0x40008000
 800a870:	40013800 	.word	0x40013800
 800a874:	40021000 	.word	0x40021000
 800a878:	40004400 	.word	0x40004400
 800a87c:	40004800 	.word	0x40004800
 800a880:	40004c00 	.word	0x40004c00
 800a884:	40005000 	.word	0x40005000
 800a888:	2310      	movs	r3, #16
 800a88a:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
 800a88e:	697b      	ldr	r3, [r7, #20]
 800a890:	681b      	ldr	r3, [r3, #0]
 800a892:	4aae      	ldr	r2, [pc, #696]	@ (800ab4c <UART_SetConfig+0x5bc>)
 800a894:	4293      	cmp	r3, r2
 800a896:	f040 8097 	bne.w	800a9c8 <UART_SetConfig+0x438>
 800a89a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800a89e:	2b08      	cmp	r3, #8
 800a8a0:	d823      	bhi.n	800a8ea <UART_SetConfig+0x35a>
 800a8a2:	a201      	add	r2, pc, #4	@ (adr r2, 800a8a8 <UART_SetConfig+0x318>)
 800a8a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a8a8:	0800a8cd 	.word	0x0800a8cd
 800a8ac:	0800a8eb 	.word	0x0800a8eb
 800a8b0:	0800a8d5 	.word	0x0800a8d5
 800a8b4:	0800a8eb 	.word	0x0800a8eb
 800a8b8:	0800a8db 	.word	0x0800a8db
 800a8bc:	0800a8eb 	.word	0x0800a8eb
 800a8c0:	0800a8eb 	.word	0x0800a8eb
 800a8c4:	0800a8eb 	.word	0x0800a8eb
 800a8c8:	0800a8e3 	.word	0x0800a8e3
 800a8cc:	f7fc ff76 	bl	80077bc <HAL_RCC_GetPCLK1Freq>
 800a8d0:	6278      	str	r0, [r7, #36]	@ 0x24
 800a8d2:	e010      	b.n	800a8f6 <UART_SetConfig+0x366>
 800a8d4:	4b9e      	ldr	r3, [pc, #632]	@ (800ab50 <UART_SetConfig+0x5c0>)
 800a8d6:	627b      	str	r3, [r7, #36]	@ 0x24
 800a8d8:	e00d      	b.n	800a8f6 <UART_SetConfig+0x366>
 800a8da:	f7fc ff01 	bl	80076e0 <HAL_RCC_GetSysClockFreq>
 800a8de:	6278      	str	r0, [r7, #36]	@ 0x24
 800a8e0:	e009      	b.n	800a8f6 <UART_SetConfig+0x366>
 800a8e2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800a8e6:	627b      	str	r3, [r7, #36]	@ 0x24
 800a8e8:	e005      	b.n	800a8f6 <UART_SetConfig+0x366>
 800a8ea:	2300      	movs	r3, #0
 800a8ec:	627b      	str	r3, [r7, #36]	@ 0x24
 800a8ee:	2301      	movs	r3, #1
 800a8f0:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800a8f4:	bf00      	nop
 800a8f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a8f8:	2b00      	cmp	r3, #0
 800a8fa:	f000 8130 	beq.w	800ab5e <UART_SetConfig+0x5ce>
 800a8fe:	697b      	ldr	r3, [r7, #20]
 800a900:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a902:	4a94      	ldr	r2, [pc, #592]	@ (800ab54 <UART_SetConfig+0x5c4>)
 800a904:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a908:	461a      	mov	r2, r3
 800a90a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a90c:	fbb3 f3f2 	udiv	r3, r3, r2
 800a910:	61bb      	str	r3, [r7, #24]
 800a912:	697b      	ldr	r3, [r7, #20]
 800a914:	685a      	ldr	r2, [r3, #4]
 800a916:	4613      	mov	r3, r2
 800a918:	005b      	lsls	r3, r3, #1
 800a91a:	4413      	add	r3, r2
 800a91c:	69ba      	ldr	r2, [r7, #24]
 800a91e:	429a      	cmp	r2, r3
 800a920:	d305      	bcc.n	800a92e <UART_SetConfig+0x39e>
 800a922:	697b      	ldr	r3, [r7, #20]
 800a924:	685b      	ldr	r3, [r3, #4]
 800a926:	031b      	lsls	r3, r3, #12
 800a928:	69ba      	ldr	r2, [r7, #24]
 800a92a:	429a      	cmp	r2, r3
 800a92c:	d903      	bls.n	800a936 <UART_SetConfig+0x3a6>
 800a92e:	2301      	movs	r3, #1
 800a930:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800a934:	e113      	b.n	800ab5e <UART_SetConfig+0x5ce>
 800a936:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a938:	2200      	movs	r2, #0
 800a93a:	60bb      	str	r3, [r7, #8]
 800a93c:	60fa      	str	r2, [r7, #12]
 800a93e:	697b      	ldr	r3, [r7, #20]
 800a940:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a942:	4a84      	ldr	r2, [pc, #528]	@ (800ab54 <UART_SetConfig+0x5c4>)
 800a944:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a948:	b29b      	uxth	r3, r3
 800a94a:	2200      	movs	r2, #0
 800a94c:	603b      	str	r3, [r7, #0]
 800a94e:	607a      	str	r2, [r7, #4]
 800a950:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a954:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800a958:	f7f6 facc 	bl	8000ef4 <__aeabi_uldivmod>
 800a95c:	4602      	mov	r2, r0
 800a95e:	460b      	mov	r3, r1
 800a960:	4610      	mov	r0, r2
 800a962:	4619      	mov	r1, r3
 800a964:	f04f 0200 	mov.w	r2, #0
 800a968:	f04f 0300 	mov.w	r3, #0
 800a96c:	020b      	lsls	r3, r1, #8
 800a96e:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800a972:	0202      	lsls	r2, r0, #8
 800a974:	6979      	ldr	r1, [r7, #20]
 800a976:	6849      	ldr	r1, [r1, #4]
 800a978:	0849      	lsrs	r1, r1, #1
 800a97a:	2000      	movs	r0, #0
 800a97c:	460c      	mov	r4, r1
 800a97e:	4605      	mov	r5, r0
 800a980:	eb12 0804 	adds.w	r8, r2, r4
 800a984:	eb43 0905 	adc.w	r9, r3, r5
 800a988:	697b      	ldr	r3, [r7, #20]
 800a98a:	685b      	ldr	r3, [r3, #4]
 800a98c:	2200      	movs	r2, #0
 800a98e:	469a      	mov	sl, r3
 800a990:	4693      	mov	fp, r2
 800a992:	4652      	mov	r2, sl
 800a994:	465b      	mov	r3, fp
 800a996:	4640      	mov	r0, r8
 800a998:	4649      	mov	r1, r9
 800a99a:	f7f6 faab 	bl	8000ef4 <__aeabi_uldivmod>
 800a99e:	4602      	mov	r2, r0
 800a9a0:	460b      	mov	r3, r1
 800a9a2:	4613      	mov	r3, r2
 800a9a4:	623b      	str	r3, [r7, #32]
 800a9a6:	6a3b      	ldr	r3, [r7, #32]
 800a9a8:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a9ac:	d308      	bcc.n	800a9c0 <UART_SetConfig+0x430>
 800a9ae:	6a3b      	ldr	r3, [r7, #32]
 800a9b0:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800a9b4:	d204      	bcs.n	800a9c0 <UART_SetConfig+0x430>
 800a9b6:	697b      	ldr	r3, [r7, #20]
 800a9b8:	681b      	ldr	r3, [r3, #0]
 800a9ba:	6a3a      	ldr	r2, [r7, #32]
 800a9bc:	60da      	str	r2, [r3, #12]
 800a9be:	e0ce      	b.n	800ab5e <UART_SetConfig+0x5ce>
 800a9c0:	2301      	movs	r3, #1
 800a9c2:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800a9c6:	e0ca      	b.n	800ab5e <UART_SetConfig+0x5ce>
 800a9c8:	697b      	ldr	r3, [r7, #20]
 800a9ca:	69db      	ldr	r3, [r3, #28]
 800a9cc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a9d0:	d166      	bne.n	800aaa0 <UART_SetConfig+0x510>
 800a9d2:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800a9d6:	2b08      	cmp	r3, #8
 800a9d8:	d827      	bhi.n	800aa2a <UART_SetConfig+0x49a>
 800a9da:	a201      	add	r2, pc, #4	@ (adr r2, 800a9e0 <UART_SetConfig+0x450>)
 800a9dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a9e0:	0800aa05 	.word	0x0800aa05
 800a9e4:	0800aa0d 	.word	0x0800aa0d
 800a9e8:	0800aa15 	.word	0x0800aa15
 800a9ec:	0800aa2b 	.word	0x0800aa2b
 800a9f0:	0800aa1b 	.word	0x0800aa1b
 800a9f4:	0800aa2b 	.word	0x0800aa2b
 800a9f8:	0800aa2b 	.word	0x0800aa2b
 800a9fc:	0800aa2b 	.word	0x0800aa2b
 800aa00:	0800aa23 	.word	0x0800aa23
 800aa04:	f7fc feda 	bl	80077bc <HAL_RCC_GetPCLK1Freq>
 800aa08:	6278      	str	r0, [r7, #36]	@ 0x24
 800aa0a:	e014      	b.n	800aa36 <UART_SetConfig+0x4a6>
 800aa0c:	f7fc feec 	bl	80077e8 <HAL_RCC_GetPCLK2Freq>
 800aa10:	6278      	str	r0, [r7, #36]	@ 0x24
 800aa12:	e010      	b.n	800aa36 <UART_SetConfig+0x4a6>
 800aa14:	4b4e      	ldr	r3, [pc, #312]	@ (800ab50 <UART_SetConfig+0x5c0>)
 800aa16:	627b      	str	r3, [r7, #36]	@ 0x24
 800aa18:	e00d      	b.n	800aa36 <UART_SetConfig+0x4a6>
 800aa1a:	f7fc fe61 	bl	80076e0 <HAL_RCC_GetSysClockFreq>
 800aa1e:	6278      	str	r0, [r7, #36]	@ 0x24
 800aa20:	e009      	b.n	800aa36 <UART_SetConfig+0x4a6>
 800aa22:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800aa26:	627b      	str	r3, [r7, #36]	@ 0x24
 800aa28:	e005      	b.n	800aa36 <UART_SetConfig+0x4a6>
 800aa2a:	2300      	movs	r3, #0
 800aa2c:	627b      	str	r3, [r7, #36]	@ 0x24
 800aa2e:	2301      	movs	r3, #1
 800aa30:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800aa34:	bf00      	nop
 800aa36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa38:	2b00      	cmp	r3, #0
 800aa3a:	f000 8090 	beq.w	800ab5e <UART_SetConfig+0x5ce>
 800aa3e:	697b      	ldr	r3, [r7, #20]
 800aa40:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa42:	4a44      	ldr	r2, [pc, #272]	@ (800ab54 <UART_SetConfig+0x5c4>)
 800aa44:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800aa48:	461a      	mov	r2, r3
 800aa4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aa4c:	fbb3 f3f2 	udiv	r3, r3, r2
 800aa50:	005a      	lsls	r2, r3, #1
 800aa52:	697b      	ldr	r3, [r7, #20]
 800aa54:	685b      	ldr	r3, [r3, #4]
 800aa56:	085b      	lsrs	r3, r3, #1
 800aa58:	441a      	add	r2, r3
 800aa5a:	697b      	ldr	r3, [r7, #20]
 800aa5c:	685b      	ldr	r3, [r3, #4]
 800aa5e:	fbb2 f3f3 	udiv	r3, r2, r3
 800aa62:	623b      	str	r3, [r7, #32]
 800aa64:	6a3b      	ldr	r3, [r7, #32]
 800aa66:	2b0f      	cmp	r3, #15
 800aa68:	d916      	bls.n	800aa98 <UART_SetConfig+0x508>
 800aa6a:	6a3b      	ldr	r3, [r7, #32]
 800aa6c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800aa70:	d212      	bcs.n	800aa98 <UART_SetConfig+0x508>
 800aa72:	6a3b      	ldr	r3, [r7, #32]
 800aa74:	b29b      	uxth	r3, r3
 800aa76:	f023 030f 	bic.w	r3, r3, #15
 800aa7a:	83fb      	strh	r3, [r7, #30]
 800aa7c:	6a3b      	ldr	r3, [r7, #32]
 800aa7e:	085b      	lsrs	r3, r3, #1
 800aa80:	b29b      	uxth	r3, r3
 800aa82:	f003 0307 	and.w	r3, r3, #7
 800aa86:	b29a      	uxth	r2, r3
 800aa88:	8bfb      	ldrh	r3, [r7, #30]
 800aa8a:	4313      	orrs	r3, r2
 800aa8c:	83fb      	strh	r3, [r7, #30]
 800aa8e:	697b      	ldr	r3, [r7, #20]
 800aa90:	681b      	ldr	r3, [r3, #0]
 800aa92:	8bfa      	ldrh	r2, [r7, #30]
 800aa94:	60da      	str	r2, [r3, #12]
 800aa96:	e062      	b.n	800ab5e <UART_SetConfig+0x5ce>
 800aa98:	2301      	movs	r3, #1
 800aa9a:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800aa9e:	e05e      	b.n	800ab5e <UART_SetConfig+0x5ce>
 800aaa0:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800aaa4:	2b08      	cmp	r3, #8
 800aaa6:	d828      	bhi.n	800aafa <UART_SetConfig+0x56a>
 800aaa8:	a201      	add	r2, pc, #4	@ (adr r2, 800aab0 <UART_SetConfig+0x520>)
 800aaaa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aaae:	bf00      	nop
 800aab0:	0800aad5 	.word	0x0800aad5
 800aab4:	0800aadd 	.word	0x0800aadd
 800aab8:	0800aae5 	.word	0x0800aae5
 800aabc:	0800aafb 	.word	0x0800aafb
 800aac0:	0800aaeb 	.word	0x0800aaeb
 800aac4:	0800aafb 	.word	0x0800aafb
 800aac8:	0800aafb 	.word	0x0800aafb
 800aacc:	0800aafb 	.word	0x0800aafb
 800aad0:	0800aaf3 	.word	0x0800aaf3
 800aad4:	f7fc fe72 	bl	80077bc <HAL_RCC_GetPCLK1Freq>
 800aad8:	6278      	str	r0, [r7, #36]	@ 0x24
 800aada:	e014      	b.n	800ab06 <UART_SetConfig+0x576>
 800aadc:	f7fc fe84 	bl	80077e8 <HAL_RCC_GetPCLK2Freq>
 800aae0:	6278      	str	r0, [r7, #36]	@ 0x24
 800aae2:	e010      	b.n	800ab06 <UART_SetConfig+0x576>
 800aae4:	4b1a      	ldr	r3, [pc, #104]	@ (800ab50 <UART_SetConfig+0x5c0>)
 800aae6:	627b      	str	r3, [r7, #36]	@ 0x24
 800aae8:	e00d      	b.n	800ab06 <UART_SetConfig+0x576>
 800aaea:	f7fc fdf9 	bl	80076e0 <HAL_RCC_GetSysClockFreq>
 800aaee:	6278      	str	r0, [r7, #36]	@ 0x24
 800aaf0:	e009      	b.n	800ab06 <UART_SetConfig+0x576>
 800aaf2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800aaf6:	627b      	str	r3, [r7, #36]	@ 0x24
 800aaf8:	e005      	b.n	800ab06 <UART_SetConfig+0x576>
 800aafa:	2300      	movs	r3, #0
 800aafc:	627b      	str	r3, [r7, #36]	@ 0x24
 800aafe:	2301      	movs	r3, #1
 800ab00:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800ab04:	bf00      	nop
 800ab06:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ab08:	2b00      	cmp	r3, #0
 800ab0a:	d028      	beq.n	800ab5e <UART_SetConfig+0x5ce>
 800ab0c:	697b      	ldr	r3, [r7, #20]
 800ab0e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ab10:	4a10      	ldr	r2, [pc, #64]	@ (800ab54 <UART_SetConfig+0x5c4>)
 800ab12:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ab16:	461a      	mov	r2, r3
 800ab18:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ab1a:	fbb3 f2f2 	udiv	r2, r3, r2
 800ab1e:	697b      	ldr	r3, [r7, #20]
 800ab20:	685b      	ldr	r3, [r3, #4]
 800ab22:	085b      	lsrs	r3, r3, #1
 800ab24:	441a      	add	r2, r3
 800ab26:	697b      	ldr	r3, [r7, #20]
 800ab28:	685b      	ldr	r3, [r3, #4]
 800ab2a:	fbb2 f3f3 	udiv	r3, r2, r3
 800ab2e:	623b      	str	r3, [r7, #32]
 800ab30:	6a3b      	ldr	r3, [r7, #32]
 800ab32:	2b0f      	cmp	r3, #15
 800ab34:	d910      	bls.n	800ab58 <UART_SetConfig+0x5c8>
 800ab36:	6a3b      	ldr	r3, [r7, #32]
 800ab38:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800ab3c:	d20c      	bcs.n	800ab58 <UART_SetConfig+0x5c8>
 800ab3e:	6a3b      	ldr	r3, [r7, #32]
 800ab40:	b29a      	uxth	r2, r3
 800ab42:	697b      	ldr	r3, [r7, #20]
 800ab44:	681b      	ldr	r3, [r3, #0]
 800ab46:	60da      	str	r2, [r3, #12]
 800ab48:	e009      	b.n	800ab5e <UART_SetConfig+0x5ce>
 800ab4a:	bf00      	nop
 800ab4c:	40008000 	.word	0x40008000
 800ab50:	00f42400 	.word	0x00f42400
 800ab54:	0800f264 	.word	0x0800f264
 800ab58:	2301      	movs	r3, #1
 800ab5a:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800ab5e:	697b      	ldr	r3, [r7, #20]
 800ab60:	2201      	movs	r2, #1
 800ab62:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800ab66:	697b      	ldr	r3, [r7, #20]
 800ab68:	2201      	movs	r2, #1
 800ab6a:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800ab6e:	697b      	ldr	r3, [r7, #20]
 800ab70:	2200      	movs	r2, #0
 800ab72:	675a      	str	r2, [r3, #116]	@ 0x74
 800ab74:	697b      	ldr	r3, [r7, #20]
 800ab76:	2200      	movs	r2, #0
 800ab78:	679a      	str	r2, [r3, #120]	@ 0x78
 800ab7a:	f897 302a 	ldrb.w	r3, [r7, #42]	@ 0x2a
 800ab7e:	4618      	mov	r0, r3
 800ab80:	3730      	adds	r7, #48	@ 0x30
 800ab82:	46bd      	mov	sp, r7
 800ab84:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}

0800ab88 <UART_AdvFeatureConfig>:
 800ab88:	b480      	push	{r7}
 800ab8a:	b083      	sub	sp, #12
 800ab8c:	af00      	add	r7, sp, #0
 800ab8e:	6078      	str	r0, [r7, #4]
 800ab90:	687b      	ldr	r3, [r7, #4]
 800ab92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ab94:	f003 0308 	and.w	r3, r3, #8
 800ab98:	2b00      	cmp	r3, #0
 800ab9a:	d00a      	beq.n	800abb2 <UART_AdvFeatureConfig+0x2a>
 800ab9c:	687b      	ldr	r3, [r7, #4]
 800ab9e:	681b      	ldr	r3, [r3, #0]
 800aba0:	685b      	ldr	r3, [r3, #4]
 800aba2:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800abaa:	687b      	ldr	r3, [r7, #4]
 800abac:	681b      	ldr	r3, [r3, #0]
 800abae:	430a      	orrs	r2, r1
 800abb0:	605a      	str	r2, [r3, #4]
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800abb6:	f003 0301 	and.w	r3, r3, #1
 800abba:	2b00      	cmp	r3, #0
 800abbc:	d00a      	beq.n	800abd4 <UART_AdvFeatureConfig+0x4c>
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	681b      	ldr	r3, [r3, #0]
 800abc2:	685b      	ldr	r3, [r3, #4]
 800abc4:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 800abc8:	687b      	ldr	r3, [r7, #4]
 800abca:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800abcc:	687b      	ldr	r3, [r7, #4]
 800abce:	681b      	ldr	r3, [r3, #0]
 800abd0:	430a      	orrs	r2, r1
 800abd2:	605a      	str	r2, [r3, #4]
 800abd4:	687b      	ldr	r3, [r7, #4]
 800abd6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800abd8:	f003 0302 	and.w	r3, r3, #2
 800abdc:	2b00      	cmp	r3, #0
 800abde:	d00a      	beq.n	800abf6 <UART_AdvFeatureConfig+0x6e>
 800abe0:	687b      	ldr	r3, [r7, #4]
 800abe2:	681b      	ldr	r3, [r3, #0]
 800abe4:	685b      	ldr	r3, [r3, #4]
 800abe6:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800abea:	687b      	ldr	r3, [r7, #4]
 800abec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	430a      	orrs	r2, r1
 800abf4:	605a      	str	r2, [r3, #4]
 800abf6:	687b      	ldr	r3, [r7, #4]
 800abf8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800abfa:	f003 0304 	and.w	r3, r3, #4
 800abfe:	2b00      	cmp	r3, #0
 800ac00:	d00a      	beq.n	800ac18 <UART_AdvFeatureConfig+0x90>
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	681b      	ldr	r3, [r3, #0]
 800ac06:	685b      	ldr	r3, [r3, #4]
 800ac08:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800ac0c:	687b      	ldr	r3, [r7, #4]
 800ac0e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800ac10:	687b      	ldr	r3, [r7, #4]
 800ac12:	681b      	ldr	r3, [r3, #0]
 800ac14:	430a      	orrs	r2, r1
 800ac16:	605a      	str	r2, [r3, #4]
 800ac18:	687b      	ldr	r3, [r7, #4]
 800ac1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac1c:	f003 0310 	and.w	r3, r3, #16
 800ac20:	2b00      	cmp	r3, #0
 800ac22:	d00a      	beq.n	800ac3a <UART_AdvFeatureConfig+0xb2>
 800ac24:	687b      	ldr	r3, [r7, #4]
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	689b      	ldr	r3, [r3, #8]
 800ac2a:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800ac32:	687b      	ldr	r3, [r7, #4]
 800ac34:	681b      	ldr	r3, [r3, #0]
 800ac36:	430a      	orrs	r2, r1
 800ac38:	609a      	str	r2, [r3, #8]
 800ac3a:	687b      	ldr	r3, [r7, #4]
 800ac3c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac3e:	f003 0320 	and.w	r3, r3, #32
 800ac42:	2b00      	cmp	r3, #0
 800ac44:	d00a      	beq.n	800ac5c <UART_AdvFeatureConfig+0xd4>
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	681b      	ldr	r3, [r3, #0]
 800ac4a:	689b      	ldr	r3, [r3, #8]
 800ac4c:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800ac50:	687b      	ldr	r3, [r7, #4]
 800ac52:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800ac54:	687b      	ldr	r3, [r7, #4]
 800ac56:	681b      	ldr	r3, [r3, #0]
 800ac58:	430a      	orrs	r2, r1
 800ac5a:	609a      	str	r2, [r3, #8]
 800ac5c:	687b      	ldr	r3, [r7, #4]
 800ac5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ac60:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800ac64:	2b00      	cmp	r3, #0
 800ac66:	d01a      	beq.n	800ac9e <UART_AdvFeatureConfig+0x116>
 800ac68:	687b      	ldr	r3, [r7, #4]
 800ac6a:	681b      	ldr	r3, [r3, #0]
 800ac6c:	685b      	ldr	r3, [r3, #4]
 800ac6e:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800ac72:	687b      	ldr	r3, [r7, #4]
 800ac74:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800ac76:	687b      	ldr	r3, [r7, #4]
 800ac78:	681b      	ldr	r3, [r3, #0]
 800ac7a:	430a      	orrs	r2, r1
 800ac7c:	605a      	str	r2, [r3, #4]
 800ac7e:	687b      	ldr	r3, [r7, #4]
 800ac80:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ac82:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800ac86:	d10a      	bne.n	800ac9e <UART_AdvFeatureConfig+0x116>
 800ac88:	687b      	ldr	r3, [r7, #4]
 800ac8a:	681b      	ldr	r3, [r3, #0]
 800ac8c:	685b      	ldr	r3, [r3, #4]
 800ac8e:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	681b      	ldr	r3, [r3, #0]
 800ac9a:	430a      	orrs	r2, r1
 800ac9c:	605a      	str	r2, [r3, #4]
 800ac9e:	687b      	ldr	r3, [r7, #4]
 800aca0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aca2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800aca6:	2b00      	cmp	r3, #0
 800aca8:	d00a      	beq.n	800acc0 <UART_AdvFeatureConfig+0x138>
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	685b      	ldr	r3, [r3, #4]
 800acb0:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800acb4:	687b      	ldr	r3, [r7, #4]
 800acb6:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800acb8:	687b      	ldr	r3, [r7, #4]
 800acba:	681b      	ldr	r3, [r3, #0]
 800acbc:	430a      	orrs	r2, r1
 800acbe:	605a      	str	r2, [r3, #4]
 800acc0:	bf00      	nop
 800acc2:	370c      	adds	r7, #12
 800acc4:	46bd      	mov	sp, r7
 800acc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acca:	4770      	bx	lr

0800accc <UART_CheckIdleState>:
 800accc:	b580      	push	{r7, lr}
 800acce:	b098      	sub	sp, #96	@ 0x60
 800acd0:	af02      	add	r7, sp, #8
 800acd2:	6078      	str	r0, [r7, #4]
 800acd4:	687b      	ldr	r3, [r7, #4]
 800acd6:	2200      	movs	r2, #0
 800acd8:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800acdc:	f7f9 faf4 	bl	80042c8 <HAL_GetTick>
 800ace0:	6578      	str	r0, [r7, #84]	@ 0x54
 800ace2:	687b      	ldr	r3, [r7, #4]
 800ace4:	681b      	ldr	r3, [r3, #0]
 800ace6:	681b      	ldr	r3, [r3, #0]
 800ace8:	f003 0308 	and.w	r3, r3, #8
 800acec:	2b08      	cmp	r3, #8
 800acee:	d12f      	bne.n	800ad50 <UART_CheckIdleState+0x84>
 800acf0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800acf4:	9300      	str	r3, [sp, #0]
 800acf6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800acf8:	2200      	movs	r2, #0
 800acfa:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800acfe:	6878      	ldr	r0, [r7, #4]
 800ad00:	f000 f88e 	bl	800ae20 <UART_WaitOnFlagUntilTimeout>
 800ad04:	4603      	mov	r3, r0
 800ad06:	2b00      	cmp	r3, #0
 800ad08:	d022      	beq.n	800ad50 <UART_CheckIdleState+0x84>
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	681b      	ldr	r3, [r3, #0]
 800ad0e:	63bb      	str	r3, [r7, #56]	@ 0x38
 800ad10:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ad12:	e853 3f00 	ldrex	r3, [r3]
 800ad16:	637b      	str	r3, [r7, #52]	@ 0x34
 800ad18:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800ad1a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800ad1e:	653b      	str	r3, [r7, #80]	@ 0x50
 800ad20:	687b      	ldr	r3, [r7, #4]
 800ad22:	681b      	ldr	r3, [r3, #0]
 800ad24:	461a      	mov	r2, r3
 800ad26:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800ad28:	647b      	str	r3, [r7, #68]	@ 0x44
 800ad2a:	643a      	str	r2, [r7, #64]	@ 0x40
 800ad2c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800ad2e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800ad30:	e841 2300 	strex	r3, r2, [r1]
 800ad34:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800ad36:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800ad38:	2b00      	cmp	r3, #0
 800ad3a:	d1e6      	bne.n	800ad0a <UART_CheckIdleState+0x3e>
 800ad3c:	687b      	ldr	r3, [r7, #4]
 800ad3e:	2220      	movs	r2, #32
 800ad40:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800ad44:	687b      	ldr	r3, [r7, #4]
 800ad46:	2200      	movs	r2, #0
 800ad48:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ad4c:	2303      	movs	r3, #3
 800ad4e:	e063      	b.n	800ae18 <UART_CheckIdleState+0x14c>
 800ad50:	687b      	ldr	r3, [r7, #4]
 800ad52:	681b      	ldr	r3, [r3, #0]
 800ad54:	681b      	ldr	r3, [r3, #0]
 800ad56:	f003 0304 	and.w	r3, r3, #4
 800ad5a:	2b04      	cmp	r3, #4
 800ad5c:	d149      	bne.n	800adf2 <UART_CheckIdleState+0x126>
 800ad5e:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800ad62:	9300      	str	r3, [sp, #0]
 800ad64:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800ad66:	2200      	movs	r2, #0
 800ad68:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800ad6c:	6878      	ldr	r0, [r7, #4]
 800ad6e:	f000 f857 	bl	800ae20 <UART_WaitOnFlagUntilTimeout>
 800ad72:	4603      	mov	r3, r0
 800ad74:	2b00      	cmp	r3, #0
 800ad76:	d03c      	beq.n	800adf2 <UART_CheckIdleState+0x126>
 800ad78:	687b      	ldr	r3, [r7, #4]
 800ad7a:	681b      	ldr	r3, [r3, #0]
 800ad7c:	627b      	str	r3, [r7, #36]	@ 0x24
 800ad7e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ad80:	e853 3f00 	ldrex	r3, [r3]
 800ad84:	623b      	str	r3, [r7, #32]
 800ad86:	6a3b      	ldr	r3, [r7, #32]
 800ad88:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800ad8c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800ad8e:	687b      	ldr	r3, [r7, #4]
 800ad90:	681b      	ldr	r3, [r3, #0]
 800ad92:	461a      	mov	r2, r3
 800ad94:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800ad96:	633b      	str	r3, [r7, #48]	@ 0x30
 800ad98:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800ad9a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800ad9c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800ad9e:	e841 2300 	strex	r3, r2, [r1]
 800ada2:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ada4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ada6:	2b00      	cmp	r3, #0
 800ada8:	d1e6      	bne.n	800ad78 <UART_CheckIdleState+0xac>
 800adaa:	687b      	ldr	r3, [r7, #4]
 800adac:	681b      	ldr	r3, [r3, #0]
 800adae:	3308      	adds	r3, #8
 800adb0:	613b      	str	r3, [r7, #16]
 800adb2:	693b      	ldr	r3, [r7, #16]
 800adb4:	e853 3f00 	ldrex	r3, [r3]
 800adb8:	60fb      	str	r3, [r7, #12]
 800adba:	68fb      	ldr	r3, [r7, #12]
 800adbc:	f023 0301 	bic.w	r3, r3, #1
 800adc0:	64bb      	str	r3, [r7, #72]	@ 0x48
 800adc2:	687b      	ldr	r3, [r7, #4]
 800adc4:	681b      	ldr	r3, [r3, #0]
 800adc6:	3308      	adds	r3, #8
 800adc8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800adca:	61fa      	str	r2, [r7, #28]
 800adcc:	61bb      	str	r3, [r7, #24]
 800adce:	69b9      	ldr	r1, [r7, #24]
 800add0:	69fa      	ldr	r2, [r7, #28]
 800add2:	e841 2300 	strex	r3, r2, [r1]
 800add6:	617b      	str	r3, [r7, #20]
 800add8:	697b      	ldr	r3, [r7, #20]
 800adda:	2b00      	cmp	r3, #0
 800addc:	d1e5      	bne.n	800adaa <UART_CheckIdleState+0xde>
 800adde:	687b      	ldr	r3, [r7, #4]
 800ade0:	2220      	movs	r2, #32
 800ade2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	2200      	movs	r2, #0
 800adea:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800adee:	2303      	movs	r3, #3
 800adf0:	e012      	b.n	800ae18 <UART_CheckIdleState+0x14c>
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	2220      	movs	r2, #32
 800adf6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800adfa:	687b      	ldr	r3, [r7, #4]
 800adfc:	2220      	movs	r2, #32
 800adfe:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800ae02:	687b      	ldr	r3, [r7, #4]
 800ae04:	2200      	movs	r2, #0
 800ae06:	66da      	str	r2, [r3, #108]	@ 0x6c
 800ae08:	687b      	ldr	r3, [r7, #4]
 800ae0a:	2200      	movs	r2, #0
 800ae0c:	671a      	str	r2, [r3, #112]	@ 0x70
 800ae0e:	687b      	ldr	r3, [r7, #4]
 800ae10:	2200      	movs	r2, #0
 800ae12:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ae16:	2300      	movs	r3, #0
 800ae18:	4618      	mov	r0, r3
 800ae1a:	3758      	adds	r7, #88	@ 0x58
 800ae1c:	46bd      	mov	sp, r7
 800ae1e:	bd80      	pop	{r7, pc}

0800ae20 <UART_WaitOnFlagUntilTimeout>:
 800ae20:	b580      	push	{r7, lr}
 800ae22:	b084      	sub	sp, #16
 800ae24:	af00      	add	r7, sp, #0
 800ae26:	60f8      	str	r0, [r7, #12]
 800ae28:	60b9      	str	r1, [r7, #8]
 800ae2a:	603b      	str	r3, [r7, #0]
 800ae2c:	4613      	mov	r3, r2
 800ae2e:	71fb      	strb	r3, [r7, #7]
 800ae30:	e04f      	b.n	800aed2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800ae32:	69bb      	ldr	r3, [r7, #24]
 800ae34:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ae38:	d04b      	beq.n	800aed2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800ae3a:	f7f9 fa45 	bl	80042c8 <HAL_GetTick>
 800ae3e:	4602      	mov	r2, r0
 800ae40:	683b      	ldr	r3, [r7, #0]
 800ae42:	1ad3      	subs	r3, r2, r3
 800ae44:	69ba      	ldr	r2, [r7, #24]
 800ae46:	429a      	cmp	r2, r3
 800ae48:	d302      	bcc.n	800ae50 <UART_WaitOnFlagUntilTimeout+0x30>
 800ae4a:	69bb      	ldr	r3, [r7, #24]
 800ae4c:	2b00      	cmp	r3, #0
 800ae4e:	d101      	bne.n	800ae54 <UART_WaitOnFlagUntilTimeout+0x34>
 800ae50:	2303      	movs	r3, #3
 800ae52:	e04e      	b.n	800aef2 <UART_WaitOnFlagUntilTimeout+0xd2>
 800ae54:	68fb      	ldr	r3, [r7, #12]
 800ae56:	681b      	ldr	r3, [r3, #0]
 800ae58:	681b      	ldr	r3, [r3, #0]
 800ae5a:	f003 0304 	and.w	r3, r3, #4
 800ae5e:	2b00      	cmp	r3, #0
 800ae60:	d037      	beq.n	800aed2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800ae62:	68bb      	ldr	r3, [r7, #8]
 800ae64:	2b80      	cmp	r3, #128	@ 0x80
 800ae66:	d034      	beq.n	800aed2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800ae68:	68bb      	ldr	r3, [r7, #8]
 800ae6a:	2b40      	cmp	r3, #64	@ 0x40
 800ae6c:	d031      	beq.n	800aed2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	681b      	ldr	r3, [r3, #0]
 800ae72:	69db      	ldr	r3, [r3, #28]
 800ae74:	f003 0308 	and.w	r3, r3, #8
 800ae78:	2b08      	cmp	r3, #8
 800ae7a:	d110      	bne.n	800ae9e <UART_WaitOnFlagUntilTimeout+0x7e>
 800ae7c:	68fb      	ldr	r3, [r7, #12]
 800ae7e:	681b      	ldr	r3, [r3, #0]
 800ae80:	2208      	movs	r2, #8
 800ae82:	621a      	str	r2, [r3, #32]
 800ae84:	68f8      	ldr	r0, [r7, #12]
 800ae86:	f000 f95b 	bl	800b140 <UART_EndRxTransfer>
 800ae8a:	68fb      	ldr	r3, [r7, #12]
 800ae8c:	2208      	movs	r2, #8
 800ae8e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800ae92:	68fb      	ldr	r3, [r7, #12]
 800ae94:	2200      	movs	r2, #0
 800ae96:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ae9a:	2301      	movs	r3, #1
 800ae9c:	e029      	b.n	800aef2 <UART_WaitOnFlagUntilTimeout+0xd2>
 800ae9e:	68fb      	ldr	r3, [r7, #12]
 800aea0:	681b      	ldr	r3, [r3, #0]
 800aea2:	69db      	ldr	r3, [r3, #28]
 800aea4:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800aea8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800aeac:	d111      	bne.n	800aed2 <UART_WaitOnFlagUntilTimeout+0xb2>
 800aeae:	68fb      	ldr	r3, [r7, #12]
 800aeb0:	681b      	ldr	r3, [r3, #0]
 800aeb2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800aeb6:	621a      	str	r2, [r3, #32]
 800aeb8:	68f8      	ldr	r0, [r7, #12]
 800aeba:	f000 f941 	bl	800b140 <UART_EndRxTransfer>
 800aebe:	68fb      	ldr	r3, [r7, #12]
 800aec0:	2220      	movs	r2, #32
 800aec2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800aec6:	68fb      	ldr	r3, [r7, #12]
 800aec8:	2200      	movs	r2, #0
 800aeca:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800aece:	2303      	movs	r3, #3
 800aed0:	e00f      	b.n	800aef2 <UART_WaitOnFlagUntilTimeout+0xd2>
 800aed2:	68fb      	ldr	r3, [r7, #12]
 800aed4:	681b      	ldr	r3, [r3, #0]
 800aed6:	69da      	ldr	r2, [r3, #28]
 800aed8:	68bb      	ldr	r3, [r7, #8]
 800aeda:	4013      	ands	r3, r2
 800aedc:	68ba      	ldr	r2, [r7, #8]
 800aede:	429a      	cmp	r2, r3
 800aee0:	bf0c      	ite	eq
 800aee2:	2301      	moveq	r3, #1
 800aee4:	2300      	movne	r3, #0
 800aee6:	b2db      	uxtb	r3, r3
 800aee8:	461a      	mov	r2, r3
 800aeea:	79fb      	ldrb	r3, [r7, #7]
 800aeec:	429a      	cmp	r2, r3
 800aeee:	d0a0      	beq.n	800ae32 <UART_WaitOnFlagUntilTimeout+0x12>
 800aef0:	2300      	movs	r3, #0
 800aef2:	4618      	mov	r0, r3
 800aef4:	3710      	adds	r7, #16
 800aef6:	46bd      	mov	sp, r7
 800aef8:	bd80      	pop	{r7, pc}
	...

0800aefc <UART_Start_Receive_IT>:
 800aefc:	b480      	push	{r7}
 800aefe:	b0a3      	sub	sp, #140	@ 0x8c
 800af00:	af00      	add	r7, sp, #0
 800af02:	60f8      	str	r0, [r7, #12]
 800af04:	60b9      	str	r1, [r7, #8]
 800af06:	4613      	mov	r3, r2
 800af08:	80fb      	strh	r3, [r7, #6]
 800af0a:	68fb      	ldr	r3, [r7, #12]
 800af0c:	68ba      	ldr	r2, [r7, #8]
 800af0e:	659a      	str	r2, [r3, #88]	@ 0x58
 800af10:	68fb      	ldr	r3, [r7, #12]
 800af12:	88fa      	ldrh	r2, [r7, #6]
 800af14:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 800af18:	68fb      	ldr	r3, [r7, #12]
 800af1a:	88fa      	ldrh	r2, [r7, #6]
 800af1c:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800af20:	68fb      	ldr	r3, [r7, #12]
 800af22:	2200      	movs	r2, #0
 800af24:	675a      	str	r2, [r3, #116]	@ 0x74
 800af26:	68fb      	ldr	r3, [r7, #12]
 800af28:	689b      	ldr	r3, [r3, #8]
 800af2a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800af2e:	d10e      	bne.n	800af4e <UART_Start_Receive_IT+0x52>
 800af30:	68fb      	ldr	r3, [r7, #12]
 800af32:	691b      	ldr	r3, [r3, #16]
 800af34:	2b00      	cmp	r3, #0
 800af36:	d105      	bne.n	800af44 <UART_Start_Receive_IT+0x48>
 800af38:	68fb      	ldr	r3, [r7, #12]
 800af3a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 800af3e:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800af42:	e02d      	b.n	800afa0 <UART_Start_Receive_IT+0xa4>
 800af44:	68fb      	ldr	r3, [r7, #12]
 800af46:	22ff      	movs	r2, #255	@ 0xff
 800af48:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800af4c:	e028      	b.n	800afa0 <UART_Start_Receive_IT+0xa4>
 800af4e:	68fb      	ldr	r3, [r7, #12]
 800af50:	689b      	ldr	r3, [r3, #8]
 800af52:	2b00      	cmp	r3, #0
 800af54:	d10d      	bne.n	800af72 <UART_Start_Receive_IT+0x76>
 800af56:	68fb      	ldr	r3, [r7, #12]
 800af58:	691b      	ldr	r3, [r3, #16]
 800af5a:	2b00      	cmp	r3, #0
 800af5c:	d104      	bne.n	800af68 <UART_Start_Receive_IT+0x6c>
 800af5e:	68fb      	ldr	r3, [r7, #12]
 800af60:	22ff      	movs	r2, #255	@ 0xff
 800af62:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800af66:	e01b      	b.n	800afa0 <UART_Start_Receive_IT+0xa4>
 800af68:	68fb      	ldr	r3, [r7, #12]
 800af6a:	227f      	movs	r2, #127	@ 0x7f
 800af6c:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800af70:	e016      	b.n	800afa0 <UART_Start_Receive_IT+0xa4>
 800af72:	68fb      	ldr	r3, [r7, #12]
 800af74:	689b      	ldr	r3, [r3, #8]
 800af76:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800af7a:	d10d      	bne.n	800af98 <UART_Start_Receive_IT+0x9c>
 800af7c:	68fb      	ldr	r3, [r7, #12]
 800af7e:	691b      	ldr	r3, [r3, #16]
 800af80:	2b00      	cmp	r3, #0
 800af82:	d104      	bne.n	800af8e <UART_Start_Receive_IT+0x92>
 800af84:	68fb      	ldr	r3, [r7, #12]
 800af86:	227f      	movs	r2, #127	@ 0x7f
 800af88:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800af8c:	e008      	b.n	800afa0 <UART_Start_Receive_IT+0xa4>
 800af8e:	68fb      	ldr	r3, [r7, #12]
 800af90:	223f      	movs	r2, #63	@ 0x3f
 800af92:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800af96:	e003      	b.n	800afa0 <UART_Start_Receive_IT+0xa4>
 800af98:	68fb      	ldr	r3, [r7, #12]
 800af9a:	2200      	movs	r2, #0
 800af9c:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 800afa0:	68fb      	ldr	r3, [r7, #12]
 800afa2:	2200      	movs	r2, #0
 800afa4:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800afa8:	68fb      	ldr	r3, [r7, #12]
 800afaa:	2222      	movs	r2, #34	@ 0x22
 800afac:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800afb0:	68fb      	ldr	r3, [r7, #12]
 800afb2:	681b      	ldr	r3, [r3, #0]
 800afb4:	3308      	adds	r3, #8
 800afb6:	667b      	str	r3, [r7, #100]	@ 0x64
 800afb8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800afba:	e853 3f00 	ldrex	r3, [r3]
 800afbe:	663b      	str	r3, [r7, #96]	@ 0x60
 800afc0:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800afc2:	f043 0301 	orr.w	r3, r3, #1
 800afc6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800afca:	68fb      	ldr	r3, [r7, #12]
 800afcc:	681b      	ldr	r3, [r3, #0]
 800afce:	3308      	adds	r3, #8
 800afd0:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 800afd4:	673a      	str	r2, [r7, #112]	@ 0x70
 800afd6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800afd8:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 800afda:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 800afdc:	e841 2300 	strex	r3, r2, [r1]
 800afe0:	66bb      	str	r3, [r7, #104]	@ 0x68
 800afe2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800afe4:	2b00      	cmp	r3, #0
 800afe6:	d1e3      	bne.n	800afb0 <UART_Start_Receive_IT+0xb4>
 800afe8:	68fb      	ldr	r3, [r7, #12]
 800afea:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800afec:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800aff0:	d14f      	bne.n	800b092 <UART_Start_Receive_IT+0x196>
 800aff2:	68fb      	ldr	r3, [r7, #12]
 800aff4:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800aff8:	88fa      	ldrh	r2, [r7, #6]
 800affa:	429a      	cmp	r2, r3
 800affc:	d349      	bcc.n	800b092 <UART_Start_Receive_IT+0x196>
 800affe:	68fb      	ldr	r3, [r7, #12]
 800b000:	689b      	ldr	r3, [r3, #8]
 800b002:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800b006:	d107      	bne.n	800b018 <UART_Start_Receive_IT+0x11c>
 800b008:	68fb      	ldr	r3, [r7, #12]
 800b00a:	691b      	ldr	r3, [r3, #16]
 800b00c:	2b00      	cmp	r3, #0
 800b00e:	d103      	bne.n	800b018 <UART_Start_Receive_IT+0x11c>
 800b010:	68fb      	ldr	r3, [r7, #12]
 800b012:	4a47      	ldr	r2, [pc, #284]	@ (800b130 <UART_Start_Receive_IT+0x234>)
 800b014:	675a      	str	r2, [r3, #116]	@ 0x74
 800b016:	e002      	b.n	800b01e <UART_Start_Receive_IT+0x122>
 800b018:	68fb      	ldr	r3, [r7, #12]
 800b01a:	4a46      	ldr	r2, [pc, #280]	@ (800b134 <UART_Start_Receive_IT+0x238>)
 800b01c:	675a      	str	r2, [r3, #116]	@ 0x74
 800b01e:	68fb      	ldr	r3, [r7, #12]
 800b020:	691b      	ldr	r3, [r3, #16]
 800b022:	2b00      	cmp	r3, #0
 800b024:	d01a      	beq.n	800b05c <UART_Start_Receive_IT+0x160>
 800b026:	68fb      	ldr	r3, [r7, #12]
 800b028:	681b      	ldr	r3, [r3, #0]
 800b02a:	653b      	str	r3, [r7, #80]	@ 0x50
 800b02c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800b02e:	e853 3f00 	ldrex	r3, [r3]
 800b032:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b034:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b036:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800b03a:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800b03e:	68fb      	ldr	r3, [r7, #12]
 800b040:	681b      	ldr	r3, [r3, #0]
 800b042:	461a      	mov	r2, r3
 800b044:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800b048:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800b04a:	65ba      	str	r2, [r7, #88]	@ 0x58
 800b04c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 800b04e:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800b050:	e841 2300 	strex	r3, r2, [r1]
 800b054:	657b      	str	r3, [r7, #84]	@ 0x54
 800b056:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800b058:	2b00      	cmp	r3, #0
 800b05a:	d1e4      	bne.n	800b026 <UART_Start_Receive_IT+0x12a>
 800b05c:	68fb      	ldr	r3, [r7, #12]
 800b05e:	681b      	ldr	r3, [r3, #0]
 800b060:	3308      	adds	r3, #8
 800b062:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800b064:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b066:	e853 3f00 	ldrex	r3, [r3]
 800b06a:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b06c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b06e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800b072:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800b074:	68fb      	ldr	r3, [r7, #12]
 800b076:	681b      	ldr	r3, [r3, #0]
 800b078:	3308      	adds	r3, #8
 800b07a:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800b07c:	64ba      	str	r2, [r7, #72]	@ 0x48
 800b07e:	647b      	str	r3, [r7, #68]	@ 0x44
 800b080:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 800b082:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b084:	e841 2300 	strex	r3, r2, [r1]
 800b088:	643b      	str	r3, [r7, #64]	@ 0x40
 800b08a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800b08c:	2b00      	cmp	r3, #0
 800b08e:	d1e5      	bne.n	800b05c <UART_Start_Receive_IT+0x160>
 800b090:	e046      	b.n	800b120 <UART_Start_Receive_IT+0x224>
 800b092:	68fb      	ldr	r3, [r7, #12]
 800b094:	689b      	ldr	r3, [r3, #8]
 800b096:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800b09a:	d107      	bne.n	800b0ac <UART_Start_Receive_IT+0x1b0>
 800b09c:	68fb      	ldr	r3, [r7, #12]
 800b09e:	691b      	ldr	r3, [r3, #16]
 800b0a0:	2b00      	cmp	r3, #0
 800b0a2:	d103      	bne.n	800b0ac <UART_Start_Receive_IT+0x1b0>
 800b0a4:	68fb      	ldr	r3, [r7, #12]
 800b0a6:	4a24      	ldr	r2, [pc, #144]	@ (800b138 <UART_Start_Receive_IT+0x23c>)
 800b0a8:	675a      	str	r2, [r3, #116]	@ 0x74
 800b0aa:	e002      	b.n	800b0b2 <UART_Start_Receive_IT+0x1b6>
 800b0ac:	68fb      	ldr	r3, [r7, #12]
 800b0ae:	4a23      	ldr	r2, [pc, #140]	@ (800b13c <UART_Start_Receive_IT+0x240>)
 800b0b0:	675a      	str	r2, [r3, #116]	@ 0x74
 800b0b2:	68fb      	ldr	r3, [r7, #12]
 800b0b4:	691b      	ldr	r3, [r3, #16]
 800b0b6:	2b00      	cmp	r3, #0
 800b0b8:	d019      	beq.n	800b0ee <UART_Start_Receive_IT+0x1f2>
 800b0ba:	68fb      	ldr	r3, [r7, #12]
 800b0bc:	681b      	ldr	r3, [r3, #0]
 800b0be:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b0c0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b0c2:	e853 3f00 	ldrex	r3, [r3]
 800b0c6:	627b      	str	r3, [r7, #36]	@ 0x24
 800b0c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b0ca:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
 800b0ce:	677b      	str	r3, [r7, #116]	@ 0x74
 800b0d0:	68fb      	ldr	r3, [r7, #12]
 800b0d2:	681b      	ldr	r3, [r3, #0]
 800b0d4:	461a      	mov	r2, r3
 800b0d6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800b0d8:	637b      	str	r3, [r7, #52]	@ 0x34
 800b0da:	633a      	str	r2, [r7, #48]	@ 0x30
 800b0dc:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800b0de:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800b0e0:	e841 2300 	strex	r3, r2, [r1]
 800b0e4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b0e6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800b0e8:	2b00      	cmp	r3, #0
 800b0ea:	d1e6      	bne.n	800b0ba <UART_Start_Receive_IT+0x1be>
 800b0ec:	e018      	b.n	800b120 <UART_Start_Receive_IT+0x224>
 800b0ee:	68fb      	ldr	r3, [r7, #12]
 800b0f0:	681b      	ldr	r3, [r3, #0]
 800b0f2:	617b      	str	r3, [r7, #20]
 800b0f4:	697b      	ldr	r3, [r7, #20]
 800b0f6:	e853 3f00 	ldrex	r3, [r3]
 800b0fa:	613b      	str	r3, [r7, #16]
 800b0fc:	693b      	ldr	r3, [r7, #16]
 800b0fe:	f043 0320 	orr.w	r3, r3, #32
 800b102:	67bb      	str	r3, [r7, #120]	@ 0x78
 800b104:	68fb      	ldr	r3, [r7, #12]
 800b106:	681b      	ldr	r3, [r3, #0]
 800b108:	461a      	mov	r2, r3
 800b10a:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800b10c:	623b      	str	r3, [r7, #32]
 800b10e:	61fa      	str	r2, [r7, #28]
 800b110:	69f9      	ldr	r1, [r7, #28]
 800b112:	6a3a      	ldr	r2, [r7, #32]
 800b114:	e841 2300 	strex	r3, r2, [r1]
 800b118:	61bb      	str	r3, [r7, #24]
 800b11a:	69bb      	ldr	r3, [r7, #24]
 800b11c:	2b00      	cmp	r3, #0
 800b11e:	d1e6      	bne.n	800b0ee <UART_Start_Receive_IT+0x1f2>
 800b120:	2300      	movs	r3, #0
 800b122:	4618      	mov	r0, r3
 800b124:	378c      	adds	r7, #140	@ 0x8c
 800b126:	46bd      	mov	sp, r7
 800b128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b12c:	4770      	bx	lr
 800b12e:	bf00      	nop
 800b130:	0800b965 	.word	0x0800b965
 800b134:	0800b601 	.word	0x0800b601
 800b138:	0800b449 	.word	0x0800b449
 800b13c:	0800b291 	.word	0x0800b291

0800b140 <UART_EndRxTransfer>:
 800b140:	b480      	push	{r7}
 800b142:	b095      	sub	sp, #84	@ 0x54
 800b144:	af00      	add	r7, sp, #0
 800b146:	6078      	str	r0, [r7, #4]
 800b148:	687b      	ldr	r3, [r7, #4]
 800b14a:	681b      	ldr	r3, [r3, #0]
 800b14c:	637b      	str	r3, [r7, #52]	@ 0x34
 800b14e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b150:	e853 3f00 	ldrex	r3, [r3]
 800b154:	633b      	str	r3, [r7, #48]	@ 0x30
 800b156:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800b158:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800b15c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b15e:	687b      	ldr	r3, [r7, #4]
 800b160:	681b      	ldr	r3, [r3, #0]
 800b162:	461a      	mov	r2, r3
 800b164:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b166:	643b      	str	r3, [r7, #64]	@ 0x40
 800b168:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800b16a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800b16c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800b16e:	e841 2300 	strex	r3, r2, [r1]
 800b172:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b174:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b176:	2b00      	cmp	r3, #0
 800b178:	d1e6      	bne.n	800b148 <UART_EndRxTransfer+0x8>
 800b17a:	687b      	ldr	r3, [r7, #4]
 800b17c:	681b      	ldr	r3, [r3, #0]
 800b17e:	3308      	adds	r3, #8
 800b180:	623b      	str	r3, [r7, #32]
 800b182:	6a3b      	ldr	r3, [r7, #32]
 800b184:	e853 3f00 	ldrex	r3, [r3]
 800b188:	61fb      	str	r3, [r7, #28]
 800b18a:	69fb      	ldr	r3, [r7, #28]
 800b18c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800b190:	f023 0301 	bic.w	r3, r3, #1
 800b194:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b196:	687b      	ldr	r3, [r7, #4]
 800b198:	681b      	ldr	r3, [r3, #0]
 800b19a:	3308      	adds	r3, #8
 800b19c:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b19e:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800b1a0:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b1a2:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800b1a4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b1a6:	e841 2300 	strex	r3, r2, [r1]
 800b1aa:	627b      	str	r3, [r7, #36]	@ 0x24
 800b1ac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d1e3      	bne.n	800b17a <UART_EndRxTransfer+0x3a>
 800b1b2:	687b      	ldr	r3, [r7, #4]
 800b1b4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b1b6:	2b01      	cmp	r3, #1
 800b1b8:	d118      	bne.n	800b1ec <UART_EndRxTransfer+0xac>
 800b1ba:	687b      	ldr	r3, [r7, #4]
 800b1bc:	681b      	ldr	r3, [r3, #0]
 800b1be:	60fb      	str	r3, [r7, #12]
 800b1c0:	68fb      	ldr	r3, [r7, #12]
 800b1c2:	e853 3f00 	ldrex	r3, [r3]
 800b1c6:	60bb      	str	r3, [r7, #8]
 800b1c8:	68bb      	ldr	r3, [r7, #8]
 800b1ca:	f023 0310 	bic.w	r3, r3, #16
 800b1ce:	647b      	str	r3, [r7, #68]	@ 0x44
 800b1d0:	687b      	ldr	r3, [r7, #4]
 800b1d2:	681b      	ldr	r3, [r3, #0]
 800b1d4:	461a      	mov	r2, r3
 800b1d6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b1d8:	61bb      	str	r3, [r7, #24]
 800b1da:	617a      	str	r2, [r7, #20]
 800b1dc:	6979      	ldr	r1, [r7, #20]
 800b1de:	69ba      	ldr	r2, [r7, #24]
 800b1e0:	e841 2300 	strex	r3, r2, [r1]
 800b1e4:	613b      	str	r3, [r7, #16]
 800b1e6:	693b      	ldr	r3, [r7, #16]
 800b1e8:	2b00      	cmp	r3, #0
 800b1ea:	d1e6      	bne.n	800b1ba <UART_EndRxTransfer+0x7a>
 800b1ec:	687b      	ldr	r3, [r7, #4]
 800b1ee:	2220      	movs	r2, #32
 800b1f0:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800b1f4:	687b      	ldr	r3, [r7, #4]
 800b1f6:	2200      	movs	r2, #0
 800b1f8:	66da      	str	r2, [r3, #108]	@ 0x6c
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	2200      	movs	r2, #0
 800b1fe:	675a      	str	r2, [r3, #116]	@ 0x74
 800b200:	bf00      	nop
 800b202:	3754      	adds	r7, #84	@ 0x54
 800b204:	46bd      	mov	sp, r7
 800b206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b20a:	4770      	bx	lr

0800b20c <UART_DMAAbortOnError>:
 800b20c:	b580      	push	{r7, lr}
 800b20e:	b084      	sub	sp, #16
 800b210:	af00      	add	r7, sp, #0
 800b212:	6078      	str	r0, [r7, #4]
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800b218:	60fb      	str	r3, [r7, #12]
 800b21a:	68fb      	ldr	r3, [r7, #12]
 800b21c:	2200      	movs	r2, #0
 800b21e:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b222:	68fb      	ldr	r3, [r7, #12]
 800b224:	2200      	movs	r2, #0
 800b226:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 800b22a:	68f8      	ldr	r0, [r7, #12]
 800b22c:	f7ff f99a 	bl	800a564 <HAL_UART_ErrorCallback>
 800b230:	bf00      	nop
 800b232:	3710      	adds	r7, #16
 800b234:	46bd      	mov	sp, r7
 800b236:	bd80      	pop	{r7, pc}

0800b238 <UART_EndTransmit_IT>:
 800b238:	b580      	push	{r7, lr}
 800b23a:	b088      	sub	sp, #32
 800b23c:	af00      	add	r7, sp, #0
 800b23e:	6078      	str	r0, [r7, #4]
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	681b      	ldr	r3, [r3, #0]
 800b244:	60fb      	str	r3, [r7, #12]
 800b246:	68fb      	ldr	r3, [r7, #12]
 800b248:	e853 3f00 	ldrex	r3, [r3]
 800b24c:	60bb      	str	r3, [r7, #8]
 800b24e:	68bb      	ldr	r3, [r7, #8]
 800b250:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800b254:	61fb      	str	r3, [r7, #28]
 800b256:	687b      	ldr	r3, [r7, #4]
 800b258:	681b      	ldr	r3, [r3, #0]
 800b25a:	461a      	mov	r2, r3
 800b25c:	69fb      	ldr	r3, [r7, #28]
 800b25e:	61bb      	str	r3, [r7, #24]
 800b260:	617a      	str	r2, [r7, #20]
 800b262:	6979      	ldr	r1, [r7, #20]
 800b264:	69ba      	ldr	r2, [r7, #24]
 800b266:	e841 2300 	strex	r3, r2, [r1]
 800b26a:	613b      	str	r3, [r7, #16]
 800b26c:	693b      	ldr	r3, [r7, #16]
 800b26e:	2b00      	cmp	r3, #0
 800b270:	d1e6      	bne.n	800b240 <UART_EndTransmit_IT+0x8>
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	2220      	movs	r2, #32
 800b276:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	2200      	movs	r2, #0
 800b27e:	679a      	str	r2, [r3, #120]	@ 0x78
 800b280:	6878      	ldr	r0, [r7, #4]
 800b282:	f7ff f965 	bl	800a550 <HAL_UART_TxCpltCallback>
 800b286:	bf00      	nop
 800b288:	3720      	adds	r7, #32
 800b28a:	46bd      	mov	sp, r7
 800b28c:	bd80      	pop	{r7, pc}
	...

0800b290 <UART_RxISR_8BIT>:
 800b290:	b580      	push	{r7, lr}
 800b292:	b09c      	sub	sp, #112	@ 0x70
 800b294:	af00      	add	r7, sp, #0
 800b296:	6078      	str	r0, [r7, #4]
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800b29e:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 800b2a2:	687b      	ldr	r3, [r7, #4]
 800b2a4:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b2a8:	2b22      	cmp	r3, #34	@ 0x22
 800b2aa:	f040 80be 	bne.w	800b42a <UART_RxISR_8BIT+0x19a>
 800b2ae:	687b      	ldr	r3, [r7, #4]
 800b2b0:	681b      	ldr	r3, [r3, #0]
 800b2b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b2b4:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 800b2b8:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 800b2bc:	b2d9      	uxtb	r1, r3
 800b2be:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 800b2c2:	b2da      	uxtb	r2, r3
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b2c8:	400a      	ands	r2, r1
 800b2ca:	b2d2      	uxtb	r2, r2
 800b2cc:	701a      	strb	r2, [r3, #0]
 800b2ce:	687b      	ldr	r3, [r7, #4]
 800b2d0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b2d2:	1c5a      	adds	r2, r3, #1
 800b2d4:	687b      	ldr	r3, [r7, #4]
 800b2d6:	659a      	str	r2, [r3, #88]	@ 0x58
 800b2d8:	687b      	ldr	r3, [r7, #4]
 800b2da:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b2de:	b29b      	uxth	r3, r3
 800b2e0:	3b01      	subs	r3, #1
 800b2e2:	b29a      	uxth	r2, r3
 800b2e4:	687b      	ldr	r3, [r7, #4]
 800b2e6:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b2ea:	687b      	ldr	r3, [r7, #4]
 800b2ec:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b2f0:	b29b      	uxth	r3, r3
 800b2f2:	2b00      	cmp	r3, #0
 800b2f4:	f040 80a1 	bne.w	800b43a <UART_RxISR_8BIT+0x1aa>
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	681b      	ldr	r3, [r3, #0]
 800b2fc:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b2fe:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b300:	e853 3f00 	ldrex	r3, [r3]
 800b304:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b306:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800b308:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800b30c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800b30e:	687b      	ldr	r3, [r7, #4]
 800b310:	681b      	ldr	r3, [r3, #0]
 800b312:	461a      	mov	r2, r3
 800b314:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800b316:	65bb      	str	r3, [r7, #88]	@ 0x58
 800b318:	657a      	str	r2, [r7, #84]	@ 0x54
 800b31a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800b31c:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800b31e:	e841 2300 	strex	r3, r2, [r1]
 800b322:	653b      	str	r3, [r7, #80]	@ 0x50
 800b324:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800b326:	2b00      	cmp	r3, #0
 800b328:	d1e6      	bne.n	800b2f8 <UART_RxISR_8BIT+0x68>
 800b32a:	687b      	ldr	r3, [r7, #4]
 800b32c:	681b      	ldr	r3, [r3, #0]
 800b32e:	3308      	adds	r3, #8
 800b330:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b332:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b334:	e853 3f00 	ldrex	r3, [r3]
 800b338:	637b      	str	r3, [r7, #52]	@ 0x34
 800b33a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b33c:	f023 0301 	bic.w	r3, r3, #1
 800b340:	667b      	str	r3, [r7, #100]	@ 0x64
 800b342:	687b      	ldr	r3, [r7, #4]
 800b344:	681b      	ldr	r3, [r3, #0]
 800b346:	3308      	adds	r3, #8
 800b348:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 800b34a:	647a      	str	r2, [r7, #68]	@ 0x44
 800b34c:	643b      	str	r3, [r7, #64]	@ 0x40
 800b34e:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800b350:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800b352:	e841 2300 	strex	r3, r2, [r1]
 800b356:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800b358:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b35a:	2b00      	cmp	r3, #0
 800b35c:	d1e5      	bne.n	800b32a <UART_RxISR_8BIT+0x9a>
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	2220      	movs	r2, #32
 800b362:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800b366:	687b      	ldr	r3, [r7, #4]
 800b368:	2200      	movs	r2, #0
 800b36a:	675a      	str	r2, [r3, #116]	@ 0x74
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	2200      	movs	r2, #0
 800b370:	671a      	str	r2, [r3, #112]	@ 0x70
 800b372:	687b      	ldr	r3, [r7, #4]
 800b374:	681b      	ldr	r3, [r3, #0]
 800b376:	4a33      	ldr	r2, [pc, #204]	@ (800b444 <UART_RxISR_8BIT+0x1b4>)
 800b378:	4293      	cmp	r3, r2
 800b37a:	d01f      	beq.n	800b3bc <UART_RxISR_8BIT+0x12c>
 800b37c:	687b      	ldr	r3, [r7, #4]
 800b37e:	681b      	ldr	r3, [r3, #0]
 800b380:	685b      	ldr	r3, [r3, #4]
 800b382:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800b386:	2b00      	cmp	r3, #0
 800b388:	d018      	beq.n	800b3bc <UART_RxISR_8BIT+0x12c>
 800b38a:	687b      	ldr	r3, [r7, #4]
 800b38c:	681b      	ldr	r3, [r3, #0]
 800b38e:	627b      	str	r3, [r7, #36]	@ 0x24
 800b390:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b392:	e853 3f00 	ldrex	r3, [r3]
 800b396:	623b      	str	r3, [r7, #32]
 800b398:	6a3b      	ldr	r3, [r7, #32]
 800b39a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800b39e:	663b      	str	r3, [r7, #96]	@ 0x60
 800b3a0:	687b      	ldr	r3, [r7, #4]
 800b3a2:	681b      	ldr	r3, [r3, #0]
 800b3a4:	461a      	mov	r2, r3
 800b3a6:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800b3a8:	633b      	str	r3, [r7, #48]	@ 0x30
 800b3aa:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800b3ac:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800b3ae:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800b3b0:	e841 2300 	strex	r3, r2, [r1]
 800b3b4:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b3b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b3b8:	2b00      	cmp	r3, #0
 800b3ba:	d1e6      	bne.n	800b38a <UART_RxISR_8BIT+0xfa>
 800b3bc:	687b      	ldr	r3, [r7, #4]
 800b3be:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b3c0:	2b01      	cmp	r3, #1
 800b3c2:	d12e      	bne.n	800b422 <UART_RxISR_8BIT+0x192>
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	2200      	movs	r2, #0
 800b3c8:	66da      	str	r2, [r3, #108]	@ 0x6c
 800b3ca:	687b      	ldr	r3, [r7, #4]
 800b3cc:	681b      	ldr	r3, [r3, #0]
 800b3ce:	613b      	str	r3, [r7, #16]
 800b3d0:	693b      	ldr	r3, [r7, #16]
 800b3d2:	e853 3f00 	ldrex	r3, [r3]
 800b3d6:	60fb      	str	r3, [r7, #12]
 800b3d8:	68fb      	ldr	r3, [r7, #12]
 800b3da:	f023 0310 	bic.w	r3, r3, #16
 800b3de:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	681b      	ldr	r3, [r3, #0]
 800b3e4:	461a      	mov	r2, r3
 800b3e6:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800b3e8:	61fb      	str	r3, [r7, #28]
 800b3ea:	61ba      	str	r2, [r7, #24]
 800b3ec:	69b9      	ldr	r1, [r7, #24]
 800b3ee:	69fa      	ldr	r2, [r7, #28]
 800b3f0:	e841 2300 	strex	r3, r2, [r1]
 800b3f4:	617b      	str	r3, [r7, #20]
 800b3f6:	697b      	ldr	r3, [r7, #20]
 800b3f8:	2b00      	cmp	r3, #0
 800b3fa:	d1e6      	bne.n	800b3ca <UART_RxISR_8BIT+0x13a>
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	69db      	ldr	r3, [r3, #28]
 800b402:	f003 0310 	and.w	r3, r3, #16
 800b406:	2b10      	cmp	r3, #16
 800b408:	d103      	bne.n	800b412 <UART_RxISR_8BIT+0x182>
 800b40a:	687b      	ldr	r3, [r7, #4]
 800b40c:	681b      	ldr	r3, [r3, #0]
 800b40e:	2210      	movs	r2, #16
 800b410:	621a      	str	r2, [r3, #32]
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800b418:	4619      	mov	r1, r3
 800b41a:	6878      	ldr	r0, [r7, #4]
 800b41c:	f7ff f8ac 	bl	800a578 <HAL_UARTEx_RxEventCallback>
 800b420:	e00b      	b.n	800b43a <UART_RxISR_8BIT+0x1aa>
 800b422:	6878      	ldr	r0, [r7, #4]
 800b424:	f7f5 ff82 	bl	800132c <HAL_UART_RxCpltCallback>
 800b428:	e007      	b.n	800b43a <UART_RxISR_8BIT+0x1aa>
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	681b      	ldr	r3, [r3, #0]
 800b42e:	699a      	ldr	r2, [r3, #24]
 800b430:	687b      	ldr	r3, [r7, #4]
 800b432:	681b      	ldr	r3, [r3, #0]
 800b434:	f042 0208 	orr.w	r2, r2, #8
 800b438:	619a      	str	r2, [r3, #24]
 800b43a:	bf00      	nop
 800b43c:	3770      	adds	r7, #112	@ 0x70
 800b43e:	46bd      	mov	sp, r7
 800b440:	bd80      	pop	{r7, pc}
 800b442:	bf00      	nop
 800b444:	40008000 	.word	0x40008000

0800b448 <UART_RxISR_16BIT>:
 800b448:	b580      	push	{r7, lr}
 800b44a:	b09c      	sub	sp, #112	@ 0x70
 800b44c:	af00      	add	r7, sp, #0
 800b44e:	6078      	str	r0, [r7, #4]
 800b450:	687b      	ldr	r3, [r7, #4]
 800b452:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800b456:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b460:	2b22      	cmp	r3, #34	@ 0x22
 800b462:	f040 80be 	bne.w	800b5e2 <UART_RxISR_16BIT+0x19a>
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	681b      	ldr	r3, [r3, #0]
 800b46a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b46c:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 800b470:	687b      	ldr	r3, [r7, #4]
 800b472:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b474:	66bb      	str	r3, [r7, #104]	@ 0x68
 800b476:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 800b47a:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 800b47e:	4013      	ands	r3, r2
 800b480:	b29a      	uxth	r2, r3
 800b482:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800b484:	801a      	strh	r2, [r3, #0]
 800b486:	687b      	ldr	r3, [r7, #4]
 800b488:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b48a:	1c9a      	adds	r2, r3, #2
 800b48c:	687b      	ldr	r3, [r7, #4]
 800b48e:	659a      	str	r2, [r3, #88]	@ 0x58
 800b490:	687b      	ldr	r3, [r7, #4]
 800b492:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b496:	b29b      	uxth	r3, r3
 800b498:	3b01      	subs	r3, #1
 800b49a:	b29a      	uxth	r2, r3
 800b49c:	687b      	ldr	r3, [r7, #4]
 800b49e:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b4a8:	b29b      	uxth	r3, r3
 800b4aa:	2b00      	cmp	r3, #0
 800b4ac:	f040 80a1 	bne.w	800b5f2 <UART_RxISR_16BIT+0x1aa>
 800b4b0:	687b      	ldr	r3, [r7, #4]
 800b4b2:	681b      	ldr	r3, [r3, #0]
 800b4b4:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b4b6:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800b4b8:	e853 3f00 	ldrex	r3, [r3]
 800b4bc:	647b      	str	r3, [r7, #68]	@ 0x44
 800b4be:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b4c0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800b4c4:	667b      	str	r3, [r7, #100]	@ 0x64
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	681b      	ldr	r3, [r3, #0]
 800b4ca:	461a      	mov	r2, r3
 800b4cc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800b4ce:	657b      	str	r3, [r7, #84]	@ 0x54
 800b4d0:	653a      	str	r2, [r7, #80]	@ 0x50
 800b4d2:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800b4d4:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800b4d6:	e841 2300 	strex	r3, r2, [r1]
 800b4da:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b4dc:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b4de:	2b00      	cmp	r3, #0
 800b4e0:	d1e6      	bne.n	800b4b0 <UART_RxISR_16BIT+0x68>
 800b4e2:	687b      	ldr	r3, [r7, #4]
 800b4e4:	681b      	ldr	r3, [r3, #0]
 800b4e6:	3308      	adds	r3, #8
 800b4e8:	637b      	str	r3, [r7, #52]	@ 0x34
 800b4ea:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b4ec:	e853 3f00 	ldrex	r3, [r3]
 800b4f0:	633b      	str	r3, [r7, #48]	@ 0x30
 800b4f2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800b4f4:	f023 0301 	bic.w	r3, r3, #1
 800b4f8:	663b      	str	r3, [r7, #96]	@ 0x60
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	681b      	ldr	r3, [r3, #0]
 800b4fe:	3308      	adds	r3, #8
 800b500:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800b502:	643a      	str	r2, [r7, #64]	@ 0x40
 800b504:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800b506:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800b508:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800b50a:	e841 2300 	strex	r3, r2, [r1]
 800b50e:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b510:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b512:	2b00      	cmp	r3, #0
 800b514:	d1e5      	bne.n	800b4e2 <UART_RxISR_16BIT+0x9a>
 800b516:	687b      	ldr	r3, [r7, #4]
 800b518:	2220      	movs	r2, #32
 800b51a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800b51e:	687b      	ldr	r3, [r7, #4]
 800b520:	2200      	movs	r2, #0
 800b522:	675a      	str	r2, [r3, #116]	@ 0x74
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	2200      	movs	r2, #0
 800b528:	671a      	str	r2, [r3, #112]	@ 0x70
 800b52a:	687b      	ldr	r3, [r7, #4]
 800b52c:	681b      	ldr	r3, [r3, #0]
 800b52e:	4a33      	ldr	r2, [pc, #204]	@ (800b5fc <UART_RxISR_16BIT+0x1b4>)
 800b530:	4293      	cmp	r3, r2
 800b532:	d01f      	beq.n	800b574 <UART_RxISR_16BIT+0x12c>
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	681b      	ldr	r3, [r3, #0]
 800b538:	685b      	ldr	r3, [r3, #4]
 800b53a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800b53e:	2b00      	cmp	r3, #0
 800b540:	d018      	beq.n	800b574 <UART_RxISR_16BIT+0x12c>
 800b542:	687b      	ldr	r3, [r7, #4]
 800b544:	681b      	ldr	r3, [r3, #0]
 800b546:	623b      	str	r3, [r7, #32]
 800b548:	6a3b      	ldr	r3, [r7, #32]
 800b54a:	e853 3f00 	ldrex	r3, [r3]
 800b54e:	61fb      	str	r3, [r7, #28]
 800b550:	69fb      	ldr	r3, [r7, #28]
 800b552:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800b556:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800b558:	687b      	ldr	r3, [r7, #4]
 800b55a:	681b      	ldr	r3, [r3, #0]
 800b55c:	461a      	mov	r2, r3
 800b55e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800b560:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b562:	62ba      	str	r2, [r7, #40]	@ 0x28
 800b564:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800b566:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b568:	e841 2300 	strex	r3, r2, [r1]
 800b56c:	627b      	str	r3, [r7, #36]	@ 0x24
 800b56e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b570:	2b00      	cmp	r3, #0
 800b572:	d1e6      	bne.n	800b542 <UART_RxISR_16BIT+0xfa>
 800b574:	687b      	ldr	r3, [r7, #4]
 800b576:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b578:	2b01      	cmp	r3, #1
 800b57a:	d12e      	bne.n	800b5da <UART_RxISR_16BIT+0x192>
 800b57c:	687b      	ldr	r3, [r7, #4]
 800b57e:	2200      	movs	r2, #0
 800b580:	66da      	str	r2, [r3, #108]	@ 0x6c
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	681b      	ldr	r3, [r3, #0]
 800b586:	60fb      	str	r3, [r7, #12]
 800b588:	68fb      	ldr	r3, [r7, #12]
 800b58a:	e853 3f00 	ldrex	r3, [r3]
 800b58e:	60bb      	str	r3, [r7, #8]
 800b590:	68bb      	ldr	r3, [r7, #8]
 800b592:	f023 0310 	bic.w	r3, r3, #16
 800b596:	65bb      	str	r3, [r7, #88]	@ 0x58
 800b598:	687b      	ldr	r3, [r7, #4]
 800b59a:	681b      	ldr	r3, [r3, #0]
 800b59c:	461a      	mov	r2, r3
 800b59e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800b5a0:	61bb      	str	r3, [r7, #24]
 800b5a2:	617a      	str	r2, [r7, #20]
 800b5a4:	6979      	ldr	r1, [r7, #20]
 800b5a6:	69ba      	ldr	r2, [r7, #24]
 800b5a8:	e841 2300 	strex	r3, r2, [r1]
 800b5ac:	613b      	str	r3, [r7, #16]
 800b5ae:	693b      	ldr	r3, [r7, #16]
 800b5b0:	2b00      	cmp	r3, #0
 800b5b2:	d1e6      	bne.n	800b582 <UART_RxISR_16BIT+0x13a>
 800b5b4:	687b      	ldr	r3, [r7, #4]
 800b5b6:	681b      	ldr	r3, [r3, #0]
 800b5b8:	69db      	ldr	r3, [r3, #28]
 800b5ba:	f003 0310 	and.w	r3, r3, #16
 800b5be:	2b10      	cmp	r3, #16
 800b5c0:	d103      	bne.n	800b5ca <UART_RxISR_16BIT+0x182>
 800b5c2:	687b      	ldr	r3, [r7, #4]
 800b5c4:	681b      	ldr	r3, [r3, #0]
 800b5c6:	2210      	movs	r2, #16
 800b5c8:	621a      	str	r2, [r3, #32]
 800b5ca:	687b      	ldr	r3, [r7, #4]
 800b5cc:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800b5d0:	4619      	mov	r1, r3
 800b5d2:	6878      	ldr	r0, [r7, #4]
 800b5d4:	f7fe ffd0 	bl	800a578 <HAL_UARTEx_RxEventCallback>
 800b5d8:	e00b      	b.n	800b5f2 <UART_RxISR_16BIT+0x1aa>
 800b5da:	6878      	ldr	r0, [r7, #4]
 800b5dc:	f7f5 fea6 	bl	800132c <HAL_UART_RxCpltCallback>
 800b5e0:	e007      	b.n	800b5f2 <UART_RxISR_16BIT+0x1aa>
 800b5e2:	687b      	ldr	r3, [r7, #4]
 800b5e4:	681b      	ldr	r3, [r3, #0]
 800b5e6:	699a      	ldr	r2, [r3, #24]
 800b5e8:	687b      	ldr	r3, [r7, #4]
 800b5ea:	681b      	ldr	r3, [r3, #0]
 800b5ec:	f042 0208 	orr.w	r2, r2, #8
 800b5f0:	619a      	str	r2, [r3, #24]
 800b5f2:	bf00      	nop
 800b5f4:	3770      	adds	r7, #112	@ 0x70
 800b5f6:	46bd      	mov	sp, r7
 800b5f8:	bd80      	pop	{r7, pc}
 800b5fa:	bf00      	nop
 800b5fc:	40008000 	.word	0x40008000

0800b600 <UART_RxISR_8BIT_FIFOEN>:
 800b600:	b580      	push	{r7, lr}
 800b602:	b0ac      	sub	sp, #176	@ 0xb0
 800b604:	af00      	add	r7, sp, #0
 800b606:	6078      	str	r0, [r7, #4]
 800b608:	687b      	ldr	r3, [r7, #4]
 800b60a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800b60e:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
 800b612:	687b      	ldr	r3, [r7, #4]
 800b614:	681b      	ldr	r3, [r3, #0]
 800b616:	69db      	ldr	r3, [r3, #28]
 800b618:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800b61c:	687b      	ldr	r3, [r7, #4]
 800b61e:	681b      	ldr	r3, [r3, #0]
 800b620:	681b      	ldr	r3, [r3, #0]
 800b622:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800b626:	687b      	ldr	r3, [r7, #4]
 800b628:	681b      	ldr	r3, [r3, #0]
 800b62a:	689b      	ldr	r3, [r3, #8]
 800b62c:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800b630:	687b      	ldr	r3, [r7, #4]
 800b632:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b636:	2b22      	cmp	r3, #34	@ 0x22
 800b638:	f040 8183 	bne.w	800b942 <UART_RxISR_8BIT_FIFOEN+0x342>
 800b63c:	687b      	ldr	r3, [r7, #4]
 800b63e:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800b642:	f8a7 309e 	strh.w	r3, [r7, #158]	@ 0x9e
 800b646:	e126      	b.n	800b896 <UART_RxISR_8BIT_FIFOEN+0x296>
 800b648:	687b      	ldr	r3, [r7, #4]
 800b64a:	681b      	ldr	r3, [r3, #0]
 800b64c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b64e:	f8a7 309c 	strh.w	r3, [r7, #156]	@ 0x9c
 800b652:	f8b7 309c 	ldrh.w	r3, [r7, #156]	@ 0x9c
 800b656:	b2d9      	uxtb	r1, r3
 800b658:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	@ 0xaa
 800b65c:	b2da      	uxtb	r2, r3
 800b65e:	687b      	ldr	r3, [r7, #4]
 800b660:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b662:	400a      	ands	r2, r1
 800b664:	b2d2      	uxtb	r2, r2
 800b666:	701a      	strb	r2, [r3, #0]
 800b668:	687b      	ldr	r3, [r7, #4]
 800b66a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b66c:	1c5a      	adds	r2, r3, #1
 800b66e:	687b      	ldr	r3, [r7, #4]
 800b670:	659a      	str	r2, [r3, #88]	@ 0x58
 800b672:	687b      	ldr	r3, [r7, #4]
 800b674:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b678:	b29b      	uxth	r3, r3
 800b67a:	3b01      	subs	r3, #1
 800b67c:	b29a      	uxth	r2, r3
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b684:	687b      	ldr	r3, [r7, #4]
 800b686:	681b      	ldr	r3, [r3, #0]
 800b688:	69db      	ldr	r3, [r3, #28]
 800b68a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800b68e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b692:	f003 0307 	and.w	r3, r3, #7
 800b696:	2b00      	cmp	r3, #0
 800b698:	d053      	beq.n	800b742 <UART_RxISR_8BIT_FIFOEN+0x142>
 800b69a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b69e:	f003 0301 	and.w	r3, r3, #1
 800b6a2:	2b00      	cmp	r3, #0
 800b6a4:	d011      	beq.n	800b6ca <UART_RxISR_8BIT_FIFOEN+0xca>
 800b6a6:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800b6aa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800b6ae:	2b00      	cmp	r3, #0
 800b6b0:	d00b      	beq.n	800b6ca <UART_RxISR_8BIT_FIFOEN+0xca>
 800b6b2:	687b      	ldr	r3, [r7, #4]
 800b6b4:	681b      	ldr	r3, [r3, #0]
 800b6b6:	2201      	movs	r2, #1
 800b6b8:	621a      	str	r2, [r3, #32]
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800b6c0:	f043 0201 	orr.w	r2, r3, #1
 800b6c4:	687b      	ldr	r3, [r7, #4]
 800b6c6:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800b6ca:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b6ce:	f003 0302 	and.w	r3, r3, #2
 800b6d2:	2b00      	cmp	r3, #0
 800b6d4:	d011      	beq.n	800b6fa <UART_RxISR_8BIT_FIFOEN+0xfa>
 800b6d6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800b6da:	f003 0301 	and.w	r3, r3, #1
 800b6de:	2b00      	cmp	r3, #0
 800b6e0:	d00b      	beq.n	800b6fa <UART_RxISR_8BIT_FIFOEN+0xfa>
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	681b      	ldr	r3, [r3, #0]
 800b6e6:	2202      	movs	r2, #2
 800b6e8:	621a      	str	r2, [r3, #32]
 800b6ea:	687b      	ldr	r3, [r7, #4]
 800b6ec:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800b6f0:	f043 0204 	orr.w	r2, r3, #4
 800b6f4:	687b      	ldr	r3, [r7, #4]
 800b6f6:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800b6fa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b6fe:	f003 0304 	and.w	r3, r3, #4
 800b702:	2b00      	cmp	r3, #0
 800b704:	d011      	beq.n	800b72a <UART_RxISR_8BIT_FIFOEN+0x12a>
 800b706:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800b70a:	f003 0301 	and.w	r3, r3, #1
 800b70e:	2b00      	cmp	r3, #0
 800b710:	d00b      	beq.n	800b72a <UART_RxISR_8BIT_FIFOEN+0x12a>
 800b712:	687b      	ldr	r3, [r7, #4]
 800b714:	681b      	ldr	r3, [r3, #0]
 800b716:	2204      	movs	r2, #4
 800b718:	621a      	str	r2, [r3, #32]
 800b71a:	687b      	ldr	r3, [r7, #4]
 800b71c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800b720:	f043 0202 	orr.w	r2, r3, #2
 800b724:	687b      	ldr	r3, [r7, #4]
 800b726:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800b72a:	687b      	ldr	r3, [r7, #4]
 800b72c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800b730:	2b00      	cmp	r3, #0
 800b732:	d006      	beq.n	800b742 <UART_RxISR_8BIT_FIFOEN+0x142>
 800b734:	6878      	ldr	r0, [r7, #4]
 800b736:	f7fe ff15 	bl	800a564 <HAL_UART_ErrorCallback>
 800b73a:	687b      	ldr	r3, [r7, #4]
 800b73c:	2200      	movs	r2, #0
 800b73e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800b742:	687b      	ldr	r3, [r7, #4]
 800b744:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b748:	b29b      	uxth	r3, r3
 800b74a:	2b00      	cmp	r3, #0
 800b74c:	f040 80a3 	bne.w	800b896 <UART_RxISR_8BIT_FIFOEN+0x296>
 800b750:	687b      	ldr	r3, [r7, #4]
 800b752:	681b      	ldr	r3, [r3, #0]
 800b754:	673b      	str	r3, [r7, #112]	@ 0x70
 800b756:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800b758:	e853 3f00 	ldrex	r3, [r3]
 800b75c:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800b75e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b760:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800b764:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800b768:	687b      	ldr	r3, [r7, #4]
 800b76a:	681b      	ldr	r3, [r3, #0]
 800b76c:	461a      	mov	r2, r3
 800b76e:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800b772:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800b774:	67ba      	str	r2, [r7, #120]	@ 0x78
 800b776:	6fb9      	ldr	r1, [r7, #120]	@ 0x78
 800b778:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800b77a:	e841 2300 	strex	r3, r2, [r1]
 800b77e:	677b      	str	r3, [r7, #116]	@ 0x74
 800b780:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800b782:	2b00      	cmp	r3, #0
 800b784:	d1e4      	bne.n	800b750 <UART_RxISR_8BIT_FIFOEN+0x150>
 800b786:	687b      	ldr	r3, [r7, #4]
 800b788:	681b      	ldr	r3, [r3, #0]
 800b78a:	3308      	adds	r3, #8
 800b78c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800b78e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800b790:	e853 3f00 	ldrex	r3, [r3]
 800b794:	65bb      	str	r3, [r7, #88]	@ 0x58
 800b796:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800b798:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800b79c:	f023 0301 	bic.w	r3, r3, #1
 800b7a0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	681b      	ldr	r3, [r3, #0]
 800b7a8:	3308      	adds	r3, #8
 800b7aa:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800b7ae:	66ba      	str	r2, [r7, #104]	@ 0x68
 800b7b0:	667b      	str	r3, [r7, #100]	@ 0x64
 800b7b2:	6e79      	ldr	r1, [r7, #100]	@ 0x64
 800b7b4:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 800b7b6:	e841 2300 	strex	r3, r2, [r1]
 800b7ba:	663b      	str	r3, [r7, #96]	@ 0x60
 800b7bc:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800b7be:	2b00      	cmp	r3, #0
 800b7c0:	d1e1      	bne.n	800b786 <UART_RxISR_8BIT_FIFOEN+0x186>
 800b7c2:	687b      	ldr	r3, [r7, #4]
 800b7c4:	2220      	movs	r2, #32
 800b7c6:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800b7ca:	687b      	ldr	r3, [r7, #4]
 800b7cc:	2200      	movs	r2, #0
 800b7ce:	675a      	str	r2, [r3, #116]	@ 0x74
 800b7d0:	687b      	ldr	r3, [r7, #4]
 800b7d2:	2200      	movs	r2, #0
 800b7d4:	671a      	str	r2, [r3, #112]	@ 0x70
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	681b      	ldr	r3, [r3, #0]
 800b7da:	4a60      	ldr	r2, [pc, #384]	@ (800b95c <UART_RxISR_8BIT_FIFOEN+0x35c>)
 800b7dc:	4293      	cmp	r3, r2
 800b7de:	d021      	beq.n	800b824 <UART_RxISR_8BIT_FIFOEN+0x224>
 800b7e0:	687b      	ldr	r3, [r7, #4]
 800b7e2:	681b      	ldr	r3, [r3, #0]
 800b7e4:	685b      	ldr	r3, [r3, #4]
 800b7e6:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800b7ea:	2b00      	cmp	r3, #0
 800b7ec:	d01a      	beq.n	800b824 <UART_RxISR_8BIT_FIFOEN+0x224>
 800b7ee:	687b      	ldr	r3, [r7, #4]
 800b7f0:	681b      	ldr	r3, [r3, #0]
 800b7f2:	64bb      	str	r3, [r7, #72]	@ 0x48
 800b7f4:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800b7f6:	e853 3f00 	ldrex	r3, [r3]
 800b7fa:	647b      	str	r3, [r7, #68]	@ 0x44
 800b7fc:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800b7fe:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800b802:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800b806:	687b      	ldr	r3, [r7, #4]
 800b808:	681b      	ldr	r3, [r3, #0]
 800b80a:	461a      	mov	r2, r3
 800b80c:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b810:	657b      	str	r3, [r7, #84]	@ 0x54
 800b812:	653a      	str	r2, [r7, #80]	@ 0x50
 800b814:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800b816:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800b818:	e841 2300 	strex	r3, r2, [r1]
 800b81c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800b81e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800b820:	2b00      	cmp	r3, #0
 800b822:	d1e4      	bne.n	800b7ee <UART_RxISR_8BIT_FIFOEN+0x1ee>
 800b824:	687b      	ldr	r3, [r7, #4]
 800b826:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800b828:	2b01      	cmp	r3, #1
 800b82a:	d130      	bne.n	800b88e <UART_RxISR_8BIT_FIFOEN+0x28e>
 800b82c:	687b      	ldr	r3, [r7, #4]
 800b82e:	2200      	movs	r2, #0
 800b830:	66da      	str	r2, [r3, #108]	@ 0x6c
 800b832:	687b      	ldr	r3, [r7, #4]
 800b834:	681b      	ldr	r3, [r3, #0]
 800b836:	637b      	str	r3, [r7, #52]	@ 0x34
 800b838:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800b83a:	e853 3f00 	ldrex	r3, [r3]
 800b83e:	633b      	str	r3, [r7, #48]	@ 0x30
 800b840:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800b842:	f023 0310 	bic.w	r3, r3, #16
 800b846:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	681b      	ldr	r3, [r3, #0]
 800b84e:	461a      	mov	r2, r3
 800b850:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800b854:	643b      	str	r3, [r7, #64]	@ 0x40
 800b856:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800b858:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800b85a:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800b85c:	e841 2300 	strex	r3, r2, [r1]
 800b860:	63bb      	str	r3, [r7, #56]	@ 0x38
 800b862:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b864:	2b00      	cmp	r3, #0
 800b866:	d1e4      	bne.n	800b832 <UART_RxISR_8BIT_FIFOEN+0x232>
 800b868:	687b      	ldr	r3, [r7, #4]
 800b86a:	681b      	ldr	r3, [r3, #0]
 800b86c:	69db      	ldr	r3, [r3, #28]
 800b86e:	f003 0310 	and.w	r3, r3, #16
 800b872:	2b10      	cmp	r3, #16
 800b874:	d103      	bne.n	800b87e <UART_RxISR_8BIT_FIFOEN+0x27e>
 800b876:	687b      	ldr	r3, [r7, #4]
 800b878:	681b      	ldr	r3, [r3, #0]
 800b87a:	2210      	movs	r2, #16
 800b87c:	621a      	str	r2, [r3, #32]
 800b87e:	687b      	ldr	r3, [r7, #4]
 800b880:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800b884:	4619      	mov	r1, r3
 800b886:	6878      	ldr	r0, [r7, #4]
 800b888:	f7fe fe76 	bl	800a578 <HAL_UARTEx_RxEventCallback>
 800b88c:	e00e      	b.n	800b8ac <UART_RxISR_8BIT_FIFOEN+0x2ac>
 800b88e:	6878      	ldr	r0, [r7, #4]
 800b890:	f7f5 fd4c 	bl	800132c <HAL_UART_RxCpltCallback>
 800b894:	e00a      	b.n	800b8ac <UART_RxISR_8BIT_FIFOEN+0x2ac>
 800b896:	f8b7 309e 	ldrh.w	r3, [r7, #158]	@ 0x9e
 800b89a:	2b00      	cmp	r3, #0
 800b89c:	d006      	beq.n	800b8ac <UART_RxISR_8BIT_FIFOEN+0x2ac>
 800b89e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b8a2:	f003 0320 	and.w	r3, r3, #32
 800b8a6:	2b00      	cmp	r3, #0
 800b8a8:	f47f aece 	bne.w	800b648 <UART_RxISR_8BIT_FIFOEN+0x48>
 800b8ac:	687b      	ldr	r3, [r7, #4]
 800b8ae:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b8b2:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 800b8b6:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 800b8ba:	2b00      	cmp	r3, #0
 800b8bc:	d049      	beq.n	800b952 <UART_RxISR_8BIT_FIFOEN+0x352>
 800b8be:	687b      	ldr	r3, [r7, #4]
 800b8c0:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800b8c4:	f8b7 208a 	ldrh.w	r2, [r7, #138]	@ 0x8a
 800b8c8:	429a      	cmp	r2, r3
 800b8ca:	d242      	bcs.n	800b952 <UART_RxISR_8BIT_FIFOEN+0x352>
 800b8cc:	687b      	ldr	r3, [r7, #4]
 800b8ce:	681b      	ldr	r3, [r3, #0]
 800b8d0:	3308      	adds	r3, #8
 800b8d2:	623b      	str	r3, [r7, #32]
 800b8d4:	6a3b      	ldr	r3, [r7, #32]
 800b8d6:	e853 3f00 	ldrex	r3, [r3]
 800b8da:	61fb      	str	r3, [r7, #28]
 800b8dc:	69fb      	ldr	r3, [r7, #28]
 800b8de:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800b8e2:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800b8e6:	687b      	ldr	r3, [r7, #4]
 800b8e8:	681b      	ldr	r3, [r3, #0]
 800b8ea:	3308      	adds	r3, #8
 800b8ec:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 800b8f0:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800b8f2:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b8f4:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800b8f6:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800b8f8:	e841 2300 	strex	r3, r2, [r1]
 800b8fc:	627b      	str	r3, [r7, #36]	@ 0x24
 800b8fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b900:	2b00      	cmp	r3, #0
 800b902:	d1e3      	bne.n	800b8cc <UART_RxISR_8BIT_FIFOEN+0x2cc>
 800b904:	687b      	ldr	r3, [r7, #4]
 800b906:	4a16      	ldr	r2, [pc, #88]	@ (800b960 <UART_RxISR_8BIT_FIFOEN+0x360>)
 800b908:	675a      	str	r2, [r3, #116]	@ 0x74
 800b90a:	687b      	ldr	r3, [r7, #4]
 800b90c:	681b      	ldr	r3, [r3, #0]
 800b90e:	60fb      	str	r3, [r7, #12]
 800b910:	68fb      	ldr	r3, [r7, #12]
 800b912:	e853 3f00 	ldrex	r3, [r3]
 800b916:	60bb      	str	r3, [r7, #8]
 800b918:	68bb      	ldr	r3, [r7, #8]
 800b91a:	f043 0320 	orr.w	r3, r3, #32
 800b91e:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	681b      	ldr	r3, [r3, #0]
 800b926:	461a      	mov	r2, r3
 800b928:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800b92c:	61bb      	str	r3, [r7, #24]
 800b92e:	617a      	str	r2, [r7, #20]
 800b930:	6979      	ldr	r1, [r7, #20]
 800b932:	69ba      	ldr	r2, [r7, #24]
 800b934:	e841 2300 	strex	r3, r2, [r1]
 800b938:	613b      	str	r3, [r7, #16]
 800b93a:	693b      	ldr	r3, [r7, #16]
 800b93c:	2b00      	cmp	r3, #0
 800b93e:	d1e4      	bne.n	800b90a <UART_RxISR_8BIT_FIFOEN+0x30a>
 800b940:	e007      	b.n	800b952 <UART_RxISR_8BIT_FIFOEN+0x352>
 800b942:	687b      	ldr	r3, [r7, #4]
 800b944:	681b      	ldr	r3, [r3, #0]
 800b946:	699a      	ldr	r2, [r3, #24]
 800b948:	687b      	ldr	r3, [r7, #4]
 800b94a:	681b      	ldr	r3, [r3, #0]
 800b94c:	f042 0208 	orr.w	r2, r2, #8
 800b950:	619a      	str	r2, [r3, #24]
 800b952:	bf00      	nop
 800b954:	37b0      	adds	r7, #176	@ 0xb0
 800b956:	46bd      	mov	sp, r7
 800b958:	bd80      	pop	{r7, pc}
 800b95a:	bf00      	nop
 800b95c:	40008000 	.word	0x40008000
 800b960:	0800b291 	.word	0x0800b291

0800b964 <UART_RxISR_16BIT_FIFOEN>:
 800b964:	b580      	push	{r7, lr}
 800b966:	b0ae      	sub	sp, #184	@ 0xb8
 800b968:	af00      	add	r7, sp, #0
 800b96a:	6078      	str	r0, [r7, #4]
 800b96c:	687b      	ldr	r3, [r7, #4]
 800b96e:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800b972:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	681b      	ldr	r3, [r3, #0]
 800b97a:	69db      	ldr	r3, [r3, #28]
 800b97c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800b980:	687b      	ldr	r3, [r7, #4]
 800b982:	681b      	ldr	r3, [r3, #0]
 800b984:	681b      	ldr	r3, [r3, #0]
 800b986:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	681b      	ldr	r3, [r3, #0]
 800b98e:	689b      	ldr	r3, [r3, #8]
 800b990:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800b994:	687b      	ldr	r3, [r7, #4]
 800b996:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800b99a:	2b22      	cmp	r3, #34	@ 0x22
 800b99c:	f040 8187 	bne.w	800bcae <UART_RxISR_16BIT_FIFOEN+0x34a>
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800b9a6:	f8a7 30a6 	strh.w	r3, [r7, #166]	@ 0xa6
 800b9aa:	e12a      	b.n	800bc02 <UART_RxISR_16BIT_FIFOEN+0x29e>
 800b9ac:	687b      	ldr	r3, [r7, #4]
 800b9ae:	681b      	ldr	r3, [r3, #0]
 800b9b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b9b2:	f8a7 30a4 	strh.w	r3, [r7, #164]	@ 0xa4
 800b9b6:	687b      	ldr	r3, [r7, #4]
 800b9b8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b9ba:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800b9be:	f8b7 20a4 	ldrh.w	r2, [r7, #164]	@ 0xa4
 800b9c2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800b9c6:	4013      	ands	r3, r2
 800b9c8:	b29a      	uxth	r2, r3
 800b9ca:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800b9ce:	801a      	strh	r2, [r3, #0]
 800b9d0:	687b      	ldr	r3, [r7, #4]
 800b9d2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b9d4:	1c9a      	adds	r2, r3, #2
 800b9d6:	687b      	ldr	r3, [r7, #4]
 800b9d8:	659a      	str	r2, [r3, #88]	@ 0x58
 800b9da:	687b      	ldr	r3, [r7, #4]
 800b9dc:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800b9e0:	b29b      	uxth	r3, r3
 800b9e2:	3b01      	subs	r3, #1
 800b9e4:	b29a      	uxth	r2, r3
 800b9e6:	687b      	ldr	r3, [r7, #4]
 800b9e8:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800b9ec:	687b      	ldr	r3, [r7, #4]
 800b9ee:	681b      	ldr	r3, [r3, #0]
 800b9f0:	69db      	ldr	r3, [r3, #28]
 800b9f2:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800b9f6:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800b9fa:	f003 0307 	and.w	r3, r3, #7
 800b9fe:	2b00      	cmp	r3, #0
 800ba00:	d053      	beq.n	800baaa <UART_RxISR_16BIT_FIFOEN+0x146>
 800ba02:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800ba06:	f003 0301 	and.w	r3, r3, #1
 800ba0a:	2b00      	cmp	r3, #0
 800ba0c:	d011      	beq.n	800ba32 <UART_RxISR_16BIT_FIFOEN+0xce>
 800ba0e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800ba12:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ba16:	2b00      	cmp	r3, #0
 800ba18:	d00b      	beq.n	800ba32 <UART_RxISR_16BIT_FIFOEN+0xce>
 800ba1a:	687b      	ldr	r3, [r7, #4]
 800ba1c:	681b      	ldr	r3, [r3, #0]
 800ba1e:	2201      	movs	r2, #1
 800ba20:	621a      	str	r2, [r3, #32]
 800ba22:	687b      	ldr	r3, [r7, #4]
 800ba24:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800ba28:	f043 0201 	orr.w	r2, r3, #1
 800ba2c:	687b      	ldr	r3, [r7, #4]
 800ba2e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800ba32:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800ba36:	f003 0302 	and.w	r3, r3, #2
 800ba3a:	2b00      	cmp	r3, #0
 800ba3c:	d011      	beq.n	800ba62 <UART_RxISR_16BIT_FIFOEN+0xfe>
 800ba3e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800ba42:	f003 0301 	and.w	r3, r3, #1
 800ba46:	2b00      	cmp	r3, #0
 800ba48:	d00b      	beq.n	800ba62 <UART_RxISR_16BIT_FIFOEN+0xfe>
 800ba4a:	687b      	ldr	r3, [r7, #4]
 800ba4c:	681b      	ldr	r3, [r3, #0]
 800ba4e:	2202      	movs	r2, #2
 800ba50:	621a      	str	r2, [r3, #32]
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800ba58:	f043 0204 	orr.w	r2, r3, #4
 800ba5c:	687b      	ldr	r3, [r7, #4]
 800ba5e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800ba62:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800ba66:	f003 0304 	and.w	r3, r3, #4
 800ba6a:	2b00      	cmp	r3, #0
 800ba6c:	d011      	beq.n	800ba92 <UART_RxISR_16BIT_FIFOEN+0x12e>
 800ba6e:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800ba72:	f003 0301 	and.w	r3, r3, #1
 800ba76:	2b00      	cmp	r3, #0
 800ba78:	d00b      	beq.n	800ba92 <UART_RxISR_16BIT_FIFOEN+0x12e>
 800ba7a:	687b      	ldr	r3, [r7, #4]
 800ba7c:	681b      	ldr	r3, [r3, #0]
 800ba7e:	2204      	movs	r2, #4
 800ba80:	621a      	str	r2, [r3, #32]
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800ba88:	f043 0202 	orr.w	r2, r3, #2
 800ba8c:	687b      	ldr	r3, [r7, #4]
 800ba8e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800ba98:	2b00      	cmp	r3, #0
 800ba9a:	d006      	beq.n	800baaa <UART_RxISR_16BIT_FIFOEN+0x146>
 800ba9c:	6878      	ldr	r0, [r7, #4]
 800ba9e:	f7fe fd61 	bl	800a564 <HAL_UART_ErrorCallback>
 800baa2:	687b      	ldr	r3, [r7, #4]
 800baa4:	2200      	movs	r2, #0
 800baa6:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800baaa:	687b      	ldr	r3, [r7, #4]
 800baac:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800bab0:	b29b      	uxth	r3, r3
 800bab2:	2b00      	cmp	r3, #0
 800bab4:	f040 80a5 	bne.w	800bc02 <UART_RxISR_16BIT_FIFOEN+0x29e>
 800bab8:	687b      	ldr	r3, [r7, #4]
 800baba:	681b      	ldr	r3, [r3, #0]
 800babc:	677b      	str	r3, [r7, #116]	@ 0x74
 800babe:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800bac0:	e853 3f00 	ldrex	r3, [r3]
 800bac4:	673b      	str	r3, [r7, #112]	@ 0x70
 800bac6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800bac8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800bacc:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800bad0:	687b      	ldr	r3, [r7, #4]
 800bad2:	681b      	ldr	r3, [r3, #0]
 800bad4:	461a      	mov	r2, r3
 800bad6:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800bada:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800bade:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800bae0:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800bae2:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800bae6:	e841 2300 	strex	r3, r2, [r1]
 800baea:	67bb      	str	r3, [r7, #120]	@ 0x78
 800baec:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800baee:	2b00      	cmp	r3, #0
 800baf0:	d1e2      	bne.n	800bab8 <UART_RxISR_16BIT_FIFOEN+0x154>
 800baf2:	687b      	ldr	r3, [r7, #4]
 800baf4:	681b      	ldr	r3, [r3, #0]
 800baf6:	3308      	adds	r3, #8
 800baf8:	663b      	str	r3, [r7, #96]	@ 0x60
 800bafa:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800bafc:	e853 3f00 	ldrex	r3, [r3]
 800bb00:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800bb02:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800bb04:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800bb08:	f023 0301 	bic.w	r3, r3, #1
 800bb0c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800bb10:	687b      	ldr	r3, [r7, #4]
 800bb12:	681b      	ldr	r3, [r3, #0]
 800bb14:	3308      	adds	r3, #8
 800bb16:	f8d7 2098 	ldr.w	r2, [r7, #152]	@ 0x98
 800bb1a:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800bb1c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800bb1e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800bb20:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800bb22:	e841 2300 	strex	r3, r2, [r1]
 800bb26:	667b      	str	r3, [r7, #100]	@ 0x64
 800bb28:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800bb2a:	2b00      	cmp	r3, #0
 800bb2c:	d1e1      	bne.n	800baf2 <UART_RxISR_16BIT_FIFOEN+0x18e>
 800bb2e:	687b      	ldr	r3, [r7, #4]
 800bb30:	2220      	movs	r2, #32
 800bb32:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800bb36:	687b      	ldr	r3, [r7, #4]
 800bb38:	2200      	movs	r2, #0
 800bb3a:	675a      	str	r2, [r3, #116]	@ 0x74
 800bb3c:	687b      	ldr	r3, [r7, #4]
 800bb3e:	2200      	movs	r2, #0
 800bb40:	671a      	str	r2, [r3, #112]	@ 0x70
 800bb42:	687b      	ldr	r3, [r7, #4]
 800bb44:	681b      	ldr	r3, [r3, #0]
 800bb46:	4a60      	ldr	r2, [pc, #384]	@ (800bcc8 <UART_RxISR_16BIT_FIFOEN+0x364>)
 800bb48:	4293      	cmp	r3, r2
 800bb4a:	d021      	beq.n	800bb90 <UART_RxISR_16BIT_FIFOEN+0x22c>
 800bb4c:	687b      	ldr	r3, [r7, #4]
 800bb4e:	681b      	ldr	r3, [r3, #0]
 800bb50:	685b      	ldr	r3, [r3, #4]
 800bb52:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800bb56:	2b00      	cmp	r3, #0
 800bb58:	d01a      	beq.n	800bb90 <UART_RxISR_16BIT_FIFOEN+0x22c>
 800bb5a:	687b      	ldr	r3, [r7, #4]
 800bb5c:	681b      	ldr	r3, [r3, #0]
 800bb5e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800bb60:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800bb62:	e853 3f00 	ldrex	r3, [r3]
 800bb66:	64bb      	str	r3, [r7, #72]	@ 0x48
 800bb68:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800bb6a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800bb6e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800bb72:	687b      	ldr	r3, [r7, #4]
 800bb74:	681b      	ldr	r3, [r3, #0]
 800bb76:	461a      	mov	r2, r3
 800bb78:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800bb7c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800bb7e:	657a      	str	r2, [r7, #84]	@ 0x54
 800bb80:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800bb82:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800bb84:	e841 2300 	strex	r3, r2, [r1]
 800bb88:	653b      	str	r3, [r7, #80]	@ 0x50
 800bb8a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800bb8c:	2b00      	cmp	r3, #0
 800bb8e:	d1e4      	bne.n	800bb5a <UART_RxISR_16BIT_FIFOEN+0x1f6>
 800bb90:	687b      	ldr	r3, [r7, #4]
 800bb92:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800bb94:	2b01      	cmp	r3, #1
 800bb96:	d130      	bne.n	800bbfa <UART_RxISR_16BIT_FIFOEN+0x296>
 800bb98:	687b      	ldr	r3, [r7, #4]
 800bb9a:	2200      	movs	r2, #0
 800bb9c:	66da      	str	r2, [r3, #108]	@ 0x6c
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	681b      	ldr	r3, [r3, #0]
 800bba2:	63bb      	str	r3, [r7, #56]	@ 0x38
 800bba4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800bba6:	e853 3f00 	ldrex	r3, [r3]
 800bbaa:	637b      	str	r3, [r7, #52]	@ 0x34
 800bbac:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800bbae:	f023 0310 	bic.w	r3, r3, #16
 800bbb2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800bbb6:	687b      	ldr	r3, [r7, #4]
 800bbb8:	681b      	ldr	r3, [r3, #0]
 800bbba:	461a      	mov	r2, r3
 800bbbc:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800bbc0:	647b      	str	r3, [r7, #68]	@ 0x44
 800bbc2:	643a      	str	r2, [r7, #64]	@ 0x40
 800bbc4:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800bbc6:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800bbc8:	e841 2300 	strex	r3, r2, [r1]
 800bbcc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800bbce:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800bbd0:	2b00      	cmp	r3, #0
 800bbd2:	d1e4      	bne.n	800bb9e <UART_RxISR_16BIT_FIFOEN+0x23a>
 800bbd4:	687b      	ldr	r3, [r7, #4]
 800bbd6:	681b      	ldr	r3, [r3, #0]
 800bbd8:	69db      	ldr	r3, [r3, #28]
 800bbda:	f003 0310 	and.w	r3, r3, #16
 800bbde:	2b10      	cmp	r3, #16
 800bbe0:	d103      	bne.n	800bbea <UART_RxISR_16BIT_FIFOEN+0x286>
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	681b      	ldr	r3, [r3, #0]
 800bbe6:	2210      	movs	r2, #16
 800bbe8:	621a      	str	r2, [r3, #32]
 800bbea:	687b      	ldr	r3, [r7, #4]
 800bbec:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800bbf0:	4619      	mov	r1, r3
 800bbf2:	6878      	ldr	r0, [r7, #4]
 800bbf4:	f7fe fcc0 	bl	800a578 <HAL_UARTEx_RxEventCallback>
 800bbf8:	e00e      	b.n	800bc18 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 800bbfa:	6878      	ldr	r0, [r7, #4]
 800bbfc:	f7f5 fb96 	bl	800132c <HAL_UART_RxCpltCallback>
 800bc00:	e00a      	b.n	800bc18 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 800bc02:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	@ 0xa6
 800bc06:	2b00      	cmp	r3, #0
 800bc08:	d006      	beq.n	800bc18 <UART_RxISR_16BIT_FIFOEN+0x2b4>
 800bc0a:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800bc0e:	f003 0320 	and.w	r3, r3, #32
 800bc12:	2b00      	cmp	r3, #0
 800bc14:	f47f aeca 	bne.w	800b9ac <UART_RxISR_16BIT_FIFOEN+0x48>
 800bc18:	687b      	ldr	r3, [r7, #4]
 800bc1a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800bc1e:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
 800bc22:	f8b7 308e 	ldrh.w	r3, [r7, #142]	@ 0x8e
 800bc26:	2b00      	cmp	r3, #0
 800bc28:	d049      	beq.n	800bcbe <UART_RxISR_16BIT_FIFOEN+0x35a>
 800bc2a:	687b      	ldr	r3, [r7, #4]
 800bc2c:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800bc30:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800bc34:	429a      	cmp	r2, r3
 800bc36:	d242      	bcs.n	800bcbe <UART_RxISR_16BIT_FIFOEN+0x35a>
 800bc38:	687b      	ldr	r3, [r7, #4]
 800bc3a:	681b      	ldr	r3, [r3, #0]
 800bc3c:	3308      	adds	r3, #8
 800bc3e:	627b      	str	r3, [r7, #36]	@ 0x24
 800bc40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bc42:	e853 3f00 	ldrex	r3, [r3]
 800bc46:	623b      	str	r3, [r7, #32]
 800bc48:	6a3b      	ldr	r3, [r7, #32]
 800bc4a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800bc4e:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800bc52:	687b      	ldr	r3, [r7, #4]
 800bc54:	681b      	ldr	r3, [r3, #0]
 800bc56:	3308      	adds	r3, #8
 800bc58:	f8d7 2088 	ldr.w	r2, [r7, #136]	@ 0x88
 800bc5c:	633a      	str	r2, [r7, #48]	@ 0x30
 800bc5e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800bc60:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800bc62:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800bc64:	e841 2300 	strex	r3, r2, [r1]
 800bc68:	62bb      	str	r3, [r7, #40]	@ 0x28
 800bc6a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc6c:	2b00      	cmp	r3, #0
 800bc6e:	d1e3      	bne.n	800bc38 <UART_RxISR_16BIT_FIFOEN+0x2d4>
 800bc70:	687b      	ldr	r3, [r7, #4]
 800bc72:	4a16      	ldr	r2, [pc, #88]	@ (800bccc <UART_RxISR_16BIT_FIFOEN+0x368>)
 800bc74:	675a      	str	r2, [r3, #116]	@ 0x74
 800bc76:	687b      	ldr	r3, [r7, #4]
 800bc78:	681b      	ldr	r3, [r3, #0]
 800bc7a:	613b      	str	r3, [r7, #16]
 800bc7c:	693b      	ldr	r3, [r7, #16]
 800bc7e:	e853 3f00 	ldrex	r3, [r3]
 800bc82:	60fb      	str	r3, [r7, #12]
 800bc84:	68fb      	ldr	r3, [r7, #12]
 800bc86:	f043 0320 	orr.w	r3, r3, #32
 800bc8a:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800bc8e:	687b      	ldr	r3, [r7, #4]
 800bc90:	681b      	ldr	r3, [r3, #0]
 800bc92:	461a      	mov	r2, r3
 800bc94:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800bc98:	61fb      	str	r3, [r7, #28]
 800bc9a:	61ba      	str	r2, [r7, #24]
 800bc9c:	69b9      	ldr	r1, [r7, #24]
 800bc9e:	69fa      	ldr	r2, [r7, #28]
 800bca0:	e841 2300 	strex	r3, r2, [r1]
 800bca4:	617b      	str	r3, [r7, #20]
 800bca6:	697b      	ldr	r3, [r7, #20]
 800bca8:	2b00      	cmp	r3, #0
 800bcaa:	d1e4      	bne.n	800bc76 <UART_RxISR_16BIT_FIFOEN+0x312>
 800bcac:	e007      	b.n	800bcbe <UART_RxISR_16BIT_FIFOEN+0x35a>
 800bcae:	687b      	ldr	r3, [r7, #4]
 800bcb0:	681b      	ldr	r3, [r3, #0]
 800bcb2:	699a      	ldr	r2, [r3, #24]
 800bcb4:	687b      	ldr	r3, [r7, #4]
 800bcb6:	681b      	ldr	r3, [r3, #0]
 800bcb8:	f042 0208 	orr.w	r2, r2, #8
 800bcbc:	619a      	str	r2, [r3, #24]
 800bcbe:	bf00      	nop
 800bcc0:	37b8      	adds	r7, #184	@ 0xb8
 800bcc2:	46bd      	mov	sp, r7
 800bcc4:	bd80      	pop	{r7, pc}
 800bcc6:	bf00      	nop
 800bcc8:	40008000 	.word	0x40008000
 800bccc:	0800b449 	.word	0x0800b449

0800bcd0 <HAL_UARTEx_WakeupCallback>:
 800bcd0:	b480      	push	{r7}
 800bcd2:	b083      	sub	sp, #12
 800bcd4:	af00      	add	r7, sp, #0
 800bcd6:	6078      	str	r0, [r7, #4]
 800bcd8:	bf00      	nop
 800bcda:	370c      	adds	r7, #12
 800bcdc:	46bd      	mov	sp, r7
 800bcde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bce2:	4770      	bx	lr

0800bce4 <HAL_UARTEx_RxFifoFullCallback>:
 800bce4:	b480      	push	{r7}
 800bce6:	b083      	sub	sp, #12
 800bce8:	af00      	add	r7, sp, #0
 800bcea:	6078      	str	r0, [r7, #4]
 800bcec:	bf00      	nop
 800bcee:	370c      	adds	r7, #12
 800bcf0:	46bd      	mov	sp, r7
 800bcf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcf6:	4770      	bx	lr

0800bcf8 <HAL_UARTEx_TxFifoEmptyCallback>:
 800bcf8:	b480      	push	{r7}
 800bcfa:	b083      	sub	sp, #12
 800bcfc:	af00      	add	r7, sp, #0
 800bcfe:	6078      	str	r0, [r7, #4]
 800bd00:	bf00      	nop
 800bd02:	370c      	adds	r7, #12
 800bd04:	46bd      	mov	sp, r7
 800bd06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd0a:	4770      	bx	lr

0800bd0c <HAL_UARTEx_DisableFifoMode>:
 800bd0c:	b480      	push	{r7}
 800bd0e:	b085      	sub	sp, #20
 800bd10:	af00      	add	r7, sp, #0
 800bd12:	6078      	str	r0, [r7, #4]
 800bd14:	687b      	ldr	r3, [r7, #4]
 800bd16:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800bd1a:	2b01      	cmp	r3, #1
 800bd1c:	d101      	bne.n	800bd22 <HAL_UARTEx_DisableFifoMode+0x16>
 800bd1e:	2302      	movs	r3, #2
 800bd20:	e027      	b.n	800bd72 <HAL_UARTEx_DisableFifoMode+0x66>
 800bd22:	687b      	ldr	r3, [r7, #4]
 800bd24:	2201      	movs	r2, #1
 800bd26:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800bd2a:	687b      	ldr	r3, [r7, #4]
 800bd2c:	2224      	movs	r2, #36	@ 0x24
 800bd2e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800bd32:	687b      	ldr	r3, [r7, #4]
 800bd34:	681b      	ldr	r3, [r3, #0]
 800bd36:	681b      	ldr	r3, [r3, #0]
 800bd38:	60fb      	str	r3, [r7, #12]
 800bd3a:	687b      	ldr	r3, [r7, #4]
 800bd3c:	681b      	ldr	r3, [r3, #0]
 800bd3e:	681a      	ldr	r2, [r3, #0]
 800bd40:	687b      	ldr	r3, [r7, #4]
 800bd42:	681b      	ldr	r3, [r3, #0]
 800bd44:	f022 0201 	bic.w	r2, r2, #1
 800bd48:	601a      	str	r2, [r3, #0]
 800bd4a:	68fb      	ldr	r3, [r7, #12]
 800bd4c:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800bd50:	60fb      	str	r3, [r7, #12]
 800bd52:	687b      	ldr	r3, [r7, #4]
 800bd54:	2200      	movs	r2, #0
 800bd56:	665a      	str	r2, [r3, #100]	@ 0x64
 800bd58:	687b      	ldr	r3, [r7, #4]
 800bd5a:	681b      	ldr	r3, [r3, #0]
 800bd5c:	68fa      	ldr	r2, [r7, #12]
 800bd5e:	601a      	str	r2, [r3, #0]
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	2220      	movs	r2, #32
 800bd64:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800bd68:	687b      	ldr	r3, [r7, #4]
 800bd6a:	2200      	movs	r2, #0
 800bd6c:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800bd70:	2300      	movs	r3, #0
 800bd72:	4618      	mov	r0, r3
 800bd74:	3714      	adds	r7, #20
 800bd76:	46bd      	mov	sp, r7
 800bd78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd7c:	4770      	bx	lr

0800bd7e <HAL_UARTEx_SetTxFifoThreshold>:
 800bd7e:	b580      	push	{r7, lr}
 800bd80:	b084      	sub	sp, #16
 800bd82:	af00      	add	r7, sp, #0
 800bd84:	6078      	str	r0, [r7, #4]
 800bd86:	6039      	str	r1, [r7, #0]
 800bd88:	687b      	ldr	r3, [r7, #4]
 800bd8a:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800bd8e:	2b01      	cmp	r3, #1
 800bd90:	d101      	bne.n	800bd96 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800bd92:	2302      	movs	r3, #2
 800bd94:	e02d      	b.n	800bdf2 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800bd96:	687b      	ldr	r3, [r7, #4]
 800bd98:	2201      	movs	r2, #1
 800bd9a:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800bd9e:	687b      	ldr	r3, [r7, #4]
 800bda0:	2224      	movs	r2, #36	@ 0x24
 800bda2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800bda6:	687b      	ldr	r3, [r7, #4]
 800bda8:	681b      	ldr	r3, [r3, #0]
 800bdaa:	681b      	ldr	r3, [r3, #0]
 800bdac:	60fb      	str	r3, [r7, #12]
 800bdae:	687b      	ldr	r3, [r7, #4]
 800bdb0:	681b      	ldr	r3, [r3, #0]
 800bdb2:	681a      	ldr	r2, [r3, #0]
 800bdb4:	687b      	ldr	r3, [r7, #4]
 800bdb6:	681b      	ldr	r3, [r3, #0]
 800bdb8:	f022 0201 	bic.w	r2, r2, #1
 800bdbc:	601a      	str	r2, [r3, #0]
 800bdbe:	687b      	ldr	r3, [r7, #4]
 800bdc0:	681b      	ldr	r3, [r3, #0]
 800bdc2:	689b      	ldr	r3, [r3, #8]
 800bdc4:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 800bdc8:	687b      	ldr	r3, [r7, #4]
 800bdca:	681b      	ldr	r3, [r3, #0]
 800bdcc:	683a      	ldr	r2, [r7, #0]
 800bdce:	430a      	orrs	r2, r1
 800bdd0:	609a      	str	r2, [r3, #8]
 800bdd2:	6878      	ldr	r0, [r7, #4]
 800bdd4:	f000 f850 	bl	800be78 <UARTEx_SetNbDataToProcess>
 800bdd8:	687b      	ldr	r3, [r7, #4]
 800bdda:	681b      	ldr	r3, [r3, #0]
 800bddc:	68fa      	ldr	r2, [r7, #12]
 800bdde:	601a      	str	r2, [r3, #0]
 800bde0:	687b      	ldr	r3, [r7, #4]
 800bde2:	2220      	movs	r2, #32
 800bde4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800bde8:	687b      	ldr	r3, [r7, #4]
 800bdea:	2200      	movs	r2, #0
 800bdec:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800bdf0:	2300      	movs	r3, #0
 800bdf2:	4618      	mov	r0, r3
 800bdf4:	3710      	adds	r7, #16
 800bdf6:	46bd      	mov	sp, r7
 800bdf8:	bd80      	pop	{r7, pc}

0800bdfa <HAL_UARTEx_SetRxFifoThreshold>:
 800bdfa:	b580      	push	{r7, lr}
 800bdfc:	b084      	sub	sp, #16
 800bdfe:	af00      	add	r7, sp, #0
 800be00:	6078      	str	r0, [r7, #4]
 800be02:	6039      	str	r1, [r7, #0]
 800be04:	687b      	ldr	r3, [r7, #4]
 800be06:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800be0a:	2b01      	cmp	r3, #1
 800be0c:	d101      	bne.n	800be12 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800be0e:	2302      	movs	r3, #2
 800be10:	e02d      	b.n	800be6e <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800be12:	687b      	ldr	r3, [r7, #4]
 800be14:	2201      	movs	r2, #1
 800be16:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800be1a:	687b      	ldr	r3, [r7, #4]
 800be1c:	2224      	movs	r2, #36	@ 0x24
 800be1e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800be22:	687b      	ldr	r3, [r7, #4]
 800be24:	681b      	ldr	r3, [r3, #0]
 800be26:	681b      	ldr	r3, [r3, #0]
 800be28:	60fb      	str	r3, [r7, #12]
 800be2a:	687b      	ldr	r3, [r7, #4]
 800be2c:	681b      	ldr	r3, [r3, #0]
 800be2e:	681a      	ldr	r2, [r3, #0]
 800be30:	687b      	ldr	r3, [r7, #4]
 800be32:	681b      	ldr	r3, [r3, #0]
 800be34:	f022 0201 	bic.w	r2, r2, #1
 800be38:	601a      	str	r2, [r3, #0]
 800be3a:	687b      	ldr	r3, [r7, #4]
 800be3c:	681b      	ldr	r3, [r3, #0]
 800be3e:	689b      	ldr	r3, [r3, #8]
 800be40:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 800be44:	687b      	ldr	r3, [r7, #4]
 800be46:	681b      	ldr	r3, [r3, #0]
 800be48:	683a      	ldr	r2, [r7, #0]
 800be4a:	430a      	orrs	r2, r1
 800be4c:	609a      	str	r2, [r3, #8]
 800be4e:	6878      	ldr	r0, [r7, #4]
 800be50:	f000 f812 	bl	800be78 <UARTEx_SetNbDataToProcess>
 800be54:	687b      	ldr	r3, [r7, #4]
 800be56:	681b      	ldr	r3, [r3, #0]
 800be58:	68fa      	ldr	r2, [r7, #12]
 800be5a:	601a      	str	r2, [r3, #0]
 800be5c:	687b      	ldr	r3, [r7, #4]
 800be5e:	2220      	movs	r2, #32
 800be60:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800be64:	687b      	ldr	r3, [r7, #4]
 800be66:	2200      	movs	r2, #0
 800be68:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800be6c:	2300      	movs	r3, #0
 800be6e:	4618      	mov	r0, r3
 800be70:	3710      	adds	r7, #16
 800be72:	46bd      	mov	sp, r7
 800be74:	bd80      	pop	{r7, pc}
	...

0800be78 <UARTEx_SetNbDataToProcess>:
 800be78:	b480      	push	{r7}
 800be7a:	b085      	sub	sp, #20
 800be7c:	af00      	add	r7, sp, #0
 800be7e:	6078      	str	r0, [r7, #4]
 800be80:	687b      	ldr	r3, [r7, #4]
 800be82:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800be84:	2b00      	cmp	r3, #0
 800be86:	d108      	bne.n	800be9a <UARTEx_SetNbDataToProcess+0x22>
 800be88:	687b      	ldr	r3, [r7, #4]
 800be8a:	2201      	movs	r2, #1
 800be8c:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800be90:	687b      	ldr	r3, [r7, #4]
 800be92:	2201      	movs	r2, #1
 800be94:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800be98:	e031      	b.n	800befe <UARTEx_SetNbDataToProcess+0x86>
 800be9a:	2308      	movs	r3, #8
 800be9c:	73fb      	strb	r3, [r7, #15]
 800be9e:	2308      	movs	r3, #8
 800bea0:	73bb      	strb	r3, [r7, #14]
 800bea2:	687b      	ldr	r3, [r7, #4]
 800bea4:	681b      	ldr	r3, [r3, #0]
 800bea6:	689b      	ldr	r3, [r3, #8]
 800bea8:	0e5b      	lsrs	r3, r3, #25
 800beaa:	b2db      	uxtb	r3, r3
 800beac:	f003 0307 	and.w	r3, r3, #7
 800beb0:	737b      	strb	r3, [r7, #13]
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	681b      	ldr	r3, [r3, #0]
 800beb6:	689b      	ldr	r3, [r3, #8]
 800beb8:	0f5b      	lsrs	r3, r3, #29
 800beba:	b2db      	uxtb	r3, r3
 800bebc:	f003 0307 	and.w	r3, r3, #7
 800bec0:	733b      	strb	r3, [r7, #12]
 800bec2:	7bbb      	ldrb	r3, [r7, #14]
 800bec4:	7b3a      	ldrb	r2, [r7, #12]
 800bec6:	4911      	ldr	r1, [pc, #68]	@ (800bf0c <UARTEx_SetNbDataToProcess+0x94>)
 800bec8:	5c8a      	ldrb	r2, [r1, r2]
 800beca:	fb02 f303 	mul.w	r3, r2, r3
 800bece:	7b3a      	ldrb	r2, [r7, #12]
 800bed0:	490f      	ldr	r1, [pc, #60]	@ (800bf10 <UARTEx_SetNbDataToProcess+0x98>)
 800bed2:	5c8a      	ldrb	r2, [r1, r2]
 800bed4:	fb93 f3f2 	sdiv	r3, r3, r2
 800bed8:	b29a      	uxth	r2, r3
 800beda:	687b      	ldr	r3, [r7, #4]
 800bedc:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800bee0:	7bfb      	ldrb	r3, [r7, #15]
 800bee2:	7b7a      	ldrb	r2, [r7, #13]
 800bee4:	4909      	ldr	r1, [pc, #36]	@ (800bf0c <UARTEx_SetNbDataToProcess+0x94>)
 800bee6:	5c8a      	ldrb	r2, [r1, r2]
 800bee8:	fb02 f303 	mul.w	r3, r2, r3
 800beec:	7b7a      	ldrb	r2, [r7, #13]
 800beee:	4908      	ldr	r1, [pc, #32]	@ (800bf10 <UARTEx_SetNbDataToProcess+0x98>)
 800bef0:	5c8a      	ldrb	r2, [r1, r2]
 800bef2:	fb93 f3f2 	sdiv	r3, r3, r2
 800bef6:	b29a      	uxth	r2, r3
 800bef8:	687b      	ldr	r3, [r7, #4]
 800befa:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800befe:	bf00      	nop
 800bf00:	3714      	adds	r7, #20
 800bf02:	46bd      	mov	sp, r7
 800bf04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf08:	4770      	bx	lr
 800bf0a:	bf00      	nop
 800bf0c:	0800f27c 	.word	0x0800f27c
 800bf10:	0800f284 	.word	0x0800f284

0800bf14 <atof>:
 800bf14:	2100      	movs	r1, #0
 800bf16:	f000 be03 	b.w	800cb20 <strtod>

0800bf1a <sulp>:
 800bf1a:	b570      	push	{r4, r5, r6, lr}
 800bf1c:	4604      	mov	r4, r0
 800bf1e:	460d      	mov	r5, r1
 800bf20:	ec45 4b10 	vmov	d0, r4, r5
 800bf24:	4616      	mov	r6, r2
 800bf26:	f001 ff8b 	bl	800de40 <__ulp>
 800bf2a:	ec51 0b10 	vmov	r0, r1, d0
 800bf2e:	b17e      	cbz	r6, 800bf50 <sulp+0x36>
 800bf30:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800bf34:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800bf38:	2b00      	cmp	r3, #0
 800bf3a:	dd09      	ble.n	800bf50 <sulp+0x36>
 800bf3c:	051b      	lsls	r3, r3, #20
 800bf3e:	f103 557f 	add.w	r5, r3, #1069547520	@ 0x3fc00000
 800bf42:	2400      	movs	r4, #0
 800bf44:	f505 1540 	add.w	r5, r5, #3145728	@ 0x300000
 800bf48:	4622      	mov	r2, r4
 800bf4a:	462b      	mov	r3, r5
 800bf4c:	f7f4 fb7c 	bl	8000648 <__aeabi_dmul>
 800bf50:	ec41 0b10 	vmov	d0, r0, r1
 800bf54:	bd70      	pop	{r4, r5, r6, pc}
	...

0800bf58 <_strtod_l>:
 800bf58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf5c:	b09f      	sub	sp, #124	@ 0x7c
 800bf5e:	460c      	mov	r4, r1
 800bf60:	9217      	str	r2, [sp, #92]	@ 0x5c
 800bf62:	2200      	movs	r2, #0
 800bf64:	921a      	str	r2, [sp, #104]	@ 0x68
 800bf66:	9005      	str	r0, [sp, #20]
 800bf68:	f04f 0a00 	mov.w	sl, #0
 800bf6c:	f04f 0b00 	mov.w	fp, #0
 800bf70:	460a      	mov	r2, r1
 800bf72:	9219      	str	r2, [sp, #100]	@ 0x64
 800bf74:	7811      	ldrb	r1, [r2, #0]
 800bf76:	292b      	cmp	r1, #43	@ 0x2b
 800bf78:	d04a      	beq.n	800c010 <_strtod_l+0xb8>
 800bf7a:	d838      	bhi.n	800bfee <_strtod_l+0x96>
 800bf7c:	290d      	cmp	r1, #13
 800bf7e:	d832      	bhi.n	800bfe6 <_strtod_l+0x8e>
 800bf80:	2908      	cmp	r1, #8
 800bf82:	d832      	bhi.n	800bfea <_strtod_l+0x92>
 800bf84:	2900      	cmp	r1, #0
 800bf86:	d03b      	beq.n	800c000 <_strtod_l+0xa8>
 800bf88:	2200      	movs	r2, #0
 800bf8a:	920b      	str	r2, [sp, #44]	@ 0x2c
 800bf8c:	9d19      	ldr	r5, [sp, #100]	@ 0x64
 800bf8e:	782a      	ldrb	r2, [r5, #0]
 800bf90:	2a30      	cmp	r2, #48	@ 0x30
 800bf92:	f040 80b3 	bne.w	800c0fc <_strtod_l+0x1a4>
 800bf96:	786a      	ldrb	r2, [r5, #1]
 800bf98:	f002 02df 	and.w	r2, r2, #223	@ 0xdf
 800bf9c:	2a58      	cmp	r2, #88	@ 0x58
 800bf9e:	d16e      	bne.n	800c07e <_strtod_l+0x126>
 800bfa0:	9302      	str	r3, [sp, #8]
 800bfa2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800bfa4:	9301      	str	r3, [sp, #4]
 800bfa6:	ab1a      	add	r3, sp, #104	@ 0x68
 800bfa8:	9300      	str	r3, [sp, #0]
 800bfaa:	4a8e      	ldr	r2, [pc, #568]	@ (800c1e4 <_strtod_l+0x28c>)
 800bfac:	9805      	ldr	r0, [sp, #20]
 800bfae:	ab1b      	add	r3, sp, #108	@ 0x6c
 800bfb0:	a919      	add	r1, sp, #100	@ 0x64
 800bfb2:	f001 f83f 	bl	800d034 <__gethex>
 800bfb6:	f010 060f 	ands.w	r6, r0, #15
 800bfba:	4604      	mov	r4, r0
 800bfbc:	d005      	beq.n	800bfca <_strtod_l+0x72>
 800bfbe:	2e06      	cmp	r6, #6
 800bfc0:	d128      	bne.n	800c014 <_strtod_l+0xbc>
 800bfc2:	3501      	adds	r5, #1
 800bfc4:	2300      	movs	r3, #0
 800bfc6:	9519      	str	r5, [sp, #100]	@ 0x64
 800bfc8:	930b      	str	r3, [sp, #44]	@ 0x2c
 800bfca:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800bfcc:	2b00      	cmp	r3, #0
 800bfce:	f040 858e 	bne.w	800caee <_strtod_l+0xb96>
 800bfd2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800bfd4:	b1cb      	cbz	r3, 800c00a <_strtod_l+0xb2>
 800bfd6:	4652      	mov	r2, sl
 800bfd8:	f10b 4300 	add.w	r3, fp, #2147483648	@ 0x80000000
 800bfdc:	ec43 2b10 	vmov	d0, r2, r3
 800bfe0:	b01f      	add	sp, #124	@ 0x7c
 800bfe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bfe6:	2920      	cmp	r1, #32
 800bfe8:	d1ce      	bne.n	800bf88 <_strtod_l+0x30>
 800bfea:	3201      	adds	r2, #1
 800bfec:	e7c1      	b.n	800bf72 <_strtod_l+0x1a>
 800bfee:	292d      	cmp	r1, #45	@ 0x2d
 800bff0:	d1ca      	bne.n	800bf88 <_strtod_l+0x30>
 800bff2:	2101      	movs	r1, #1
 800bff4:	910b      	str	r1, [sp, #44]	@ 0x2c
 800bff6:	1c51      	adds	r1, r2, #1
 800bff8:	9119      	str	r1, [sp, #100]	@ 0x64
 800bffa:	7852      	ldrb	r2, [r2, #1]
 800bffc:	2a00      	cmp	r2, #0
 800bffe:	d1c5      	bne.n	800bf8c <_strtod_l+0x34>
 800c000:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 800c002:	9419      	str	r4, [sp, #100]	@ 0x64
 800c004:	2b00      	cmp	r3, #0
 800c006:	f040 8570 	bne.w	800caea <_strtod_l+0xb92>
 800c00a:	4652      	mov	r2, sl
 800c00c:	465b      	mov	r3, fp
 800c00e:	e7e5      	b.n	800bfdc <_strtod_l+0x84>
 800c010:	2100      	movs	r1, #0
 800c012:	e7ef      	b.n	800bff4 <_strtod_l+0x9c>
 800c014:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800c016:	b13a      	cbz	r2, 800c028 <_strtod_l+0xd0>
 800c018:	2135      	movs	r1, #53	@ 0x35
 800c01a:	a81c      	add	r0, sp, #112	@ 0x70
 800c01c:	f002 f80a 	bl	800e034 <__copybits>
 800c020:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c022:	9805      	ldr	r0, [sp, #20]
 800c024:	f001 fbd8 	bl	800d7d8 <_Bfree>
 800c028:	3e01      	subs	r6, #1
 800c02a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 800c02c:	2e04      	cmp	r6, #4
 800c02e:	d806      	bhi.n	800c03e <_strtod_l+0xe6>
 800c030:	e8df f006 	tbb	[pc, r6]
 800c034:	201d0314 	.word	0x201d0314
 800c038:	14          	.byte	0x14
 800c039:	00          	.byte	0x00
 800c03a:	e9dd ab1c 	ldrd	sl, fp, [sp, #112]	@ 0x70
 800c03e:	05e1      	lsls	r1, r4, #23
 800c040:	bf48      	it	mi
 800c042:	f04b 4b00 	orrmi.w	fp, fp, #2147483648	@ 0x80000000
 800c046:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800c04a:	0d1b      	lsrs	r3, r3, #20
 800c04c:	051b      	lsls	r3, r3, #20
 800c04e:	2b00      	cmp	r3, #0
 800c050:	d1bb      	bne.n	800bfca <_strtod_l+0x72>
 800c052:	f000 fef7 	bl	800ce44 <__errno>
 800c056:	2322      	movs	r3, #34	@ 0x22
 800c058:	6003      	str	r3, [r0, #0]
 800c05a:	e7b6      	b.n	800bfca <_strtod_l+0x72>
 800c05c:	e9dd a31c 	ldrd	sl, r3, [sp, #112]	@ 0x70
 800c060:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800c064:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800c068:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800c06c:	e7e7      	b.n	800c03e <_strtod_l+0xe6>
 800c06e:	f8df b17c 	ldr.w	fp, [pc, #380]	@ 800c1ec <_strtod_l+0x294>
 800c072:	e7e4      	b.n	800c03e <_strtod_l+0xe6>
 800c074:	f06f 4b00 	mvn.w	fp, #2147483648	@ 0x80000000
 800c078:	f04f 3aff 	mov.w	sl, #4294967295
 800c07c:	e7df      	b.n	800c03e <_strtod_l+0xe6>
 800c07e:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c080:	1c5a      	adds	r2, r3, #1
 800c082:	9219      	str	r2, [sp, #100]	@ 0x64
 800c084:	785b      	ldrb	r3, [r3, #1]
 800c086:	2b30      	cmp	r3, #48	@ 0x30
 800c088:	d0f9      	beq.n	800c07e <_strtod_l+0x126>
 800c08a:	2b00      	cmp	r3, #0
 800c08c:	d09d      	beq.n	800bfca <_strtod_l+0x72>
 800c08e:	2301      	movs	r3, #1
 800c090:	9309      	str	r3, [sp, #36]	@ 0x24
 800c092:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c094:	930c      	str	r3, [sp, #48]	@ 0x30
 800c096:	2300      	movs	r3, #0
 800c098:	9308      	str	r3, [sp, #32]
 800c09a:	930a      	str	r3, [sp, #40]	@ 0x28
 800c09c:	461f      	mov	r7, r3
 800c09e:	220a      	movs	r2, #10
 800c0a0:	9819      	ldr	r0, [sp, #100]	@ 0x64
 800c0a2:	7805      	ldrb	r5, [r0, #0]
 800c0a4:	f1a5 0330 	sub.w	r3, r5, #48	@ 0x30
 800c0a8:	b2d9      	uxtb	r1, r3
 800c0aa:	2909      	cmp	r1, #9
 800c0ac:	d928      	bls.n	800c100 <_strtod_l+0x1a8>
 800c0ae:	494e      	ldr	r1, [pc, #312]	@ (800c1e8 <_strtod_l+0x290>)
 800c0b0:	2201      	movs	r2, #1
 800c0b2:	f000 fe6e 	bl	800cd92 <strncmp>
 800c0b6:	2800      	cmp	r0, #0
 800c0b8:	d032      	beq.n	800c120 <_strtod_l+0x1c8>
 800c0ba:	2000      	movs	r0, #0
 800c0bc:	462a      	mov	r2, r5
 800c0be:	4681      	mov	r9, r0
 800c0c0:	463d      	mov	r5, r7
 800c0c2:	4603      	mov	r3, r0
 800c0c4:	2a65      	cmp	r2, #101	@ 0x65
 800c0c6:	d001      	beq.n	800c0cc <_strtod_l+0x174>
 800c0c8:	2a45      	cmp	r2, #69	@ 0x45
 800c0ca:	d114      	bne.n	800c0f6 <_strtod_l+0x19e>
 800c0cc:	b91d      	cbnz	r5, 800c0d6 <_strtod_l+0x17e>
 800c0ce:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c0d0:	4302      	orrs	r2, r0
 800c0d2:	d095      	beq.n	800c000 <_strtod_l+0xa8>
 800c0d4:	2500      	movs	r5, #0
 800c0d6:	9c19      	ldr	r4, [sp, #100]	@ 0x64
 800c0d8:	1c62      	adds	r2, r4, #1
 800c0da:	9219      	str	r2, [sp, #100]	@ 0x64
 800c0dc:	7862      	ldrb	r2, [r4, #1]
 800c0de:	2a2b      	cmp	r2, #43	@ 0x2b
 800c0e0:	d077      	beq.n	800c1d2 <_strtod_l+0x27a>
 800c0e2:	2a2d      	cmp	r2, #45	@ 0x2d
 800c0e4:	d07b      	beq.n	800c1de <_strtod_l+0x286>
 800c0e6:	f04f 0c00 	mov.w	ip, #0
 800c0ea:	f1a2 0130 	sub.w	r1, r2, #48	@ 0x30
 800c0ee:	2909      	cmp	r1, #9
 800c0f0:	f240 8082 	bls.w	800c1f8 <_strtod_l+0x2a0>
 800c0f4:	9419      	str	r4, [sp, #100]	@ 0x64
 800c0f6:	f04f 0800 	mov.w	r8, #0
 800c0fa:	e0a2      	b.n	800c242 <_strtod_l+0x2ea>
 800c0fc:	2300      	movs	r3, #0
 800c0fe:	e7c7      	b.n	800c090 <_strtod_l+0x138>
 800c100:	2f08      	cmp	r7, #8
 800c102:	bfd5      	itete	le
 800c104:	990a      	ldrle	r1, [sp, #40]	@ 0x28
 800c106:	9908      	ldrgt	r1, [sp, #32]
 800c108:	fb02 3301 	mlale	r3, r2, r1, r3
 800c10c:	fb02 3301 	mlagt	r3, r2, r1, r3
 800c110:	f100 0001 	add.w	r0, r0, #1
 800c114:	bfd4      	ite	le
 800c116:	930a      	strle	r3, [sp, #40]	@ 0x28
 800c118:	9308      	strgt	r3, [sp, #32]
 800c11a:	3701      	adds	r7, #1
 800c11c:	9019      	str	r0, [sp, #100]	@ 0x64
 800c11e:	e7bf      	b.n	800c0a0 <_strtod_l+0x148>
 800c120:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c122:	1c5a      	adds	r2, r3, #1
 800c124:	9219      	str	r2, [sp, #100]	@ 0x64
 800c126:	785a      	ldrb	r2, [r3, #1]
 800c128:	b37f      	cbz	r7, 800c18a <_strtod_l+0x232>
 800c12a:	4681      	mov	r9, r0
 800c12c:	463d      	mov	r5, r7
 800c12e:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
 800c132:	2b09      	cmp	r3, #9
 800c134:	d912      	bls.n	800c15c <_strtod_l+0x204>
 800c136:	2301      	movs	r3, #1
 800c138:	e7c4      	b.n	800c0c4 <_strtod_l+0x16c>
 800c13a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c13c:	1c5a      	adds	r2, r3, #1
 800c13e:	9219      	str	r2, [sp, #100]	@ 0x64
 800c140:	785a      	ldrb	r2, [r3, #1]
 800c142:	3001      	adds	r0, #1
 800c144:	2a30      	cmp	r2, #48	@ 0x30
 800c146:	d0f8      	beq.n	800c13a <_strtod_l+0x1e2>
 800c148:	f1a2 0331 	sub.w	r3, r2, #49	@ 0x31
 800c14c:	2b08      	cmp	r3, #8
 800c14e:	f200 84d3 	bhi.w	800caf8 <_strtod_l+0xba0>
 800c152:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c154:	930c      	str	r3, [sp, #48]	@ 0x30
 800c156:	4681      	mov	r9, r0
 800c158:	2000      	movs	r0, #0
 800c15a:	4605      	mov	r5, r0
 800c15c:	3a30      	subs	r2, #48	@ 0x30
 800c15e:	f100 0301 	add.w	r3, r0, #1
 800c162:	d02a      	beq.n	800c1ba <_strtod_l+0x262>
 800c164:	4499      	add	r9, r3
 800c166:	eb00 0c05 	add.w	ip, r0, r5
 800c16a:	462b      	mov	r3, r5
 800c16c:	210a      	movs	r1, #10
 800c16e:	4563      	cmp	r3, ip
 800c170:	d10d      	bne.n	800c18e <_strtod_l+0x236>
 800c172:	1c69      	adds	r1, r5, #1
 800c174:	4401      	add	r1, r0
 800c176:	4428      	add	r0, r5
 800c178:	2808      	cmp	r0, #8
 800c17a:	dc16      	bgt.n	800c1aa <_strtod_l+0x252>
 800c17c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800c17e:	230a      	movs	r3, #10
 800c180:	fb03 2300 	mla	r3, r3, r0, r2
 800c184:	930a      	str	r3, [sp, #40]	@ 0x28
 800c186:	2300      	movs	r3, #0
 800c188:	e018      	b.n	800c1bc <_strtod_l+0x264>
 800c18a:	4638      	mov	r0, r7
 800c18c:	e7da      	b.n	800c144 <_strtod_l+0x1ec>
 800c18e:	2b08      	cmp	r3, #8
 800c190:	f103 0301 	add.w	r3, r3, #1
 800c194:	dc03      	bgt.n	800c19e <_strtod_l+0x246>
 800c196:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 800c198:	434e      	muls	r6, r1
 800c19a:	960a      	str	r6, [sp, #40]	@ 0x28
 800c19c:	e7e7      	b.n	800c16e <_strtod_l+0x216>
 800c19e:	2b10      	cmp	r3, #16
 800c1a0:	bfde      	ittt	le
 800c1a2:	9e08      	ldrle	r6, [sp, #32]
 800c1a4:	434e      	mulle	r6, r1
 800c1a6:	9608      	strle	r6, [sp, #32]
 800c1a8:	e7e1      	b.n	800c16e <_strtod_l+0x216>
 800c1aa:	280f      	cmp	r0, #15
 800c1ac:	dceb      	bgt.n	800c186 <_strtod_l+0x22e>
 800c1ae:	9808      	ldr	r0, [sp, #32]
 800c1b0:	230a      	movs	r3, #10
 800c1b2:	fb03 2300 	mla	r3, r3, r0, r2
 800c1b6:	9308      	str	r3, [sp, #32]
 800c1b8:	e7e5      	b.n	800c186 <_strtod_l+0x22e>
 800c1ba:	4629      	mov	r1, r5
 800c1bc:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c1be:	1c50      	adds	r0, r2, #1
 800c1c0:	9019      	str	r0, [sp, #100]	@ 0x64
 800c1c2:	7852      	ldrb	r2, [r2, #1]
 800c1c4:	4618      	mov	r0, r3
 800c1c6:	460d      	mov	r5, r1
 800c1c8:	e7b1      	b.n	800c12e <_strtod_l+0x1d6>
 800c1ca:	f04f 0900 	mov.w	r9, #0
 800c1ce:	2301      	movs	r3, #1
 800c1d0:	e77d      	b.n	800c0ce <_strtod_l+0x176>
 800c1d2:	f04f 0c00 	mov.w	ip, #0
 800c1d6:	1ca2      	adds	r2, r4, #2
 800c1d8:	9219      	str	r2, [sp, #100]	@ 0x64
 800c1da:	78a2      	ldrb	r2, [r4, #2]
 800c1dc:	e785      	b.n	800c0ea <_strtod_l+0x192>
 800c1de:	f04f 0c01 	mov.w	ip, #1
 800c1e2:	e7f8      	b.n	800c1d6 <_strtod_l+0x27e>
 800c1e4:	0800f2b0 	.word	0x0800f2b0
 800c1e8:	0800f28c 	.word	0x0800f28c
 800c1ec:	7ff00000 	.word	0x7ff00000
 800c1f0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c1f2:	1c51      	adds	r1, r2, #1
 800c1f4:	9119      	str	r1, [sp, #100]	@ 0x64
 800c1f6:	7852      	ldrb	r2, [r2, #1]
 800c1f8:	2a30      	cmp	r2, #48	@ 0x30
 800c1fa:	d0f9      	beq.n	800c1f0 <_strtod_l+0x298>
 800c1fc:	f1a2 0131 	sub.w	r1, r2, #49	@ 0x31
 800c200:	2908      	cmp	r1, #8
 800c202:	f63f af78 	bhi.w	800c0f6 <_strtod_l+0x19e>
 800c206:	3a30      	subs	r2, #48	@ 0x30
 800c208:	920e      	str	r2, [sp, #56]	@ 0x38
 800c20a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c20c:	920f      	str	r2, [sp, #60]	@ 0x3c
 800c20e:	f04f 080a 	mov.w	r8, #10
 800c212:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800c214:	1c56      	adds	r6, r2, #1
 800c216:	9619      	str	r6, [sp, #100]	@ 0x64
 800c218:	7852      	ldrb	r2, [r2, #1]
 800c21a:	f1a2 0e30 	sub.w	lr, r2, #48	@ 0x30
 800c21e:	f1be 0f09 	cmp.w	lr, #9
 800c222:	d939      	bls.n	800c298 <_strtod_l+0x340>
 800c224:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800c226:	1a76      	subs	r6, r6, r1
 800c228:	2e08      	cmp	r6, #8
 800c22a:	f644 681f 	movw	r8, #19999	@ 0x4e1f
 800c22e:	dc03      	bgt.n	800c238 <_strtod_l+0x2e0>
 800c230:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800c232:	4588      	cmp	r8, r1
 800c234:	bfa8      	it	ge
 800c236:	4688      	movge	r8, r1
 800c238:	f1bc 0f00 	cmp.w	ip, #0
 800c23c:	d001      	beq.n	800c242 <_strtod_l+0x2ea>
 800c23e:	f1c8 0800 	rsb	r8, r8, #0
 800c242:	2d00      	cmp	r5, #0
 800c244:	d14e      	bne.n	800c2e4 <_strtod_l+0x38c>
 800c246:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800c248:	4308      	orrs	r0, r1
 800c24a:	f47f aebe 	bne.w	800bfca <_strtod_l+0x72>
 800c24e:	2b00      	cmp	r3, #0
 800c250:	f47f aed6 	bne.w	800c000 <_strtod_l+0xa8>
 800c254:	2a69      	cmp	r2, #105	@ 0x69
 800c256:	d028      	beq.n	800c2aa <_strtod_l+0x352>
 800c258:	dc25      	bgt.n	800c2a6 <_strtod_l+0x34e>
 800c25a:	2a49      	cmp	r2, #73	@ 0x49
 800c25c:	d025      	beq.n	800c2aa <_strtod_l+0x352>
 800c25e:	2a4e      	cmp	r2, #78	@ 0x4e
 800c260:	f47f aece 	bne.w	800c000 <_strtod_l+0xa8>
 800c264:	499b      	ldr	r1, [pc, #620]	@ (800c4d4 <_strtod_l+0x57c>)
 800c266:	a819      	add	r0, sp, #100	@ 0x64
 800c268:	f001 f906 	bl	800d478 <__match>
 800c26c:	2800      	cmp	r0, #0
 800c26e:	f43f aec7 	beq.w	800c000 <_strtod_l+0xa8>
 800c272:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c274:	781b      	ldrb	r3, [r3, #0]
 800c276:	2b28      	cmp	r3, #40	@ 0x28
 800c278:	d12e      	bne.n	800c2d8 <_strtod_l+0x380>
 800c27a:	4997      	ldr	r1, [pc, #604]	@ (800c4d8 <_strtod_l+0x580>)
 800c27c:	aa1c      	add	r2, sp, #112	@ 0x70
 800c27e:	a819      	add	r0, sp, #100	@ 0x64
 800c280:	f001 f90e 	bl	800d4a0 <__hexnan>
 800c284:	2805      	cmp	r0, #5
 800c286:	d127      	bne.n	800c2d8 <_strtod_l+0x380>
 800c288:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800c28a:	f8dd a070 	ldr.w	sl, [sp, #112]	@ 0x70
 800c28e:	f043 4bff 	orr.w	fp, r3, #2139095040	@ 0x7f800000
 800c292:	f44b 0be0 	orr.w	fp, fp, #7340032	@ 0x700000
 800c296:	e698      	b.n	800bfca <_strtod_l+0x72>
 800c298:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800c29a:	fb08 2101 	mla	r1, r8, r1, r2
 800c29e:	f1a1 0230 	sub.w	r2, r1, #48	@ 0x30
 800c2a2:	920e      	str	r2, [sp, #56]	@ 0x38
 800c2a4:	e7b5      	b.n	800c212 <_strtod_l+0x2ba>
 800c2a6:	2a6e      	cmp	r2, #110	@ 0x6e
 800c2a8:	e7da      	b.n	800c260 <_strtod_l+0x308>
 800c2aa:	498c      	ldr	r1, [pc, #560]	@ (800c4dc <_strtod_l+0x584>)
 800c2ac:	a819      	add	r0, sp, #100	@ 0x64
 800c2ae:	f001 f8e3 	bl	800d478 <__match>
 800c2b2:	2800      	cmp	r0, #0
 800c2b4:	f43f aea4 	beq.w	800c000 <_strtod_l+0xa8>
 800c2b8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c2ba:	4989      	ldr	r1, [pc, #548]	@ (800c4e0 <_strtod_l+0x588>)
 800c2bc:	3b01      	subs	r3, #1
 800c2be:	a819      	add	r0, sp, #100	@ 0x64
 800c2c0:	9319      	str	r3, [sp, #100]	@ 0x64
 800c2c2:	f001 f8d9 	bl	800d478 <__match>
 800c2c6:	b910      	cbnz	r0, 800c2ce <_strtod_l+0x376>
 800c2c8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800c2ca:	3301      	adds	r3, #1
 800c2cc:	9319      	str	r3, [sp, #100]	@ 0x64
 800c2ce:	f8df b220 	ldr.w	fp, [pc, #544]	@ 800c4f0 <_strtod_l+0x598>
 800c2d2:	f04f 0a00 	mov.w	sl, #0
 800c2d6:	e678      	b.n	800bfca <_strtod_l+0x72>
 800c2d8:	4882      	ldr	r0, [pc, #520]	@ (800c4e4 <_strtod_l+0x58c>)
 800c2da:	f000 fdf1 	bl	800cec0 <nan>
 800c2de:	ec5b ab10 	vmov	sl, fp, d0
 800c2e2:	e672      	b.n	800bfca <_strtod_l+0x72>
 800c2e4:	eba8 0309 	sub.w	r3, r8, r9
 800c2e8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 800c2ea:	9309      	str	r3, [sp, #36]	@ 0x24
 800c2ec:	2f00      	cmp	r7, #0
 800c2ee:	bf08      	it	eq
 800c2f0:	462f      	moveq	r7, r5
 800c2f2:	2d10      	cmp	r5, #16
 800c2f4:	462c      	mov	r4, r5
 800c2f6:	bfa8      	it	ge
 800c2f8:	2410      	movge	r4, #16
 800c2fa:	f7f4 f92b 	bl	8000554 <__aeabi_ui2d>
 800c2fe:	2d09      	cmp	r5, #9
 800c300:	4682      	mov	sl, r0
 800c302:	468b      	mov	fp, r1
 800c304:	dc13      	bgt.n	800c32e <_strtod_l+0x3d6>
 800c306:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c308:	2b00      	cmp	r3, #0
 800c30a:	f43f ae5e 	beq.w	800bfca <_strtod_l+0x72>
 800c30e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c310:	dd78      	ble.n	800c404 <_strtod_l+0x4ac>
 800c312:	2b16      	cmp	r3, #22
 800c314:	dc5f      	bgt.n	800c3d6 <_strtod_l+0x47e>
 800c316:	4974      	ldr	r1, [pc, #464]	@ (800c4e8 <_strtod_l+0x590>)
 800c318:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c31c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c320:	4652      	mov	r2, sl
 800c322:	465b      	mov	r3, fp
 800c324:	f7f4 f990 	bl	8000648 <__aeabi_dmul>
 800c328:	4682      	mov	sl, r0
 800c32a:	468b      	mov	fp, r1
 800c32c:	e64d      	b.n	800bfca <_strtod_l+0x72>
 800c32e:	4b6e      	ldr	r3, [pc, #440]	@ (800c4e8 <_strtod_l+0x590>)
 800c330:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c334:	e953 2312 	ldrd	r2, r3, [r3, #-72]	@ 0x48
 800c338:	f7f4 f986 	bl	8000648 <__aeabi_dmul>
 800c33c:	4682      	mov	sl, r0
 800c33e:	9808      	ldr	r0, [sp, #32]
 800c340:	468b      	mov	fp, r1
 800c342:	f7f4 f907 	bl	8000554 <__aeabi_ui2d>
 800c346:	4602      	mov	r2, r0
 800c348:	460b      	mov	r3, r1
 800c34a:	4650      	mov	r0, sl
 800c34c:	4659      	mov	r1, fp
 800c34e:	f7f3 ffc5 	bl	80002dc <__adddf3>
 800c352:	2d0f      	cmp	r5, #15
 800c354:	4682      	mov	sl, r0
 800c356:	468b      	mov	fp, r1
 800c358:	ddd5      	ble.n	800c306 <_strtod_l+0x3ae>
 800c35a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c35c:	1b2c      	subs	r4, r5, r4
 800c35e:	441c      	add	r4, r3
 800c360:	2c00      	cmp	r4, #0
 800c362:	f340 8096 	ble.w	800c492 <_strtod_l+0x53a>
 800c366:	f014 030f 	ands.w	r3, r4, #15
 800c36a:	d00a      	beq.n	800c382 <_strtod_l+0x42a>
 800c36c:	495e      	ldr	r1, [pc, #376]	@ (800c4e8 <_strtod_l+0x590>)
 800c36e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c372:	4652      	mov	r2, sl
 800c374:	465b      	mov	r3, fp
 800c376:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c37a:	f7f4 f965 	bl	8000648 <__aeabi_dmul>
 800c37e:	4682      	mov	sl, r0
 800c380:	468b      	mov	fp, r1
 800c382:	f034 040f 	bics.w	r4, r4, #15
 800c386:	d073      	beq.n	800c470 <_strtod_l+0x518>
 800c388:	f5b4 7f9a 	cmp.w	r4, #308	@ 0x134
 800c38c:	dd48      	ble.n	800c420 <_strtod_l+0x4c8>
 800c38e:	2400      	movs	r4, #0
 800c390:	46a0      	mov	r8, r4
 800c392:	940a      	str	r4, [sp, #40]	@ 0x28
 800c394:	46a1      	mov	r9, r4
 800c396:	9a05      	ldr	r2, [sp, #20]
 800c398:	f8df b154 	ldr.w	fp, [pc, #340]	@ 800c4f0 <_strtod_l+0x598>
 800c39c:	2322      	movs	r3, #34	@ 0x22
 800c39e:	6013      	str	r3, [r2, #0]
 800c3a0:	f04f 0a00 	mov.w	sl, #0
 800c3a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c3a6:	2b00      	cmp	r3, #0
 800c3a8:	f43f ae0f 	beq.w	800bfca <_strtod_l+0x72>
 800c3ac:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c3ae:	9805      	ldr	r0, [sp, #20]
 800c3b0:	f001 fa12 	bl	800d7d8 <_Bfree>
 800c3b4:	9805      	ldr	r0, [sp, #20]
 800c3b6:	4649      	mov	r1, r9
 800c3b8:	f001 fa0e 	bl	800d7d8 <_Bfree>
 800c3bc:	9805      	ldr	r0, [sp, #20]
 800c3be:	4641      	mov	r1, r8
 800c3c0:	f001 fa0a 	bl	800d7d8 <_Bfree>
 800c3c4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800c3c6:	9805      	ldr	r0, [sp, #20]
 800c3c8:	f001 fa06 	bl	800d7d8 <_Bfree>
 800c3cc:	9805      	ldr	r0, [sp, #20]
 800c3ce:	4621      	mov	r1, r4
 800c3d0:	f001 fa02 	bl	800d7d8 <_Bfree>
 800c3d4:	e5f9      	b.n	800bfca <_strtod_l+0x72>
 800c3d6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c3d8:	f1c5 0325 	rsb	r3, r5, #37	@ 0x25
 800c3dc:	4293      	cmp	r3, r2
 800c3de:	dbbc      	blt.n	800c35a <_strtod_l+0x402>
 800c3e0:	4c41      	ldr	r4, [pc, #260]	@ (800c4e8 <_strtod_l+0x590>)
 800c3e2:	f1c5 050f 	rsb	r5, r5, #15
 800c3e6:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800c3ea:	4652      	mov	r2, sl
 800c3ec:	465b      	mov	r3, fp
 800c3ee:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c3f2:	f7f4 f929 	bl	8000648 <__aeabi_dmul>
 800c3f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c3f8:	1b5d      	subs	r5, r3, r5
 800c3fa:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800c3fe:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c402:	e78f      	b.n	800c324 <_strtod_l+0x3cc>
 800c404:	3316      	adds	r3, #22
 800c406:	dba8      	blt.n	800c35a <_strtod_l+0x402>
 800c408:	4b37      	ldr	r3, [pc, #220]	@ (800c4e8 <_strtod_l+0x590>)
 800c40a:	eba9 0808 	sub.w	r8, r9, r8
 800c40e:	eb03 08c8 	add.w	r8, r3, r8, lsl #3
 800c412:	e9d8 2300 	ldrd	r2, r3, [r8]
 800c416:	4650      	mov	r0, sl
 800c418:	4659      	mov	r1, fp
 800c41a:	f7f4 fa3f 	bl	800089c <__aeabi_ddiv>
 800c41e:	e783      	b.n	800c328 <_strtod_l+0x3d0>
 800c420:	4b32      	ldr	r3, [pc, #200]	@ (800c4ec <_strtod_l+0x594>)
 800c422:	9308      	str	r3, [sp, #32]
 800c424:	2300      	movs	r3, #0
 800c426:	1124      	asrs	r4, r4, #4
 800c428:	4650      	mov	r0, sl
 800c42a:	4659      	mov	r1, fp
 800c42c:	461e      	mov	r6, r3
 800c42e:	2c01      	cmp	r4, #1
 800c430:	dc21      	bgt.n	800c476 <_strtod_l+0x51e>
 800c432:	b10b      	cbz	r3, 800c438 <_strtod_l+0x4e0>
 800c434:	4682      	mov	sl, r0
 800c436:	468b      	mov	fp, r1
 800c438:	492c      	ldr	r1, [pc, #176]	@ (800c4ec <_strtod_l+0x594>)
 800c43a:	f1ab 7b54 	sub.w	fp, fp, #55574528	@ 0x3500000
 800c43e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800c442:	4652      	mov	r2, sl
 800c444:	465b      	mov	r3, fp
 800c446:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c44a:	f7f4 f8fd 	bl	8000648 <__aeabi_dmul>
 800c44e:	4b28      	ldr	r3, [pc, #160]	@ (800c4f0 <_strtod_l+0x598>)
 800c450:	460a      	mov	r2, r1
 800c452:	400b      	ands	r3, r1
 800c454:	4927      	ldr	r1, [pc, #156]	@ (800c4f4 <_strtod_l+0x59c>)
 800c456:	428b      	cmp	r3, r1
 800c458:	4682      	mov	sl, r0
 800c45a:	d898      	bhi.n	800c38e <_strtod_l+0x436>
 800c45c:	f5a1 1180 	sub.w	r1, r1, #1048576	@ 0x100000
 800c460:	428b      	cmp	r3, r1
 800c462:	bf86      	itte	hi
 800c464:	f8df b090 	ldrhi.w	fp, [pc, #144]	@ 800c4f8 <_strtod_l+0x5a0>
 800c468:	f04f 3aff 	movhi.w	sl, #4294967295
 800c46c:	f102 7b54 	addls.w	fp, r2, #55574528	@ 0x3500000
 800c470:	2300      	movs	r3, #0
 800c472:	9308      	str	r3, [sp, #32]
 800c474:	e07a      	b.n	800c56c <_strtod_l+0x614>
 800c476:	07e2      	lsls	r2, r4, #31
 800c478:	d505      	bpl.n	800c486 <_strtod_l+0x52e>
 800c47a:	9b08      	ldr	r3, [sp, #32]
 800c47c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c480:	f7f4 f8e2 	bl	8000648 <__aeabi_dmul>
 800c484:	2301      	movs	r3, #1
 800c486:	9a08      	ldr	r2, [sp, #32]
 800c488:	3208      	adds	r2, #8
 800c48a:	3601      	adds	r6, #1
 800c48c:	1064      	asrs	r4, r4, #1
 800c48e:	9208      	str	r2, [sp, #32]
 800c490:	e7cd      	b.n	800c42e <_strtod_l+0x4d6>
 800c492:	d0ed      	beq.n	800c470 <_strtod_l+0x518>
 800c494:	4264      	negs	r4, r4
 800c496:	f014 020f 	ands.w	r2, r4, #15
 800c49a:	d00a      	beq.n	800c4b2 <_strtod_l+0x55a>
 800c49c:	4b12      	ldr	r3, [pc, #72]	@ (800c4e8 <_strtod_l+0x590>)
 800c49e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c4a2:	4650      	mov	r0, sl
 800c4a4:	4659      	mov	r1, fp
 800c4a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c4aa:	f7f4 f9f7 	bl	800089c <__aeabi_ddiv>
 800c4ae:	4682      	mov	sl, r0
 800c4b0:	468b      	mov	fp, r1
 800c4b2:	1124      	asrs	r4, r4, #4
 800c4b4:	d0dc      	beq.n	800c470 <_strtod_l+0x518>
 800c4b6:	2c1f      	cmp	r4, #31
 800c4b8:	dd20      	ble.n	800c4fc <_strtod_l+0x5a4>
 800c4ba:	2400      	movs	r4, #0
 800c4bc:	46a0      	mov	r8, r4
 800c4be:	940a      	str	r4, [sp, #40]	@ 0x28
 800c4c0:	46a1      	mov	r9, r4
 800c4c2:	9a05      	ldr	r2, [sp, #20]
 800c4c4:	2322      	movs	r3, #34	@ 0x22
 800c4c6:	f04f 0a00 	mov.w	sl, #0
 800c4ca:	f04f 0b00 	mov.w	fp, #0
 800c4ce:	6013      	str	r3, [r2, #0]
 800c4d0:	e768      	b.n	800c3a4 <_strtod_l+0x44c>
 800c4d2:	bf00      	nop
 800c4d4:	0800f297 	.word	0x0800f297
 800c4d8:	0800f29c 	.word	0x0800f29c
 800c4dc:	0800f28e 	.word	0x0800f28e
 800c4e0:	0800f291 	.word	0x0800f291
 800c4e4:	0800f647 	.word	0x0800f647
 800c4e8:	0800f410 	.word	0x0800f410
 800c4ec:	0800f3e8 	.word	0x0800f3e8
 800c4f0:	7ff00000 	.word	0x7ff00000
 800c4f4:	7ca00000 	.word	0x7ca00000
 800c4f8:	7fefffff 	.word	0x7fefffff
 800c4fc:	f014 0310 	ands.w	r3, r4, #16
 800c500:	bf18      	it	ne
 800c502:	236a      	movne	r3, #106	@ 0x6a
 800c504:	4ea9      	ldr	r6, [pc, #676]	@ (800c7ac <_strtod_l+0x854>)
 800c506:	9308      	str	r3, [sp, #32]
 800c508:	4650      	mov	r0, sl
 800c50a:	4659      	mov	r1, fp
 800c50c:	2300      	movs	r3, #0
 800c50e:	07e2      	lsls	r2, r4, #31
 800c510:	d504      	bpl.n	800c51c <_strtod_l+0x5c4>
 800c512:	e9d6 2300 	ldrd	r2, r3, [r6]
 800c516:	f7f4 f897 	bl	8000648 <__aeabi_dmul>
 800c51a:	2301      	movs	r3, #1
 800c51c:	1064      	asrs	r4, r4, #1
 800c51e:	f106 0608 	add.w	r6, r6, #8
 800c522:	d1f4      	bne.n	800c50e <_strtod_l+0x5b6>
 800c524:	b10b      	cbz	r3, 800c52a <_strtod_l+0x5d2>
 800c526:	4682      	mov	sl, r0
 800c528:	468b      	mov	fp, r1
 800c52a:	9b08      	ldr	r3, [sp, #32]
 800c52c:	b1b3      	cbz	r3, 800c55c <_strtod_l+0x604>
 800c52e:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800c532:	f1c2 036b 	rsb	r3, r2, #107	@ 0x6b
 800c536:	2b00      	cmp	r3, #0
 800c538:	4659      	mov	r1, fp
 800c53a:	dd0f      	ble.n	800c55c <_strtod_l+0x604>
 800c53c:	2b1f      	cmp	r3, #31
 800c53e:	dd55      	ble.n	800c5ec <_strtod_l+0x694>
 800c540:	2b34      	cmp	r3, #52	@ 0x34
 800c542:	bfde      	ittt	le
 800c544:	f04f 33ff 	movle.w	r3, #4294967295
 800c548:	f1c2 024b 	rsble	r2, r2, #75	@ 0x4b
 800c54c:	4093      	lslle	r3, r2
 800c54e:	f04f 0a00 	mov.w	sl, #0
 800c552:	bfcc      	ite	gt
 800c554:	f04f 7b5c 	movgt.w	fp, #57671680	@ 0x3700000
 800c558:	ea03 0b01 	andle.w	fp, r3, r1
 800c55c:	2200      	movs	r2, #0
 800c55e:	2300      	movs	r3, #0
 800c560:	4650      	mov	r0, sl
 800c562:	4659      	mov	r1, fp
 800c564:	f7f4 fad8 	bl	8000b18 <__aeabi_dcmpeq>
 800c568:	2800      	cmp	r0, #0
 800c56a:	d1a6      	bne.n	800c4ba <_strtod_l+0x562>
 800c56c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c56e:	9300      	str	r3, [sp, #0]
 800c570:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800c572:	9805      	ldr	r0, [sp, #20]
 800c574:	462b      	mov	r3, r5
 800c576:	463a      	mov	r2, r7
 800c578:	f001 f996 	bl	800d8a8 <__s2b>
 800c57c:	900a      	str	r0, [sp, #40]	@ 0x28
 800c57e:	2800      	cmp	r0, #0
 800c580:	f43f af05 	beq.w	800c38e <_strtod_l+0x436>
 800c584:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c586:	2a00      	cmp	r2, #0
 800c588:	eba9 0308 	sub.w	r3, r9, r8
 800c58c:	bfa8      	it	ge
 800c58e:	2300      	movge	r3, #0
 800c590:	9312      	str	r3, [sp, #72]	@ 0x48
 800c592:	2400      	movs	r4, #0
 800c594:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800c598:	9316      	str	r3, [sp, #88]	@ 0x58
 800c59a:	46a0      	mov	r8, r4
 800c59c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c59e:	9805      	ldr	r0, [sp, #20]
 800c5a0:	6859      	ldr	r1, [r3, #4]
 800c5a2:	f001 f8d9 	bl	800d758 <_Balloc>
 800c5a6:	4681      	mov	r9, r0
 800c5a8:	2800      	cmp	r0, #0
 800c5aa:	f43f aef4 	beq.w	800c396 <_strtod_l+0x43e>
 800c5ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c5b0:	691a      	ldr	r2, [r3, #16]
 800c5b2:	3202      	adds	r2, #2
 800c5b4:	f103 010c 	add.w	r1, r3, #12
 800c5b8:	0092      	lsls	r2, r2, #2
 800c5ba:	300c      	adds	r0, #12
 800c5bc:	f000 fc6f 	bl	800ce9e <memcpy>
 800c5c0:	ec4b ab10 	vmov	d0, sl, fp
 800c5c4:	9805      	ldr	r0, [sp, #20]
 800c5c6:	aa1c      	add	r2, sp, #112	@ 0x70
 800c5c8:	a91b      	add	r1, sp, #108	@ 0x6c
 800c5ca:	e9cd ab0c 	strd	sl, fp, [sp, #48]	@ 0x30
 800c5ce:	f001 fca7 	bl	800df20 <__d2b>
 800c5d2:	901a      	str	r0, [sp, #104]	@ 0x68
 800c5d4:	2800      	cmp	r0, #0
 800c5d6:	f43f aede 	beq.w	800c396 <_strtod_l+0x43e>
 800c5da:	9805      	ldr	r0, [sp, #20]
 800c5dc:	2101      	movs	r1, #1
 800c5de:	f001 f9f9 	bl	800d9d4 <__i2b>
 800c5e2:	4680      	mov	r8, r0
 800c5e4:	b948      	cbnz	r0, 800c5fa <_strtod_l+0x6a2>
 800c5e6:	f04f 0800 	mov.w	r8, #0
 800c5ea:	e6d4      	b.n	800c396 <_strtod_l+0x43e>
 800c5ec:	f04f 32ff 	mov.w	r2, #4294967295
 800c5f0:	fa02 f303 	lsl.w	r3, r2, r3
 800c5f4:	ea03 0a0a 	and.w	sl, r3, sl
 800c5f8:	e7b0      	b.n	800c55c <_strtod_l+0x604>
 800c5fa:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
 800c5fc:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800c5fe:	2d00      	cmp	r5, #0
 800c600:	bfab      	itete	ge
 800c602:	9b12      	ldrge	r3, [sp, #72]	@ 0x48
 800c604:	9b16      	ldrlt	r3, [sp, #88]	@ 0x58
 800c606:	9e16      	ldrge	r6, [sp, #88]	@ 0x58
 800c608:	9f12      	ldrlt	r7, [sp, #72]	@ 0x48
 800c60a:	bfac      	ite	ge
 800c60c:	18ef      	addge	r7, r5, r3
 800c60e:	1b5e      	sublt	r6, r3, r5
 800c610:	9b08      	ldr	r3, [sp, #32]
 800c612:	1aed      	subs	r5, r5, r3
 800c614:	4415      	add	r5, r2
 800c616:	4b66      	ldr	r3, [pc, #408]	@ (800c7b0 <_strtod_l+0x858>)
 800c618:	3d01      	subs	r5, #1
 800c61a:	429d      	cmp	r5, r3
 800c61c:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800c620:	da50      	bge.n	800c6c4 <_strtod_l+0x76c>
 800c622:	1b5b      	subs	r3, r3, r5
 800c624:	2b1f      	cmp	r3, #31
 800c626:	eba2 0203 	sub.w	r2, r2, r3
 800c62a:	f04f 0101 	mov.w	r1, #1
 800c62e:	dc3d      	bgt.n	800c6ac <_strtod_l+0x754>
 800c630:	fa01 f303 	lsl.w	r3, r1, r3
 800c634:	9313      	str	r3, [sp, #76]	@ 0x4c
 800c636:	2300      	movs	r3, #0
 800c638:	9310      	str	r3, [sp, #64]	@ 0x40
 800c63a:	18bd      	adds	r5, r7, r2
 800c63c:	9b08      	ldr	r3, [sp, #32]
 800c63e:	42af      	cmp	r7, r5
 800c640:	4416      	add	r6, r2
 800c642:	441e      	add	r6, r3
 800c644:	463b      	mov	r3, r7
 800c646:	bfa8      	it	ge
 800c648:	462b      	movge	r3, r5
 800c64a:	42b3      	cmp	r3, r6
 800c64c:	bfa8      	it	ge
 800c64e:	4633      	movge	r3, r6
 800c650:	2b00      	cmp	r3, #0
 800c652:	bfc2      	ittt	gt
 800c654:	1aed      	subgt	r5, r5, r3
 800c656:	1af6      	subgt	r6, r6, r3
 800c658:	1aff      	subgt	r7, r7, r3
 800c65a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800c65c:	2b00      	cmp	r3, #0
 800c65e:	dd16      	ble.n	800c68e <_strtod_l+0x736>
 800c660:	4641      	mov	r1, r8
 800c662:	9805      	ldr	r0, [sp, #20]
 800c664:	461a      	mov	r2, r3
 800c666:	f001 fa75 	bl	800db54 <__pow5mult>
 800c66a:	4680      	mov	r8, r0
 800c66c:	2800      	cmp	r0, #0
 800c66e:	d0ba      	beq.n	800c5e6 <_strtod_l+0x68e>
 800c670:	4601      	mov	r1, r0
 800c672:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 800c674:	9805      	ldr	r0, [sp, #20]
 800c676:	f001 f9c3 	bl	800da00 <__multiply>
 800c67a:	900e      	str	r0, [sp, #56]	@ 0x38
 800c67c:	2800      	cmp	r0, #0
 800c67e:	f43f ae8a 	beq.w	800c396 <_strtod_l+0x43e>
 800c682:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c684:	9805      	ldr	r0, [sp, #20]
 800c686:	f001 f8a7 	bl	800d7d8 <_Bfree>
 800c68a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c68c:	931a      	str	r3, [sp, #104]	@ 0x68
 800c68e:	2d00      	cmp	r5, #0
 800c690:	dc1d      	bgt.n	800c6ce <_strtod_l+0x776>
 800c692:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c694:	2b00      	cmp	r3, #0
 800c696:	dd23      	ble.n	800c6e0 <_strtod_l+0x788>
 800c698:	4649      	mov	r1, r9
 800c69a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 800c69c:	9805      	ldr	r0, [sp, #20]
 800c69e:	f001 fa59 	bl	800db54 <__pow5mult>
 800c6a2:	4681      	mov	r9, r0
 800c6a4:	b9e0      	cbnz	r0, 800c6e0 <_strtod_l+0x788>
 800c6a6:	f04f 0900 	mov.w	r9, #0
 800c6aa:	e674      	b.n	800c396 <_strtod_l+0x43e>
 800c6ac:	f1c5 457f 	rsb	r5, r5, #4278190080	@ 0xff000000
 800c6b0:	f505 057f 	add.w	r5, r5, #16711680	@ 0xff0000
 800c6b4:	f505 457b 	add.w	r5, r5, #64256	@ 0xfb00
 800c6b8:	35e2      	adds	r5, #226	@ 0xe2
 800c6ba:	fa01 f305 	lsl.w	r3, r1, r5
 800c6be:	9310      	str	r3, [sp, #64]	@ 0x40
 800c6c0:	9113      	str	r1, [sp, #76]	@ 0x4c
 800c6c2:	e7ba      	b.n	800c63a <_strtod_l+0x6e2>
 800c6c4:	2300      	movs	r3, #0
 800c6c6:	9310      	str	r3, [sp, #64]	@ 0x40
 800c6c8:	2301      	movs	r3, #1
 800c6ca:	9313      	str	r3, [sp, #76]	@ 0x4c
 800c6cc:	e7b5      	b.n	800c63a <_strtod_l+0x6e2>
 800c6ce:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c6d0:	9805      	ldr	r0, [sp, #20]
 800c6d2:	462a      	mov	r2, r5
 800c6d4:	f001 fa98 	bl	800dc08 <__lshift>
 800c6d8:	901a      	str	r0, [sp, #104]	@ 0x68
 800c6da:	2800      	cmp	r0, #0
 800c6dc:	d1d9      	bne.n	800c692 <_strtod_l+0x73a>
 800c6de:	e65a      	b.n	800c396 <_strtod_l+0x43e>
 800c6e0:	2e00      	cmp	r6, #0
 800c6e2:	dd07      	ble.n	800c6f4 <_strtod_l+0x79c>
 800c6e4:	4649      	mov	r1, r9
 800c6e6:	9805      	ldr	r0, [sp, #20]
 800c6e8:	4632      	mov	r2, r6
 800c6ea:	f001 fa8d 	bl	800dc08 <__lshift>
 800c6ee:	4681      	mov	r9, r0
 800c6f0:	2800      	cmp	r0, #0
 800c6f2:	d0d8      	beq.n	800c6a6 <_strtod_l+0x74e>
 800c6f4:	2f00      	cmp	r7, #0
 800c6f6:	dd08      	ble.n	800c70a <_strtod_l+0x7b2>
 800c6f8:	4641      	mov	r1, r8
 800c6fa:	9805      	ldr	r0, [sp, #20]
 800c6fc:	463a      	mov	r2, r7
 800c6fe:	f001 fa83 	bl	800dc08 <__lshift>
 800c702:	4680      	mov	r8, r0
 800c704:	2800      	cmp	r0, #0
 800c706:	f43f ae46 	beq.w	800c396 <_strtod_l+0x43e>
 800c70a:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c70c:	9805      	ldr	r0, [sp, #20]
 800c70e:	464a      	mov	r2, r9
 800c710:	f001 fb02 	bl	800dd18 <__mdiff>
 800c714:	4604      	mov	r4, r0
 800c716:	2800      	cmp	r0, #0
 800c718:	f43f ae3d 	beq.w	800c396 <_strtod_l+0x43e>
 800c71c:	68c3      	ldr	r3, [r0, #12]
 800c71e:	930f      	str	r3, [sp, #60]	@ 0x3c
 800c720:	2300      	movs	r3, #0
 800c722:	60c3      	str	r3, [r0, #12]
 800c724:	4641      	mov	r1, r8
 800c726:	f001 fadb 	bl	800dce0 <__mcmp>
 800c72a:	2800      	cmp	r0, #0
 800c72c:	da46      	bge.n	800c7bc <_strtod_l+0x864>
 800c72e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c730:	ea53 030a 	orrs.w	r3, r3, sl
 800c734:	d16c      	bne.n	800c810 <_strtod_l+0x8b8>
 800c736:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c73a:	2b00      	cmp	r3, #0
 800c73c:	d168      	bne.n	800c810 <_strtod_l+0x8b8>
 800c73e:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800c742:	0d1b      	lsrs	r3, r3, #20
 800c744:	051b      	lsls	r3, r3, #20
 800c746:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800c74a:	d961      	bls.n	800c810 <_strtod_l+0x8b8>
 800c74c:	6963      	ldr	r3, [r4, #20]
 800c74e:	b913      	cbnz	r3, 800c756 <_strtod_l+0x7fe>
 800c750:	6923      	ldr	r3, [r4, #16]
 800c752:	2b01      	cmp	r3, #1
 800c754:	dd5c      	ble.n	800c810 <_strtod_l+0x8b8>
 800c756:	4621      	mov	r1, r4
 800c758:	2201      	movs	r2, #1
 800c75a:	9805      	ldr	r0, [sp, #20]
 800c75c:	f001 fa54 	bl	800dc08 <__lshift>
 800c760:	4641      	mov	r1, r8
 800c762:	4604      	mov	r4, r0
 800c764:	f001 fabc 	bl	800dce0 <__mcmp>
 800c768:	2800      	cmp	r0, #0
 800c76a:	dd51      	ble.n	800c810 <_strtod_l+0x8b8>
 800c76c:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800c770:	9a08      	ldr	r2, [sp, #32]
 800c772:	0d1b      	lsrs	r3, r3, #20
 800c774:	051b      	lsls	r3, r3, #20
 800c776:	2a00      	cmp	r2, #0
 800c778:	d06b      	beq.n	800c852 <_strtod_l+0x8fa>
 800c77a:	f1b3 6fd6 	cmp.w	r3, #112197632	@ 0x6b00000
 800c77e:	d868      	bhi.n	800c852 <_strtod_l+0x8fa>
 800c780:	f1b3 7f5c 	cmp.w	r3, #57671680	@ 0x3700000
 800c784:	f67f ae9d 	bls.w	800c4c2 <_strtod_l+0x56a>
 800c788:	4b0a      	ldr	r3, [pc, #40]	@ (800c7b4 <_strtod_l+0x85c>)
 800c78a:	4650      	mov	r0, sl
 800c78c:	4659      	mov	r1, fp
 800c78e:	2200      	movs	r2, #0
 800c790:	f7f3 ff5a 	bl	8000648 <__aeabi_dmul>
 800c794:	4b08      	ldr	r3, [pc, #32]	@ (800c7b8 <_strtod_l+0x860>)
 800c796:	400b      	ands	r3, r1
 800c798:	4682      	mov	sl, r0
 800c79a:	468b      	mov	fp, r1
 800c79c:	2b00      	cmp	r3, #0
 800c79e:	f47f ae05 	bne.w	800c3ac <_strtod_l+0x454>
 800c7a2:	9a05      	ldr	r2, [sp, #20]
 800c7a4:	2322      	movs	r3, #34	@ 0x22
 800c7a6:	6013      	str	r3, [r2, #0]
 800c7a8:	e600      	b.n	800c3ac <_strtod_l+0x454>
 800c7aa:	bf00      	nop
 800c7ac:	0800f2c8 	.word	0x0800f2c8
 800c7b0:	fffffc02 	.word	0xfffffc02
 800c7b4:	39500000 	.word	0x39500000
 800c7b8:	7ff00000 	.word	0x7ff00000
 800c7bc:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800c7c0:	d165      	bne.n	800c88e <_strtod_l+0x936>
 800c7c2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800c7c4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c7c8:	b35a      	cbz	r2, 800c822 <_strtod_l+0x8ca>
 800c7ca:	4a9f      	ldr	r2, [pc, #636]	@ (800ca48 <_strtod_l+0xaf0>)
 800c7cc:	4293      	cmp	r3, r2
 800c7ce:	d12b      	bne.n	800c828 <_strtod_l+0x8d0>
 800c7d0:	9b08      	ldr	r3, [sp, #32]
 800c7d2:	4651      	mov	r1, sl
 800c7d4:	b303      	cbz	r3, 800c818 <_strtod_l+0x8c0>
 800c7d6:	4b9d      	ldr	r3, [pc, #628]	@ (800ca4c <_strtod_l+0xaf4>)
 800c7d8:	465a      	mov	r2, fp
 800c7da:	4013      	ands	r3, r2
 800c7dc:	f1b3 6fd4 	cmp.w	r3, #111149056	@ 0x6a00000
 800c7e0:	f04f 32ff 	mov.w	r2, #4294967295
 800c7e4:	d81b      	bhi.n	800c81e <_strtod_l+0x8c6>
 800c7e6:	0d1b      	lsrs	r3, r3, #20
 800c7e8:	f1c3 036b 	rsb	r3, r3, #107	@ 0x6b
 800c7ec:	fa02 f303 	lsl.w	r3, r2, r3
 800c7f0:	4299      	cmp	r1, r3
 800c7f2:	d119      	bne.n	800c828 <_strtod_l+0x8d0>
 800c7f4:	4b96      	ldr	r3, [pc, #600]	@ (800ca50 <_strtod_l+0xaf8>)
 800c7f6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c7f8:	429a      	cmp	r2, r3
 800c7fa:	d102      	bne.n	800c802 <_strtod_l+0x8aa>
 800c7fc:	3101      	adds	r1, #1
 800c7fe:	f43f adca 	beq.w	800c396 <_strtod_l+0x43e>
 800c802:	4b92      	ldr	r3, [pc, #584]	@ (800ca4c <_strtod_l+0xaf4>)
 800c804:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c806:	401a      	ands	r2, r3
 800c808:	f502 1b80 	add.w	fp, r2, #1048576	@ 0x100000
 800c80c:	f04f 0a00 	mov.w	sl, #0
 800c810:	9b08      	ldr	r3, [sp, #32]
 800c812:	2b00      	cmp	r3, #0
 800c814:	d1b8      	bne.n	800c788 <_strtod_l+0x830>
 800c816:	e5c9      	b.n	800c3ac <_strtod_l+0x454>
 800c818:	f04f 33ff 	mov.w	r3, #4294967295
 800c81c:	e7e8      	b.n	800c7f0 <_strtod_l+0x898>
 800c81e:	4613      	mov	r3, r2
 800c820:	e7e6      	b.n	800c7f0 <_strtod_l+0x898>
 800c822:	ea53 030a 	orrs.w	r3, r3, sl
 800c826:	d0a1      	beq.n	800c76c <_strtod_l+0x814>
 800c828:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800c82a:	b1db      	cbz	r3, 800c864 <_strtod_l+0x90c>
 800c82c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c82e:	4213      	tst	r3, r2
 800c830:	d0ee      	beq.n	800c810 <_strtod_l+0x8b8>
 800c832:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c834:	9a08      	ldr	r2, [sp, #32]
 800c836:	4650      	mov	r0, sl
 800c838:	4659      	mov	r1, fp
 800c83a:	b1bb      	cbz	r3, 800c86c <_strtod_l+0x914>
 800c83c:	f7ff fb6d 	bl	800bf1a <sulp>
 800c840:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800c844:	ec53 2b10 	vmov	r2, r3, d0
 800c848:	f7f3 fd48 	bl	80002dc <__adddf3>
 800c84c:	4682      	mov	sl, r0
 800c84e:	468b      	mov	fp, r1
 800c850:	e7de      	b.n	800c810 <_strtod_l+0x8b8>
 800c852:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800c856:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800c85a:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800c85e:	f04f 3aff 	mov.w	sl, #4294967295
 800c862:	e7d5      	b.n	800c810 <_strtod_l+0x8b8>
 800c864:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800c866:	ea13 0f0a 	tst.w	r3, sl
 800c86a:	e7e1      	b.n	800c830 <_strtod_l+0x8d8>
 800c86c:	f7ff fb55 	bl	800bf1a <sulp>
 800c870:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800c874:	ec53 2b10 	vmov	r2, r3, d0
 800c878:	f7f3 fd2e 	bl	80002d8 <__aeabi_dsub>
 800c87c:	2200      	movs	r2, #0
 800c87e:	2300      	movs	r3, #0
 800c880:	4682      	mov	sl, r0
 800c882:	468b      	mov	fp, r1
 800c884:	f7f4 f948 	bl	8000b18 <__aeabi_dcmpeq>
 800c888:	2800      	cmp	r0, #0
 800c88a:	d0c1      	beq.n	800c810 <_strtod_l+0x8b8>
 800c88c:	e619      	b.n	800c4c2 <_strtod_l+0x56a>
 800c88e:	4641      	mov	r1, r8
 800c890:	4620      	mov	r0, r4
 800c892:	f001 fb9d 	bl	800dfd0 <__ratio>
 800c896:	ec57 6b10 	vmov	r6, r7, d0
 800c89a:	2200      	movs	r2, #0
 800c89c:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800c8a0:	4630      	mov	r0, r6
 800c8a2:	4639      	mov	r1, r7
 800c8a4:	f7f4 f94c 	bl	8000b40 <__aeabi_dcmple>
 800c8a8:	2800      	cmp	r0, #0
 800c8aa:	d06f      	beq.n	800c98c <_strtod_l+0xa34>
 800c8ac:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c8ae:	2b00      	cmp	r3, #0
 800c8b0:	d17a      	bne.n	800c9a8 <_strtod_l+0xa50>
 800c8b2:	f1ba 0f00 	cmp.w	sl, #0
 800c8b6:	d158      	bne.n	800c96a <_strtod_l+0xa12>
 800c8b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c8ba:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800c8be:	2b00      	cmp	r3, #0
 800c8c0:	d15a      	bne.n	800c978 <_strtod_l+0xa20>
 800c8c2:	4b64      	ldr	r3, [pc, #400]	@ (800ca54 <_strtod_l+0xafc>)
 800c8c4:	2200      	movs	r2, #0
 800c8c6:	4630      	mov	r0, r6
 800c8c8:	4639      	mov	r1, r7
 800c8ca:	f7f4 f92f 	bl	8000b2c <__aeabi_dcmplt>
 800c8ce:	2800      	cmp	r0, #0
 800c8d0:	d159      	bne.n	800c986 <_strtod_l+0xa2e>
 800c8d2:	4630      	mov	r0, r6
 800c8d4:	4639      	mov	r1, r7
 800c8d6:	4b60      	ldr	r3, [pc, #384]	@ (800ca58 <_strtod_l+0xb00>)
 800c8d8:	2200      	movs	r2, #0
 800c8da:	f7f3 feb5 	bl	8000648 <__aeabi_dmul>
 800c8de:	4606      	mov	r6, r0
 800c8e0:	460f      	mov	r7, r1
 800c8e2:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
 800c8e6:	9606      	str	r6, [sp, #24]
 800c8e8:	9307      	str	r3, [sp, #28]
 800c8ea:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c8ee:	4d57      	ldr	r5, [pc, #348]	@ (800ca4c <_strtod_l+0xaf4>)
 800c8f0:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800c8f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c8f6:	401d      	ands	r5, r3
 800c8f8:	4b58      	ldr	r3, [pc, #352]	@ (800ca5c <_strtod_l+0xb04>)
 800c8fa:	429d      	cmp	r5, r3
 800c8fc:	f040 80b2 	bne.w	800ca64 <_strtod_l+0xb0c>
 800c900:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c902:	f1a3 7b54 	sub.w	fp, r3, #55574528	@ 0x3500000
 800c906:	ec4b ab10 	vmov	d0, sl, fp
 800c90a:	f001 fa99 	bl	800de40 <__ulp>
 800c90e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c912:	ec51 0b10 	vmov	r0, r1, d0
 800c916:	f7f3 fe97 	bl	8000648 <__aeabi_dmul>
 800c91a:	4652      	mov	r2, sl
 800c91c:	465b      	mov	r3, fp
 800c91e:	f7f3 fcdd 	bl	80002dc <__adddf3>
 800c922:	460b      	mov	r3, r1
 800c924:	4949      	ldr	r1, [pc, #292]	@ (800ca4c <_strtod_l+0xaf4>)
 800c926:	4a4e      	ldr	r2, [pc, #312]	@ (800ca60 <_strtod_l+0xb08>)
 800c928:	4019      	ands	r1, r3
 800c92a:	4291      	cmp	r1, r2
 800c92c:	4682      	mov	sl, r0
 800c92e:	d942      	bls.n	800c9b6 <_strtod_l+0xa5e>
 800c930:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800c932:	4b47      	ldr	r3, [pc, #284]	@ (800ca50 <_strtod_l+0xaf8>)
 800c934:	429a      	cmp	r2, r3
 800c936:	d103      	bne.n	800c940 <_strtod_l+0x9e8>
 800c938:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c93a:	3301      	adds	r3, #1
 800c93c:	f43f ad2b 	beq.w	800c396 <_strtod_l+0x43e>
 800c940:	f8df b10c 	ldr.w	fp, [pc, #268]	@ 800ca50 <_strtod_l+0xaf8>
 800c944:	f04f 3aff 	mov.w	sl, #4294967295
 800c948:	991a      	ldr	r1, [sp, #104]	@ 0x68
 800c94a:	9805      	ldr	r0, [sp, #20]
 800c94c:	f000 ff44 	bl	800d7d8 <_Bfree>
 800c950:	9805      	ldr	r0, [sp, #20]
 800c952:	4649      	mov	r1, r9
 800c954:	f000 ff40 	bl	800d7d8 <_Bfree>
 800c958:	9805      	ldr	r0, [sp, #20]
 800c95a:	4641      	mov	r1, r8
 800c95c:	f000 ff3c 	bl	800d7d8 <_Bfree>
 800c960:	9805      	ldr	r0, [sp, #20]
 800c962:	4621      	mov	r1, r4
 800c964:	f000 ff38 	bl	800d7d8 <_Bfree>
 800c968:	e618      	b.n	800c59c <_strtod_l+0x644>
 800c96a:	f1ba 0f01 	cmp.w	sl, #1
 800c96e:	d103      	bne.n	800c978 <_strtod_l+0xa20>
 800c970:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800c972:	2b00      	cmp	r3, #0
 800c974:	f43f ada5 	beq.w	800c4c2 <_strtod_l+0x56a>
 800c978:	ed9f 7b2b 	vldr	d7, [pc, #172]	@ 800ca28 <_strtod_l+0xad0>
 800c97c:	4f35      	ldr	r7, [pc, #212]	@ (800ca54 <_strtod_l+0xafc>)
 800c97e:	ed8d 7b06 	vstr	d7, [sp, #24]
 800c982:	2600      	movs	r6, #0
 800c984:	e7b1      	b.n	800c8ea <_strtod_l+0x992>
 800c986:	4f34      	ldr	r7, [pc, #208]	@ (800ca58 <_strtod_l+0xb00>)
 800c988:	2600      	movs	r6, #0
 800c98a:	e7aa      	b.n	800c8e2 <_strtod_l+0x98a>
 800c98c:	4b32      	ldr	r3, [pc, #200]	@ (800ca58 <_strtod_l+0xb00>)
 800c98e:	4630      	mov	r0, r6
 800c990:	4639      	mov	r1, r7
 800c992:	2200      	movs	r2, #0
 800c994:	f7f3 fe58 	bl	8000648 <__aeabi_dmul>
 800c998:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c99a:	4606      	mov	r6, r0
 800c99c:	460f      	mov	r7, r1
 800c99e:	2b00      	cmp	r3, #0
 800c9a0:	d09f      	beq.n	800c8e2 <_strtod_l+0x98a>
 800c9a2:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800c9a6:	e7a0      	b.n	800c8ea <_strtod_l+0x992>
 800c9a8:	ed9f 7b21 	vldr	d7, [pc, #132]	@ 800ca30 <_strtod_l+0xad8>
 800c9ac:	ed8d 7b06 	vstr	d7, [sp, #24]
 800c9b0:	ec57 6b17 	vmov	r6, r7, d7
 800c9b4:	e799      	b.n	800c8ea <_strtod_l+0x992>
 800c9b6:	f103 7b54 	add.w	fp, r3, #55574528	@ 0x3500000
 800c9ba:	9b08      	ldr	r3, [sp, #32]
 800c9bc:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
 800c9c0:	2b00      	cmp	r3, #0
 800c9c2:	d1c1      	bne.n	800c948 <_strtod_l+0x9f0>
 800c9c4:	f02b 4300 	bic.w	r3, fp, #2147483648	@ 0x80000000
 800c9c8:	0d1b      	lsrs	r3, r3, #20
 800c9ca:	051b      	lsls	r3, r3, #20
 800c9cc:	429d      	cmp	r5, r3
 800c9ce:	d1bb      	bne.n	800c948 <_strtod_l+0x9f0>
 800c9d0:	4630      	mov	r0, r6
 800c9d2:	4639      	mov	r1, r7
 800c9d4:	f7f4 faa6 	bl	8000f24 <__aeabi_d2lz>
 800c9d8:	f7f3 fe08 	bl	80005ec <__aeabi_l2d>
 800c9dc:	4602      	mov	r2, r0
 800c9de:	460b      	mov	r3, r1
 800c9e0:	4630      	mov	r0, r6
 800c9e2:	4639      	mov	r1, r7
 800c9e4:	f7f3 fc78 	bl	80002d8 <__aeabi_dsub>
 800c9e8:	460b      	mov	r3, r1
 800c9ea:	4602      	mov	r2, r0
 800c9ec:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 800c9f0:	f3cb 0613 	ubfx	r6, fp, #0, #20
 800c9f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800c9f6:	ea46 060a 	orr.w	r6, r6, sl
 800c9fa:	431e      	orrs	r6, r3
 800c9fc:	d06f      	beq.n	800cade <_strtod_l+0xb86>
 800c9fe:	a30e      	add	r3, pc, #56	@ (adr r3, 800ca38 <_strtod_l+0xae0>)
 800ca00:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca04:	f7f4 f892 	bl	8000b2c <__aeabi_dcmplt>
 800ca08:	2800      	cmp	r0, #0
 800ca0a:	f47f accf 	bne.w	800c3ac <_strtod_l+0x454>
 800ca0e:	a30c      	add	r3, pc, #48	@ (adr r3, 800ca40 <_strtod_l+0xae8>)
 800ca10:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca14:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800ca18:	f7f4 f8a6 	bl	8000b68 <__aeabi_dcmpgt>
 800ca1c:	2800      	cmp	r0, #0
 800ca1e:	d093      	beq.n	800c948 <_strtod_l+0x9f0>
 800ca20:	e4c4      	b.n	800c3ac <_strtod_l+0x454>
 800ca22:	bf00      	nop
 800ca24:	f3af 8000 	nop.w
 800ca28:	00000000 	.word	0x00000000
 800ca2c:	bff00000 	.word	0xbff00000
 800ca30:	00000000 	.word	0x00000000
 800ca34:	3ff00000 	.word	0x3ff00000
 800ca38:	94a03595 	.word	0x94a03595
 800ca3c:	3fdfffff 	.word	0x3fdfffff
 800ca40:	35afe535 	.word	0x35afe535
 800ca44:	3fe00000 	.word	0x3fe00000
 800ca48:	000fffff 	.word	0x000fffff
 800ca4c:	7ff00000 	.word	0x7ff00000
 800ca50:	7fefffff 	.word	0x7fefffff
 800ca54:	3ff00000 	.word	0x3ff00000
 800ca58:	3fe00000 	.word	0x3fe00000
 800ca5c:	7fe00000 	.word	0x7fe00000
 800ca60:	7c9fffff 	.word	0x7c9fffff
 800ca64:	9b08      	ldr	r3, [sp, #32]
 800ca66:	b323      	cbz	r3, 800cab2 <_strtod_l+0xb5a>
 800ca68:	f1b5 6fd4 	cmp.w	r5, #111149056	@ 0x6a00000
 800ca6c:	d821      	bhi.n	800cab2 <_strtod_l+0xb5a>
 800ca6e:	a328      	add	r3, pc, #160	@ (adr r3, 800cb10 <_strtod_l+0xbb8>)
 800ca70:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca74:	4630      	mov	r0, r6
 800ca76:	4639      	mov	r1, r7
 800ca78:	f7f4 f862 	bl	8000b40 <__aeabi_dcmple>
 800ca7c:	b1a0      	cbz	r0, 800caa8 <_strtod_l+0xb50>
 800ca7e:	4639      	mov	r1, r7
 800ca80:	4630      	mov	r0, r6
 800ca82:	f7f4 f8b9 	bl	8000bf8 <__aeabi_d2uiz>
 800ca86:	2801      	cmp	r0, #1
 800ca88:	bf38      	it	cc
 800ca8a:	2001      	movcc	r0, #1
 800ca8c:	f7f3 fd62 	bl	8000554 <__aeabi_ui2d>
 800ca90:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800ca92:	4606      	mov	r6, r0
 800ca94:	460f      	mov	r7, r1
 800ca96:	b9fb      	cbnz	r3, 800cad8 <_strtod_l+0xb80>
 800ca98:	f101 4300 	add.w	r3, r1, #2147483648	@ 0x80000000
 800ca9c:	9014      	str	r0, [sp, #80]	@ 0x50
 800ca9e:	9315      	str	r3, [sp, #84]	@ 0x54
 800caa0:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
 800caa4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
 800caa8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800caaa:	f103 63d6 	add.w	r3, r3, #112197632	@ 0x6b00000
 800caae:	1b5b      	subs	r3, r3, r5
 800cab0:	9311      	str	r3, [sp, #68]	@ 0x44
 800cab2:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800cab6:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	@ 0x40
 800caba:	f001 f9c1 	bl	800de40 <__ulp>
 800cabe:	4650      	mov	r0, sl
 800cac0:	ec53 2b10 	vmov	r2, r3, d0
 800cac4:	4659      	mov	r1, fp
 800cac6:	f7f3 fdbf 	bl	8000648 <__aeabi_dmul>
 800caca:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 800cace:	f7f3 fc05 	bl	80002dc <__adddf3>
 800cad2:	4682      	mov	sl, r0
 800cad4:	468b      	mov	fp, r1
 800cad6:	e770      	b.n	800c9ba <_strtod_l+0xa62>
 800cad8:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
 800cadc:	e7e0      	b.n	800caa0 <_strtod_l+0xb48>
 800cade:	a30e      	add	r3, pc, #56	@ (adr r3, 800cb18 <_strtod_l+0xbc0>)
 800cae0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cae4:	f7f4 f822 	bl	8000b2c <__aeabi_dcmplt>
 800cae8:	e798      	b.n	800ca1c <_strtod_l+0xac4>
 800caea:	2300      	movs	r3, #0
 800caec:	930b      	str	r3, [sp, #44]	@ 0x2c
 800caee:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
 800caf0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 800caf2:	6013      	str	r3, [r2, #0]
 800caf4:	f7ff ba6d 	b.w	800bfd2 <_strtod_l+0x7a>
 800caf8:	2a65      	cmp	r2, #101	@ 0x65
 800cafa:	f43f ab66 	beq.w	800c1ca <_strtod_l+0x272>
 800cafe:	2a45      	cmp	r2, #69	@ 0x45
 800cb00:	f43f ab63 	beq.w	800c1ca <_strtod_l+0x272>
 800cb04:	2301      	movs	r3, #1
 800cb06:	f7ff bb9e 	b.w	800c246 <_strtod_l+0x2ee>
 800cb0a:	bf00      	nop
 800cb0c:	f3af 8000 	nop.w
 800cb10:	ffc00000 	.word	0xffc00000
 800cb14:	41dfffff 	.word	0x41dfffff
 800cb18:	94a03595 	.word	0x94a03595
 800cb1c:	3fcfffff 	.word	0x3fcfffff

0800cb20 <strtod>:
 800cb20:	460a      	mov	r2, r1
 800cb22:	4601      	mov	r1, r0
 800cb24:	4802      	ldr	r0, [pc, #8]	@ (800cb30 <strtod+0x10>)
 800cb26:	4b03      	ldr	r3, [pc, #12]	@ (800cb34 <strtod+0x14>)
 800cb28:	6800      	ldr	r0, [r0, #0]
 800cb2a:	f7ff ba15 	b.w	800bf58 <_strtod_l>
 800cb2e:	bf00      	nop
 800cb30:	200001c0 	.word	0x200001c0
 800cb34:	20000054 	.word	0x20000054

0800cb38 <std>:
 800cb38:	2300      	movs	r3, #0
 800cb3a:	b510      	push	{r4, lr}
 800cb3c:	4604      	mov	r4, r0
 800cb3e:	e9c0 3300 	strd	r3, r3, [r0]
 800cb42:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800cb46:	6083      	str	r3, [r0, #8]
 800cb48:	8181      	strh	r1, [r0, #12]
 800cb4a:	6643      	str	r3, [r0, #100]	@ 0x64
 800cb4c:	81c2      	strh	r2, [r0, #14]
 800cb4e:	6183      	str	r3, [r0, #24]
 800cb50:	4619      	mov	r1, r3
 800cb52:	2208      	movs	r2, #8
 800cb54:	305c      	adds	r0, #92	@ 0x5c
 800cb56:	f000 f914 	bl	800cd82 <memset>
 800cb5a:	4b0d      	ldr	r3, [pc, #52]	@ (800cb90 <std+0x58>)
 800cb5c:	6263      	str	r3, [r4, #36]	@ 0x24
 800cb5e:	4b0d      	ldr	r3, [pc, #52]	@ (800cb94 <std+0x5c>)
 800cb60:	62a3      	str	r3, [r4, #40]	@ 0x28
 800cb62:	4b0d      	ldr	r3, [pc, #52]	@ (800cb98 <std+0x60>)
 800cb64:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800cb66:	4b0d      	ldr	r3, [pc, #52]	@ (800cb9c <std+0x64>)
 800cb68:	6323      	str	r3, [r4, #48]	@ 0x30
 800cb6a:	4b0d      	ldr	r3, [pc, #52]	@ (800cba0 <std+0x68>)
 800cb6c:	6224      	str	r4, [r4, #32]
 800cb6e:	429c      	cmp	r4, r3
 800cb70:	d006      	beq.n	800cb80 <std+0x48>
 800cb72:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800cb76:	4294      	cmp	r4, r2
 800cb78:	d002      	beq.n	800cb80 <std+0x48>
 800cb7a:	33d0      	adds	r3, #208	@ 0xd0
 800cb7c:	429c      	cmp	r4, r3
 800cb7e:	d105      	bne.n	800cb8c <std+0x54>
 800cb80:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800cb84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb88:	f000 b986 	b.w	800ce98 <__retarget_lock_init_recursive>
 800cb8c:	bd10      	pop	{r4, pc}
 800cb8e:	bf00      	nop
 800cb90:	0800ccfd 	.word	0x0800ccfd
 800cb94:	0800cd1f 	.word	0x0800cd1f
 800cb98:	0800cd57 	.word	0x0800cd57
 800cb9c:	0800cd7b 	.word	0x0800cd7b
 800cba0:	20000c6c 	.word	0x20000c6c

0800cba4 <stdio_exit_handler>:
 800cba4:	4a02      	ldr	r2, [pc, #8]	@ (800cbb0 <stdio_exit_handler+0xc>)
 800cba6:	4903      	ldr	r1, [pc, #12]	@ (800cbb4 <stdio_exit_handler+0x10>)
 800cba8:	4803      	ldr	r0, [pc, #12]	@ (800cbb8 <stdio_exit_handler+0x14>)
 800cbaa:	f000 b869 	b.w	800cc80 <_fwalk_sglue>
 800cbae:	bf00      	nop
 800cbb0:	20000048 	.word	0x20000048
 800cbb4:	0800e7a9 	.word	0x0800e7a9
 800cbb8:	200001c4 	.word	0x200001c4

0800cbbc <cleanup_stdio>:
 800cbbc:	6841      	ldr	r1, [r0, #4]
 800cbbe:	4b0c      	ldr	r3, [pc, #48]	@ (800cbf0 <cleanup_stdio+0x34>)
 800cbc0:	4299      	cmp	r1, r3
 800cbc2:	b510      	push	{r4, lr}
 800cbc4:	4604      	mov	r4, r0
 800cbc6:	d001      	beq.n	800cbcc <cleanup_stdio+0x10>
 800cbc8:	f001 fdee 	bl	800e7a8 <_fflush_r>
 800cbcc:	68a1      	ldr	r1, [r4, #8]
 800cbce:	4b09      	ldr	r3, [pc, #36]	@ (800cbf4 <cleanup_stdio+0x38>)
 800cbd0:	4299      	cmp	r1, r3
 800cbd2:	d002      	beq.n	800cbda <cleanup_stdio+0x1e>
 800cbd4:	4620      	mov	r0, r4
 800cbd6:	f001 fde7 	bl	800e7a8 <_fflush_r>
 800cbda:	68e1      	ldr	r1, [r4, #12]
 800cbdc:	4b06      	ldr	r3, [pc, #24]	@ (800cbf8 <cleanup_stdio+0x3c>)
 800cbde:	4299      	cmp	r1, r3
 800cbe0:	d004      	beq.n	800cbec <cleanup_stdio+0x30>
 800cbe2:	4620      	mov	r0, r4
 800cbe4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cbe8:	f001 bdde 	b.w	800e7a8 <_fflush_r>
 800cbec:	bd10      	pop	{r4, pc}
 800cbee:	bf00      	nop
 800cbf0:	20000c6c 	.word	0x20000c6c
 800cbf4:	20000cd4 	.word	0x20000cd4
 800cbf8:	20000d3c 	.word	0x20000d3c

0800cbfc <global_stdio_init.part.0>:
 800cbfc:	b510      	push	{r4, lr}
 800cbfe:	4b0b      	ldr	r3, [pc, #44]	@ (800cc2c <global_stdio_init.part.0+0x30>)
 800cc00:	4c0b      	ldr	r4, [pc, #44]	@ (800cc30 <global_stdio_init.part.0+0x34>)
 800cc02:	4a0c      	ldr	r2, [pc, #48]	@ (800cc34 <global_stdio_init.part.0+0x38>)
 800cc04:	601a      	str	r2, [r3, #0]
 800cc06:	4620      	mov	r0, r4
 800cc08:	2200      	movs	r2, #0
 800cc0a:	2104      	movs	r1, #4
 800cc0c:	f7ff ff94 	bl	800cb38 <std>
 800cc10:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800cc14:	2201      	movs	r2, #1
 800cc16:	2109      	movs	r1, #9
 800cc18:	f7ff ff8e 	bl	800cb38 <std>
 800cc1c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800cc20:	2202      	movs	r2, #2
 800cc22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc26:	2112      	movs	r1, #18
 800cc28:	f7ff bf86 	b.w	800cb38 <std>
 800cc2c:	20000da4 	.word	0x20000da4
 800cc30:	20000c6c 	.word	0x20000c6c
 800cc34:	0800cba5 	.word	0x0800cba5

0800cc38 <__sfp_lock_acquire>:
 800cc38:	4801      	ldr	r0, [pc, #4]	@ (800cc40 <__sfp_lock_acquire+0x8>)
 800cc3a:	f000 b92e 	b.w	800ce9a <__retarget_lock_acquire_recursive>
 800cc3e:	bf00      	nop
 800cc40:	20000dad 	.word	0x20000dad

0800cc44 <__sfp_lock_release>:
 800cc44:	4801      	ldr	r0, [pc, #4]	@ (800cc4c <__sfp_lock_release+0x8>)
 800cc46:	f000 b929 	b.w	800ce9c <__retarget_lock_release_recursive>
 800cc4a:	bf00      	nop
 800cc4c:	20000dad 	.word	0x20000dad

0800cc50 <__sinit>:
 800cc50:	b510      	push	{r4, lr}
 800cc52:	4604      	mov	r4, r0
 800cc54:	f7ff fff0 	bl	800cc38 <__sfp_lock_acquire>
 800cc58:	6a23      	ldr	r3, [r4, #32]
 800cc5a:	b11b      	cbz	r3, 800cc64 <__sinit+0x14>
 800cc5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc60:	f7ff bff0 	b.w	800cc44 <__sfp_lock_release>
 800cc64:	4b04      	ldr	r3, [pc, #16]	@ (800cc78 <__sinit+0x28>)
 800cc66:	6223      	str	r3, [r4, #32]
 800cc68:	4b04      	ldr	r3, [pc, #16]	@ (800cc7c <__sinit+0x2c>)
 800cc6a:	681b      	ldr	r3, [r3, #0]
 800cc6c:	2b00      	cmp	r3, #0
 800cc6e:	d1f5      	bne.n	800cc5c <__sinit+0xc>
 800cc70:	f7ff ffc4 	bl	800cbfc <global_stdio_init.part.0>
 800cc74:	e7f2      	b.n	800cc5c <__sinit+0xc>
 800cc76:	bf00      	nop
 800cc78:	0800cbbd 	.word	0x0800cbbd
 800cc7c:	20000da4 	.word	0x20000da4

0800cc80 <_fwalk_sglue>:
 800cc80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cc84:	4607      	mov	r7, r0
 800cc86:	4688      	mov	r8, r1
 800cc88:	4614      	mov	r4, r2
 800cc8a:	2600      	movs	r6, #0
 800cc8c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800cc90:	f1b9 0901 	subs.w	r9, r9, #1
 800cc94:	d505      	bpl.n	800cca2 <_fwalk_sglue+0x22>
 800cc96:	6824      	ldr	r4, [r4, #0]
 800cc98:	2c00      	cmp	r4, #0
 800cc9a:	d1f7      	bne.n	800cc8c <_fwalk_sglue+0xc>
 800cc9c:	4630      	mov	r0, r6
 800cc9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800cca2:	89ab      	ldrh	r3, [r5, #12]
 800cca4:	2b01      	cmp	r3, #1
 800cca6:	d907      	bls.n	800ccb8 <_fwalk_sglue+0x38>
 800cca8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800ccac:	3301      	adds	r3, #1
 800ccae:	d003      	beq.n	800ccb8 <_fwalk_sglue+0x38>
 800ccb0:	4629      	mov	r1, r5
 800ccb2:	4638      	mov	r0, r7
 800ccb4:	47c0      	blx	r8
 800ccb6:	4306      	orrs	r6, r0
 800ccb8:	3568      	adds	r5, #104	@ 0x68
 800ccba:	e7e9      	b.n	800cc90 <_fwalk_sglue+0x10>

0800ccbc <siprintf>:
 800ccbc:	b40e      	push	{r1, r2, r3}
 800ccbe:	b500      	push	{lr}
 800ccc0:	b09c      	sub	sp, #112	@ 0x70
 800ccc2:	ab1d      	add	r3, sp, #116	@ 0x74
 800ccc4:	9002      	str	r0, [sp, #8]
 800ccc6:	9006      	str	r0, [sp, #24]
 800ccc8:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 800cccc:	4809      	ldr	r0, [pc, #36]	@ (800ccf4 <siprintf+0x38>)
 800ccce:	9107      	str	r1, [sp, #28]
 800ccd0:	9104      	str	r1, [sp, #16]
 800ccd2:	4909      	ldr	r1, [pc, #36]	@ (800ccf8 <siprintf+0x3c>)
 800ccd4:	f853 2b04 	ldr.w	r2, [r3], #4
 800ccd8:	9105      	str	r1, [sp, #20]
 800ccda:	6800      	ldr	r0, [r0, #0]
 800ccdc:	9301      	str	r3, [sp, #4]
 800ccde:	a902      	add	r1, sp, #8
 800cce0:	f001 fa54 	bl	800e18c <_svfiprintf_r>
 800cce4:	9b02      	ldr	r3, [sp, #8]
 800cce6:	2200      	movs	r2, #0
 800cce8:	701a      	strb	r2, [r3, #0]
 800ccea:	b01c      	add	sp, #112	@ 0x70
 800ccec:	f85d eb04 	ldr.w	lr, [sp], #4
 800ccf0:	b003      	add	sp, #12
 800ccf2:	4770      	bx	lr
 800ccf4:	200001c0 	.word	0x200001c0
 800ccf8:	ffff0208 	.word	0xffff0208

0800ccfc <__sread>:
 800ccfc:	b510      	push	{r4, lr}
 800ccfe:	460c      	mov	r4, r1
 800cd00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cd04:	f000 f87a 	bl	800cdfc <_read_r>
 800cd08:	2800      	cmp	r0, #0
 800cd0a:	bfab      	itete	ge
 800cd0c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800cd0e:	89a3      	ldrhlt	r3, [r4, #12]
 800cd10:	181b      	addge	r3, r3, r0
 800cd12:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800cd16:	bfac      	ite	ge
 800cd18:	6563      	strge	r3, [r4, #84]	@ 0x54
 800cd1a:	81a3      	strhlt	r3, [r4, #12]
 800cd1c:	bd10      	pop	{r4, pc}

0800cd1e <__swrite>:
 800cd1e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd22:	461f      	mov	r7, r3
 800cd24:	898b      	ldrh	r3, [r1, #12]
 800cd26:	05db      	lsls	r3, r3, #23
 800cd28:	4605      	mov	r5, r0
 800cd2a:	460c      	mov	r4, r1
 800cd2c:	4616      	mov	r6, r2
 800cd2e:	d505      	bpl.n	800cd3c <__swrite+0x1e>
 800cd30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cd34:	2302      	movs	r3, #2
 800cd36:	2200      	movs	r2, #0
 800cd38:	f000 f84e 	bl	800cdd8 <_lseek_r>
 800cd3c:	89a3      	ldrh	r3, [r4, #12]
 800cd3e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800cd42:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800cd46:	81a3      	strh	r3, [r4, #12]
 800cd48:	4632      	mov	r2, r6
 800cd4a:	463b      	mov	r3, r7
 800cd4c:	4628      	mov	r0, r5
 800cd4e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cd52:	f000 b865 	b.w	800ce20 <_write_r>

0800cd56 <__sseek>:
 800cd56:	b510      	push	{r4, lr}
 800cd58:	460c      	mov	r4, r1
 800cd5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cd5e:	f000 f83b 	bl	800cdd8 <_lseek_r>
 800cd62:	1c43      	adds	r3, r0, #1
 800cd64:	89a3      	ldrh	r3, [r4, #12]
 800cd66:	bf15      	itete	ne
 800cd68:	6560      	strne	r0, [r4, #84]	@ 0x54
 800cd6a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800cd6e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800cd72:	81a3      	strheq	r3, [r4, #12]
 800cd74:	bf18      	it	ne
 800cd76:	81a3      	strhne	r3, [r4, #12]
 800cd78:	bd10      	pop	{r4, pc}

0800cd7a <__sclose>:
 800cd7a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cd7e:	f000 b81b 	b.w	800cdb8 <_close_r>

0800cd82 <memset>:
 800cd82:	4402      	add	r2, r0
 800cd84:	4603      	mov	r3, r0
 800cd86:	4293      	cmp	r3, r2
 800cd88:	d100      	bne.n	800cd8c <memset+0xa>
 800cd8a:	4770      	bx	lr
 800cd8c:	f803 1b01 	strb.w	r1, [r3], #1
 800cd90:	e7f9      	b.n	800cd86 <memset+0x4>

0800cd92 <strncmp>:
 800cd92:	b510      	push	{r4, lr}
 800cd94:	b16a      	cbz	r2, 800cdb2 <strncmp+0x20>
 800cd96:	3901      	subs	r1, #1
 800cd98:	1884      	adds	r4, r0, r2
 800cd9a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800cd9e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800cda2:	429a      	cmp	r2, r3
 800cda4:	d103      	bne.n	800cdae <strncmp+0x1c>
 800cda6:	42a0      	cmp	r0, r4
 800cda8:	d001      	beq.n	800cdae <strncmp+0x1c>
 800cdaa:	2a00      	cmp	r2, #0
 800cdac:	d1f5      	bne.n	800cd9a <strncmp+0x8>
 800cdae:	1ad0      	subs	r0, r2, r3
 800cdb0:	bd10      	pop	{r4, pc}
 800cdb2:	4610      	mov	r0, r2
 800cdb4:	e7fc      	b.n	800cdb0 <strncmp+0x1e>
	...

0800cdb8 <_close_r>:
 800cdb8:	b538      	push	{r3, r4, r5, lr}
 800cdba:	4d06      	ldr	r5, [pc, #24]	@ (800cdd4 <_close_r+0x1c>)
 800cdbc:	2300      	movs	r3, #0
 800cdbe:	4604      	mov	r4, r0
 800cdc0:	4608      	mov	r0, r1
 800cdc2:	602b      	str	r3, [r5, #0]
 800cdc4:	f7f6 fa10 	bl	80031e8 <_close>
 800cdc8:	1c43      	adds	r3, r0, #1
 800cdca:	d102      	bne.n	800cdd2 <_close_r+0x1a>
 800cdcc:	682b      	ldr	r3, [r5, #0]
 800cdce:	b103      	cbz	r3, 800cdd2 <_close_r+0x1a>
 800cdd0:	6023      	str	r3, [r4, #0]
 800cdd2:	bd38      	pop	{r3, r4, r5, pc}
 800cdd4:	20000da8 	.word	0x20000da8

0800cdd8 <_lseek_r>:
 800cdd8:	b538      	push	{r3, r4, r5, lr}
 800cdda:	4d07      	ldr	r5, [pc, #28]	@ (800cdf8 <_lseek_r+0x20>)
 800cddc:	4604      	mov	r4, r0
 800cdde:	4608      	mov	r0, r1
 800cde0:	4611      	mov	r1, r2
 800cde2:	2200      	movs	r2, #0
 800cde4:	602a      	str	r2, [r5, #0]
 800cde6:	461a      	mov	r2, r3
 800cde8:	f7f6 fa25 	bl	8003236 <_lseek>
 800cdec:	1c43      	adds	r3, r0, #1
 800cdee:	d102      	bne.n	800cdf6 <_lseek_r+0x1e>
 800cdf0:	682b      	ldr	r3, [r5, #0]
 800cdf2:	b103      	cbz	r3, 800cdf6 <_lseek_r+0x1e>
 800cdf4:	6023      	str	r3, [r4, #0]
 800cdf6:	bd38      	pop	{r3, r4, r5, pc}
 800cdf8:	20000da8 	.word	0x20000da8

0800cdfc <_read_r>:
 800cdfc:	b538      	push	{r3, r4, r5, lr}
 800cdfe:	4d07      	ldr	r5, [pc, #28]	@ (800ce1c <_read_r+0x20>)
 800ce00:	4604      	mov	r4, r0
 800ce02:	4608      	mov	r0, r1
 800ce04:	4611      	mov	r1, r2
 800ce06:	2200      	movs	r2, #0
 800ce08:	602a      	str	r2, [r5, #0]
 800ce0a:	461a      	mov	r2, r3
 800ce0c:	f7f6 f9b3 	bl	8003176 <_read>
 800ce10:	1c43      	adds	r3, r0, #1
 800ce12:	d102      	bne.n	800ce1a <_read_r+0x1e>
 800ce14:	682b      	ldr	r3, [r5, #0]
 800ce16:	b103      	cbz	r3, 800ce1a <_read_r+0x1e>
 800ce18:	6023      	str	r3, [r4, #0]
 800ce1a:	bd38      	pop	{r3, r4, r5, pc}
 800ce1c:	20000da8 	.word	0x20000da8

0800ce20 <_write_r>:
 800ce20:	b538      	push	{r3, r4, r5, lr}
 800ce22:	4d07      	ldr	r5, [pc, #28]	@ (800ce40 <_write_r+0x20>)
 800ce24:	4604      	mov	r4, r0
 800ce26:	4608      	mov	r0, r1
 800ce28:	4611      	mov	r1, r2
 800ce2a:	2200      	movs	r2, #0
 800ce2c:	602a      	str	r2, [r5, #0]
 800ce2e:	461a      	mov	r2, r3
 800ce30:	f7f6 f9be 	bl	80031b0 <_write>
 800ce34:	1c43      	adds	r3, r0, #1
 800ce36:	d102      	bne.n	800ce3e <_write_r+0x1e>
 800ce38:	682b      	ldr	r3, [r5, #0]
 800ce3a:	b103      	cbz	r3, 800ce3e <_write_r+0x1e>
 800ce3c:	6023      	str	r3, [r4, #0]
 800ce3e:	bd38      	pop	{r3, r4, r5, pc}
 800ce40:	20000da8 	.word	0x20000da8

0800ce44 <__errno>:
 800ce44:	4b01      	ldr	r3, [pc, #4]	@ (800ce4c <__errno+0x8>)
 800ce46:	6818      	ldr	r0, [r3, #0]
 800ce48:	4770      	bx	lr
 800ce4a:	bf00      	nop
 800ce4c:	200001c0 	.word	0x200001c0

0800ce50 <__libc_init_array>:
 800ce50:	b570      	push	{r4, r5, r6, lr}
 800ce52:	4d0d      	ldr	r5, [pc, #52]	@ (800ce88 <__libc_init_array+0x38>)
 800ce54:	4c0d      	ldr	r4, [pc, #52]	@ (800ce8c <__libc_init_array+0x3c>)
 800ce56:	1b64      	subs	r4, r4, r5
 800ce58:	10a4      	asrs	r4, r4, #2
 800ce5a:	2600      	movs	r6, #0
 800ce5c:	42a6      	cmp	r6, r4
 800ce5e:	d109      	bne.n	800ce74 <__libc_init_array+0x24>
 800ce60:	4d0b      	ldr	r5, [pc, #44]	@ (800ce90 <__libc_init_array+0x40>)
 800ce62:	4c0c      	ldr	r4, [pc, #48]	@ (800ce94 <__libc_init_array+0x44>)
 800ce64:	f002 f9ce 	bl	800f204 <_init>
 800ce68:	1b64      	subs	r4, r4, r5
 800ce6a:	10a4      	asrs	r4, r4, #2
 800ce6c:	2600      	movs	r6, #0
 800ce6e:	42a6      	cmp	r6, r4
 800ce70:	d105      	bne.n	800ce7e <__libc_init_array+0x2e>
 800ce72:	bd70      	pop	{r4, r5, r6, pc}
 800ce74:	f855 3b04 	ldr.w	r3, [r5], #4
 800ce78:	4798      	blx	r3
 800ce7a:	3601      	adds	r6, #1
 800ce7c:	e7ee      	b.n	800ce5c <__libc_init_array+0xc>
 800ce7e:	f855 3b04 	ldr.w	r3, [r5], #4
 800ce82:	4798      	blx	r3
 800ce84:	3601      	adds	r6, #1
 800ce86:	e7f2      	b.n	800ce6e <__libc_init_array+0x1e>
 800ce88:	0800f660 	.word	0x0800f660
 800ce8c:	0800f660 	.word	0x0800f660
 800ce90:	0800f660 	.word	0x0800f660
 800ce94:	0800f664 	.word	0x0800f664

0800ce98 <__retarget_lock_init_recursive>:
 800ce98:	4770      	bx	lr

0800ce9a <__retarget_lock_acquire_recursive>:
 800ce9a:	4770      	bx	lr

0800ce9c <__retarget_lock_release_recursive>:
 800ce9c:	4770      	bx	lr

0800ce9e <memcpy>:
 800ce9e:	440a      	add	r2, r1
 800cea0:	4291      	cmp	r1, r2
 800cea2:	f100 33ff 	add.w	r3, r0, #4294967295
 800cea6:	d100      	bne.n	800ceaa <memcpy+0xc>
 800cea8:	4770      	bx	lr
 800ceaa:	b510      	push	{r4, lr}
 800ceac:	f811 4b01 	ldrb.w	r4, [r1], #1
 800ceb0:	f803 4f01 	strb.w	r4, [r3, #1]!
 800ceb4:	4291      	cmp	r1, r2
 800ceb6:	d1f9      	bne.n	800ceac <memcpy+0xe>
 800ceb8:	bd10      	pop	{r4, pc}
 800ceba:	0000      	movs	r0, r0
 800cebc:	0000      	movs	r0, r0
	...

0800cec0 <nan>:
 800cec0:	ed9f 0b01 	vldr	d0, [pc, #4]	@ 800cec8 <nan+0x8>
 800cec4:	4770      	bx	lr
 800cec6:	bf00      	nop
 800cec8:	00000000 	.word	0x00000000
 800cecc:	7ff80000 	.word	0x7ff80000

0800ced0 <_free_r>:
 800ced0:	b538      	push	{r3, r4, r5, lr}
 800ced2:	4605      	mov	r5, r0
 800ced4:	2900      	cmp	r1, #0
 800ced6:	d041      	beq.n	800cf5c <_free_r+0x8c>
 800ced8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800cedc:	1f0c      	subs	r4, r1, #4
 800cede:	2b00      	cmp	r3, #0
 800cee0:	bfb8      	it	lt
 800cee2:	18e4      	addlt	r4, r4, r3
 800cee4:	f000 fc2c 	bl	800d740 <__malloc_lock>
 800cee8:	4a1d      	ldr	r2, [pc, #116]	@ (800cf60 <_free_r+0x90>)
 800ceea:	6813      	ldr	r3, [r2, #0]
 800ceec:	b933      	cbnz	r3, 800cefc <_free_r+0x2c>
 800ceee:	6063      	str	r3, [r4, #4]
 800cef0:	6014      	str	r4, [r2, #0]
 800cef2:	4628      	mov	r0, r5
 800cef4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cef8:	f000 bc28 	b.w	800d74c <__malloc_unlock>
 800cefc:	42a3      	cmp	r3, r4
 800cefe:	d908      	bls.n	800cf12 <_free_r+0x42>
 800cf00:	6820      	ldr	r0, [r4, #0]
 800cf02:	1821      	adds	r1, r4, r0
 800cf04:	428b      	cmp	r3, r1
 800cf06:	bf01      	itttt	eq
 800cf08:	6819      	ldreq	r1, [r3, #0]
 800cf0a:	685b      	ldreq	r3, [r3, #4]
 800cf0c:	1809      	addeq	r1, r1, r0
 800cf0e:	6021      	streq	r1, [r4, #0]
 800cf10:	e7ed      	b.n	800ceee <_free_r+0x1e>
 800cf12:	461a      	mov	r2, r3
 800cf14:	685b      	ldr	r3, [r3, #4]
 800cf16:	b10b      	cbz	r3, 800cf1c <_free_r+0x4c>
 800cf18:	42a3      	cmp	r3, r4
 800cf1a:	d9fa      	bls.n	800cf12 <_free_r+0x42>
 800cf1c:	6811      	ldr	r1, [r2, #0]
 800cf1e:	1850      	adds	r0, r2, r1
 800cf20:	42a0      	cmp	r0, r4
 800cf22:	d10b      	bne.n	800cf3c <_free_r+0x6c>
 800cf24:	6820      	ldr	r0, [r4, #0]
 800cf26:	4401      	add	r1, r0
 800cf28:	1850      	adds	r0, r2, r1
 800cf2a:	4283      	cmp	r3, r0
 800cf2c:	6011      	str	r1, [r2, #0]
 800cf2e:	d1e0      	bne.n	800cef2 <_free_r+0x22>
 800cf30:	6818      	ldr	r0, [r3, #0]
 800cf32:	685b      	ldr	r3, [r3, #4]
 800cf34:	6053      	str	r3, [r2, #4]
 800cf36:	4408      	add	r0, r1
 800cf38:	6010      	str	r0, [r2, #0]
 800cf3a:	e7da      	b.n	800cef2 <_free_r+0x22>
 800cf3c:	d902      	bls.n	800cf44 <_free_r+0x74>
 800cf3e:	230c      	movs	r3, #12
 800cf40:	602b      	str	r3, [r5, #0]
 800cf42:	e7d6      	b.n	800cef2 <_free_r+0x22>
 800cf44:	6820      	ldr	r0, [r4, #0]
 800cf46:	1821      	adds	r1, r4, r0
 800cf48:	428b      	cmp	r3, r1
 800cf4a:	bf04      	itt	eq
 800cf4c:	6819      	ldreq	r1, [r3, #0]
 800cf4e:	685b      	ldreq	r3, [r3, #4]
 800cf50:	6063      	str	r3, [r4, #4]
 800cf52:	bf04      	itt	eq
 800cf54:	1809      	addeq	r1, r1, r0
 800cf56:	6021      	streq	r1, [r4, #0]
 800cf58:	6054      	str	r4, [r2, #4]
 800cf5a:	e7ca      	b.n	800cef2 <_free_r+0x22>
 800cf5c:	bd38      	pop	{r3, r4, r5, pc}
 800cf5e:	bf00      	nop
 800cf60:	20000db4 	.word	0x20000db4

0800cf64 <rshift>:
 800cf64:	6903      	ldr	r3, [r0, #16]
 800cf66:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800cf6a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf6e:	ea4f 1261 	mov.w	r2, r1, asr #5
 800cf72:	f100 0414 	add.w	r4, r0, #20
 800cf76:	dd45      	ble.n	800d004 <rshift+0xa0>
 800cf78:	f011 011f 	ands.w	r1, r1, #31
 800cf7c:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800cf80:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800cf84:	d10c      	bne.n	800cfa0 <rshift+0x3c>
 800cf86:	f100 0710 	add.w	r7, r0, #16
 800cf8a:	4629      	mov	r1, r5
 800cf8c:	42b1      	cmp	r1, r6
 800cf8e:	d334      	bcc.n	800cffa <rshift+0x96>
 800cf90:	1a9b      	subs	r3, r3, r2
 800cf92:	009b      	lsls	r3, r3, #2
 800cf94:	1eea      	subs	r2, r5, #3
 800cf96:	4296      	cmp	r6, r2
 800cf98:	bf38      	it	cc
 800cf9a:	2300      	movcc	r3, #0
 800cf9c:	4423      	add	r3, r4
 800cf9e:	e015      	b.n	800cfcc <rshift+0x68>
 800cfa0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800cfa4:	f1c1 0820 	rsb	r8, r1, #32
 800cfa8:	40cf      	lsrs	r7, r1
 800cfaa:	f105 0e04 	add.w	lr, r5, #4
 800cfae:	46a1      	mov	r9, r4
 800cfb0:	4576      	cmp	r6, lr
 800cfb2:	46f4      	mov	ip, lr
 800cfb4:	d815      	bhi.n	800cfe2 <rshift+0x7e>
 800cfb6:	1a9a      	subs	r2, r3, r2
 800cfb8:	0092      	lsls	r2, r2, #2
 800cfba:	3a04      	subs	r2, #4
 800cfbc:	3501      	adds	r5, #1
 800cfbe:	42ae      	cmp	r6, r5
 800cfc0:	bf38      	it	cc
 800cfc2:	2200      	movcc	r2, #0
 800cfc4:	18a3      	adds	r3, r4, r2
 800cfc6:	50a7      	str	r7, [r4, r2]
 800cfc8:	b107      	cbz	r7, 800cfcc <rshift+0x68>
 800cfca:	3304      	adds	r3, #4
 800cfcc:	1b1a      	subs	r2, r3, r4
 800cfce:	42a3      	cmp	r3, r4
 800cfd0:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800cfd4:	bf08      	it	eq
 800cfd6:	2300      	moveq	r3, #0
 800cfd8:	6102      	str	r2, [r0, #16]
 800cfda:	bf08      	it	eq
 800cfdc:	6143      	streq	r3, [r0, #20]
 800cfde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cfe2:	f8dc c000 	ldr.w	ip, [ip]
 800cfe6:	fa0c fc08 	lsl.w	ip, ip, r8
 800cfea:	ea4c 0707 	orr.w	r7, ip, r7
 800cfee:	f849 7b04 	str.w	r7, [r9], #4
 800cff2:	f85e 7b04 	ldr.w	r7, [lr], #4
 800cff6:	40cf      	lsrs	r7, r1
 800cff8:	e7da      	b.n	800cfb0 <rshift+0x4c>
 800cffa:	f851 cb04 	ldr.w	ip, [r1], #4
 800cffe:	f847 cf04 	str.w	ip, [r7, #4]!
 800d002:	e7c3      	b.n	800cf8c <rshift+0x28>
 800d004:	4623      	mov	r3, r4
 800d006:	e7e1      	b.n	800cfcc <rshift+0x68>

0800d008 <__hexdig_fun>:
 800d008:	f1a0 0330 	sub.w	r3, r0, #48	@ 0x30
 800d00c:	2b09      	cmp	r3, #9
 800d00e:	d802      	bhi.n	800d016 <__hexdig_fun+0xe>
 800d010:	3820      	subs	r0, #32
 800d012:	b2c0      	uxtb	r0, r0
 800d014:	4770      	bx	lr
 800d016:	f1a0 0361 	sub.w	r3, r0, #97	@ 0x61
 800d01a:	2b05      	cmp	r3, #5
 800d01c:	d801      	bhi.n	800d022 <__hexdig_fun+0x1a>
 800d01e:	3847      	subs	r0, #71	@ 0x47
 800d020:	e7f7      	b.n	800d012 <__hexdig_fun+0xa>
 800d022:	f1a0 0341 	sub.w	r3, r0, #65	@ 0x41
 800d026:	2b05      	cmp	r3, #5
 800d028:	d801      	bhi.n	800d02e <__hexdig_fun+0x26>
 800d02a:	3827      	subs	r0, #39	@ 0x27
 800d02c:	e7f1      	b.n	800d012 <__hexdig_fun+0xa>
 800d02e:	2000      	movs	r0, #0
 800d030:	4770      	bx	lr
	...

0800d034 <__gethex>:
 800d034:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d038:	b085      	sub	sp, #20
 800d03a:	468a      	mov	sl, r1
 800d03c:	9302      	str	r3, [sp, #8]
 800d03e:	680b      	ldr	r3, [r1, #0]
 800d040:	9001      	str	r0, [sp, #4]
 800d042:	4690      	mov	r8, r2
 800d044:	1c9c      	adds	r4, r3, #2
 800d046:	46a1      	mov	r9, r4
 800d048:	f814 0b01 	ldrb.w	r0, [r4], #1
 800d04c:	2830      	cmp	r0, #48	@ 0x30
 800d04e:	d0fa      	beq.n	800d046 <__gethex+0x12>
 800d050:	eba9 0303 	sub.w	r3, r9, r3
 800d054:	f1a3 0b02 	sub.w	fp, r3, #2
 800d058:	f7ff ffd6 	bl	800d008 <__hexdig_fun>
 800d05c:	4605      	mov	r5, r0
 800d05e:	2800      	cmp	r0, #0
 800d060:	d168      	bne.n	800d134 <__gethex+0x100>
 800d062:	49a0      	ldr	r1, [pc, #640]	@ (800d2e4 <__gethex+0x2b0>)
 800d064:	2201      	movs	r2, #1
 800d066:	4648      	mov	r0, r9
 800d068:	f7ff fe93 	bl	800cd92 <strncmp>
 800d06c:	4607      	mov	r7, r0
 800d06e:	2800      	cmp	r0, #0
 800d070:	d167      	bne.n	800d142 <__gethex+0x10e>
 800d072:	f899 0001 	ldrb.w	r0, [r9, #1]
 800d076:	4626      	mov	r6, r4
 800d078:	f7ff ffc6 	bl	800d008 <__hexdig_fun>
 800d07c:	2800      	cmp	r0, #0
 800d07e:	d062      	beq.n	800d146 <__gethex+0x112>
 800d080:	4623      	mov	r3, r4
 800d082:	7818      	ldrb	r0, [r3, #0]
 800d084:	2830      	cmp	r0, #48	@ 0x30
 800d086:	4699      	mov	r9, r3
 800d088:	f103 0301 	add.w	r3, r3, #1
 800d08c:	d0f9      	beq.n	800d082 <__gethex+0x4e>
 800d08e:	f7ff ffbb 	bl	800d008 <__hexdig_fun>
 800d092:	fab0 f580 	clz	r5, r0
 800d096:	096d      	lsrs	r5, r5, #5
 800d098:	f04f 0b01 	mov.w	fp, #1
 800d09c:	464a      	mov	r2, r9
 800d09e:	4616      	mov	r6, r2
 800d0a0:	3201      	adds	r2, #1
 800d0a2:	7830      	ldrb	r0, [r6, #0]
 800d0a4:	f7ff ffb0 	bl	800d008 <__hexdig_fun>
 800d0a8:	2800      	cmp	r0, #0
 800d0aa:	d1f8      	bne.n	800d09e <__gethex+0x6a>
 800d0ac:	498d      	ldr	r1, [pc, #564]	@ (800d2e4 <__gethex+0x2b0>)
 800d0ae:	2201      	movs	r2, #1
 800d0b0:	4630      	mov	r0, r6
 800d0b2:	f7ff fe6e 	bl	800cd92 <strncmp>
 800d0b6:	2800      	cmp	r0, #0
 800d0b8:	d13f      	bne.n	800d13a <__gethex+0x106>
 800d0ba:	b944      	cbnz	r4, 800d0ce <__gethex+0x9a>
 800d0bc:	1c74      	adds	r4, r6, #1
 800d0be:	4622      	mov	r2, r4
 800d0c0:	4616      	mov	r6, r2
 800d0c2:	3201      	adds	r2, #1
 800d0c4:	7830      	ldrb	r0, [r6, #0]
 800d0c6:	f7ff ff9f 	bl	800d008 <__hexdig_fun>
 800d0ca:	2800      	cmp	r0, #0
 800d0cc:	d1f8      	bne.n	800d0c0 <__gethex+0x8c>
 800d0ce:	1ba4      	subs	r4, r4, r6
 800d0d0:	00a7      	lsls	r7, r4, #2
 800d0d2:	7833      	ldrb	r3, [r6, #0]
 800d0d4:	f003 03df 	and.w	r3, r3, #223	@ 0xdf
 800d0d8:	2b50      	cmp	r3, #80	@ 0x50
 800d0da:	d13e      	bne.n	800d15a <__gethex+0x126>
 800d0dc:	7873      	ldrb	r3, [r6, #1]
 800d0de:	2b2b      	cmp	r3, #43	@ 0x2b
 800d0e0:	d033      	beq.n	800d14a <__gethex+0x116>
 800d0e2:	2b2d      	cmp	r3, #45	@ 0x2d
 800d0e4:	d034      	beq.n	800d150 <__gethex+0x11c>
 800d0e6:	1c71      	adds	r1, r6, #1
 800d0e8:	2400      	movs	r4, #0
 800d0ea:	7808      	ldrb	r0, [r1, #0]
 800d0ec:	f7ff ff8c 	bl	800d008 <__hexdig_fun>
 800d0f0:	1e43      	subs	r3, r0, #1
 800d0f2:	b2db      	uxtb	r3, r3
 800d0f4:	2b18      	cmp	r3, #24
 800d0f6:	d830      	bhi.n	800d15a <__gethex+0x126>
 800d0f8:	f1a0 0210 	sub.w	r2, r0, #16
 800d0fc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d100:	f7ff ff82 	bl	800d008 <__hexdig_fun>
 800d104:	f100 3cff 	add.w	ip, r0, #4294967295
 800d108:	fa5f fc8c 	uxtb.w	ip, ip
 800d10c:	f1bc 0f18 	cmp.w	ip, #24
 800d110:	f04f 030a 	mov.w	r3, #10
 800d114:	d91e      	bls.n	800d154 <__gethex+0x120>
 800d116:	b104      	cbz	r4, 800d11a <__gethex+0xe6>
 800d118:	4252      	negs	r2, r2
 800d11a:	4417      	add	r7, r2
 800d11c:	f8ca 1000 	str.w	r1, [sl]
 800d120:	b1ed      	cbz	r5, 800d15e <__gethex+0x12a>
 800d122:	f1bb 0f00 	cmp.w	fp, #0
 800d126:	bf0c      	ite	eq
 800d128:	2506      	moveq	r5, #6
 800d12a:	2500      	movne	r5, #0
 800d12c:	4628      	mov	r0, r5
 800d12e:	b005      	add	sp, #20
 800d130:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d134:	2500      	movs	r5, #0
 800d136:	462c      	mov	r4, r5
 800d138:	e7b0      	b.n	800d09c <__gethex+0x68>
 800d13a:	2c00      	cmp	r4, #0
 800d13c:	d1c7      	bne.n	800d0ce <__gethex+0x9a>
 800d13e:	4627      	mov	r7, r4
 800d140:	e7c7      	b.n	800d0d2 <__gethex+0x9e>
 800d142:	464e      	mov	r6, r9
 800d144:	462f      	mov	r7, r5
 800d146:	2501      	movs	r5, #1
 800d148:	e7c3      	b.n	800d0d2 <__gethex+0x9e>
 800d14a:	2400      	movs	r4, #0
 800d14c:	1cb1      	adds	r1, r6, #2
 800d14e:	e7cc      	b.n	800d0ea <__gethex+0xb6>
 800d150:	2401      	movs	r4, #1
 800d152:	e7fb      	b.n	800d14c <__gethex+0x118>
 800d154:	fb03 0002 	mla	r0, r3, r2, r0
 800d158:	e7ce      	b.n	800d0f8 <__gethex+0xc4>
 800d15a:	4631      	mov	r1, r6
 800d15c:	e7de      	b.n	800d11c <__gethex+0xe8>
 800d15e:	eba6 0309 	sub.w	r3, r6, r9
 800d162:	3b01      	subs	r3, #1
 800d164:	4629      	mov	r1, r5
 800d166:	2b07      	cmp	r3, #7
 800d168:	dc0a      	bgt.n	800d180 <__gethex+0x14c>
 800d16a:	9801      	ldr	r0, [sp, #4]
 800d16c:	f000 faf4 	bl	800d758 <_Balloc>
 800d170:	4604      	mov	r4, r0
 800d172:	b940      	cbnz	r0, 800d186 <__gethex+0x152>
 800d174:	4b5c      	ldr	r3, [pc, #368]	@ (800d2e8 <__gethex+0x2b4>)
 800d176:	4602      	mov	r2, r0
 800d178:	21e4      	movs	r1, #228	@ 0xe4
 800d17a:	485c      	ldr	r0, [pc, #368]	@ (800d2ec <__gethex+0x2b8>)
 800d17c:	f001 fb66 	bl	800e84c <__assert_func>
 800d180:	3101      	adds	r1, #1
 800d182:	105b      	asrs	r3, r3, #1
 800d184:	e7ef      	b.n	800d166 <__gethex+0x132>
 800d186:	f100 0a14 	add.w	sl, r0, #20
 800d18a:	2300      	movs	r3, #0
 800d18c:	4655      	mov	r5, sl
 800d18e:	469b      	mov	fp, r3
 800d190:	45b1      	cmp	r9, r6
 800d192:	d337      	bcc.n	800d204 <__gethex+0x1d0>
 800d194:	f845 bb04 	str.w	fp, [r5], #4
 800d198:	eba5 050a 	sub.w	r5, r5, sl
 800d19c:	10ad      	asrs	r5, r5, #2
 800d19e:	6125      	str	r5, [r4, #16]
 800d1a0:	4658      	mov	r0, fp
 800d1a2:	f000 fbcb 	bl	800d93c <__hi0bits>
 800d1a6:	016d      	lsls	r5, r5, #5
 800d1a8:	f8d8 6000 	ldr.w	r6, [r8]
 800d1ac:	1a2d      	subs	r5, r5, r0
 800d1ae:	42b5      	cmp	r5, r6
 800d1b0:	dd54      	ble.n	800d25c <__gethex+0x228>
 800d1b2:	1bad      	subs	r5, r5, r6
 800d1b4:	4629      	mov	r1, r5
 800d1b6:	4620      	mov	r0, r4
 800d1b8:	f000 ff5f 	bl	800e07a <__any_on>
 800d1bc:	4681      	mov	r9, r0
 800d1be:	b178      	cbz	r0, 800d1e0 <__gethex+0x1ac>
 800d1c0:	1e6b      	subs	r3, r5, #1
 800d1c2:	1159      	asrs	r1, r3, #5
 800d1c4:	f003 021f 	and.w	r2, r3, #31
 800d1c8:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800d1cc:	f04f 0901 	mov.w	r9, #1
 800d1d0:	fa09 f202 	lsl.w	r2, r9, r2
 800d1d4:	420a      	tst	r2, r1
 800d1d6:	d003      	beq.n	800d1e0 <__gethex+0x1ac>
 800d1d8:	454b      	cmp	r3, r9
 800d1da:	dc36      	bgt.n	800d24a <__gethex+0x216>
 800d1dc:	f04f 0902 	mov.w	r9, #2
 800d1e0:	4629      	mov	r1, r5
 800d1e2:	4620      	mov	r0, r4
 800d1e4:	f7ff febe 	bl	800cf64 <rshift>
 800d1e8:	442f      	add	r7, r5
 800d1ea:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d1ee:	42bb      	cmp	r3, r7
 800d1f0:	da42      	bge.n	800d278 <__gethex+0x244>
 800d1f2:	9801      	ldr	r0, [sp, #4]
 800d1f4:	4621      	mov	r1, r4
 800d1f6:	f000 faef 	bl	800d7d8 <_Bfree>
 800d1fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800d1fc:	2300      	movs	r3, #0
 800d1fe:	6013      	str	r3, [r2, #0]
 800d200:	25a3      	movs	r5, #163	@ 0xa3
 800d202:	e793      	b.n	800d12c <__gethex+0xf8>
 800d204:	f816 2d01 	ldrb.w	r2, [r6, #-1]!
 800d208:	2a2e      	cmp	r2, #46	@ 0x2e
 800d20a:	d012      	beq.n	800d232 <__gethex+0x1fe>
 800d20c:	2b20      	cmp	r3, #32
 800d20e:	d104      	bne.n	800d21a <__gethex+0x1e6>
 800d210:	f845 bb04 	str.w	fp, [r5], #4
 800d214:	f04f 0b00 	mov.w	fp, #0
 800d218:	465b      	mov	r3, fp
 800d21a:	7830      	ldrb	r0, [r6, #0]
 800d21c:	9303      	str	r3, [sp, #12]
 800d21e:	f7ff fef3 	bl	800d008 <__hexdig_fun>
 800d222:	9b03      	ldr	r3, [sp, #12]
 800d224:	f000 000f 	and.w	r0, r0, #15
 800d228:	4098      	lsls	r0, r3
 800d22a:	ea4b 0b00 	orr.w	fp, fp, r0
 800d22e:	3304      	adds	r3, #4
 800d230:	e7ae      	b.n	800d190 <__gethex+0x15c>
 800d232:	45b1      	cmp	r9, r6
 800d234:	d8ea      	bhi.n	800d20c <__gethex+0x1d8>
 800d236:	492b      	ldr	r1, [pc, #172]	@ (800d2e4 <__gethex+0x2b0>)
 800d238:	9303      	str	r3, [sp, #12]
 800d23a:	2201      	movs	r2, #1
 800d23c:	4630      	mov	r0, r6
 800d23e:	f7ff fda8 	bl	800cd92 <strncmp>
 800d242:	9b03      	ldr	r3, [sp, #12]
 800d244:	2800      	cmp	r0, #0
 800d246:	d1e1      	bne.n	800d20c <__gethex+0x1d8>
 800d248:	e7a2      	b.n	800d190 <__gethex+0x15c>
 800d24a:	1ea9      	subs	r1, r5, #2
 800d24c:	4620      	mov	r0, r4
 800d24e:	f000 ff14 	bl	800e07a <__any_on>
 800d252:	2800      	cmp	r0, #0
 800d254:	d0c2      	beq.n	800d1dc <__gethex+0x1a8>
 800d256:	f04f 0903 	mov.w	r9, #3
 800d25a:	e7c1      	b.n	800d1e0 <__gethex+0x1ac>
 800d25c:	da09      	bge.n	800d272 <__gethex+0x23e>
 800d25e:	1b75      	subs	r5, r6, r5
 800d260:	4621      	mov	r1, r4
 800d262:	9801      	ldr	r0, [sp, #4]
 800d264:	462a      	mov	r2, r5
 800d266:	f000 fccf 	bl	800dc08 <__lshift>
 800d26a:	1b7f      	subs	r7, r7, r5
 800d26c:	4604      	mov	r4, r0
 800d26e:	f100 0a14 	add.w	sl, r0, #20
 800d272:	f04f 0900 	mov.w	r9, #0
 800d276:	e7b8      	b.n	800d1ea <__gethex+0x1b6>
 800d278:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d27c:	42bd      	cmp	r5, r7
 800d27e:	dd6f      	ble.n	800d360 <__gethex+0x32c>
 800d280:	1bed      	subs	r5, r5, r7
 800d282:	42ae      	cmp	r6, r5
 800d284:	dc34      	bgt.n	800d2f0 <__gethex+0x2bc>
 800d286:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d28a:	2b02      	cmp	r3, #2
 800d28c:	d022      	beq.n	800d2d4 <__gethex+0x2a0>
 800d28e:	2b03      	cmp	r3, #3
 800d290:	d024      	beq.n	800d2dc <__gethex+0x2a8>
 800d292:	2b01      	cmp	r3, #1
 800d294:	d115      	bne.n	800d2c2 <__gethex+0x28e>
 800d296:	42ae      	cmp	r6, r5
 800d298:	d113      	bne.n	800d2c2 <__gethex+0x28e>
 800d29a:	2e01      	cmp	r6, #1
 800d29c:	d10b      	bne.n	800d2b6 <__gethex+0x282>
 800d29e:	9a02      	ldr	r2, [sp, #8]
 800d2a0:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d2a4:	6013      	str	r3, [r2, #0]
 800d2a6:	2301      	movs	r3, #1
 800d2a8:	6123      	str	r3, [r4, #16]
 800d2aa:	f8ca 3000 	str.w	r3, [sl]
 800d2ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d2b0:	2562      	movs	r5, #98	@ 0x62
 800d2b2:	601c      	str	r4, [r3, #0]
 800d2b4:	e73a      	b.n	800d12c <__gethex+0xf8>
 800d2b6:	1e71      	subs	r1, r6, #1
 800d2b8:	4620      	mov	r0, r4
 800d2ba:	f000 fede 	bl	800e07a <__any_on>
 800d2be:	2800      	cmp	r0, #0
 800d2c0:	d1ed      	bne.n	800d29e <__gethex+0x26a>
 800d2c2:	9801      	ldr	r0, [sp, #4]
 800d2c4:	4621      	mov	r1, r4
 800d2c6:	f000 fa87 	bl	800d7d8 <_Bfree>
 800d2ca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800d2cc:	2300      	movs	r3, #0
 800d2ce:	6013      	str	r3, [r2, #0]
 800d2d0:	2550      	movs	r5, #80	@ 0x50
 800d2d2:	e72b      	b.n	800d12c <__gethex+0xf8>
 800d2d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d2d6:	2b00      	cmp	r3, #0
 800d2d8:	d1f3      	bne.n	800d2c2 <__gethex+0x28e>
 800d2da:	e7e0      	b.n	800d29e <__gethex+0x26a>
 800d2dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d2de:	2b00      	cmp	r3, #0
 800d2e0:	d1dd      	bne.n	800d29e <__gethex+0x26a>
 800d2e2:	e7ee      	b.n	800d2c2 <__gethex+0x28e>
 800d2e4:	0800f28c 	.word	0x0800f28c
 800d2e8:	0800f2f8 	.word	0x0800f2f8
 800d2ec:	0800f309 	.word	0x0800f309
 800d2f0:	1e6f      	subs	r7, r5, #1
 800d2f2:	f1b9 0f00 	cmp.w	r9, #0
 800d2f6:	d130      	bne.n	800d35a <__gethex+0x326>
 800d2f8:	b127      	cbz	r7, 800d304 <__gethex+0x2d0>
 800d2fa:	4639      	mov	r1, r7
 800d2fc:	4620      	mov	r0, r4
 800d2fe:	f000 febc 	bl	800e07a <__any_on>
 800d302:	4681      	mov	r9, r0
 800d304:	117a      	asrs	r2, r7, #5
 800d306:	2301      	movs	r3, #1
 800d308:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800d30c:	f007 071f 	and.w	r7, r7, #31
 800d310:	40bb      	lsls	r3, r7
 800d312:	4213      	tst	r3, r2
 800d314:	4629      	mov	r1, r5
 800d316:	4620      	mov	r0, r4
 800d318:	bf18      	it	ne
 800d31a:	f049 0902 	orrne.w	r9, r9, #2
 800d31e:	f7ff fe21 	bl	800cf64 <rshift>
 800d322:	f8d8 7004 	ldr.w	r7, [r8, #4]
 800d326:	1b76      	subs	r6, r6, r5
 800d328:	2502      	movs	r5, #2
 800d32a:	f1b9 0f00 	cmp.w	r9, #0
 800d32e:	d047      	beq.n	800d3c0 <__gethex+0x38c>
 800d330:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d334:	2b02      	cmp	r3, #2
 800d336:	d015      	beq.n	800d364 <__gethex+0x330>
 800d338:	2b03      	cmp	r3, #3
 800d33a:	d017      	beq.n	800d36c <__gethex+0x338>
 800d33c:	2b01      	cmp	r3, #1
 800d33e:	d109      	bne.n	800d354 <__gethex+0x320>
 800d340:	f019 0f02 	tst.w	r9, #2
 800d344:	d006      	beq.n	800d354 <__gethex+0x320>
 800d346:	f8da 3000 	ldr.w	r3, [sl]
 800d34a:	ea49 0903 	orr.w	r9, r9, r3
 800d34e:	f019 0f01 	tst.w	r9, #1
 800d352:	d10e      	bne.n	800d372 <__gethex+0x33e>
 800d354:	f045 0510 	orr.w	r5, r5, #16
 800d358:	e032      	b.n	800d3c0 <__gethex+0x38c>
 800d35a:	f04f 0901 	mov.w	r9, #1
 800d35e:	e7d1      	b.n	800d304 <__gethex+0x2d0>
 800d360:	2501      	movs	r5, #1
 800d362:	e7e2      	b.n	800d32a <__gethex+0x2f6>
 800d364:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d366:	f1c3 0301 	rsb	r3, r3, #1
 800d36a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800d36c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800d36e:	2b00      	cmp	r3, #0
 800d370:	d0f0      	beq.n	800d354 <__gethex+0x320>
 800d372:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800d376:	f104 0314 	add.w	r3, r4, #20
 800d37a:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800d37e:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800d382:	f04f 0c00 	mov.w	ip, #0
 800d386:	4618      	mov	r0, r3
 800d388:	f853 2b04 	ldr.w	r2, [r3], #4
 800d38c:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d390:	d01b      	beq.n	800d3ca <__gethex+0x396>
 800d392:	3201      	adds	r2, #1
 800d394:	6002      	str	r2, [r0, #0]
 800d396:	2d02      	cmp	r5, #2
 800d398:	f104 0314 	add.w	r3, r4, #20
 800d39c:	d13c      	bne.n	800d418 <__gethex+0x3e4>
 800d39e:	f8d8 2000 	ldr.w	r2, [r8]
 800d3a2:	3a01      	subs	r2, #1
 800d3a4:	42b2      	cmp	r2, r6
 800d3a6:	d109      	bne.n	800d3bc <__gethex+0x388>
 800d3a8:	1171      	asrs	r1, r6, #5
 800d3aa:	2201      	movs	r2, #1
 800d3ac:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d3b0:	f006 061f 	and.w	r6, r6, #31
 800d3b4:	fa02 f606 	lsl.w	r6, r2, r6
 800d3b8:	421e      	tst	r6, r3
 800d3ba:	d13a      	bne.n	800d432 <__gethex+0x3fe>
 800d3bc:	f045 0520 	orr.w	r5, r5, #32
 800d3c0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800d3c2:	601c      	str	r4, [r3, #0]
 800d3c4:	9b02      	ldr	r3, [sp, #8]
 800d3c6:	601f      	str	r7, [r3, #0]
 800d3c8:	e6b0      	b.n	800d12c <__gethex+0xf8>
 800d3ca:	4299      	cmp	r1, r3
 800d3cc:	f843 cc04 	str.w	ip, [r3, #-4]
 800d3d0:	d8d9      	bhi.n	800d386 <__gethex+0x352>
 800d3d2:	68a3      	ldr	r3, [r4, #8]
 800d3d4:	459b      	cmp	fp, r3
 800d3d6:	db17      	blt.n	800d408 <__gethex+0x3d4>
 800d3d8:	6861      	ldr	r1, [r4, #4]
 800d3da:	9801      	ldr	r0, [sp, #4]
 800d3dc:	3101      	adds	r1, #1
 800d3de:	f000 f9bb 	bl	800d758 <_Balloc>
 800d3e2:	4681      	mov	r9, r0
 800d3e4:	b918      	cbnz	r0, 800d3ee <__gethex+0x3ba>
 800d3e6:	4b1a      	ldr	r3, [pc, #104]	@ (800d450 <__gethex+0x41c>)
 800d3e8:	4602      	mov	r2, r0
 800d3ea:	2184      	movs	r1, #132	@ 0x84
 800d3ec:	e6c5      	b.n	800d17a <__gethex+0x146>
 800d3ee:	6922      	ldr	r2, [r4, #16]
 800d3f0:	3202      	adds	r2, #2
 800d3f2:	f104 010c 	add.w	r1, r4, #12
 800d3f6:	0092      	lsls	r2, r2, #2
 800d3f8:	300c      	adds	r0, #12
 800d3fa:	f7ff fd50 	bl	800ce9e <memcpy>
 800d3fe:	4621      	mov	r1, r4
 800d400:	9801      	ldr	r0, [sp, #4]
 800d402:	f000 f9e9 	bl	800d7d8 <_Bfree>
 800d406:	464c      	mov	r4, r9
 800d408:	6923      	ldr	r3, [r4, #16]
 800d40a:	1c5a      	adds	r2, r3, #1
 800d40c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d410:	6122      	str	r2, [r4, #16]
 800d412:	2201      	movs	r2, #1
 800d414:	615a      	str	r2, [r3, #20]
 800d416:	e7be      	b.n	800d396 <__gethex+0x362>
 800d418:	6922      	ldr	r2, [r4, #16]
 800d41a:	455a      	cmp	r2, fp
 800d41c:	dd0b      	ble.n	800d436 <__gethex+0x402>
 800d41e:	2101      	movs	r1, #1
 800d420:	4620      	mov	r0, r4
 800d422:	f7ff fd9f 	bl	800cf64 <rshift>
 800d426:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d42a:	3701      	adds	r7, #1
 800d42c:	42bb      	cmp	r3, r7
 800d42e:	f6ff aee0 	blt.w	800d1f2 <__gethex+0x1be>
 800d432:	2501      	movs	r5, #1
 800d434:	e7c2      	b.n	800d3bc <__gethex+0x388>
 800d436:	f016 061f 	ands.w	r6, r6, #31
 800d43a:	d0fa      	beq.n	800d432 <__gethex+0x3fe>
 800d43c:	4453      	add	r3, sl
 800d43e:	f1c6 0620 	rsb	r6, r6, #32
 800d442:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800d446:	f000 fa79 	bl	800d93c <__hi0bits>
 800d44a:	42b0      	cmp	r0, r6
 800d44c:	dbe7      	blt.n	800d41e <__gethex+0x3ea>
 800d44e:	e7f0      	b.n	800d432 <__gethex+0x3fe>
 800d450:	0800f2f8 	.word	0x0800f2f8

0800d454 <L_shift>:
 800d454:	f1c2 0208 	rsb	r2, r2, #8
 800d458:	0092      	lsls	r2, r2, #2
 800d45a:	b570      	push	{r4, r5, r6, lr}
 800d45c:	f1c2 0620 	rsb	r6, r2, #32
 800d460:	6843      	ldr	r3, [r0, #4]
 800d462:	6804      	ldr	r4, [r0, #0]
 800d464:	fa03 f506 	lsl.w	r5, r3, r6
 800d468:	432c      	orrs	r4, r5
 800d46a:	40d3      	lsrs	r3, r2
 800d46c:	6004      	str	r4, [r0, #0]
 800d46e:	f840 3f04 	str.w	r3, [r0, #4]!
 800d472:	4288      	cmp	r0, r1
 800d474:	d3f4      	bcc.n	800d460 <L_shift+0xc>
 800d476:	bd70      	pop	{r4, r5, r6, pc}

0800d478 <__match>:
 800d478:	b530      	push	{r4, r5, lr}
 800d47a:	6803      	ldr	r3, [r0, #0]
 800d47c:	3301      	adds	r3, #1
 800d47e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d482:	b914      	cbnz	r4, 800d48a <__match+0x12>
 800d484:	6003      	str	r3, [r0, #0]
 800d486:	2001      	movs	r0, #1
 800d488:	bd30      	pop	{r4, r5, pc}
 800d48a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d48e:	f1a2 0541 	sub.w	r5, r2, #65	@ 0x41
 800d492:	2d19      	cmp	r5, #25
 800d494:	bf98      	it	ls
 800d496:	3220      	addls	r2, #32
 800d498:	42a2      	cmp	r2, r4
 800d49a:	d0f0      	beq.n	800d47e <__match+0x6>
 800d49c:	2000      	movs	r0, #0
 800d49e:	e7f3      	b.n	800d488 <__match+0x10>

0800d4a0 <__hexnan>:
 800d4a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4a4:	680b      	ldr	r3, [r1, #0]
 800d4a6:	6801      	ldr	r1, [r0, #0]
 800d4a8:	115e      	asrs	r6, r3, #5
 800d4aa:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800d4ae:	f013 031f 	ands.w	r3, r3, #31
 800d4b2:	b087      	sub	sp, #28
 800d4b4:	bf18      	it	ne
 800d4b6:	3604      	addne	r6, #4
 800d4b8:	2500      	movs	r5, #0
 800d4ba:	1f37      	subs	r7, r6, #4
 800d4bc:	4682      	mov	sl, r0
 800d4be:	4690      	mov	r8, r2
 800d4c0:	9301      	str	r3, [sp, #4]
 800d4c2:	f846 5c04 	str.w	r5, [r6, #-4]
 800d4c6:	46b9      	mov	r9, r7
 800d4c8:	463c      	mov	r4, r7
 800d4ca:	9502      	str	r5, [sp, #8]
 800d4cc:	46ab      	mov	fp, r5
 800d4ce:	784a      	ldrb	r2, [r1, #1]
 800d4d0:	1c4b      	adds	r3, r1, #1
 800d4d2:	9303      	str	r3, [sp, #12]
 800d4d4:	b342      	cbz	r2, 800d528 <__hexnan+0x88>
 800d4d6:	4610      	mov	r0, r2
 800d4d8:	9105      	str	r1, [sp, #20]
 800d4da:	9204      	str	r2, [sp, #16]
 800d4dc:	f7ff fd94 	bl	800d008 <__hexdig_fun>
 800d4e0:	2800      	cmp	r0, #0
 800d4e2:	d151      	bne.n	800d588 <__hexnan+0xe8>
 800d4e4:	9a04      	ldr	r2, [sp, #16]
 800d4e6:	9905      	ldr	r1, [sp, #20]
 800d4e8:	2a20      	cmp	r2, #32
 800d4ea:	d818      	bhi.n	800d51e <__hexnan+0x7e>
 800d4ec:	9b02      	ldr	r3, [sp, #8]
 800d4ee:	459b      	cmp	fp, r3
 800d4f0:	dd13      	ble.n	800d51a <__hexnan+0x7a>
 800d4f2:	454c      	cmp	r4, r9
 800d4f4:	d206      	bcs.n	800d504 <__hexnan+0x64>
 800d4f6:	2d07      	cmp	r5, #7
 800d4f8:	dc04      	bgt.n	800d504 <__hexnan+0x64>
 800d4fa:	462a      	mov	r2, r5
 800d4fc:	4649      	mov	r1, r9
 800d4fe:	4620      	mov	r0, r4
 800d500:	f7ff ffa8 	bl	800d454 <L_shift>
 800d504:	4544      	cmp	r4, r8
 800d506:	d952      	bls.n	800d5ae <__hexnan+0x10e>
 800d508:	2300      	movs	r3, #0
 800d50a:	f1a4 0904 	sub.w	r9, r4, #4
 800d50e:	f844 3c04 	str.w	r3, [r4, #-4]
 800d512:	f8cd b008 	str.w	fp, [sp, #8]
 800d516:	464c      	mov	r4, r9
 800d518:	461d      	mov	r5, r3
 800d51a:	9903      	ldr	r1, [sp, #12]
 800d51c:	e7d7      	b.n	800d4ce <__hexnan+0x2e>
 800d51e:	2a29      	cmp	r2, #41	@ 0x29
 800d520:	d157      	bne.n	800d5d2 <__hexnan+0x132>
 800d522:	3102      	adds	r1, #2
 800d524:	f8ca 1000 	str.w	r1, [sl]
 800d528:	f1bb 0f00 	cmp.w	fp, #0
 800d52c:	d051      	beq.n	800d5d2 <__hexnan+0x132>
 800d52e:	454c      	cmp	r4, r9
 800d530:	d206      	bcs.n	800d540 <__hexnan+0xa0>
 800d532:	2d07      	cmp	r5, #7
 800d534:	dc04      	bgt.n	800d540 <__hexnan+0xa0>
 800d536:	462a      	mov	r2, r5
 800d538:	4649      	mov	r1, r9
 800d53a:	4620      	mov	r0, r4
 800d53c:	f7ff ff8a 	bl	800d454 <L_shift>
 800d540:	4544      	cmp	r4, r8
 800d542:	d936      	bls.n	800d5b2 <__hexnan+0x112>
 800d544:	f1a8 0204 	sub.w	r2, r8, #4
 800d548:	4623      	mov	r3, r4
 800d54a:	f853 1b04 	ldr.w	r1, [r3], #4
 800d54e:	f842 1f04 	str.w	r1, [r2, #4]!
 800d552:	429f      	cmp	r7, r3
 800d554:	d2f9      	bcs.n	800d54a <__hexnan+0xaa>
 800d556:	1b3b      	subs	r3, r7, r4
 800d558:	f023 0303 	bic.w	r3, r3, #3
 800d55c:	3304      	adds	r3, #4
 800d55e:	3401      	adds	r4, #1
 800d560:	3e03      	subs	r6, #3
 800d562:	42b4      	cmp	r4, r6
 800d564:	bf88      	it	hi
 800d566:	2304      	movhi	r3, #4
 800d568:	4443      	add	r3, r8
 800d56a:	2200      	movs	r2, #0
 800d56c:	f843 2b04 	str.w	r2, [r3], #4
 800d570:	429f      	cmp	r7, r3
 800d572:	d2fb      	bcs.n	800d56c <__hexnan+0xcc>
 800d574:	683b      	ldr	r3, [r7, #0]
 800d576:	b91b      	cbnz	r3, 800d580 <__hexnan+0xe0>
 800d578:	4547      	cmp	r7, r8
 800d57a:	d128      	bne.n	800d5ce <__hexnan+0x12e>
 800d57c:	2301      	movs	r3, #1
 800d57e:	603b      	str	r3, [r7, #0]
 800d580:	2005      	movs	r0, #5
 800d582:	b007      	add	sp, #28
 800d584:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d588:	3501      	adds	r5, #1
 800d58a:	2d08      	cmp	r5, #8
 800d58c:	f10b 0b01 	add.w	fp, fp, #1
 800d590:	dd06      	ble.n	800d5a0 <__hexnan+0x100>
 800d592:	4544      	cmp	r4, r8
 800d594:	d9c1      	bls.n	800d51a <__hexnan+0x7a>
 800d596:	2300      	movs	r3, #0
 800d598:	f844 3c04 	str.w	r3, [r4, #-4]
 800d59c:	2501      	movs	r5, #1
 800d59e:	3c04      	subs	r4, #4
 800d5a0:	6822      	ldr	r2, [r4, #0]
 800d5a2:	f000 000f 	and.w	r0, r0, #15
 800d5a6:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800d5aa:	6020      	str	r0, [r4, #0]
 800d5ac:	e7b5      	b.n	800d51a <__hexnan+0x7a>
 800d5ae:	2508      	movs	r5, #8
 800d5b0:	e7b3      	b.n	800d51a <__hexnan+0x7a>
 800d5b2:	9b01      	ldr	r3, [sp, #4]
 800d5b4:	2b00      	cmp	r3, #0
 800d5b6:	d0dd      	beq.n	800d574 <__hexnan+0xd4>
 800d5b8:	f1c3 0320 	rsb	r3, r3, #32
 800d5bc:	f04f 32ff 	mov.w	r2, #4294967295
 800d5c0:	40da      	lsrs	r2, r3
 800d5c2:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800d5c6:	4013      	ands	r3, r2
 800d5c8:	f846 3c04 	str.w	r3, [r6, #-4]
 800d5cc:	e7d2      	b.n	800d574 <__hexnan+0xd4>
 800d5ce:	3f04      	subs	r7, #4
 800d5d0:	e7d0      	b.n	800d574 <__hexnan+0xd4>
 800d5d2:	2004      	movs	r0, #4
 800d5d4:	e7d5      	b.n	800d582 <__hexnan+0xe2>
	...

0800d5d8 <sbrk_aligned>:
 800d5d8:	b570      	push	{r4, r5, r6, lr}
 800d5da:	4e0f      	ldr	r6, [pc, #60]	@ (800d618 <sbrk_aligned+0x40>)
 800d5dc:	460c      	mov	r4, r1
 800d5de:	6831      	ldr	r1, [r6, #0]
 800d5e0:	4605      	mov	r5, r0
 800d5e2:	b911      	cbnz	r1, 800d5ea <sbrk_aligned+0x12>
 800d5e4:	f001 f922 	bl	800e82c <_sbrk_r>
 800d5e8:	6030      	str	r0, [r6, #0]
 800d5ea:	4621      	mov	r1, r4
 800d5ec:	4628      	mov	r0, r5
 800d5ee:	f001 f91d 	bl	800e82c <_sbrk_r>
 800d5f2:	1c43      	adds	r3, r0, #1
 800d5f4:	d103      	bne.n	800d5fe <sbrk_aligned+0x26>
 800d5f6:	f04f 34ff 	mov.w	r4, #4294967295
 800d5fa:	4620      	mov	r0, r4
 800d5fc:	bd70      	pop	{r4, r5, r6, pc}
 800d5fe:	1cc4      	adds	r4, r0, #3
 800d600:	f024 0403 	bic.w	r4, r4, #3
 800d604:	42a0      	cmp	r0, r4
 800d606:	d0f8      	beq.n	800d5fa <sbrk_aligned+0x22>
 800d608:	1a21      	subs	r1, r4, r0
 800d60a:	4628      	mov	r0, r5
 800d60c:	f001 f90e 	bl	800e82c <_sbrk_r>
 800d610:	3001      	adds	r0, #1
 800d612:	d1f2      	bne.n	800d5fa <sbrk_aligned+0x22>
 800d614:	e7ef      	b.n	800d5f6 <sbrk_aligned+0x1e>
 800d616:	bf00      	nop
 800d618:	20000db0 	.word	0x20000db0

0800d61c <_malloc_r>:
 800d61c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d620:	1ccd      	adds	r5, r1, #3
 800d622:	f025 0503 	bic.w	r5, r5, #3
 800d626:	3508      	adds	r5, #8
 800d628:	2d0c      	cmp	r5, #12
 800d62a:	bf38      	it	cc
 800d62c:	250c      	movcc	r5, #12
 800d62e:	2d00      	cmp	r5, #0
 800d630:	4606      	mov	r6, r0
 800d632:	db01      	blt.n	800d638 <_malloc_r+0x1c>
 800d634:	42a9      	cmp	r1, r5
 800d636:	d904      	bls.n	800d642 <_malloc_r+0x26>
 800d638:	230c      	movs	r3, #12
 800d63a:	6033      	str	r3, [r6, #0]
 800d63c:	2000      	movs	r0, #0
 800d63e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d642:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800d718 <_malloc_r+0xfc>
 800d646:	f000 f87b 	bl	800d740 <__malloc_lock>
 800d64a:	f8d8 3000 	ldr.w	r3, [r8]
 800d64e:	461c      	mov	r4, r3
 800d650:	bb44      	cbnz	r4, 800d6a4 <_malloc_r+0x88>
 800d652:	4629      	mov	r1, r5
 800d654:	4630      	mov	r0, r6
 800d656:	f7ff ffbf 	bl	800d5d8 <sbrk_aligned>
 800d65a:	1c43      	adds	r3, r0, #1
 800d65c:	4604      	mov	r4, r0
 800d65e:	d158      	bne.n	800d712 <_malloc_r+0xf6>
 800d660:	f8d8 4000 	ldr.w	r4, [r8]
 800d664:	4627      	mov	r7, r4
 800d666:	2f00      	cmp	r7, #0
 800d668:	d143      	bne.n	800d6f2 <_malloc_r+0xd6>
 800d66a:	2c00      	cmp	r4, #0
 800d66c:	d04b      	beq.n	800d706 <_malloc_r+0xea>
 800d66e:	6823      	ldr	r3, [r4, #0]
 800d670:	4639      	mov	r1, r7
 800d672:	4630      	mov	r0, r6
 800d674:	eb04 0903 	add.w	r9, r4, r3
 800d678:	f001 f8d8 	bl	800e82c <_sbrk_r>
 800d67c:	4581      	cmp	r9, r0
 800d67e:	d142      	bne.n	800d706 <_malloc_r+0xea>
 800d680:	6821      	ldr	r1, [r4, #0]
 800d682:	1a6d      	subs	r5, r5, r1
 800d684:	4629      	mov	r1, r5
 800d686:	4630      	mov	r0, r6
 800d688:	f7ff ffa6 	bl	800d5d8 <sbrk_aligned>
 800d68c:	3001      	adds	r0, #1
 800d68e:	d03a      	beq.n	800d706 <_malloc_r+0xea>
 800d690:	6823      	ldr	r3, [r4, #0]
 800d692:	442b      	add	r3, r5
 800d694:	6023      	str	r3, [r4, #0]
 800d696:	f8d8 3000 	ldr.w	r3, [r8]
 800d69a:	685a      	ldr	r2, [r3, #4]
 800d69c:	bb62      	cbnz	r2, 800d6f8 <_malloc_r+0xdc>
 800d69e:	f8c8 7000 	str.w	r7, [r8]
 800d6a2:	e00f      	b.n	800d6c4 <_malloc_r+0xa8>
 800d6a4:	6822      	ldr	r2, [r4, #0]
 800d6a6:	1b52      	subs	r2, r2, r5
 800d6a8:	d420      	bmi.n	800d6ec <_malloc_r+0xd0>
 800d6aa:	2a0b      	cmp	r2, #11
 800d6ac:	d917      	bls.n	800d6de <_malloc_r+0xc2>
 800d6ae:	1961      	adds	r1, r4, r5
 800d6b0:	42a3      	cmp	r3, r4
 800d6b2:	6025      	str	r5, [r4, #0]
 800d6b4:	bf18      	it	ne
 800d6b6:	6059      	strne	r1, [r3, #4]
 800d6b8:	6863      	ldr	r3, [r4, #4]
 800d6ba:	bf08      	it	eq
 800d6bc:	f8c8 1000 	streq.w	r1, [r8]
 800d6c0:	5162      	str	r2, [r4, r5]
 800d6c2:	604b      	str	r3, [r1, #4]
 800d6c4:	4630      	mov	r0, r6
 800d6c6:	f000 f841 	bl	800d74c <__malloc_unlock>
 800d6ca:	f104 000b 	add.w	r0, r4, #11
 800d6ce:	1d23      	adds	r3, r4, #4
 800d6d0:	f020 0007 	bic.w	r0, r0, #7
 800d6d4:	1ac2      	subs	r2, r0, r3
 800d6d6:	bf1c      	itt	ne
 800d6d8:	1a1b      	subne	r3, r3, r0
 800d6da:	50a3      	strne	r3, [r4, r2]
 800d6dc:	e7af      	b.n	800d63e <_malloc_r+0x22>
 800d6de:	6862      	ldr	r2, [r4, #4]
 800d6e0:	42a3      	cmp	r3, r4
 800d6e2:	bf0c      	ite	eq
 800d6e4:	f8c8 2000 	streq.w	r2, [r8]
 800d6e8:	605a      	strne	r2, [r3, #4]
 800d6ea:	e7eb      	b.n	800d6c4 <_malloc_r+0xa8>
 800d6ec:	4623      	mov	r3, r4
 800d6ee:	6864      	ldr	r4, [r4, #4]
 800d6f0:	e7ae      	b.n	800d650 <_malloc_r+0x34>
 800d6f2:	463c      	mov	r4, r7
 800d6f4:	687f      	ldr	r7, [r7, #4]
 800d6f6:	e7b6      	b.n	800d666 <_malloc_r+0x4a>
 800d6f8:	461a      	mov	r2, r3
 800d6fa:	685b      	ldr	r3, [r3, #4]
 800d6fc:	42a3      	cmp	r3, r4
 800d6fe:	d1fb      	bne.n	800d6f8 <_malloc_r+0xdc>
 800d700:	2300      	movs	r3, #0
 800d702:	6053      	str	r3, [r2, #4]
 800d704:	e7de      	b.n	800d6c4 <_malloc_r+0xa8>
 800d706:	230c      	movs	r3, #12
 800d708:	6033      	str	r3, [r6, #0]
 800d70a:	4630      	mov	r0, r6
 800d70c:	f000 f81e 	bl	800d74c <__malloc_unlock>
 800d710:	e794      	b.n	800d63c <_malloc_r+0x20>
 800d712:	6005      	str	r5, [r0, #0]
 800d714:	e7d6      	b.n	800d6c4 <_malloc_r+0xa8>
 800d716:	bf00      	nop
 800d718:	20000db4 	.word	0x20000db4

0800d71c <__ascii_mbtowc>:
 800d71c:	b082      	sub	sp, #8
 800d71e:	b901      	cbnz	r1, 800d722 <__ascii_mbtowc+0x6>
 800d720:	a901      	add	r1, sp, #4
 800d722:	b142      	cbz	r2, 800d736 <__ascii_mbtowc+0x1a>
 800d724:	b14b      	cbz	r3, 800d73a <__ascii_mbtowc+0x1e>
 800d726:	7813      	ldrb	r3, [r2, #0]
 800d728:	600b      	str	r3, [r1, #0]
 800d72a:	7812      	ldrb	r2, [r2, #0]
 800d72c:	1e10      	subs	r0, r2, #0
 800d72e:	bf18      	it	ne
 800d730:	2001      	movne	r0, #1
 800d732:	b002      	add	sp, #8
 800d734:	4770      	bx	lr
 800d736:	4610      	mov	r0, r2
 800d738:	e7fb      	b.n	800d732 <__ascii_mbtowc+0x16>
 800d73a:	f06f 0001 	mvn.w	r0, #1
 800d73e:	e7f8      	b.n	800d732 <__ascii_mbtowc+0x16>

0800d740 <__malloc_lock>:
 800d740:	4801      	ldr	r0, [pc, #4]	@ (800d748 <__malloc_lock+0x8>)
 800d742:	f7ff bbaa 	b.w	800ce9a <__retarget_lock_acquire_recursive>
 800d746:	bf00      	nop
 800d748:	20000dac 	.word	0x20000dac

0800d74c <__malloc_unlock>:
 800d74c:	4801      	ldr	r0, [pc, #4]	@ (800d754 <__malloc_unlock+0x8>)
 800d74e:	f7ff bba5 	b.w	800ce9c <__retarget_lock_release_recursive>
 800d752:	bf00      	nop
 800d754:	20000dac 	.word	0x20000dac

0800d758 <_Balloc>:
 800d758:	b570      	push	{r4, r5, r6, lr}
 800d75a:	69c6      	ldr	r6, [r0, #28]
 800d75c:	4604      	mov	r4, r0
 800d75e:	460d      	mov	r5, r1
 800d760:	b976      	cbnz	r6, 800d780 <_Balloc+0x28>
 800d762:	2010      	movs	r0, #16
 800d764:	f001 f8a4 	bl	800e8b0 <malloc>
 800d768:	4602      	mov	r2, r0
 800d76a:	61e0      	str	r0, [r4, #28]
 800d76c:	b920      	cbnz	r0, 800d778 <_Balloc+0x20>
 800d76e:	4b18      	ldr	r3, [pc, #96]	@ (800d7d0 <_Balloc+0x78>)
 800d770:	4818      	ldr	r0, [pc, #96]	@ (800d7d4 <_Balloc+0x7c>)
 800d772:	216b      	movs	r1, #107	@ 0x6b
 800d774:	f001 f86a 	bl	800e84c <__assert_func>
 800d778:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d77c:	6006      	str	r6, [r0, #0]
 800d77e:	60c6      	str	r6, [r0, #12]
 800d780:	69e6      	ldr	r6, [r4, #28]
 800d782:	68f3      	ldr	r3, [r6, #12]
 800d784:	b183      	cbz	r3, 800d7a8 <_Balloc+0x50>
 800d786:	69e3      	ldr	r3, [r4, #28]
 800d788:	68db      	ldr	r3, [r3, #12]
 800d78a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d78e:	b9b8      	cbnz	r0, 800d7c0 <_Balloc+0x68>
 800d790:	2101      	movs	r1, #1
 800d792:	fa01 f605 	lsl.w	r6, r1, r5
 800d796:	1d72      	adds	r2, r6, #5
 800d798:	0092      	lsls	r2, r2, #2
 800d79a:	4620      	mov	r0, r4
 800d79c:	f001 f874 	bl	800e888 <_calloc_r>
 800d7a0:	b160      	cbz	r0, 800d7bc <_Balloc+0x64>
 800d7a2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d7a6:	e00e      	b.n	800d7c6 <_Balloc+0x6e>
 800d7a8:	2221      	movs	r2, #33	@ 0x21
 800d7aa:	2104      	movs	r1, #4
 800d7ac:	4620      	mov	r0, r4
 800d7ae:	f001 f86b 	bl	800e888 <_calloc_r>
 800d7b2:	69e3      	ldr	r3, [r4, #28]
 800d7b4:	60f0      	str	r0, [r6, #12]
 800d7b6:	68db      	ldr	r3, [r3, #12]
 800d7b8:	2b00      	cmp	r3, #0
 800d7ba:	d1e4      	bne.n	800d786 <_Balloc+0x2e>
 800d7bc:	2000      	movs	r0, #0
 800d7be:	bd70      	pop	{r4, r5, r6, pc}
 800d7c0:	6802      	ldr	r2, [r0, #0]
 800d7c2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d7c6:	2300      	movs	r3, #0
 800d7c8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d7cc:	e7f7      	b.n	800d7be <_Balloc+0x66>
 800d7ce:	bf00      	nop
 800d7d0:	0800f369 	.word	0x0800f369
 800d7d4:	0800f380 	.word	0x0800f380

0800d7d8 <_Bfree>:
 800d7d8:	b570      	push	{r4, r5, r6, lr}
 800d7da:	69c6      	ldr	r6, [r0, #28]
 800d7dc:	4605      	mov	r5, r0
 800d7de:	460c      	mov	r4, r1
 800d7e0:	b976      	cbnz	r6, 800d800 <_Bfree+0x28>
 800d7e2:	2010      	movs	r0, #16
 800d7e4:	f001 f864 	bl	800e8b0 <malloc>
 800d7e8:	4602      	mov	r2, r0
 800d7ea:	61e8      	str	r0, [r5, #28]
 800d7ec:	b920      	cbnz	r0, 800d7f8 <_Bfree+0x20>
 800d7ee:	4b09      	ldr	r3, [pc, #36]	@ (800d814 <_Bfree+0x3c>)
 800d7f0:	4809      	ldr	r0, [pc, #36]	@ (800d818 <_Bfree+0x40>)
 800d7f2:	218f      	movs	r1, #143	@ 0x8f
 800d7f4:	f001 f82a 	bl	800e84c <__assert_func>
 800d7f8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d7fc:	6006      	str	r6, [r0, #0]
 800d7fe:	60c6      	str	r6, [r0, #12]
 800d800:	b13c      	cbz	r4, 800d812 <_Bfree+0x3a>
 800d802:	69eb      	ldr	r3, [r5, #28]
 800d804:	6862      	ldr	r2, [r4, #4]
 800d806:	68db      	ldr	r3, [r3, #12]
 800d808:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d80c:	6021      	str	r1, [r4, #0]
 800d80e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d812:	bd70      	pop	{r4, r5, r6, pc}
 800d814:	0800f369 	.word	0x0800f369
 800d818:	0800f380 	.word	0x0800f380

0800d81c <__multadd>:
 800d81c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d820:	690d      	ldr	r5, [r1, #16]
 800d822:	4607      	mov	r7, r0
 800d824:	460c      	mov	r4, r1
 800d826:	461e      	mov	r6, r3
 800d828:	f101 0c14 	add.w	ip, r1, #20
 800d82c:	2000      	movs	r0, #0
 800d82e:	f8dc 3000 	ldr.w	r3, [ip]
 800d832:	b299      	uxth	r1, r3
 800d834:	fb02 6101 	mla	r1, r2, r1, r6
 800d838:	0c1e      	lsrs	r6, r3, #16
 800d83a:	0c0b      	lsrs	r3, r1, #16
 800d83c:	fb02 3306 	mla	r3, r2, r6, r3
 800d840:	b289      	uxth	r1, r1
 800d842:	3001      	adds	r0, #1
 800d844:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800d848:	4285      	cmp	r5, r0
 800d84a:	f84c 1b04 	str.w	r1, [ip], #4
 800d84e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800d852:	dcec      	bgt.n	800d82e <__multadd+0x12>
 800d854:	b30e      	cbz	r6, 800d89a <__multadd+0x7e>
 800d856:	68a3      	ldr	r3, [r4, #8]
 800d858:	42ab      	cmp	r3, r5
 800d85a:	dc19      	bgt.n	800d890 <__multadd+0x74>
 800d85c:	6861      	ldr	r1, [r4, #4]
 800d85e:	4638      	mov	r0, r7
 800d860:	3101      	adds	r1, #1
 800d862:	f7ff ff79 	bl	800d758 <_Balloc>
 800d866:	4680      	mov	r8, r0
 800d868:	b928      	cbnz	r0, 800d876 <__multadd+0x5a>
 800d86a:	4602      	mov	r2, r0
 800d86c:	4b0c      	ldr	r3, [pc, #48]	@ (800d8a0 <__multadd+0x84>)
 800d86e:	480d      	ldr	r0, [pc, #52]	@ (800d8a4 <__multadd+0x88>)
 800d870:	21ba      	movs	r1, #186	@ 0xba
 800d872:	f000 ffeb 	bl	800e84c <__assert_func>
 800d876:	6922      	ldr	r2, [r4, #16]
 800d878:	3202      	adds	r2, #2
 800d87a:	f104 010c 	add.w	r1, r4, #12
 800d87e:	0092      	lsls	r2, r2, #2
 800d880:	300c      	adds	r0, #12
 800d882:	f7ff fb0c 	bl	800ce9e <memcpy>
 800d886:	4621      	mov	r1, r4
 800d888:	4638      	mov	r0, r7
 800d88a:	f7ff ffa5 	bl	800d7d8 <_Bfree>
 800d88e:	4644      	mov	r4, r8
 800d890:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800d894:	3501      	adds	r5, #1
 800d896:	615e      	str	r6, [r3, #20]
 800d898:	6125      	str	r5, [r4, #16]
 800d89a:	4620      	mov	r0, r4
 800d89c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d8a0:	0800f2f8 	.word	0x0800f2f8
 800d8a4:	0800f380 	.word	0x0800f380

0800d8a8 <__s2b>:
 800d8a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d8ac:	460c      	mov	r4, r1
 800d8ae:	4615      	mov	r5, r2
 800d8b0:	461f      	mov	r7, r3
 800d8b2:	2209      	movs	r2, #9
 800d8b4:	3308      	adds	r3, #8
 800d8b6:	4606      	mov	r6, r0
 800d8b8:	fb93 f3f2 	sdiv	r3, r3, r2
 800d8bc:	2100      	movs	r1, #0
 800d8be:	2201      	movs	r2, #1
 800d8c0:	429a      	cmp	r2, r3
 800d8c2:	db09      	blt.n	800d8d8 <__s2b+0x30>
 800d8c4:	4630      	mov	r0, r6
 800d8c6:	f7ff ff47 	bl	800d758 <_Balloc>
 800d8ca:	b940      	cbnz	r0, 800d8de <__s2b+0x36>
 800d8cc:	4602      	mov	r2, r0
 800d8ce:	4b19      	ldr	r3, [pc, #100]	@ (800d934 <__s2b+0x8c>)
 800d8d0:	4819      	ldr	r0, [pc, #100]	@ (800d938 <__s2b+0x90>)
 800d8d2:	21d3      	movs	r1, #211	@ 0xd3
 800d8d4:	f000 ffba 	bl	800e84c <__assert_func>
 800d8d8:	0052      	lsls	r2, r2, #1
 800d8da:	3101      	adds	r1, #1
 800d8dc:	e7f0      	b.n	800d8c0 <__s2b+0x18>
 800d8de:	9b08      	ldr	r3, [sp, #32]
 800d8e0:	6143      	str	r3, [r0, #20]
 800d8e2:	2d09      	cmp	r5, #9
 800d8e4:	f04f 0301 	mov.w	r3, #1
 800d8e8:	6103      	str	r3, [r0, #16]
 800d8ea:	dd16      	ble.n	800d91a <__s2b+0x72>
 800d8ec:	f104 0909 	add.w	r9, r4, #9
 800d8f0:	46c8      	mov	r8, r9
 800d8f2:	442c      	add	r4, r5
 800d8f4:	f818 3b01 	ldrb.w	r3, [r8], #1
 800d8f8:	4601      	mov	r1, r0
 800d8fa:	3b30      	subs	r3, #48	@ 0x30
 800d8fc:	220a      	movs	r2, #10
 800d8fe:	4630      	mov	r0, r6
 800d900:	f7ff ff8c 	bl	800d81c <__multadd>
 800d904:	45a0      	cmp	r8, r4
 800d906:	d1f5      	bne.n	800d8f4 <__s2b+0x4c>
 800d908:	f1a5 0408 	sub.w	r4, r5, #8
 800d90c:	444c      	add	r4, r9
 800d90e:	1b2d      	subs	r5, r5, r4
 800d910:	1963      	adds	r3, r4, r5
 800d912:	42bb      	cmp	r3, r7
 800d914:	db04      	blt.n	800d920 <__s2b+0x78>
 800d916:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d91a:	340a      	adds	r4, #10
 800d91c:	2509      	movs	r5, #9
 800d91e:	e7f6      	b.n	800d90e <__s2b+0x66>
 800d920:	f814 3b01 	ldrb.w	r3, [r4], #1
 800d924:	4601      	mov	r1, r0
 800d926:	3b30      	subs	r3, #48	@ 0x30
 800d928:	220a      	movs	r2, #10
 800d92a:	4630      	mov	r0, r6
 800d92c:	f7ff ff76 	bl	800d81c <__multadd>
 800d930:	e7ee      	b.n	800d910 <__s2b+0x68>
 800d932:	bf00      	nop
 800d934:	0800f2f8 	.word	0x0800f2f8
 800d938:	0800f380 	.word	0x0800f380

0800d93c <__hi0bits>:
 800d93c:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800d940:	4603      	mov	r3, r0
 800d942:	bf36      	itet	cc
 800d944:	0403      	lslcc	r3, r0, #16
 800d946:	2000      	movcs	r0, #0
 800d948:	2010      	movcc	r0, #16
 800d94a:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800d94e:	bf3c      	itt	cc
 800d950:	021b      	lslcc	r3, r3, #8
 800d952:	3008      	addcc	r0, #8
 800d954:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800d958:	bf3c      	itt	cc
 800d95a:	011b      	lslcc	r3, r3, #4
 800d95c:	3004      	addcc	r0, #4
 800d95e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800d962:	bf3c      	itt	cc
 800d964:	009b      	lslcc	r3, r3, #2
 800d966:	3002      	addcc	r0, #2
 800d968:	2b00      	cmp	r3, #0
 800d96a:	db05      	blt.n	800d978 <__hi0bits+0x3c>
 800d96c:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800d970:	f100 0001 	add.w	r0, r0, #1
 800d974:	bf08      	it	eq
 800d976:	2020      	moveq	r0, #32
 800d978:	4770      	bx	lr

0800d97a <__lo0bits>:
 800d97a:	6803      	ldr	r3, [r0, #0]
 800d97c:	4602      	mov	r2, r0
 800d97e:	f013 0007 	ands.w	r0, r3, #7
 800d982:	d00b      	beq.n	800d99c <__lo0bits+0x22>
 800d984:	07d9      	lsls	r1, r3, #31
 800d986:	d421      	bmi.n	800d9cc <__lo0bits+0x52>
 800d988:	0798      	lsls	r0, r3, #30
 800d98a:	bf49      	itett	mi
 800d98c:	085b      	lsrmi	r3, r3, #1
 800d98e:	089b      	lsrpl	r3, r3, #2
 800d990:	2001      	movmi	r0, #1
 800d992:	6013      	strmi	r3, [r2, #0]
 800d994:	bf5c      	itt	pl
 800d996:	6013      	strpl	r3, [r2, #0]
 800d998:	2002      	movpl	r0, #2
 800d99a:	4770      	bx	lr
 800d99c:	b299      	uxth	r1, r3
 800d99e:	b909      	cbnz	r1, 800d9a4 <__lo0bits+0x2a>
 800d9a0:	0c1b      	lsrs	r3, r3, #16
 800d9a2:	2010      	movs	r0, #16
 800d9a4:	b2d9      	uxtb	r1, r3
 800d9a6:	b909      	cbnz	r1, 800d9ac <__lo0bits+0x32>
 800d9a8:	3008      	adds	r0, #8
 800d9aa:	0a1b      	lsrs	r3, r3, #8
 800d9ac:	0719      	lsls	r1, r3, #28
 800d9ae:	bf04      	itt	eq
 800d9b0:	091b      	lsreq	r3, r3, #4
 800d9b2:	3004      	addeq	r0, #4
 800d9b4:	0799      	lsls	r1, r3, #30
 800d9b6:	bf04      	itt	eq
 800d9b8:	089b      	lsreq	r3, r3, #2
 800d9ba:	3002      	addeq	r0, #2
 800d9bc:	07d9      	lsls	r1, r3, #31
 800d9be:	d403      	bmi.n	800d9c8 <__lo0bits+0x4e>
 800d9c0:	085b      	lsrs	r3, r3, #1
 800d9c2:	f100 0001 	add.w	r0, r0, #1
 800d9c6:	d003      	beq.n	800d9d0 <__lo0bits+0x56>
 800d9c8:	6013      	str	r3, [r2, #0]
 800d9ca:	4770      	bx	lr
 800d9cc:	2000      	movs	r0, #0
 800d9ce:	4770      	bx	lr
 800d9d0:	2020      	movs	r0, #32
 800d9d2:	4770      	bx	lr

0800d9d4 <__i2b>:
 800d9d4:	b510      	push	{r4, lr}
 800d9d6:	460c      	mov	r4, r1
 800d9d8:	2101      	movs	r1, #1
 800d9da:	f7ff febd 	bl	800d758 <_Balloc>
 800d9de:	4602      	mov	r2, r0
 800d9e0:	b928      	cbnz	r0, 800d9ee <__i2b+0x1a>
 800d9e2:	4b05      	ldr	r3, [pc, #20]	@ (800d9f8 <__i2b+0x24>)
 800d9e4:	4805      	ldr	r0, [pc, #20]	@ (800d9fc <__i2b+0x28>)
 800d9e6:	f240 1145 	movw	r1, #325	@ 0x145
 800d9ea:	f000 ff2f 	bl	800e84c <__assert_func>
 800d9ee:	2301      	movs	r3, #1
 800d9f0:	6144      	str	r4, [r0, #20]
 800d9f2:	6103      	str	r3, [r0, #16]
 800d9f4:	bd10      	pop	{r4, pc}
 800d9f6:	bf00      	nop
 800d9f8:	0800f2f8 	.word	0x0800f2f8
 800d9fc:	0800f380 	.word	0x0800f380

0800da00 <__multiply>:
 800da00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da04:	4614      	mov	r4, r2
 800da06:	690a      	ldr	r2, [r1, #16]
 800da08:	6923      	ldr	r3, [r4, #16]
 800da0a:	429a      	cmp	r2, r3
 800da0c:	bfa8      	it	ge
 800da0e:	4623      	movge	r3, r4
 800da10:	460f      	mov	r7, r1
 800da12:	bfa4      	itt	ge
 800da14:	460c      	movge	r4, r1
 800da16:	461f      	movge	r7, r3
 800da18:	f8d4 a010 	ldr.w	sl, [r4, #16]
 800da1c:	f8d7 9010 	ldr.w	r9, [r7, #16]
 800da20:	68a3      	ldr	r3, [r4, #8]
 800da22:	6861      	ldr	r1, [r4, #4]
 800da24:	eb0a 0609 	add.w	r6, sl, r9
 800da28:	42b3      	cmp	r3, r6
 800da2a:	b085      	sub	sp, #20
 800da2c:	bfb8      	it	lt
 800da2e:	3101      	addlt	r1, #1
 800da30:	f7ff fe92 	bl	800d758 <_Balloc>
 800da34:	b930      	cbnz	r0, 800da44 <__multiply+0x44>
 800da36:	4602      	mov	r2, r0
 800da38:	4b44      	ldr	r3, [pc, #272]	@ (800db4c <__multiply+0x14c>)
 800da3a:	4845      	ldr	r0, [pc, #276]	@ (800db50 <__multiply+0x150>)
 800da3c:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800da40:	f000 ff04 	bl	800e84c <__assert_func>
 800da44:	f100 0514 	add.w	r5, r0, #20
 800da48:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800da4c:	462b      	mov	r3, r5
 800da4e:	2200      	movs	r2, #0
 800da50:	4543      	cmp	r3, r8
 800da52:	d321      	bcc.n	800da98 <__multiply+0x98>
 800da54:	f107 0114 	add.w	r1, r7, #20
 800da58:	f104 0214 	add.w	r2, r4, #20
 800da5c:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 800da60:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800da64:	9302      	str	r3, [sp, #8]
 800da66:	1b13      	subs	r3, r2, r4
 800da68:	3b15      	subs	r3, #21
 800da6a:	f023 0303 	bic.w	r3, r3, #3
 800da6e:	3304      	adds	r3, #4
 800da70:	f104 0715 	add.w	r7, r4, #21
 800da74:	42ba      	cmp	r2, r7
 800da76:	bf38      	it	cc
 800da78:	2304      	movcc	r3, #4
 800da7a:	9301      	str	r3, [sp, #4]
 800da7c:	9b02      	ldr	r3, [sp, #8]
 800da7e:	9103      	str	r1, [sp, #12]
 800da80:	428b      	cmp	r3, r1
 800da82:	d80c      	bhi.n	800da9e <__multiply+0x9e>
 800da84:	2e00      	cmp	r6, #0
 800da86:	dd03      	ble.n	800da90 <__multiply+0x90>
 800da88:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800da8c:	2b00      	cmp	r3, #0
 800da8e:	d05b      	beq.n	800db48 <__multiply+0x148>
 800da90:	6106      	str	r6, [r0, #16]
 800da92:	b005      	add	sp, #20
 800da94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da98:	f843 2b04 	str.w	r2, [r3], #4
 800da9c:	e7d8      	b.n	800da50 <__multiply+0x50>
 800da9e:	f8b1 a000 	ldrh.w	sl, [r1]
 800daa2:	f1ba 0f00 	cmp.w	sl, #0
 800daa6:	d024      	beq.n	800daf2 <__multiply+0xf2>
 800daa8:	f104 0e14 	add.w	lr, r4, #20
 800daac:	46a9      	mov	r9, r5
 800daae:	f04f 0c00 	mov.w	ip, #0
 800dab2:	f85e 7b04 	ldr.w	r7, [lr], #4
 800dab6:	f8d9 3000 	ldr.w	r3, [r9]
 800daba:	fa1f fb87 	uxth.w	fp, r7
 800dabe:	b29b      	uxth	r3, r3
 800dac0:	fb0a 330b 	mla	r3, sl, fp, r3
 800dac4:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 800dac8:	f8d9 7000 	ldr.w	r7, [r9]
 800dacc:	4463      	add	r3, ip
 800dace:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800dad2:	fb0a c70b 	mla	r7, sl, fp, ip
 800dad6:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800dada:	b29b      	uxth	r3, r3
 800dadc:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800dae0:	4572      	cmp	r2, lr
 800dae2:	f849 3b04 	str.w	r3, [r9], #4
 800dae6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800daea:	d8e2      	bhi.n	800dab2 <__multiply+0xb2>
 800daec:	9b01      	ldr	r3, [sp, #4]
 800daee:	f845 c003 	str.w	ip, [r5, r3]
 800daf2:	9b03      	ldr	r3, [sp, #12]
 800daf4:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800daf8:	3104      	adds	r1, #4
 800dafa:	f1b9 0f00 	cmp.w	r9, #0
 800dafe:	d021      	beq.n	800db44 <__multiply+0x144>
 800db00:	682b      	ldr	r3, [r5, #0]
 800db02:	f104 0c14 	add.w	ip, r4, #20
 800db06:	46ae      	mov	lr, r5
 800db08:	f04f 0a00 	mov.w	sl, #0
 800db0c:	f8bc b000 	ldrh.w	fp, [ip]
 800db10:	f8be 7002 	ldrh.w	r7, [lr, #2]
 800db14:	fb09 770b 	mla	r7, r9, fp, r7
 800db18:	4457      	add	r7, sl
 800db1a:	b29b      	uxth	r3, r3
 800db1c:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800db20:	f84e 3b04 	str.w	r3, [lr], #4
 800db24:	f85c 3b04 	ldr.w	r3, [ip], #4
 800db28:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800db2c:	f8be 3000 	ldrh.w	r3, [lr]
 800db30:	fb09 330a 	mla	r3, r9, sl, r3
 800db34:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800db38:	4562      	cmp	r2, ip
 800db3a:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800db3e:	d8e5      	bhi.n	800db0c <__multiply+0x10c>
 800db40:	9f01      	ldr	r7, [sp, #4]
 800db42:	51eb      	str	r3, [r5, r7]
 800db44:	3504      	adds	r5, #4
 800db46:	e799      	b.n	800da7c <__multiply+0x7c>
 800db48:	3e01      	subs	r6, #1
 800db4a:	e79b      	b.n	800da84 <__multiply+0x84>
 800db4c:	0800f2f8 	.word	0x0800f2f8
 800db50:	0800f380 	.word	0x0800f380

0800db54 <__pow5mult>:
 800db54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800db58:	4615      	mov	r5, r2
 800db5a:	f012 0203 	ands.w	r2, r2, #3
 800db5e:	4607      	mov	r7, r0
 800db60:	460e      	mov	r6, r1
 800db62:	d007      	beq.n	800db74 <__pow5mult+0x20>
 800db64:	4c25      	ldr	r4, [pc, #148]	@ (800dbfc <__pow5mult+0xa8>)
 800db66:	3a01      	subs	r2, #1
 800db68:	2300      	movs	r3, #0
 800db6a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800db6e:	f7ff fe55 	bl	800d81c <__multadd>
 800db72:	4606      	mov	r6, r0
 800db74:	10ad      	asrs	r5, r5, #2
 800db76:	d03d      	beq.n	800dbf4 <__pow5mult+0xa0>
 800db78:	69fc      	ldr	r4, [r7, #28]
 800db7a:	b97c      	cbnz	r4, 800db9c <__pow5mult+0x48>
 800db7c:	2010      	movs	r0, #16
 800db7e:	f000 fe97 	bl	800e8b0 <malloc>
 800db82:	4602      	mov	r2, r0
 800db84:	61f8      	str	r0, [r7, #28]
 800db86:	b928      	cbnz	r0, 800db94 <__pow5mult+0x40>
 800db88:	4b1d      	ldr	r3, [pc, #116]	@ (800dc00 <__pow5mult+0xac>)
 800db8a:	481e      	ldr	r0, [pc, #120]	@ (800dc04 <__pow5mult+0xb0>)
 800db8c:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800db90:	f000 fe5c 	bl	800e84c <__assert_func>
 800db94:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800db98:	6004      	str	r4, [r0, #0]
 800db9a:	60c4      	str	r4, [r0, #12]
 800db9c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800dba0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800dba4:	b94c      	cbnz	r4, 800dbba <__pow5mult+0x66>
 800dba6:	f240 2171 	movw	r1, #625	@ 0x271
 800dbaa:	4638      	mov	r0, r7
 800dbac:	f7ff ff12 	bl	800d9d4 <__i2b>
 800dbb0:	2300      	movs	r3, #0
 800dbb2:	f8c8 0008 	str.w	r0, [r8, #8]
 800dbb6:	4604      	mov	r4, r0
 800dbb8:	6003      	str	r3, [r0, #0]
 800dbba:	f04f 0900 	mov.w	r9, #0
 800dbbe:	07eb      	lsls	r3, r5, #31
 800dbc0:	d50a      	bpl.n	800dbd8 <__pow5mult+0x84>
 800dbc2:	4631      	mov	r1, r6
 800dbc4:	4622      	mov	r2, r4
 800dbc6:	4638      	mov	r0, r7
 800dbc8:	f7ff ff1a 	bl	800da00 <__multiply>
 800dbcc:	4631      	mov	r1, r6
 800dbce:	4680      	mov	r8, r0
 800dbd0:	4638      	mov	r0, r7
 800dbd2:	f7ff fe01 	bl	800d7d8 <_Bfree>
 800dbd6:	4646      	mov	r6, r8
 800dbd8:	106d      	asrs	r5, r5, #1
 800dbda:	d00b      	beq.n	800dbf4 <__pow5mult+0xa0>
 800dbdc:	6820      	ldr	r0, [r4, #0]
 800dbde:	b938      	cbnz	r0, 800dbf0 <__pow5mult+0x9c>
 800dbe0:	4622      	mov	r2, r4
 800dbe2:	4621      	mov	r1, r4
 800dbe4:	4638      	mov	r0, r7
 800dbe6:	f7ff ff0b 	bl	800da00 <__multiply>
 800dbea:	6020      	str	r0, [r4, #0]
 800dbec:	f8c0 9000 	str.w	r9, [r0]
 800dbf0:	4604      	mov	r4, r0
 800dbf2:	e7e4      	b.n	800dbbe <__pow5mult+0x6a>
 800dbf4:	4630      	mov	r0, r6
 800dbf6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dbfa:	bf00      	nop
 800dbfc:	0800f3dc 	.word	0x0800f3dc
 800dc00:	0800f369 	.word	0x0800f369
 800dc04:	0800f380 	.word	0x0800f380

0800dc08 <__lshift>:
 800dc08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc0c:	460c      	mov	r4, r1
 800dc0e:	6849      	ldr	r1, [r1, #4]
 800dc10:	6923      	ldr	r3, [r4, #16]
 800dc12:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800dc16:	68a3      	ldr	r3, [r4, #8]
 800dc18:	4607      	mov	r7, r0
 800dc1a:	4691      	mov	r9, r2
 800dc1c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800dc20:	f108 0601 	add.w	r6, r8, #1
 800dc24:	42b3      	cmp	r3, r6
 800dc26:	db0b      	blt.n	800dc40 <__lshift+0x38>
 800dc28:	4638      	mov	r0, r7
 800dc2a:	f7ff fd95 	bl	800d758 <_Balloc>
 800dc2e:	4605      	mov	r5, r0
 800dc30:	b948      	cbnz	r0, 800dc46 <__lshift+0x3e>
 800dc32:	4602      	mov	r2, r0
 800dc34:	4b28      	ldr	r3, [pc, #160]	@ (800dcd8 <__lshift+0xd0>)
 800dc36:	4829      	ldr	r0, [pc, #164]	@ (800dcdc <__lshift+0xd4>)
 800dc38:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800dc3c:	f000 fe06 	bl	800e84c <__assert_func>
 800dc40:	3101      	adds	r1, #1
 800dc42:	005b      	lsls	r3, r3, #1
 800dc44:	e7ee      	b.n	800dc24 <__lshift+0x1c>
 800dc46:	2300      	movs	r3, #0
 800dc48:	f100 0114 	add.w	r1, r0, #20
 800dc4c:	f100 0210 	add.w	r2, r0, #16
 800dc50:	4618      	mov	r0, r3
 800dc52:	4553      	cmp	r3, sl
 800dc54:	db33      	blt.n	800dcbe <__lshift+0xb6>
 800dc56:	6920      	ldr	r0, [r4, #16]
 800dc58:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800dc5c:	f104 0314 	add.w	r3, r4, #20
 800dc60:	f019 091f 	ands.w	r9, r9, #31
 800dc64:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800dc68:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800dc6c:	d02b      	beq.n	800dcc6 <__lshift+0xbe>
 800dc6e:	f1c9 0e20 	rsb	lr, r9, #32
 800dc72:	468a      	mov	sl, r1
 800dc74:	2200      	movs	r2, #0
 800dc76:	6818      	ldr	r0, [r3, #0]
 800dc78:	fa00 f009 	lsl.w	r0, r0, r9
 800dc7c:	4310      	orrs	r0, r2
 800dc7e:	f84a 0b04 	str.w	r0, [sl], #4
 800dc82:	f853 2b04 	ldr.w	r2, [r3], #4
 800dc86:	459c      	cmp	ip, r3
 800dc88:	fa22 f20e 	lsr.w	r2, r2, lr
 800dc8c:	d8f3      	bhi.n	800dc76 <__lshift+0x6e>
 800dc8e:	ebac 0304 	sub.w	r3, ip, r4
 800dc92:	3b15      	subs	r3, #21
 800dc94:	f023 0303 	bic.w	r3, r3, #3
 800dc98:	3304      	adds	r3, #4
 800dc9a:	f104 0015 	add.w	r0, r4, #21
 800dc9e:	4584      	cmp	ip, r0
 800dca0:	bf38      	it	cc
 800dca2:	2304      	movcc	r3, #4
 800dca4:	50ca      	str	r2, [r1, r3]
 800dca6:	b10a      	cbz	r2, 800dcac <__lshift+0xa4>
 800dca8:	f108 0602 	add.w	r6, r8, #2
 800dcac:	3e01      	subs	r6, #1
 800dcae:	4638      	mov	r0, r7
 800dcb0:	612e      	str	r6, [r5, #16]
 800dcb2:	4621      	mov	r1, r4
 800dcb4:	f7ff fd90 	bl	800d7d8 <_Bfree>
 800dcb8:	4628      	mov	r0, r5
 800dcba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dcbe:	f842 0f04 	str.w	r0, [r2, #4]!
 800dcc2:	3301      	adds	r3, #1
 800dcc4:	e7c5      	b.n	800dc52 <__lshift+0x4a>
 800dcc6:	3904      	subs	r1, #4
 800dcc8:	f853 2b04 	ldr.w	r2, [r3], #4
 800dccc:	f841 2f04 	str.w	r2, [r1, #4]!
 800dcd0:	459c      	cmp	ip, r3
 800dcd2:	d8f9      	bhi.n	800dcc8 <__lshift+0xc0>
 800dcd4:	e7ea      	b.n	800dcac <__lshift+0xa4>
 800dcd6:	bf00      	nop
 800dcd8:	0800f2f8 	.word	0x0800f2f8
 800dcdc:	0800f380 	.word	0x0800f380

0800dce0 <__mcmp>:
 800dce0:	690a      	ldr	r2, [r1, #16]
 800dce2:	4603      	mov	r3, r0
 800dce4:	6900      	ldr	r0, [r0, #16]
 800dce6:	1a80      	subs	r0, r0, r2
 800dce8:	b530      	push	{r4, r5, lr}
 800dcea:	d10e      	bne.n	800dd0a <__mcmp+0x2a>
 800dcec:	3314      	adds	r3, #20
 800dcee:	3114      	adds	r1, #20
 800dcf0:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800dcf4:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800dcf8:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800dcfc:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800dd00:	4295      	cmp	r5, r2
 800dd02:	d003      	beq.n	800dd0c <__mcmp+0x2c>
 800dd04:	d205      	bcs.n	800dd12 <__mcmp+0x32>
 800dd06:	f04f 30ff 	mov.w	r0, #4294967295
 800dd0a:	bd30      	pop	{r4, r5, pc}
 800dd0c:	42a3      	cmp	r3, r4
 800dd0e:	d3f3      	bcc.n	800dcf8 <__mcmp+0x18>
 800dd10:	e7fb      	b.n	800dd0a <__mcmp+0x2a>
 800dd12:	2001      	movs	r0, #1
 800dd14:	e7f9      	b.n	800dd0a <__mcmp+0x2a>
	...

0800dd18 <__mdiff>:
 800dd18:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd1c:	4689      	mov	r9, r1
 800dd1e:	4606      	mov	r6, r0
 800dd20:	4611      	mov	r1, r2
 800dd22:	4648      	mov	r0, r9
 800dd24:	4614      	mov	r4, r2
 800dd26:	f7ff ffdb 	bl	800dce0 <__mcmp>
 800dd2a:	1e05      	subs	r5, r0, #0
 800dd2c:	d112      	bne.n	800dd54 <__mdiff+0x3c>
 800dd2e:	4629      	mov	r1, r5
 800dd30:	4630      	mov	r0, r6
 800dd32:	f7ff fd11 	bl	800d758 <_Balloc>
 800dd36:	4602      	mov	r2, r0
 800dd38:	b928      	cbnz	r0, 800dd46 <__mdiff+0x2e>
 800dd3a:	4b3f      	ldr	r3, [pc, #252]	@ (800de38 <__mdiff+0x120>)
 800dd3c:	f240 2137 	movw	r1, #567	@ 0x237
 800dd40:	483e      	ldr	r0, [pc, #248]	@ (800de3c <__mdiff+0x124>)
 800dd42:	f000 fd83 	bl	800e84c <__assert_func>
 800dd46:	2301      	movs	r3, #1
 800dd48:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800dd4c:	4610      	mov	r0, r2
 800dd4e:	b003      	add	sp, #12
 800dd50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd54:	bfbc      	itt	lt
 800dd56:	464b      	movlt	r3, r9
 800dd58:	46a1      	movlt	r9, r4
 800dd5a:	4630      	mov	r0, r6
 800dd5c:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800dd60:	bfba      	itte	lt
 800dd62:	461c      	movlt	r4, r3
 800dd64:	2501      	movlt	r5, #1
 800dd66:	2500      	movge	r5, #0
 800dd68:	f7ff fcf6 	bl	800d758 <_Balloc>
 800dd6c:	4602      	mov	r2, r0
 800dd6e:	b918      	cbnz	r0, 800dd78 <__mdiff+0x60>
 800dd70:	4b31      	ldr	r3, [pc, #196]	@ (800de38 <__mdiff+0x120>)
 800dd72:	f240 2145 	movw	r1, #581	@ 0x245
 800dd76:	e7e3      	b.n	800dd40 <__mdiff+0x28>
 800dd78:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800dd7c:	6926      	ldr	r6, [r4, #16]
 800dd7e:	60c5      	str	r5, [r0, #12]
 800dd80:	f109 0310 	add.w	r3, r9, #16
 800dd84:	f109 0514 	add.w	r5, r9, #20
 800dd88:	f104 0e14 	add.w	lr, r4, #20
 800dd8c:	f100 0b14 	add.w	fp, r0, #20
 800dd90:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800dd94:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800dd98:	9301      	str	r3, [sp, #4]
 800dd9a:	46d9      	mov	r9, fp
 800dd9c:	f04f 0c00 	mov.w	ip, #0
 800dda0:	9b01      	ldr	r3, [sp, #4]
 800dda2:	f85e 0b04 	ldr.w	r0, [lr], #4
 800dda6:	f853 af04 	ldr.w	sl, [r3, #4]!
 800ddaa:	9301      	str	r3, [sp, #4]
 800ddac:	fa1f f38a 	uxth.w	r3, sl
 800ddb0:	4619      	mov	r1, r3
 800ddb2:	b283      	uxth	r3, r0
 800ddb4:	1acb      	subs	r3, r1, r3
 800ddb6:	0c00      	lsrs	r0, r0, #16
 800ddb8:	4463      	add	r3, ip
 800ddba:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800ddbe:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800ddc2:	b29b      	uxth	r3, r3
 800ddc4:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800ddc8:	4576      	cmp	r6, lr
 800ddca:	f849 3b04 	str.w	r3, [r9], #4
 800ddce:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800ddd2:	d8e5      	bhi.n	800dda0 <__mdiff+0x88>
 800ddd4:	1b33      	subs	r3, r6, r4
 800ddd6:	3b15      	subs	r3, #21
 800ddd8:	f023 0303 	bic.w	r3, r3, #3
 800dddc:	3415      	adds	r4, #21
 800ddde:	3304      	adds	r3, #4
 800dde0:	42a6      	cmp	r6, r4
 800dde2:	bf38      	it	cc
 800dde4:	2304      	movcc	r3, #4
 800dde6:	441d      	add	r5, r3
 800dde8:	445b      	add	r3, fp
 800ddea:	461e      	mov	r6, r3
 800ddec:	462c      	mov	r4, r5
 800ddee:	4544      	cmp	r4, r8
 800ddf0:	d30e      	bcc.n	800de10 <__mdiff+0xf8>
 800ddf2:	f108 0103 	add.w	r1, r8, #3
 800ddf6:	1b49      	subs	r1, r1, r5
 800ddf8:	f021 0103 	bic.w	r1, r1, #3
 800ddfc:	3d03      	subs	r5, #3
 800ddfe:	45a8      	cmp	r8, r5
 800de00:	bf38      	it	cc
 800de02:	2100      	movcc	r1, #0
 800de04:	440b      	add	r3, r1
 800de06:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800de0a:	b191      	cbz	r1, 800de32 <__mdiff+0x11a>
 800de0c:	6117      	str	r7, [r2, #16]
 800de0e:	e79d      	b.n	800dd4c <__mdiff+0x34>
 800de10:	f854 1b04 	ldr.w	r1, [r4], #4
 800de14:	46e6      	mov	lr, ip
 800de16:	0c08      	lsrs	r0, r1, #16
 800de18:	fa1c fc81 	uxtah	ip, ip, r1
 800de1c:	4471      	add	r1, lr
 800de1e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800de22:	b289      	uxth	r1, r1
 800de24:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800de28:	f846 1b04 	str.w	r1, [r6], #4
 800de2c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800de30:	e7dd      	b.n	800ddee <__mdiff+0xd6>
 800de32:	3f01      	subs	r7, #1
 800de34:	e7e7      	b.n	800de06 <__mdiff+0xee>
 800de36:	bf00      	nop
 800de38:	0800f2f8 	.word	0x0800f2f8
 800de3c:	0800f380 	.word	0x0800f380

0800de40 <__ulp>:
 800de40:	b082      	sub	sp, #8
 800de42:	ed8d 0b00 	vstr	d0, [sp]
 800de46:	9a01      	ldr	r2, [sp, #4]
 800de48:	4b0f      	ldr	r3, [pc, #60]	@ (800de88 <__ulp+0x48>)
 800de4a:	4013      	ands	r3, r2
 800de4c:	f1a3 7350 	sub.w	r3, r3, #54525952	@ 0x3400000
 800de50:	2b00      	cmp	r3, #0
 800de52:	dc08      	bgt.n	800de66 <__ulp+0x26>
 800de54:	425b      	negs	r3, r3
 800de56:	f1b3 7fa0 	cmp.w	r3, #20971520	@ 0x1400000
 800de5a:	ea4f 5223 	mov.w	r2, r3, asr #20
 800de5e:	da04      	bge.n	800de6a <__ulp+0x2a>
 800de60:	f44f 2300 	mov.w	r3, #524288	@ 0x80000
 800de64:	4113      	asrs	r3, r2
 800de66:	2200      	movs	r2, #0
 800de68:	e008      	b.n	800de7c <__ulp+0x3c>
 800de6a:	f1a2 0314 	sub.w	r3, r2, #20
 800de6e:	2b1e      	cmp	r3, #30
 800de70:	bfda      	itte	le
 800de72:	f04f 4200 	movle.w	r2, #2147483648	@ 0x80000000
 800de76:	40da      	lsrle	r2, r3
 800de78:	2201      	movgt	r2, #1
 800de7a:	2300      	movs	r3, #0
 800de7c:	4619      	mov	r1, r3
 800de7e:	4610      	mov	r0, r2
 800de80:	ec41 0b10 	vmov	d0, r0, r1
 800de84:	b002      	add	sp, #8
 800de86:	4770      	bx	lr
 800de88:	7ff00000 	.word	0x7ff00000

0800de8c <__b2d>:
 800de8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de90:	6906      	ldr	r6, [r0, #16]
 800de92:	f100 0814 	add.w	r8, r0, #20
 800de96:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800de9a:	1f37      	subs	r7, r6, #4
 800de9c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800dea0:	4610      	mov	r0, r2
 800dea2:	f7ff fd4b 	bl	800d93c <__hi0bits>
 800dea6:	f1c0 0320 	rsb	r3, r0, #32
 800deaa:	280a      	cmp	r0, #10
 800deac:	600b      	str	r3, [r1, #0]
 800deae:	491b      	ldr	r1, [pc, #108]	@ (800df1c <__b2d+0x90>)
 800deb0:	dc15      	bgt.n	800dede <__b2d+0x52>
 800deb2:	f1c0 0c0b 	rsb	ip, r0, #11
 800deb6:	fa22 f30c 	lsr.w	r3, r2, ip
 800deba:	45b8      	cmp	r8, r7
 800debc:	ea43 0501 	orr.w	r5, r3, r1
 800dec0:	bf34      	ite	cc
 800dec2:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800dec6:	2300      	movcs	r3, #0
 800dec8:	3015      	adds	r0, #21
 800deca:	fa02 f000 	lsl.w	r0, r2, r0
 800dece:	fa23 f30c 	lsr.w	r3, r3, ip
 800ded2:	4303      	orrs	r3, r0
 800ded4:	461c      	mov	r4, r3
 800ded6:	ec45 4b10 	vmov	d0, r4, r5
 800deda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dede:	45b8      	cmp	r8, r7
 800dee0:	bf3a      	itte	cc
 800dee2:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800dee6:	f1a6 0708 	subcc.w	r7, r6, #8
 800deea:	2300      	movcs	r3, #0
 800deec:	380b      	subs	r0, #11
 800deee:	d012      	beq.n	800df16 <__b2d+0x8a>
 800def0:	f1c0 0120 	rsb	r1, r0, #32
 800def4:	fa23 f401 	lsr.w	r4, r3, r1
 800def8:	4082      	lsls	r2, r0
 800defa:	4322      	orrs	r2, r4
 800defc:	4547      	cmp	r7, r8
 800defe:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
 800df02:	bf8c      	ite	hi
 800df04:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800df08:	2200      	movls	r2, #0
 800df0a:	4083      	lsls	r3, r0
 800df0c:	40ca      	lsrs	r2, r1
 800df0e:	f445 1540 	orr.w	r5, r5, #3145728	@ 0x300000
 800df12:	4313      	orrs	r3, r2
 800df14:	e7de      	b.n	800ded4 <__b2d+0x48>
 800df16:	ea42 0501 	orr.w	r5, r2, r1
 800df1a:	e7db      	b.n	800ded4 <__b2d+0x48>
 800df1c:	3ff00000 	.word	0x3ff00000

0800df20 <__d2b>:
 800df20:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800df24:	460f      	mov	r7, r1
 800df26:	2101      	movs	r1, #1
 800df28:	ec59 8b10 	vmov	r8, r9, d0
 800df2c:	4616      	mov	r6, r2
 800df2e:	f7ff fc13 	bl	800d758 <_Balloc>
 800df32:	4604      	mov	r4, r0
 800df34:	b930      	cbnz	r0, 800df44 <__d2b+0x24>
 800df36:	4602      	mov	r2, r0
 800df38:	4b23      	ldr	r3, [pc, #140]	@ (800dfc8 <__d2b+0xa8>)
 800df3a:	4824      	ldr	r0, [pc, #144]	@ (800dfcc <__d2b+0xac>)
 800df3c:	f240 310f 	movw	r1, #783	@ 0x30f
 800df40:	f000 fc84 	bl	800e84c <__assert_func>
 800df44:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800df48:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800df4c:	b10d      	cbz	r5, 800df52 <__d2b+0x32>
 800df4e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800df52:	9301      	str	r3, [sp, #4]
 800df54:	f1b8 0300 	subs.w	r3, r8, #0
 800df58:	d023      	beq.n	800dfa2 <__d2b+0x82>
 800df5a:	4668      	mov	r0, sp
 800df5c:	9300      	str	r3, [sp, #0]
 800df5e:	f7ff fd0c 	bl	800d97a <__lo0bits>
 800df62:	e9dd 1200 	ldrd	r1, r2, [sp]
 800df66:	b1d0      	cbz	r0, 800df9e <__d2b+0x7e>
 800df68:	f1c0 0320 	rsb	r3, r0, #32
 800df6c:	fa02 f303 	lsl.w	r3, r2, r3
 800df70:	430b      	orrs	r3, r1
 800df72:	40c2      	lsrs	r2, r0
 800df74:	6163      	str	r3, [r4, #20]
 800df76:	9201      	str	r2, [sp, #4]
 800df78:	9b01      	ldr	r3, [sp, #4]
 800df7a:	61a3      	str	r3, [r4, #24]
 800df7c:	2b00      	cmp	r3, #0
 800df7e:	bf0c      	ite	eq
 800df80:	2201      	moveq	r2, #1
 800df82:	2202      	movne	r2, #2
 800df84:	6122      	str	r2, [r4, #16]
 800df86:	b1a5      	cbz	r5, 800dfb2 <__d2b+0x92>
 800df88:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800df8c:	4405      	add	r5, r0
 800df8e:	603d      	str	r5, [r7, #0]
 800df90:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800df94:	6030      	str	r0, [r6, #0]
 800df96:	4620      	mov	r0, r4
 800df98:	b003      	add	sp, #12
 800df9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df9e:	6161      	str	r1, [r4, #20]
 800dfa0:	e7ea      	b.n	800df78 <__d2b+0x58>
 800dfa2:	a801      	add	r0, sp, #4
 800dfa4:	f7ff fce9 	bl	800d97a <__lo0bits>
 800dfa8:	9b01      	ldr	r3, [sp, #4]
 800dfaa:	6163      	str	r3, [r4, #20]
 800dfac:	3020      	adds	r0, #32
 800dfae:	2201      	movs	r2, #1
 800dfb0:	e7e8      	b.n	800df84 <__d2b+0x64>
 800dfb2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800dfb6:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800dfba:	6038      	str	r0, [r7, #0]
 800dfbc:	6918      	ldr	r0, [r3, #16]
 800dfbe:	f7ff fcbd 	bl	800d93c <__hi0bits>
 800dfc2:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800dfc6:	e7e5      	b.n	800df94 <__d2b+0x74>
 800dfc8:	0800f2f8 	.word	0x0800f2f8
 800dfcc:	0800f380 	.word	0x0800f380

0800dfd0 <__ratio>:
 800dfd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfd4:	b085      	sub	sp, #20
 800dfd6:	e9cd 1000 	strd	r1, r0, [sp]
 800dfda:	a902      	add	r1, sp, #8
 800dfdc:	f7ff ff56 	bl	800de8c <__b2d>
 800dfe0:	9800      	ldr	r0, [sp, #0]
 800dfe2:	a903      	add	r1, sp, #12
 800dfe4:	ec55 4b10 	vmov	r4, r5, d0
 800dfe8:	f7ff ff50 	bl	800de8c <__b2d>
 800dfec:	9b01      	ldr	r3, [sp, #4]
 800dfee:	6919      	ldr	r1, [r3, #16]
 800dff0:	9b00      	ldr	r3, [sp, #0]
 800dff2:	691b      	ldr	r3, [r3, #16]
 800dff4:	1ac9      	subs	r1, r1, r3
 800dff6:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800dffa:	1a9b      	subs	r3, r3, r2
 800dffc:	ec5b ab10 	vmov	sl, fp, d0
 800e000:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800e004:	2b00      	cmp	r3, #0
 800e006:	bfce      	itee	gt
 800e008:	462a      	movgt	r2, r5
 800e00a:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800e00e:	465a      	movle	r2, fp
 800e010:	462f      	mov	r7, r5
 800e012:	46d9      	mov	r9, fp
 800e014:	bfcc      	ite	gt
 800e016:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800e01a:	eb02 5903 	addle.w	r9, r2, r3, lsl #20
 800e01e:	464b      	mov	r3, r9
 800e020:	4652      	mov	r2, sl
 800e022:	4620      	mov	r0, r4
 800e024:	4639      	mov	r1, r7
 800e026:	f7f2 fc39 	bl	800089c <__aeabi_ddiv>
 800e02a:	ec41 0b10 	vmov	d0, r0, r1
 800e02e:	b005      	add	sp, #20
 800e030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e034 <__copybits>:
 800e034:	3901      	subs	r1, #1
 800e036:	b570      	push	{r4, r5, r6, lr}
 800e038:	1149      	asrs	r1, r1, #5
 800e03a:	6914      	ldr	r4, [r2, #16]
 800e03c:	3101      	adds	r1, #1
 800e03e:	f102 0314 	add.w	r3, r2, #20
 800e042:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e046:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800e04a:	1f05      	subs	r5, r0, #4
 800e04c:	42a3      	cmp	r3, r4
 800e04e:	d30c      	bcc.n	800e06a <__copybits+0x36>
 800e050:	1aa3      	subs	r3, r4, r2
 800e052:	3b11      	subs	r3, #17
 800e054:	f023 0303 	bic.w	r3, r3, #3
 800e058:	3211      	adds	r2, #17
 800e05a:	42a2      	cmp	r2, r4
 800e05c:	bf88      	it	hi
 800e05e:	2300      	movhi	r3, #0
 800e060:	4418      	add	r0, r3
 800e062:	2300      	movs	r3, #0
 800e064:	4288      	cmp	r0, r1
 800e066:	d305      	bcc.n	800e074 <__copybits+0x40>
 800e068:	bd70      	pop	{r4, r5, r6, pc}
 800e06a:	f853 6b04 	ldr.w	r6, [r3], #4
 800e06e:	f845 6f04 	str.w	r6, [r5, #4]!
 800e072:	e7eb      	b.n	800e04c <__copybits+0x18>
 800e074:	f840 3b04 	str.w	r3, [r0], #4
 800e078:	e7f4      	b.n	800e064 <__copybits+0x30>

0800e07a <__any_on>:
 800e07a:	f100 0214 	add.w	r2, r0, #20
 800e07e:	6900      	ldr	r0, [r0, #16]
 800e080:	114b      	asrs	r3, r1, #5
 800e082:	4298      	cmp	r0, r3
 800e084:	b510      	push	{r4, lr}
 800e086:	db11      	blt.n	800e0ac <__any_on+0x32>
 800e088:	dd0a      	ble.n	800e0a0 <__any_on+0x26>
 800e08a:	f011 011f 	ands.w	r1, r1, #31
 800e08e:	d007      	beq.n	800e0a0 <__any_on+0x26>
 800e090:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800e094:	fa24 f001 	lsr.w	r0, r4, r1
 800e098:	fa00 f101 	lsl.w	r1, r0, r1
 800e09c:	428c      	cmp	r4, r1
 800e09e:	d10b      	bne.n	800e0b8 <__any_on+0x3e>
 800e0a0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800e0a4:	4293      	cmp	r3, r2
 800e0a6:	d803      	bhi.n	800e0b0 <__any_on+0x36>
 800e0a8:	2000      	movs	r0, #0
 800e0aa:	bd10      	pop	{r4, pc}
 800e0ac:	4603      	mov	r3, r0
 800e0ae:	e7f7      	b.n	800e0a0 <__any_on+0x26>
 800e0b0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800e0b4:	2900      	cmp	r1, #0
 800e0b6:	d0f5      	beq.n	800e0a4 <__any_on+0x2a>
 800e0b8:	2001      	movs	r0, #1
 800e0ba:	e7f6      	b.n	800e0aa <__any_on+0x30>

0800e0bc <__ascii_wctomb>:
 800e0bc:	4603      	mov	r3, r0
 800e0be:	4608      	mov	r0, r1
 800e0c0:	b141      	cbz	r1, 800e0d4 <__ascii_wctomb+0x18>
 800e0c2:	2aff      	cmp	r2, #255	@ 0xff
 800e0c4:	d904      	bls.n	800e0d0 <__ascii_wctomb+0x14>
 800e0c6:	228a      	movs	r2, #138	@ 0x8a
 800e0c8:	601a      	str	r2, [r3, #0]
 800e0ca:	f04f 30ff 	mov.w	r0, #4294967295
 800e0ce:	4770      	bx	lr
 800e0d0:	700a      	strb	r2, [r1, #0]
 800e0d2:	2001      	movs	r0, #1
 800e0d4:	4770      	bx	lr

0800e0d6 <__ssputs_r>:
 800e0d6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e0da:	688e      	ldr	r6, [r1, #8]
 800e0dc:	461f      	mov	r7, r3
 800e0de:	42be      	cmp	r6, r7
 800e0e0:	680b      	ldr	r3, [r1, #0]
 800e0e2:	4682      	mov	sl, r0
 800e0e4:	460c      	mov	r4, r1
 800e0e6:	4690      	mov	r8, r2
 800e0e8:	d82d      	bhi.n	800e146 <__ssputs_r+0x70>
 800e0ea:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800e0ee:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 800e0f2:	d026      	beq.n	800e142 <__ssputs_r+0x6c>
 800e0f4:	6965      	ldr	r5, [r4, #20]
 800e0f6:	6909      	ldr	r1, [r1, #16]
 800e0f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e0fc:	eba3 0901 	sub.w	r9, r3, r1
 800e100:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e104:	1c7b      	adds	r3, r7, #1
 800e106:	444b      	add	r3, r9
 800e108:	106d      	asrs	r5, r5, #1
 800e10a:	429d      	cmp	r5, r3
 800e10c:	bf38      	it	cc
 800e10e:	461d      	movcc	r5, r3
 800e110:	0553      	lsls	r3, r2, #21
 800e112:	d527      	bpl.n	800e164 <__ssputs_r+0x8e>
 800e114:	4629      	mov	r1, r5
 800e116:	f7ff fa81 	bl	800d61c <_malloc_r>
 800e11a:	4606      	mov	r6, r0
 800e11c:	b360      	cbz	r0, 800e178 <__ssputs_r+0xa2>
 800e11e:	6921      	ldr	r1, [r4, #16]
 800e120:	464a      	mov	r2, r9
 800e122:	f7fe febc 	bl	800ce9e <memcpy>
 800e126:	89a3      	ldrh	r3, [r4, #12]
 800e128:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 800e12c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800e130:	81a3      	strh	r3, [r4, #12]
 800e132:	6126      	str	r6, [r4, #16]
 800e134:	6165      	str	r5, [r4, #20]
 800e136:	444e      	add	r6, r9
 800e138:	eba5 0509 	sub.w	r5, r5, r9
 800e13c:	6026      	str	r6, [r4, #0]
 800e13e:	60a5      	str	r5, [r4, #8]
 800e140:	463e      	mov	r6, r7
 800e142:	42be      	cmp	r6, r7
 800e144:	d900      	bls.n	800e148 <__ssputs_r+0x72>
 800e146:	463e      	mov	r6, r7
 800e148:	6820      	ldr	r0, [r4, #0]
 800e14a:	4632      	mov	r2, r6
 800e14c:	4641      	mov	r1, r8
 800e14e:	f000 fb53 	bl	800e7f8 <memmove>
 800e152:	68a3      	ldr	r3, [r4, #8]
 800e154:	1b9b      	subs	r3, r3, r6
 800e156:	60a3      	str	r3, [r4, #8]
 800e158:	6823      	ldr	r3, [r4, #0]
 800e15a:	4433      	add	r3, r6
 800e15c:	6023      	str	r3, [r4, #0]
 800e15e:	2000      	movs	r0, #0
 800e160:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e164:	462a      	mov	r2, r5
 800e166:	f000 fbab 	bl	800e8c0 <_realloc_r>
 800e16a:	4606      	mov	r6, r0
 800e16c:	2800      	cmp	r0, #0
 800e16e:	d1e0      	bne.n	800e132 <__ssputs_r+0x5c>
 800e170:	6921      	ldr	r1, [r4, #16]
 800e172:	4650      	mov	r0, sl
 800e174:	f7fe feac 	bl	800ced0 <_free_r>
 800e178:	230c      	movs	r3, #12
 800e17a:	f8ca 3000 	str.w	r3, [sl]
 800e17e:	89a3      	ldrh	r3, [r4, #12]
 800e180:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800e184:	81a3      	strh	r3, [r4, #12]
 800e186:	f04f 30ff 	mov.w	r0, #4294967295
 800e18a:	e7e9      	b.n	800e160 <__ssputs_r+0x8a>

0800e18c <_svfiprintf_r>:
 800e18c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e190:	4698      	mov	r8, r3
 800e192:	898b      	ldrh	r3, [r1, #12]
 800e194:	061b      	lsls	r3, r3, #24
 800e196:	b09d      	sub	sp, #116	@ 0x74
 800e198:	4607      	mov	r7, r0
 800e19a:	460d      	mov	r5, r1
 800e19c:	4614      	mov	r4, r2
 800e19e:	d510      	bpl.n	800e1c2 <_svfiprintf_r+0x36>
 800e1a0:	690b      	ldr	r3, [r1, #16]
 800e1a2:	b973      	cbnz	r3, 800e1c2 <_svfiprintf_r+0x36>
 800e1a4:	2140      	movs	r1, #64	@ 0x40
 800e1a6:	f7ff fa39 	bl	800d61c <_malloc_r>
 800e1aa:	6028      	str	r0, [r5, #0]
 800e1ac:	6128      	str	r0, [r5, #16]
 800e1ae:	b930      	cbnz	r0, 800e1be <_svfiprintf_r+0x32>
 800e1b0:	230c      	movs	r3, #12
 800e1b2:	603b      	str	r3, [r7, #0]
 800e1b4:	f04f 30ff 	mov.w	r0, #4294967295
 800e1b8:	b01d      	add	sp, #116	@ 0x74
 800e1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e1be:	2340      	movs	r3, #64	@ 0x40
 800e1c0:	616b      	str	r3, [r5, #20]
 800e1c2:	2300      	movs	r3, #0
 800e1c4:	9309      	str	r3, [sp, #36]	@ 0x24
 800e1c6:	2320      	movs	r3, #32
 800e1c8:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800e1cc:	f8cd 800c 	str.w	r8, [sp, #12]
 800e1d0:	2330      	movs	r3, #48	@ 0x30
 800e1d2:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 800e370 <_svfiprintf_r+0x1e4>
 800e1d6:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800e1da:	f04f 0901 	mov.w	r9, #1
 800e1de:	4623      	mov	r3, r4
 800e1e0:	469a      	mov	sl, r3
 800e1e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e1e6:	b10a      	cbz	r2, 800e1ec <_svfiprintf_r+0x60>
 800e1e8:	2a25      	cmp	r2, #37	@ 0x25
 800e1ea:	d1f9      	bne.n	800e1e0 <_svfiprintf_r+0x54>
 800e1ec:	ebba 0b04 	subs.w	fp, sl, r4
 800e1f0:	d00b      	beq.n	800e20a <_svfiprintf_r+0x7e>
 800e1f2:	465b      	mov	r3, fp
 800e1f4:	4622      	mov	r2, r4
 800e1f6:	4629      	mov	r1, r5
 800e1f8:	4638      	mov	r0, r7
 800e1fa:	f7ff ff6c 	bl	800e0d6 <__ssputs_r>
 800e1fe:	3001      	adds	r0, #1
 800e200:	f000 80a7 	beq.w	800e352 <_svfiprintf_r+0x1c6>
 800e204:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800e206:	445a      	add	r2, fp
 800e208:	9209      	str	r2, [sp, #36]	@ 0x24
 800e20a:	f89a 3000 	ldrb.w	r3, [sl]
 800e20e:	2b00      	cmp	r3, #0
 800e210:	f000 809f 	beq.w	800e352 <_svfiprintf_r+0x1c6>
 800e214:	2300      	movs	r3, #0
 800e216:	f04f 32ff 	mov.w	r2, #4294967295
 800e21a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e21e:	f10a 0a01 	add.w	sl, sl, #1
 800e222:	9304      	str	r3, [sp, #16]
 800e224:	9307      	str	r3, [sp, #28]
 800e226:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800e22a:	931a      	str	r3, [sp, #104]	@ 0x68
 800e22c:	4654      	mov	r4, sl
 800e22e:	2205      	movs	r2, #5
 800e230:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e234:	484e      	ldr	r0, [pc, #312]	@ (800e370 <_svfiprintf_r+0x1e4>)
 800e236:	f7f1 fffb 	bl	8000230 <memchr>
 800e23a:	9a04      	ldr	r2, [sp, #16]
 800e23c:	b9d8      	cbnz	r0, 800e276 <_svfiprintf_r+0xea>
 800e23e:	06d0      	lsls	r0, r2, #27
 800e240:	bf44      	itt	mi
 800e242:	2320      	movmi	r3, #32
 800e244:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800e248:	0711      	lsls	r1, r2, #28
 800e24a:	bf44      	itt	mi
 800e24c:	232b      	movmi	r3, #43	@ 0x2b
 800e24e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800e252:	f89a 3000 	ldrb.w	r3, [sl]
 800e256:	2b2a      	cmp	r3, #42	@ 0x2a
 800e258:	d015      	beq.n	800e286 <_svfiprintf_r+0xfa>
 800e25a:	9a07      	ldr	r2, [sp, #28]
 800e25c:	4654      	mov	r4, sl
 800e25e:	2000      	movs	r0, #0
 800e260:	f04f 0c0a 	mov.w	ip, #10
 800e264:	4621      	mov	r1, r4
 800e266:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e26a:	3b30      	subs	r3, #48	@ 0x30
 800e26c:	2b09      	cmp	r3, #9
 800e26e:	d94b      	bls.n	800e308 <_svfiprintf_r+0x17c>
 800e270:	b1b0      	cbz	r0, 800e2a0 <_svfiprintf_r+0x114>
 800e272:	9207      	str	r2, [sp, #28]
 800e274:	e014      	b.n	800e2a0 <_svfiprintf_r+0x114>
 800e276:	eba0 0308 	sub.w	r3, r0, r8
 800e27a:	fa09 f303 	lsl.w	r3, r9, r3
 800e27e:	4313      	orrs	r3, r2
 800e280:	9304      	str	r3, [sp, #16]
 800e282:	46a2      	mov	sl, r4
 800e284:	e7d2      	b.n	800e22c <_svfiprintf_r+0xa0>
 800e286:	9b03      	ldr	r3, [sp, #12]
 800e288:	1d19      	adds	r1, r3, #4
 800e28a:	681b      	ldr	r3, [r3, #0]
 800e28c:	9103      	str	r1, [sp, #12]
 800e28e:	2b00      	cmp	r3, #0
 800e290:	bfbb      	ittet	lt
 800e292:	425b      	neglt	r3, r3
 800e294:	f042 0202 	orrlt.w	r2, r2, #2
 800e298:	9307      	strge	r3, [sp, #28]
 800e29a:	9307      	strlt	r3, [sp, #28]
 800e29c:	bfb8      	it	lt
 800e29e:	9204      	strlt	r2, [sp, #16]
 800e2a0:	7823      	ldrb	r3, [r4, #0]
 800e2a2:	2b2e      	cmp	r3, #46	@ 0x2e
 800e2a4:	d10a      	bne.n	800e2bc <_svfiprintf_r+0x130>
 800e2a6:	7863      	ldrb	r3, [r4, #1]
 800e2a8:	2b2a      	cmp	r3, #42	@ 0x2a
 800e2aa:	d132      	bne.n	800e312 <_svfiprintf_r+0x186>
 800e2ac:	9b03      	ldr	r3, [sp, #12]
 800e2ae:	1d1a      	adds	r2, r3, #4
 800e2b0:	681b      	ldr	r3, [r3, #0]
 800e2b2:	9203      	str	r2, [sp, #12]
 800e2b4:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800e2b8:	3402      	adds	r4, #2
 800e2ba:	9305      	str	r3, [sp, #20]
 800e2bc:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 800e380 <_svfiprintf_r+0x1f4>
 800e2c0:	7821      	ldrb	r1, [r4, #0]
 800e2c2:	2203      	movs	r2, #3
 800e2c4:	4650      	mov	r0, sl
 800e2c6:	f7f1 ffb3 	bl	8000230 <memchr>
 800e2ca:	b138      	cbz	r0, 800e2dc <_svfiprintf_r+0x150>
 800e2cc:	9b04      	ldr	r3, [sp, #16]
 800e2ce:	eba0 000a 	sub.w	r0, r0, sl
 800e2d2:	2240      	movs	r2, #64	@ 0x40
 800e2d4:	4082      	lsls	r2, r0
 800e2d6:	4313      	orrs	r3, r2
 800e2d8:	3401      	adds	r4, #1
 800e2da:	9304      	str	r3, [sp, #16]
 800e2dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e2e0:	4824      	ldr	r0, [pc, #144]	@ (800e374 <_svfiprintf_r+0x1e8>)
 800e2e2:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800e2e6:	2206      	movs	r2, #6
 800e2e8:	f7f1 ffa2 	bl	8000230 <memchr>
 800e2ec:	2800      	cmp	r0, #0
 800e2ee:	d036      	beq.n	800e35e <_svfiprintf_r+0x1d2>
 800e2f0:	4b21      	ldr	r3, [pc, #132]	@ (800e378 <_svfiprintf_r+0x1ec>)
 800e2f2:	bb1b      	cbnz	r3, 800e33c <_svfiprintf_r+0x1b0>
 800e2f4:	9b03      	ldr	r3, [sp, #12]
 800e2f6:	3307      	adds	r3, #7
 800e2f8:	f023 0307 	bic.w	r3, r3, #7
 800e2fc:	3308      	adds	r3, #8
 800e2fe:	9303      	str	r3, [sp, #12]
 800e300:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800e302:	4433      	add	r3, r6
 800e304:	9309      	str	r3, [sp, #36]	@ 0x24
 800e306:	e76a      	b.n	800e1de <_svfiprintf_r+0x52>
 800e308:	fb0c 3202 	mla	r2, ip, r2, r3
 800e30c:	460c      	mov	r4, r1
 800e30e:	2001      	movs	r0, #1
 800e310:	e7a8      	b.n	800e264 <_svfiprintf_r+0xd8>
 800e312:	2300      	movs	r3, #0
 800e314:	3401      	adds	r4, #1
 800e316:	9305      	str	r3, [sp, #20]
 800e318:	4619      	mov	r1, r3
 800e31a:	f04f 0c0a 	mov.w	ip, #10
 800e31e:	4620      	mov	r0, r4
 800e320:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e324:	3a30      	subs	r2, #48	@ 0x30
 800e326:	2a09      	cmp	r2, #9
 800e328:	d903      	bls.n	800e332 <_svfiprintf_r+0x1a6>
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	d0c6      	beq.n	800e2bc <_svfiprintf_r+0x130>
 800e32e:	9105      	str	r1, [sp, #20]
 800e330:	e7c4      	b.n	800e2bc <_svfiprintf_r+0x130>
 800e332:	fb0c 2101 	mla	r1, ip, r1, r2
 800e336:	4604      	mov	r4, r0
 800e338:	2301      	movs	r3, #1
 800e33a:	e7f0      	b.n	800e31e <_svfiprintf_r+0x192>
 800e33c:	ab03      	add	r3, sp, #12
 800e33e:	9300      	str	r3, [sp, #0]
 800e340:	462a      	mov	r2, r5
 800e342:	4b0e      	ldr	r3, [pc, #56]	@ (800e37c <_svfiprintf_r+0x1f0>)
 800e344:	a904      	add	r1, sp, #16
 800e346:	4638      	mov	r0, r7
 800e348:	f3af 8000 	nop.w
 800e34c:	1c42      	adds	r2, r0, #1
 800e34e:	4606      	mov	r6, r0
 800e350:	d1d6      	bne.n	800e300 <_svfiprintf_r+0x174>
 800e352:	89ab      	ldrh	r3, [r5, #12]
 800e354:	065b      	lsls	r3, r3, #25
 800e356:	f53f af2d 	bmi.w	800e1b4 <_svfiprintf_r+0x28>
 800e35a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e35c:	e72c      	b.n	800e1b8 <_svfiprintf_r+0x2c>
 800e35e:	ab03      	add	r3, sp, #12
 800e360:	9300      	str	r3, [sp, #0]
 800e362:	462a      	mov	r2, r5
 800e364:	4b05      	ldr	r3, [pc, #20]	@ (800e37c <_svfiprintf_r+0x1f0>)
 800e366:	a904      	add	r1, sp, #16
 800e368:	4638      	mov	r0, r7
 800e36a:	f000 f879 	bl	800e460 <_printf_i>
 800e36e:	e7ed      	b.n	800e34c <_svfiprintf_r+0x1c0>
 800e370:	0800f5d9 	.word	0x0800f5d9
 800e374:	0800f5e3 	.word	0x0800f5e3
 800e378:	00000000 	.word	0x00000000
 800e37c:	0800e0d7 	.word	0x0800e0d7
 800e380:	0800f5df 	.word	0x0800f5df

0800e384 <_printf_common>:
 800e384:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e388:	4616      	mov	r6, r2
 800e38a:	4698      	mov	r8, r3
 800e38c:	688a      	ldr	r2, [r1, #8]
 800e38e:	690b      	ldr	r3, [r1, #16]
 800e390:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800e394:	4293      	cmp	r3, r2
 800e396:	bfb8      	it	lt
 800e398:	4613      	movlt	r3, r2
 800e39a:	6033      	str	r3, [r6, #0]
 800e39c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800e3a0:	4607      	mov	r7, r0
 800e3a2:	460c      	mov	r4, r1
 800e3a4:	b10a      	cbz	r2, 800e3aa <_printf_common+0x26>
 800e3a6:	3301      	adds	r3, #1
 800e3a8:	6033      	str	r3, [r6, #0]
 800e3aa:	6823      	ldr	r3, [r4, #0]
 800e3ac:	0699      	lsls	r1, r3, #26
 800e3ae:	bf42      	ittt	mi
 800e3b0:	6833      	ldrmi	r3, [r6, #0]
 800e3b2:	3302      	addmi	r3, #2
 800e3b4:	6033      	strmi	r3, [r6, #0]
 800e3b6:	6825      	ldr	r5, [r4, #0]
 800e3b8:	f015 0506 	ands.w	r5, r5, #6
 800e3bc:	d106      	bne.n	800e3cc <_printf_common+0x48>
 800e3be:	f104 0a19 	add.w	sl, r4, #25
 800e3c2:	68e3      	ldr	r3, [r4, #12]
 800e3c4:	6832      	ldr	r2, [r6, #0]
 800e3c6:	1a9b      	subs	r3, r3, r2
 800e3c8:	42ab      	cmp	r3, r5
 800e3ca:	dc26      	bgt.n	800e41a <_printf_common+0x96>
 800e3cc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800e3d0:	6822      	ldr	r2, [r4, #0]
 800e3d2:	3b00      	subs	r3, #0
 800e3d4:	bf18      	it	ne
 800e3d6:	2301      	movne	r3, #1
 800e3d8:	0692      	lsls	r2, r2, #26
 800e3da:	d42b      	bmi.n	800e434 <_printf_common+0xb0>
 800e3dc:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800e3e0:	4641      	mov	r1, r8
 800e3e2:	4638      	mov	r0, r7
 800e3e4:	47c8      	blx	r9
 800e3e6:	3001      	adds	r0, #1
 800e3e8:	d01e      	beq.n	800e428 <_printf_common+0xa4>
 800e3ea:	6823      	ldr	r3, [r4, #0]
 800e3ec:	6922      	ldr	r2, [r4, #16]
 800e3ee:	f003 0306 	and.w	r3, r3, #6
 800e3f2:	2b04      	cmp	r3, #4
 800e3f4:	bf02      	ittt	eq
 800e3f6:	68e5      	ldreq	r5, [r4, #12]
 800e3f8:	6833      	ldreq	r3, [r6, #0]
 800e3fa:	1aed      	subeq	r5, r5, r3
 800e3fc:	68a3      	ldr	r3, [r4, #8]
 800e3fe:	bf0c      	ite	eq
 800e400:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800e404:	2500      	movne	r5, #0
 800e406:	4293      	cmp	r3, r2
 800e408:	bfc4      	itt	gt
 800e40a:	1a9b      	subgt	r3, r3, r2
 800e40c:	18ed      	addgt	r5, r5, r3
 800e40e:	2600      	movs	r6, #0
 800e410:	341a      	adds	r4, #26
 800e412:	42b5      	cmp	r5, r6
 800e414:	d11a      	bne.n	800e44c <_printf_common+0xc8>
 800e416:	2000      	movs	r0, #0
 800e418:	e008      	b.n	800e42c <_printf_common+0xa8>
 800e41a:	2301      	movs	r3, #1
 800e41c:	4652      	mov	r2, sl
 800e41e:	4641      	mov	r1, r8
 800e420:	4638      	mov	r0, r7
 800e422:	47c8      	blx	r9
 800e424:	3001      	adds	r0, #1
 800e426:	d103      	bne.n	800e430 <_printf_common+0xac>
 800e428:	f04f 30ff 	mov.w	r0, #4294967295
 800e42c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e430:	3501      	adds	r5, #1
 800e432:	e7c6      	b.n	800e3c2 <_printf_common+0x3e>
 800e434:	18e1      	adds	r1, r4, r3
 800e436:	1c5a      	adds	r2, r3, #1
 800e438:	2030      	movs	r0, #48	@ 0x30
 800e43a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800e43e:	4422      	add	r2, r4
 800e440:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800e444:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800e448:	3302      	adds	r3, #2
 800e44a:	e7c7      	b.n	800e3dc <_printf_common+0x58>
 800e44c:	2301      	movs	r3, #1
 800e44e:	4622      	mov	r2, r4
 800e450:	4641      	mov	r1, r8
 800e452:	4638      	mov	r0, r7
 800e454:	47c8      	blx	r9
 800e456:	3001      	adds	r0, #1
 800e458:	d0e6      	beq.n	800e428 <_printf_common+0xa4>
 800e45a:	3601      	adds	r6, #1
 800e45c:	e7d9      	b.n	800e412 <_printf_common+0x8e>
	...

0800e460 <_printf_i>:
 800e460:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e464:	7e0f      	ldrb	r7, [r1, #24]
 800e466:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800e468:	2f78      	cmp	r7, #120	@ 0x78
 800e46a:	4691      	mov	r9, r2
 800e46c:	4680      	mov	r8, r0
 800e46e:	460c      	mov	r4, r1
 800e470:	469a      	mov	sl, r3
 800e472:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800e476:	d807      	bhi.n	800e488 <_printf_i+0x28>
 800e478:	2f62      	cmp	r7, #98	@ 0x62
 800e47a:	d80a      	bhi.n	800e492 <_printf_i+0x32>
 800e47c:	2f00      	cmp	r7, #0
 800e47e:	f000 80d2 	beq.w	800e626 <_printf_i+0x1c6>
 800e482:	2f58      	cmp	r7, #88	@ 0x58
 800e484:	f000 80b9 	beq.w	800e5fa <_printf_i+0x19a>
 800e488:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800e48c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800e490:	e03a      	b.n	800e508 <_printf_i+0xa8>
 800e492:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800e496:	2b15      	cmp	r3, #21
 800e498:	d8f6      	bhi.n	800e488 <_printf_i+0x28>
 800e49a:	a101      	add	r1, pc, #4	@ (adr r1, 800e4a0 <_printf_i+0x40>)
 800e49c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800e4a0:	0800e4f9 	.word	0x0800e4f9
 800e4a4:	0800e50d 	.word	0x0800e50d
 800e4a8:	0800e489 	.word	0x0800e489
 800e4ac:	0800e489 	.word	0x0800e489
 800e4b0:	0800e489 	.word	0x0800e489
 800e4b4:	0800e489 	.word	0x0800e489
 800e4b8:	0800e50d 	.word	0x0800e50d
 800e4bc:	0800e489 	.word	0x0800e489
 800e4c0:	0800e489 	.word	0x0800e489
 800e4c4:	0800e489 	.word	0x0800e489
 800e4c8:	0800e489 	.word	0x0800e489
 800e4cc:	0800e60d 	.word	0x0800e60d
 800e4d0:	0800e537 	.word	0x0800e537
 800e4d4:	0800e5c7 	.word	0x0800e5c7
 800e4d8:	0800e489 	.word	0x0800e489
 800e4dc:	0800e489 	.word	0x0800e489
 800e4e0:	0800e62f 	.word	0x0800e62f
 800e4e4:	0800e489 	.word	0x0800e489
 800e4e8:	0800e537 	.word	0x0800e537
 800e4ec:	0800e489 	.word	0x0800e489
 800e4f0:	0800e489 	.word	0x0800e489
 800e4f4:	0800e5cf 	.word	0x0800e5cf
 800e4f8:	6833      	ldr	r3, [r6, #0]
 800e4fa:	1d1a      	adds	r2, r3, #4
 800e4fc:	681b      	ldr	r3, [r3, #0]
 800e4fe:	6032      	str	r2, [r6, #0]
 800e500:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800e504:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800e508:	2301      	movs	r3, #1
 800e50a:	e09d      	b.n	800e648 <_printf_i+0x1e8>
 800e50c:	6833      	ldr	r3, [r6, #0]
 800e50e:	6820      	ldr	r0, [r4, #0]
 800e510:	1d19      	adds	r1, r3, #4
 800e512:	6031      	str	r1, [r6, #0]
 800e514:	0606      	lsls	r6, r0, #24
 800e516:	d501      	bpl.n	800e51c <_printf_i+0xbc>
 800e518:	681d      	ldr	r5, [r3, #0]
 800e51a:	e003      	b.n	800e524 <_printf_i+0xc4>
 800e51c:	0645      	lsls	r5, r0, #25
 800e51e:	d5fb      	bpl.n	800e518 <_printf_i+0xb8>
 800e520:	f9b3 5000 	ldrsh.w	r5, [r3]
 800e524:	2d00      	cmp	r5, #0
 800e526:	da03      	bge.n	800e530 <_printf_i+0xd0>
 800e528:	232d      	movs	r3, #45	@ 0x2d
 800e52a:	426d      	negs	r5, r5
 800e52c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800e530:	4859      	ldr	r0, [pc, #356]	@ (800e698 <_printf_i+0x238>)
 800e532:	230a      	movs	r3, #10
 800e534:	e011      	b.n	800e55a <_printf_i+0xfa>
 800e536:	6821      	ldr	r1, [r4, #0]
 800e538:	6833      	ldr	r3, [r6, #0]
 800e53a:	0608      	lsls	r0, r1, #24
 800e53c:	f853 5b04 	ldr.w	r5, [r3], #4
 800e540:	d402      	bmi.n	800e548 <_printf_i+0xe8>
 800e542:	0649      	lsls	r1, r1, #25
 800e544:	bf48      	it	mi
 800e546:	b2ad      	uxthmi	r5, r5
 800e548:	2f6f      	cmp	r7, #111	@ 0x6f
 800e54a:	4853      	ldr	r0, [pc, #332]	@ (800e698 <_printf_i+0x238>)
 800e54c:	6033      	str	r3, [r6, #0]
 800e54e:	bf14      	ite	ne
 800e550:	230a      	movne	r3, #10
 800e552:	2308      	moveq	r3, #8
 800e554:	2100      	movs	r1, #0
 800e556:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800e55a:	6866      	ldr	r6, [r4, #4]
 800e55c:	60a6      	str	r6, [r4, #8]
 800e55e:	2e00      	cmp	r6, #0
 800e560:	bfa2      	ittt	ge
 800e562:	6821      	ldrge	r1, [r4, #0]
 800e564:	f021 0104 	bicge.w	r1, r1, #4
 800e568:	6021      	strge	r1, [r4, #0]
 800e56a:	b90d      	cbnz	r5, 800e570 <_printf_i+0x110>
 800e56c:	2e00      	cmp	r6, #0
 800e56e:	d04b      	beq.n	800e608 <_printf_i+0x1a8>
 800e570:	4616      	mov	r6, r2
 800e572:	fbb5 f1f3 	udiv	r1, r5, r3
 800e576:	fb03 5711 	mls	r7, r3, r1, r5
 800e57a:	5dc7      	ldrb	r7, [r0, r7]
 800e57c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800e580:	462f      	mov	r7, r5
 800e582:	42bb      	cmp	r3, r7
 800e584:	460d      	mov	r5, r1
 800e586:	d9f4      	bls.n	800e572 <_printf_i+0x112>
 800e588:	2b08      	cmp	r3, #8
 800e58a:	d10b      	bne.n	800e5a4 <_printf_i+0x144>
 800e58c:	6823      	ldr	r3, [r4, #0]
 800e58e:	07df      	lsls	r7, r3, #31
 800e590:	d508      	bpl.n	800e5a4 <_printf_i+0x144>
 800e592:	6923      	ldr	r3, [r4, #16]
 800e594:	6861      	ldr	r1, [r4, #4]
 800e596:	4299      	cmp	r1, r3
 800e598:	bfde      	ittt	le
 800e59a:	2330      	movle	r3, #48	@ 0x30
 800e59c:	f806 3c01 	strble.w	r3, [r6, #-1]
 800e5a0:	f106 36ff 	addle.w	r6, r6, #4294967295
 800e5a4:	1b92      	subs	r2, r2, r6
 800e5a6:	6122      	str	r2, [r4, #16]
 800e5a8:	f8cd a000 	str.w	sl, [sp]
 800e5ac:	464b      	mov	r3, r9
 800e5ae:	aa03      	add	r2, sp, #12
 800e5b0:	4621      	mov	r1, r4
 800e5b2:	4640      	mov	r0, r8
 800e5b4:	f7ff fee6 	bl	800e384 <_printf_common>
 800e5b8:	3001      	adds	r0, #1
 800e5ba:	d14a      	bne.n	800e652 <_printf_i+0x1f2>
 800e5bc:	f04f 30ff 	mov.w	r0, #4294967295
 800e5c0:	b004      	add	sp, #16
 800e5c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e5c6:	6823      	ldr	r3, [r4, #0]
 800e5c8:	f043 0320 	orr.w	r3, r3, #32
 800e5cc:	6023      	str	r3, [r4, #0]
 800e5ce:	4833      	ldr	r0, [pc, #204]	@ (800e69c <_printf_i+0x23c>)
 800e5d0:	2778      	movs	r7, #120	@ 0x78
 800e5d2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800e5d6:	6823      	ldr	r3, [r4, #0]
 800e5d8:	6831      	ldr	r1, [r6, #0]
 800e5da:	061f      	lsls	r7, r3, #24
 800e5dc:	f851 5b04 	ldr.w	r5, [r1], #4
 800e5e0:	d402      	bmi.n	800e5e8 <_printf_i+0x188>
 800e5e2:	065f      	lsls	r7, r3, #25
 800e5e4:	bf48      	it	mi
 800e5e6:	b2ad      	uxthmi	r5, r5
 800e5e8:	6031      	str	r1, [r6, #0]
 800e5ea:	07d9      	lsls	r1, r3, #31
 800e5ec:	bf44      	itt	mi
 800e5ee:	f043 0320 	orrmi.w	r3, r3, #32
 800e5f2:	6023      	strmi	r3, [r4, #0]
 800e5f4:	b11d      	cbz	r5, 800e5fe <_printf_i+0x19e>
 800e5f6:	2310      	movs	r3, #16
 800e5f8:	e7ac      	b.n	800e554 <_printf_i+0xf4>
 800e5fa:	4827      	ldr	r0, [pc, #156]	@ (800e698 <_printf_i+0x238>)
 800e5fc:	e7e9      	b.n	800e5d2 <_printf_i+0x172>
 800e5fe:	6823      	ldr	r3, [r4, #0]
 800e600:	f023 0320 	bic.w	r3, r3, #32
 800e604:	6023      	str	r3, [r4, #0]
 800e606:	e7f6      	b.n	800e5f6 <_printf_i+0x196>
 800e608:	4616      	mov	r6, r2
 800e60a:	e7bd      	b.n	800e588 <_printf_i+0x128>
 800e60c:	6833      	ldr	r3, [r6, #0]
 800e60e:	6825      	ldr	r5, [r4, #0]
 800e610:	6961      	ldr	r1, [r4, #20]
 800e612:	1d18      	adds	r0, r3, #4
 800e614:	6030      	str	r0, [r6, #0]
 800e616:	062e      	lsls	r6, r5, #24
 800e618:	681b      	ldr	r3, [r3, #0]
 800e61a:	d501      	bpl.n	800e620 <_printf_i+0x1c0>
 800e61c:	6019      	str	r1, [r3, #0]
 800e61e:	e002      	b.n	800e626 <_printf_i+0x1c6>
 800e620:	0668      	lsls	r0, r5, #25
 800e622:	d5fb      	bpl.n	800e61c <_printf_i+0x1bc>
 800e624:	8019      	strh	r1, [r3, #0]
 800e626:	2300      	movs	r3, #0
 800e628:	6123      	str	r3, [r4, #16]
 800e62a:	4616      	mov	r6, r2
 800e62c:	e7bc      	b.n	800e5a8 <_printf_i+0x148>
 800e62e:	6833      	ldr	r3, [r6, #0]
 800e630:	1d1a      	adds	r2, r3, #4
 800e632:	6032      	str	r2, [r6, #0]
 800e634:	681e      	ldr	r6, [r3, #0]
 800e636:	6862      	ldr	r2, [r4, #4]
 800e638:	2100      	movs	r1, #0
 800e63a:	4630      	mov	r0, r6
 800e63c:	f7f1 fdf8 	bl	8000230 <memchr>
 800e640:	b108      	cbz	r0, 800e646 <_printf_i+0x1e6>
 800e642:	1b80      	subs	r0, r0, r6
 800e644:	6060      	str	r0, [r4, #4]
 800e646:	6863      	ldr	r3, [r4, #4]
 800e648:	6123      	str	r3, [r4, #16]
 800e64a:	2300      	movs	r3, #0
 800e64c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800e650:	e7aa      	b.n	800e5a8 <_printf_i+0x148>
 800e652:	6923      	ldr	r3, [r4, #16]
 800e654:	4632      	mov	r2, r6
 800e656:	4649      	mov	r1, r9
 800e658:	4640      	mov	r0, r8
 800e65a:	47d0      	blx	sl
 800e65c:	3001      	adds	r0, #1
 800e65e:	d0ad      	beq.n	800e5bc <_printf_i+0x15c>
 800e660:	6823      	ldr	r3, [r4, #0]
 800e662:	079b      	lsls	r3, r3, #30
 800e664:	d413      	bmi.n	800e68e <_printf_i+0x22e>
 800e666:	68e0      	ldr	r0, [r4, #12]
 800e668:	9b03      	ldr	r3, [sp, #12]
 800e66a:	4298      	cmp	r0, r3
 800e66c:	bfb8      	it	lt
 800e66e:	4618      	movlt	r0, r3
 800e670:	e7a6      	b.n	800e5c0 <_printf_i+0x160>
 800e672:	2301      	movs	r3, #1
 800e674:	4632      	mov	r2, r6
 800e676:	4649      	mov	r1, r9
 800e678:	4640      	mov	r0, r8
 800e67a:	47d0      	blx	sl
 800e67c:	3001      	adds	r0, #1
 800e67e:	d09d      	beq.n	800e5bc <_printf_i+0x15c>
 800e680:	3501      	adds	r5, #1
 800e682:	68e3      	ldr	r3, [r4, #12]
 800e684:	9903      	ldr	r1, [sp, #12]
 800e686:	1a5b      	subs	r3, r3, r1
 800e688:	42ab      	cmp	r3, r5
 800e68a:	dcf2      	bgt.n	800e672 <_printf_i+0x212>
 800e68c:	e7eb      	b.n	800e666 <_printf_i+0x206>
 800e68e:	2500      	movs	r5, #0
 800e690:	f104 0619 	add.w	r6, r4, #25
 800e694:	e7f5      	b.n	800e682 <_printf_i+0x222>
 800e696:	bf00      	nop
 800e698:	0800f5ea 	.word	0x0800f5ea
 800e69c:	0800f5fb 	.word	0x0800f5fb

0800e6a0 <__sflush_r>:
 800e6a0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800e6a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e6a8:	0716      	lsls	r6, r2, #28
 800e6aa:	4605      	mov	r5, r0
 800e6ac:	460c      	mov	r4, r1
 800e6ae:	d454      	bmi.n	800e75a <__sflush_r+0xba>
 800e6b0:	684b      	ldr	r3, [r1, #4]
 800e6b2:	2b00      	cmp	r3, #0
 800e6b4:	dc02      	bgt.n	800e6bc <__sflush_r+0x1c>
 800e6b6:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800e6b8:	2b00      	cmp	r3, #0
 800e6ba:	dd48      	ble.n	800e74e <__sflush_r+0xae>
 800e6bc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800e6be:	2e00      	cmp	r6, #0
 800e6c0:	d045      	beq.n	800e74e <__sflush_r+0xae>
 800e6c2:	2300      	movs	r3, #0
 800e6c4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800e6c8:	682f      	ldr	r7, [r5, #0]
 800e6ca:	6a21      	ldr	r1, [r4, #32]
 800e6cc:	602b      	str	r3, [r5, #0]
 800e6ce:	d030      	beq.n	800e732 <__sflush_r+0x92>
 800e6d0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800e6d2:	89a3      	ldrh	r3, [r4, #12]
 800e6d4:	0759      	lsls	r1, r3, #29
 800e6d6:	d505      	bpl.n	800e6e4 <__sflush_r+0x44>
 800e6d8:	6863      	ldr	r3, [r4, #4]
 800e6da:	1ad2      	subs	r2, r2, r3
 800e6dc:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800e6de:	b10b      	cbz	r3, 800e6e4 <__sflush_r+0x44>
 800e6e0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800e6e2:	1ad2      	subs	r2, r2, r3
 800e6e4:	2300      	movs	r3, #0
 800e6e6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800e6e8:	6a21      	ldr	r1, [r4, #32]
 800e6ea:	4628      	mov	r0, r5
 800e6ec:	47b0      	blx	r6
 800e6ee:	1c43      	adds	r3, r0, #1
 800e6f0:	89a3      	ldrh	r3, [r4, #12]
 800e6f2:	d106      	bne.n	800e702 <__sflush_r+0x62>
 800e6f4:	6829      	ldr	r1, [r5, #0]
 800e6f6:	291d      	cmp	r1, #29
 800e6f8:	d82b      	bhi.n	800e752 <__sflush_r+0xb2>
 800e6fa:	4a2a      	ldr	r2, [pc, #168]	@ (800e7a4 <__sflush_r+0x104>)
 800e6fc:	410a      	asrs	r2, r1
 800e6fe:	07d6      	lsls	r6, r2, #31
 800e700:	d427      	bmi.n	800e752 <__sflush_r+0xb2>
 800e702:	2200      	movs	r2, #0
 800e704:	6062      	str	r2, [r4, #4]
 800e706:	04d9      	lsls	r1, r3, #19
 800e708:	6922      	ldr	r2, [r4, #16]
 800e70a:	6022      	str	r2, [r4, #0]
 800e70c:	d504      	bpl.n	800e718 <__sflush_r+0x78>
 800e70e:	1c42      	adds	r2, r0, #1
 800e710:	d101      	bne.n	800e716 <__sflush_r+0x76>
 800e712:	682b      	ldr	r3, [r5, #0]
 800e714:	b903      	cbnz	r3, 800e718 <__sflush_r+0x78>
 800e716:	6560      	str	r0, [r4, #84]	@ 0x54
 800e718:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800e71a:	602f      	str	r7, [r5, #0]
 800e71c:	b1b9      	cbz	r1, 800e74e <__sflush_r+0xae>
 800e71e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800e722:	4299      	cmp	r1, r3
 800e724:	d002      	beq.n	800e72c <__sflush_r+0x8c>
 800e726:	4628      	mov	r0, r5
 800e728:	f7fe fbd2 	bl	800ced0 <_free_r>
 800e72c:	2300      	movs	r3, #0
 800e72e:	6363      	str	r3, [r4, #52]	@ 0x34
 800e730:	e00d      	b.n	800e74e <__sflush_r+0xae>
 800e732:	2301      	movs	r3, #1
 800e734:	4628      	mov	r0, r5
 800e736:	47b0      	blx	r6
 800e738:	4602      	mov	r2, r0
 800e73a:	1c50      	adds	r0, r2, #1
 800e73c:	d1c9      	bne.n	800e6d2 <__sflush_r+0x32>
 800e73e:	682b      	ldr	r3, [r5, #0]
 800e740:	2b00      	cmp	r3, #0
 800e742:	d0c6      	beq.n	800e6d2 <__sflush_r+0x32>
 800e744:	2b1d      	cmp	r3, #29
 800e746:	d001      	beq.n	800e74c <__sflush_r+0xac>
 800e748:	2b16      	cmp	r3, #22
 800e74a:	d11e      	bne.n	800e78a <__sflush_r+0xea>
 800e74c:	602f      	str	r7, [r5, #0]
 800e74e:	2000      	movs	r0, #0
 800e750:	e022      	b.n	800e798 <__sflush_r+0xf8>
 800e752:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800e756:	b21b      	sxth	r3, r3
 800e758:	e01b      	b.n	800e792 <__sflush_r+0xf2>
 800e75a:	690f      	ldr	r7, [r1, #16]
 800e75c:	2f00      	cmp	r7, #0
 800e75e:	d0f6      	beq.n	800e74e <__sflush_r+0xae>
 800e760:	0793      	lsls	r3, r2, #30
 800e762:	680e      	ldr	r6, [r1, #0]
 800e764:	bf08      	it	eq
 800e766:	694b      	ldreq	r3, [r1, #20]
 800e768:	600f      	str	r7, [r1, #0]
 800e76a:	bf18      	it	ne
 800e76c:	2300      	movne	r3, #0
 800e76e:	eba6 0807 	sub.w	r8, r6, r7
 800e772:	608b      	str	r3, [r1, #8]
 800e774:	f1b8 0f00 	cmp.w	r8, #0
 800e778:	dde9      	ble.n	800e74e <__sflush_r+0xae>
 800e77a:	6a21      	ldr	r1, [r4, #32]
 800e77c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800e77e:	4643      	mov	r3, r8
 800e780:	463a      	mov	r2, r7
 800e782:	4628      	mov	r0, r5
 800e784:	47b0      	blx	r6
 800e786:	2800      	cmp	r0, #0
 800e788:	dc08      	bgt.n	800e79c <__sflush_r+0xfc>
 800e78a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e78e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800e792:	81a3      	strh	r3, [r4, #12]
 800e794:	f04f 30ff 	mov.w	r0, #4294967295
 800e798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e79c:	4407      	add	r7, r0
 800e79e:	eba8 0800 	sub.w	r8, r8, r0
 800e7a2:	e7e7      	b.n	800e774 <__sflush_r+0xd4>
 800e7a4:	dfbffffe 	.word	0xdfbffffe

0800e7a8 <_fflush_r>:
 800e7a8:	b538      	push	{r3, r4, r5, lr}
 800e7aa:	690b      	ldr	r3, [r1, #16]
 800e7ac:	4605      	mov	r5, r0
 800e7ae:	460c      	mov	r4, r1
 800e7b0:	b913      	cbnz	r3, 800e7b8 <_fflush_r+0x10>
 800e7b2:	2500      	movs	r5, #0
 800e7b4:	4628      	mov	r0, r5
 800e7b6:	bd38      	pop	{r3, r4, r5, pc}
 800e7b8:	b118      	cbz	r0, 800e7c2 <_fflush_r+0x1a>
 800e7ba:	6a03      	ldr	r3, [r0, #32]
 800e7bc:	b90b      	cbnz	r3, 800e7c2 <_fflush_r+0x1a>
 800e7be:	f7fe fa47 	bl	800cc50 <__sinit>
 800e7c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800e7c6:	2b00      	cmp	r3, #0
 800e7c8:	d0f3      	beq.n	800e7b2 <_fflush_r+0xa>
 800e7ca:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800e7cc:	07d0      	lsls	r0, r2, #31
 800e7ce:	d404      	bmi.n	800e7da <_fflush_r+0x32>
 800e7d0:	0599      	lsls	r1, r3, #22
 800e7d2:	d402      	bmi.n	800e7da <_fflush_r+0x32>
 800e7d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800e7d6:	f7fe fb60 	bl	800ce9a <__retarget_lock_acquire_recursive>
 800e7da:	4628      	mov	r0, r5
 800e7dc:	4621      	mov	r1, r4
 800e7de:	f7ff ff5f 	bl	800e6a0 <__sflush_r>
 800e7e2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800e7e4:	07da      	lsls	r2, r3, #31
 800e7e6:	4605      	mov	r5, r0
 800e7e8:	d4e4      	bmi.n	800e7b4 <_fflush_r+0xc>
 800e7ea:	89a3      	ldrh	r3, [r4, #12]
 800e7ec:	059b      	lsls	r3, r3, #22
 800e7ee:	d4e1      	bmi.n	800e7b4 <_fflush_r+0xc>
 800e7f0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800e7f2:	f7fe fb53 	bl	800ce9c <__retarget_lock_release_recursive>
 800e7f6:	e7dd      	b.n	800e7b4 <_fflush_r+0xc>

0800e7f8 <memmove>:
 800e7f8:	4288      	cmp	r0, r1
 800e7fa:	b510      	push	{r4, lr}
 800e7fc:	eb01 0402 	add.w	r4, r1, r2
 800e800:	d902      	bls.n	800e808 <memmove+0x10>
 800e802:	4284      	cmp	r4, r0
 800e804:	4623      	mov	r3, r4
 800e806:	d807      	bhi.n	800e818 <memmove+0x20>
 800e808:	1e43      	subs	r3, r0, #1
 800e80a:	42a1      	cmp	r1, r4
 800e80c:	d008      	beq.n	800e820 <memmove+0x28>
 800e80e:	f811 2b01 	ldrb.w	r2, [r1], #1
 800e812:	f803 2f01 	strb.w	r2, [r3, #1]!
 800e816:	e7f8      	b.n	800e80a <memmove+0x12>
 800e818:	4402      	add	r2, r0
 800e81a:	4601      	mov	r1, r0
 800e81c:	428a      	cmp	r2, r1
 800e81e:	d100      	bne.n	800e822 <memmove+0x2a>
 800e820:	bd10      	pop	{r4, pc}
 800e822:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800e826:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800e82a:	e7f7      	b.n	800e81c <memmove+0x24>

0800e82c <_sbrk_r>:
 800e82c:	b538      	push	{r3, r4, r5, lr}
 800e82e:	4d06      	ldr	r5, [pc, #24]	@ (800e848 <_sbrk_r+0x1c>)
 800e830:	2300      	movs	r3, #0
 800e832:	4604      	mov	r4, r0
 800e834:	4608      	mov	r0, r1
 800e836:	602b      	str	r3, [r5, #0]
 800e838:	f7f4 fd0a 	bl	8003250 <_sbrk>
 800e83c:	1c43      	adds	r3, r0, #1
 800e83e:	d102      	bne.n	800e846 <_sbrk_r+0x1a>
 800e840:	682b      	ldr	r3, [r5, #0]
 800e842:	b103      	cbz	r3, 800e846 <_sbrk_r+0x1a>
 800e844:	6023      	str	r3, [r4, #0]
 800e846:	bd38      	pop	{r3, r4, r5, pc}
 800e848:	20000da8 	.word	0x20000da8

0800e84c <__assert_func>:
 800e84c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e84e:	4614      	mov	r4, r2
 800e850:	461a      	mov	r2, r3
 800e852:	4b09      	ldr	r3, [pc, #36]	@ (800e878 <__assert_func+0x2c>)
 800e854:	681b      	ldr	r3, [r3, #0]
 800e856:	4605      	mov	r5, r0
 800e858:	68d8      	ldr	r0, [r3, #12]
 800e85a:	b954      	cbnz	r4, 800e872 <__assert_func+0x26>
 800e85c:	4b07      	ldr	r3, [pc, #28]	@ (800e87c <__assert_func+0x30>)
 800e85e:	461c      	mov	r4, r3
 800e860:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e864:	9100      	str	r1, [sp, #0]
 800e866:	462b      	mov	r3, r5
 800e868:	4905      	ldr	r1, [pc, #20]	@ (800e880 <__assert_func+0x34>)
 800e86a:	f000 f857 	bl	800e91c <fiprintf>
 800e86e:	f000 f867 	bl	800e940 <abort>
 800e872:	4b04      	ldr	r3, [pc, #16]	@ (800e884 <__assert_func+0x38>)
 800e874:	e7f4      	b.n	800e860 <__assert_func+0x14>
 800e876:	bf00      	nop
 800e878:	200001c0 	.word	0x200001c0
 800e87c:	0800f647 	.word	0x0800f647
 800e880:	0800f619 	.word	0x0800f619
 800e884:	0800f60c 	.word	0x0800f60c

0800e888 <_calloc_r>:
 800e888:	b570      	push	{r4, r5, r6, lr}
 800e88a:	fba1 5402 	umull	r5, r4, r1, r2
 800e88e:	b93c      	cbnz	r4, 800e8a0 <_calloc_r+0x18>
 800e890:	4629      	mov	r1, r5
 800e892:	f7fe fec3 	bl	800d61c <_malloc_r>
 800e896:	4606      	mov	r6, r0
 800e898:	b928      	cbnz	r0, 800e8a6 <_calloc_r+0x1e>
 800e89a:	2600      	movs	r6, #0
 800e89c:	4630      	mov	r0, r6
 800e89e:	bd70      	pop	{r4, r5, r6, pc}
 800e8a0:	220c      	movs	r2, #12
 800e8a2:	6002      	str	r2, [r0, #0]
 800e8a4:	e7f9      	b.n	800e89a <_calloc_r+0x12>
 800e8a6:	462a      	mov	r2, r5
 800e8a8:	4621      	mov	r1, r4
 800e8aa:	f7fe fa6a 	bl	800cd82 <memset>
 800e8ae:	e7f5      	b.n	800e89c <_calloc_r+0x14>

0800e8b0 <malloc>:
 800e8b0:	4b02      	ldr	r3, [pc, #8]	@ (800e8bc <malloc+0xc>)
 800e8b2:	4601      	mov	r1, r0
 800e8b4:	6818      	ldr	r0, [r3, #0]
 800e8b6:	f7fe beb1 	b.w	800d61c <_malloc_r>
 800e8ba:	bf00      	nop
 800e8bc:	200001c0 	.word	0x200001c0

0800e8c0 <_realloc_r>:
 800e8c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8c4:	4680      	mov	r8, r0
 800e8c6:	4615      	mov	r5, r2
 800e8c8:	460c      	mov	r4, r1
 800e8ca:	b921      	cbnz	r1, 800e8d6 <_realloc_r+0x16>
 800e8cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e8d0:	4611      	mov	r1, r2
 800e8d2:	f7fe bea3 	b.w	800d61c <_malloc_r>
 800e8d6:	b92a      	cbnz	r2, 800e8e4 <_realloc_r+0x24>
 800e8d8:	f7fe fafa 	bl	800ced0 <_free_r>
 800e8dc:	2400      	movs	r4, #0
 800e8de:	4620      	mov	r0, r4
 800e8e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e8e4:	f000 f833 	bl	800e94e <_malloc_usable_size_r>
 800e8e8:	4285      	cmp	r5, r0
 800e8ea:	4606      	mov	r6, r0
 800e8ec:	d802      	bhi.n	800e8f4 <_realloc_r+0x34>
 800e8ee:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 800e8f2:	d8f4      	bhi.n	800e8de <_realloc_r+0x1e>
 800e8f4:	4629      	mov	r1, r5
 800e8f6:	4640      	mov	r0, r8
 800e8f8:	f7fe fe90 	bl	800d61c <_malloc_r>
 800e8fc:	4607      	mov	r7, r0
 800e8fe:	2800      	cmp	r0, #0
 800e900:	d0ec      	beq.n	800e8dc <_realloc_r+0x1c>
 800e902:	42b5      	cmp	r5, r6
 800e904:	462a      	mov	r2, r5
 800e906:	4621      	mov	r1, r4
 800e908:	bf28      	it	cs
 800e90a:	4632      	movcs	r2, r6
 800e90c:	f7fe fac7 	bl	800ce9e <memcpy>
 800e910:	4621      	mov	r1, r4
 800e912:	4640      	mov	r0, r8
 800e914:	f7fe fadc 	bl	800ced0 <_free_r>
 800e918:	463c      	mov	r4, r7
 800e91a:	e7e0      	b.n	800e8de <_realloc_r+0x1e>

0800e91c <fiprintf>:
 800e91c:	b40e      	push	{r1, r2, r3}
 800e91e:	b503      	push	{r0, r1, lr}
 800e920:	4601      	mov	r1, r0
 800e922:	ab03      	add	r3, sp, #12
 800e924:	4805      	ldr	r0, [pc, #20]	@ (800e93c <fiprintf+0x20>)
 800e926:	f853 2b04 	ldr.w	r2, [r3], #4
 800e92a:	6800      	ldr	r0, [r0, #0]
 800e92c:	9301      	str	r3, [sp, #4]
 800e92e:	f000 f83f 	bl	800e9b0 <_vfiprintf_r>
 800e932:	b002      	add	sp, #8
 800e934:	f85d eb04 	ldr.w	lr, [sp], #4
 800e938:	b003      	add	sp, #12
 800e93a:	4770      	bx	lr
 800e93c:	200001c0 	.word	0x200001c0

0800e940 <abort>:
 800e940:	b508      	push	{r3, lr}
 800e942:	2006      	movs	r0, #6
 800e944:	f000 fa08 	bl	800ed58 <raise>
 800e948:	2001      	movs	r0, #1
 800e94a:	f7f4 fc09 	bl	8003160 <_exit>

0800e94e <_malloc_usable_size_r>:
 800e94e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e952:	1f18      	subs	r0, r3, #4
 800e954:	2b00      	cmp	r3, #0
 800e956:	bfbc      	itt	lt
 800e958:	580b      	ldrlt	r3, [r1, r0]
 800e95a:	18c0      	addlt	r0, r0, r3
 800e95c:	4770      	bx	lr

0800e95e <__sfputc_r>:
 800e95e:	6893      	ldr	r3, [r2, #8]
 800e960:	3b01      	subs	r3, #1
 800e962:	2b00      	cmp	r3, #0
 800e964:	b410      	push	{r4}
 800e966:	6093      	str	r3, [r2, #8]
 800e968:	da08      	bge.n	800e97c <__sfputc_r+0x1e>
 800e96a:	6994      	ldr	r4, [r2, #24]
 800e96c:	42a3      	cmp	r3, r4
 800e96e:	db01      	blt.n	800e974 <__sfputc_r+0x16>
 800e970:	290a      	cmp	r1, #10
 800e972:	d103      	bne.n	800e97c <__sfputc_r+0x1e>
 800e974:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e978:	f000 b932 	b.w	800ebe0 <__swbuf_r>
 800e97c:	6813      	ldr	r3, [r2, #0]
 800e97e:	1c58      	adds	r0, r3, #1
 800e980:	6010      	str	r0, [r2, #0]
 800e982:	7019      	strb	r1, [r3, #0]
 800e984:	4608      	mov	r0, r1
 800e986:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e98a:	4770      	bx	lr

0800e98c <__sfputs_r>:
 800e98c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e98e:	4606      	mov	r6, r0
 800e990:	460f      	mov	r7, r1
 800e992:	4614      	mov	r4, r2
 800e994:	18d5      	adds	r5, r2, r3
 800e996:	42ac      	cmp	r4, r5
 800e998:	d101      	bne.n	800e99e <__sfputs_r+0x12>
 800e99a:	2000      	movs	r0, #0
 800e99c:	e007      	b.n	800e9ae <__sfputs_r+0x22>
 800e99e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e9a2:	463a      	mov	r2, r7
 800e9a4:	4630      	mov	r0, r6
 800e9a6:	f7ff ffda 	bl	800e95e <__sfputc_r>
 800e9aa:	1c43      	adds	r3, r0, #1
 800e9ac:	d1f3      	bne.n	800e996 <__sfputs_r+0xa>
 800e9ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e9b0 <_vfiprintf_r>:
 800e9b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9b4:	460d      	mov	r5, r1
 800e9b6:	b09d      	sub	sp, #116	@ 0x74
 800e9b8:	4614      	mov	r4, r2
 800e9ba:	4698      	mov	r8, r3
 800e9bc:	4606      	mov	r6, r0
 800e9be:	b118      	cbz	r0, 800e9c8 <_vfiprintf_r+0x18>
 800e9c0:	6a03      	ldr	r3, [r0, #32]
 800e9c2:	b90b      	cbnz	r3, 800e9c8 <_vfiprintf_r+0x18>
 800e9c4:	f7fe f944 	bl	800cc50 <__sinit>
 800e9c8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800e9ca:	07d9      	lsls	r1, r3, #31
 800e9cc:	d405      	bmi.n	800e9da <_vfiprintf_r+0x2a>
 800e9ce:	89ab      	ldrh	r3, [r5, #12]
 800e9d0:	059a      	lsls	r2, r3, #22
 800e9d2:	d402      	bmi.n	800e9da <_vfiprintf_r+0x2a>
 800e9d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800e9d6:	f7fe fa60 	bl	800ce9a <__retarget_lock_acquire_recursive>
 800e9da:	89ab      	ldrh	r3, [r5, #12]
 800e9dc:	071b      	lsls	r3, r3, #28
 800e9de:	d501      	bpl.n	800e9e4 <_vfiprintf_r+0x34>
 800e9e0:	692b      	ldr	r3, [r5, #16]
 800e9e2:	b99b      	cbnz	r3, 800ea0c <_vfiprintf_r+0x5c>
 800e9e4:	4629      	mov	r1, r5
 800e9e6:	4630      	mov	r0, r6
 800e9e8:	f000 f938 	bl	800ec5c <__swsetup_r>
 800e9ec:	b170      	cbz	r0, 800ea0c <_vfiprintf_r+0x5c>
 800e9ee:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800e9f0:	07dc      	lsls	r4, r3, #31
 800e9f2:	d504      	bpl.n	800e9fe <_vfiprintf_r+0x4e>
 800e9f4:	f04f 30ff 	mov.w	r0, #4294967295
 800e9f8:	b01d      	add	sp, #116	@ 0x74
 800e9fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9fe:	89ab      	ldrh	r3, [r5, #12]
 800ea00:	0598      	lsls	r0, r3, #22
 800ea02:	d4f7      	bmi.n	800e9f4 <_vfiprintf_r+0x44>
 800ea04:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800ea06:	f7fe fa49 	bl	800ce9c <__retarget_lock_release_recursive>
 800ea0a:	e7f3      	b.n	800e9f4 <_vfiprintf_r+0x44>
 800ea0c:	2300      	movs	r3, #0
 800ea0e:	9309      	str	r3, [sp, #36]	@ 0x24
 800ea10:	2320      	movs	r3, #32
 800ea12:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800ea16:	f8cd 800c 	str.w	r8, [sp, #12]
 800ea1a:	2330      	movs	r3, #48	@ 0x30
 800ea1c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800ebcc <_vfiprintf_r+0x21c>
 800ea20:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800ea24:	f04f 0901 	mov.w	r9, #1
 800ea28:	4623      	mov	r3, r4
 800ea2a:	469a      	mov	sl, r3
 800ea2c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ea30:	b10a      	cbz	r2, 800ea36 <_vfiprintf_r+0x86>
 800ea32:	2a25      	cmp	r2, #37	@ 0x25
 800ea34:	d1f9      	bne.n	800ea2a <_vfiprintf_r+0x7a>
 800ea36:	ebba 0b04 	subs.w	fp, sl, r4
 800ea3a:	d00b      	beq.n	800ea54 <_vfiprintf_r+0xa4>
 800ea3c:	465b      	mov	r3, fp
 800ea3e:	4622      	mov	r2, r4
 800ea40:	4629      	mov	r1, r5
 800ea42:	4630      	mov	r0, r6
 800ea44:	f7ff ffa2 	bl	800e98c <__sfputs_r>
 800ea48:	3001      	adds	r0, #1
 800ea4a:	f000 80a7 	beq.w	800eb9c <_vfiprintf_r+0x1ec>
 800ea4e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ea50:	445a      	add	r2, fp
 800ea52:	9209      	str	r2, [sp, #36]	@ 0x24
 800ea54:	f89a 3000 	ldrb.w	r3, [sl]
 800ea58:	2b00      	cmp	r3, #0
 800ea5a:	f000 809f 	beq.w	800eb9c <_vfiprintf_r+0x1ec>
 800ea5e:	2300      	movs	r3, #0
 800ea60:	f04f 32ff 	mov.w	r2, #4294967295
 800ea64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800ea68:	f10a 0a01 	add.w	sl, sl, #1
 800ea6c:	9304      	str	r3, [sp, #16]
 800ea6e:	9307      	str	r3, [sp, #28]
 800ea70:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800ea74:	931a      	str	r3, [sp, #104]	@ 0x68
 800ea76:	4654      	mov	r4, sl
 800ea78:	2205      	movs	r2, #5
 800ea7a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800ea7e:	4853      	ldr	r0, [pc, #332]	@ (800ebcc <_vfiprintf_r+0x21c>)
 800ea80:	f7f1 fbd6 	bl	8000230 <memchr>
 800ea84:	9a04      	ldr	r2, [sp, #16]
 800ea86:	b9d8      	cbnz	r0, 800eac0 <_vfiprintf_r+0x110>
 800ea88:	06d1      	lsls	r1, r2, #27
 800ea8a:	bf44      	itt	mi
 800ea8c:	2320      	movmi	r3, #32
 800ea8e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800ea92:	0713      	lsls	r3, r2, #28
 800ea94:	bf44      	itt	mi
 800ea96:	232b      	movmi	r3, #43	@ 0x2b
 800ea98:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800ea9c:	f89a 3000 	ldrb.w	r3, [sl]
 800eaa0:	2b2a      	cmp	r3, #42	@ 0x2a
 800eaa2:	d015      	beq.n	800ead0 <_vfiprintf_r+0x120>
 800eaa4:	9a07      	ldr	r2, [sp, #28]
 800eaa6:	4654      	mov	r4, sl
 800eaa8:	2000      	movs	r0, #0
 800eaaa:	f04f 0c0a 	mov.w	ip, #10
 800eaae:	4621      	mov	r1, r4
 800eab0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800eab4:	3b30      	subs	r3, #48	@ 0x30
 800eab6:	2b09      	cmp	r3, #9
 800eab8:	d94b      	bls.n	800eb52 <_vfiprintf_r+0x1a2>
 800eaba:	b1b0      	cbz	r0, 800eaea <_vfiprintf_r+0x13a>
 800eabc:	9207      	str	r2, [sp, #28]
 800eabe:	e014      	b.n	800eaea <_vfiprintf_r+0x13a>
 800eac0:	eba0 0308 	sub.w	r3, r0, r8
 800eac4:	fa09 f303 	lsl.w	r3, r9, r3
 800eac8:	4313      	orrs	r3, r2
 800eaca:	9304      	str	r3, [sp, #16]
 800eacc:	46a2      	mov	sl, r4
 800eace:	e7d2      	b.n	800ea76 <_vfiprintf_r+0xc6>
 800ead0:	9b03      	ldr	r3, [sp, #12]
 800ead2:	1d19      	adds	r1, r3, #4
 800ead4:	681b      	ldr	r3, [r3, #0]
 800ead6:	9103      	str	r1, [sp, #12]
 800ead8:	2b00      	cmp	r3, #0
 800eada:	bfbb      	ittet	lt
 800eadc:	425b      	neglt	r3, r3
 800eade:	f042 0202 	orrlt.w	r2, r2, #2
 800eae2:	9307      	strge	r3, [sp, #28]
 800eae4:	9307      	strlt	r3, [sp, #28]
 800eae6:	bfb8      	it	lt
 800eae8:	9204      	strlt	r2, [sp, #16]
 800eaea:	7823      	ldrb	r3, [r4, #0]
 800eaec:	2b2e      	cmp	r3, #46	@ 0x2e
 800eaee:	d10a      	bne.n	800eb06 <_vfiprintf_r+0x156>
 800eaf0:	7863      	ldrb	r3, [r4, #1]
 800eaf2:	2b2a      	cmp	r3, #42	@ 0x2a
 800eaf4:	d132      	bne.n	800eb5c <_vfiprintf_r+0x1ac>
 800eaf6:	9b03      	ldr	r3, [sp, #12]
 800eaf8:	1d1a      	adds	r2, r3, #4
 800eafa:	681b      	ldr	r3, [r3, #0]
 800eafc:	9203      	str	r2, [sp, #12]
 800eafe:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800eb02:	3402      	adds	r4, #2
 800eb04:	9305      	str	r3, [sp, #20]
 800eb06:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800ebdc <_vfiprintf_r+0x22c>
 800eb0a:	7821      	ldrb	r1, [r4, #0]
 800eb0c:	2203      	movs	r2, #3
 800eb0e:	4650      	mov	r0, sl
 800eb10:	f7f1 fb8e 	bl	8000230 <memchr>
 800eb14:	b138      	cbz	r0, 800eb26 <_vfiprintf_r+0x176>
 800eb16:	9b04      	ldr	r3, [sp, #16]
 800eb18:	eba0 000a 	sub.w	r0, r0, sl
 800eb1c:	2240      	movs	r2, #64	@ 0x40
 800eb1e:	4082      	lsls	r2, r0
 800eb20:	4313      	orrs	r3, r2
 800eb22:	3401      	adds	r4, #1
 800eb24:	9304      	str	r3, [sp, #16]
 800eb26:	f814 1b01 	ldrb.w	r1, [r4], #1
 800eb2a:	4829      	ldr	r0, [pc, #164]	@ (800ebd0 <_vfiprintf_r+0x220>)
 800eb2c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800eb30:	2206      	movs	r2, #6
 800eb32:	f7f1 fb7d 	bl	8000230 <memchr>
 800eb36:	2800      	cmp	r0, #0
 800eb38:	d03f      	beq.n	800ebba <_vfiprintf_r+0x20a>
 800eb3a:	4b26      	ldr	r3, [pc, #152]	@ (800ebd4 <_vfiprintf_r+0x224>)
 800eb3c:	bb1b      	cbnz	r3, 800eb86 <_vfiprintf_r+0x1d6>
 800eb3e:	9b03      	ldr	r3, [sp, #12]
 800eb40:	3307      	adds	r3, #7
 800eb42:	f023 0307 	bic.w	r3, r3, #7
 800eb46:	3308      	adds	r3, #8
 800eb48:	9303      	str	r3, [sp, #12]
 800eb4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800eb4c:	443b      	add	r3, r7
 800eb4e:	9309      	str	r3, [sp, #36]	@ 0x24
 800eb50:	e76a      	b.n	800ea28 <_vfiprintf_r+0x78>
 800eb52:	fb0c 3202 	mla	r2, ip, r2, r3
 800eb56:	460c      	mov	r4, r1
 800eb58:	2001      	movs	r0, #1
 800eb5a:	e7a8      	b.n	800eaae <_vfiprintf_r+0xfe>
 800eb5c:	2300      	movs	r3, #0
 800eb5e:	3401      	adds	r4, #1
 800eb60:	9305      	str	r3, [sp, #20]
 800eb62:	4619      	mov	r1, r3
 800eb64:	f04f 0c0a 	mov.w	ip, #10
 800eb68:	4620      	mov	r0, r4
 800eb6a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800eb6e:	3a30      	subs	r2, #48	@ 0x30
 800eb70:	2a09      	cmp	r2, #9
 800eb72:	d903      	bls.n	800eb7c <_vfiprintf_r+0x1cc>
 800eb74:	2b00      	cmp	r3, #0
 800eb76:	d0c6      	beq.n	800eb06 <_vfiprintf_r+0x156>
 800eb78:	9105      	str	r1, [sp, #20]
 800eb7a:	e7c4      	b.n	800eb06 <_vfiprintf_r+0x156>
 800eb7c:	fb0c 2101 	mla	r1, ip, r1, r2
 800eb80:	4604      	mov	r4, r0
 800eb82:	2301      	movs	r3, #1
 800eb84:	e7f0      	b.n	800eb68 <_vfiprintf_r+0x1b8>
 800eb86:	ab03      	add	r3, sp, #12
 800eb88:	9300      	str	r3, [sp, #0]
 800eb8a:	462a      	mov	r2, r5
 800eb8c:	4b12      	ldr	r3, [pc, #72]	@ (800ebd8 <_vfiprintf_r+0x228>)
 800eb8e:	a904      	add	r1, sp, #16
 800eb90:	4630      	mov	r0, r6
 800eb92:	f3af 8000 	nop.w
 800eb96:	4607      	mov	r7, r0
 800eb98:	1c78      	adds	r0, r7, #1
 800eb9a:	d1d6      	bne.n	800eb4a <_vfiprintf_r+0x19a>
 800eb9c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800eb9e:	07d9      	lsls	r1, r3, #31
 800eba0:	d405      	bmi.n	800ebae <_vfiprintf_r+0x1fe>
 800eba2:	89ab      	ldrh	r3, [r5, #12]
 800eba4:	059a      	lsls	r2, r3, #22
 800eba6:	d402      	bmi.n	800ebae <_vfiprintf_r+0x1fe>
 800eba8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800ebaa:	f7fe f977 	bl	800ce9c <__retarget_lock_release_recursive>
 800ebae:	89ab      	ldrh	r3, [r5, #12]
 800ebb0:	065b      	lsls	r3, r3, #25
 800ebb2:	f53f af1f 	bmi.w	800e9f4 <_vfiprintf_r+0x44>
 800ebb6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ebb8:	e71e      	b.n	800e9f8 <_vfiprintf_r+0x48>
 800ebba:	ab03      	add	r3, sp, #12
 800ebbc:	9300      	str	r3, [sp, #0]
 800ebbe:	462a      	mov	r2, r5
 800ebc0:	4b05      	ldr	r3, [pc, #20]	@ (800ebd8 <_vfiprintf_r+0x228>)
 800ebc2:	a904      	add	r1, sp, #16
 800ebc4:	4630      	mov	r0, r6
 800ebc6:	f7ff fc4b 	bl	800e460 <_printf_i>
 800ebca:	e7e4      	b.n	800eb96 <_vfiprintf_r+0x1e6>
 800ebcc:	0800f5d9 	.word	0x0800f5d9
 800ebd0:	0800f5e3 	.word	0x0800f5e3
 800ebd4:	00000000 	.word	0x00000000
 800ebd8:	0800e98d 	.word	0x0800e98d
 800ebdc:	0800f5df 	.word	0x0800f5df

0800ebe0 <__swbuf_r>:
 800ebe0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ebe2:	460e      	mov	r6, r1
 800ebe4:	4614      	mov	r4, r2
 800ebe6:	4605      	mov	r5, r0
 800ebe8:	b118      	cbz	r0, 800ebf2 <__swbuf_r+0x12>
 800ebea:	6a03      	ldr	r3, [r0, #32]
 800ebec:	b90b      	cbnz	r3, 800ebf2 <__swbuf_r+0x12>
 800ebee:	f7fe f82f 	bl	800cc50 <__sinit>
 800ebf2:	69a3      	ldr	r3, [r4, #24]
 800ebf4:	60a3      	str	r3, [r4, #8]
 800ebf6:	89a3      	ldrh	r3, [r4, #12]
 800ebf8:	071a      	lsls	r2, r3, #28
 800ebfa:	d501      	bpl.n	800ec00 <__swbuf_r+0x20>
 800ebfc:	6923      	ldr	r3, [r4, #16]
 800ebfe:	b943      	cbnz	r3, 800ec12 <__swbuf_r+0x32>
 800ec00:	4621      	mov	r1, r4
 800ec02:	4628      	mov	r0, r5
 800ec04:	f000 f82a 	bl	800ec5c <__swsetup_r>
 800ec08:	b118      	cbz	r0, 800ec12 <__swbuf_r+0x32>
 800ec0a:	f04f 37ff 	mov.w	r7, #4294967295
 800ec0e:	4638      	mov	r0, r7
 800ec10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ec12:	6823      	ldr	r3, [r4, #0]
 800ec14:	6922      	ldr	r2, [r4, #16]
 800ec16:	1a98      	subs	r0, r3, r2
 800ec18:	6963      	ldr	r3, [r4, #20]
 800ec1a:	b2f6      	uxtb	r6, r6
 800ec1c:	4283      	cmp	r3, r0
 800ec1e:	4637      	mov	r7, r6
 800ec20:	dc05      	bgt.n	800ec2e <__swbuf_r+0x4e>
 800ec22:	4621      	mov	r1, r4
 800ec24:	4628      	mov	r0, r5
 800ec26:	f7ff fdbf 	bl	800e7a8 <_fflush_r>
 800ec2a:	2800      	cmp	r0, #0
 800ec2c:	d1ed      	bne.n	800ec0a <__swbuf_r+0x2a>
 800ec2e:	68a3      	ldr	r3, [r4, #8]
 800ec30:	3b01      	subs	r3, #1
 800ec32:	60a3      	str	r3, [r4, #8]
 800ec34:	6823      	ldr	r3, [r4, #0]
 800ec36:	1c5a      	adds	r2, r3, #1
 800ec38:	6022      	str	r2, [r4, #0]
 800ec3a:	701e      	strb	r6, [r3, #0]
 800ec3c:	6962      	ldr	r2, [r4, #20]
 800ec3e:	1c43      	adds	r3, r0, #1
 800ec40:	429a      	cmp	r2, r3
 800ec42:	d004      	beq.n	800ec4e <__swbuf_r+0x6e>
 800ec44:	89a3      	ldrh	r3, [r4, #12]
 800ec46:	07db      	lsls	r3, r3, #31
 800ec48:	d5e1      	bpl.n	800ec0e <__swbuf_r+0x2e>
 800ec4a:	2e0a      	cmp	r6, #10
 800ec4c:	d1df      	bne.n	800ec0e <__swbuf_r+0x2e>
 800ec4e:	4621      	mov	r1, r4
 800ec50:	4628      	mov	r0, r5
 800ec52:	f7ff fda9 	bl	800e7a8 <_fflush_r>
 800ec56:	2800      	cmp	r0, #0
 800ec58:	d0d9      	beq.n	800ec0e <__swbuf_r+0x2e>
 800ec5a:	e7d6      	b.n	800ec0a <__swbuf_r+0x2a>

0800ec5c <__swsetup_r>:
 800ec5c:	b538      	push	{r3, r4, r5, lr}
 800ec5e:	4b29      	ldr	r3, [pc, #164]	@ (800ed04 <__swsetup_r+0xa8>)
 800ec60:	4605      	mov	r5, r0
 800ec62:	6818      	ldr	r0, [r3, #0]
 800ec64:	460c      	mov	r4, r1
 800ec66:	b118      	cbz	r0, 800ec70 <__swsetup_r+0x14>
 800ec68:	6a03      	ldr	r3, [r0, #32]
 800ec6a:	b90b      	cbnz	r3, 800ec70 <__swsetup_r+0x14>
 800ec6c:	f7fd fff0 	bl	800cc50 <__sinit>
 800ec70:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ec74:	0719      	lsls	r1, r3, #28
 800ec76:	d422      	bmi.n	800ecbe <__swsetup_r+0x62>
 800ec78:	06da      	lsls	r2, r3, #27
 800ec7a:	d407      	bmi.n	800ec8c <__swsetup_r+0x30>
 800ec7c:	2209      	movs	r2, #9
 800ec7e:	602a      	str	r2, [r5, #0]
 800ec80:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800ec84:	81a3      	strh	r3, [r4, #12]
 800ec86:	f04f 30ff 	mov.w	r0, #4294967295
 800ec8a:	e033      	b.n	800ecf4 <__swsetup_r+0x98>
 800ec8c:	0758      	lsls	r0, r3, #29
 800ec8e:	d512      	bpl.n	800ecb6 <__swsetup_r+0x5a>
 800ec90:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800ec92:	b141      	cbz	r1, 800eca6 <__swsetup_r+0x4a>
 800ec94:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800ec98:	4299      	cmp	r1, r3
 800ec9a:	d002      	beq.n	800eca2 <__swsetup_r+0x46>
 800ec9c:	4628      	mov	r0, r5
 800ec9e:	f7fe f917 	bl	800ced0 <_free_r>
 800eca2:	2300      	movs	r3, #0
 800eca4:	6363      	str	r3, [r4, #52]	@ 0x34
 800eca6:	89a3      	ldrh	r3, [r4, #12]
 800eca8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800ecac:	81a3      	strh	r3, [r4, #12]
 800ecae:	2300      	movs	r3, #0
 800ecb0:	6063      	str	r3, [r4, #4]
 800ecb2:	6923      	ldr	r3, [r4, #16]
 800ecb4:	6023      	str	r3, [r4, #0]
 800ecb6:	89a3      	ldrh	r3, [r4, #12]
 800ecb8:	f043 0308 	orr.w	r3, r3, #8
 800ecbc:	81a3      	strh	r3, [r4, #12]
 800ecbe:	6923      	ldr	r3, [r4, #16]
 800ecc0:	b94b      	cbnz	r3, 800ecd6 <__swsetup_r+0x7a>
 800ecc2:	89a3      	ldrh	r3, [r4, #12]
 800ecc4:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800ecc8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800eccc:	d003      	beq.n	800ecd6 <__swsetup_r+0x7a>
 800ecce:	4621      	mov	r1, r4
 800ecd0:	4628      	mov	r0, r5
 800ecd2:	f000 f883 	bl	800eddc <__smakebuf_r>
 800ecd6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ecda:	f013 0201 	ands.w	r2, r3, #1
 800ecde:	d00a      	beq.n	800ecf6 <__swsetup_r+0x9a>
 800ece0:	2200      	movs	r2, #0
 800ece2:	60a2      	str	r2, [r4, #8]
 800ece4:	6962      	ldr	r2, [r4, #20]
 800ece6:	4252      	negs	r2, r2
 800ece8:	61a2      	str	r2, [r4, #24]
 800ecea:	6922      	ldr	r2, [r4, #16]
 800ecec:	b942      	cbnz	r2, 800ed00 <__swsetup_r+0xa4>
 800ecee:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800ecf2:	d1c5      	bne.n	800ec80 <__swsetup_r+0x24>
 800ecf4:	bd38      	pop	{r3, r4, r5, pc}
 800ecf6:	0799      	lsls	r1, r3, #30
 800ecf8:	bf58      	it	pl
 800ecfa:	6962      	ldrpl	r2, [r4, #20]
 800ecfc:	60a2      	str	r2, [r4, #8]
 800ecfe:	e7f4      	b.n	800ecea <__swsetup_r+0x8e>
 800ed00:	2000      	movs	r0, #0
 800ed02:	e7f7      	b.n	800ecf4 <__swsetup_r+0x98>
 800ed04:	200001c0 	.word	0x200001c0

0800ed08 <_raise_r>:
 800ed08:	291f      	cmp	r1, #31
 800ed0a:	b538      	push	{r3, r4, r5, lr}
 800ed0c:	4605      	mov	r5, r0
 800ed0e:	460c      	mov	r4, r1
 800ed10:	d904      	bls.n	800ed1c <_raise_r+0x14>
 800ed12:	2316      	movs	r3, #22
 800ed14:	6003      	str	r3, [r0, #0]
 800ed16:	f04f 30ff 	mov.w	r0, #4294967295
 800ed1a:	bd38      	pop	{r3, r4, r5, pc}
 800ed1c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800ed1e:	b112      	cbz	r2, 800ed26 <_raise_r+0x1e>
 800ed20:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ed24:	b94b      	cbnz	r3, 800ed3a <_raise_r+0x32>
 800ed26:	4628      	mov	r0, r5
 800ed28:	f000 f830 	bl	800ed8c <_getpid_r>
 800ed2c:	4622      	mov	r2, r4
 800ed2e:	4601      	mov	r1, r0
 800ed30:	4628      	mov	r0, r5
 800ed32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ed36:	f000 b817 	b.w	800ed68 <_kill_r>
 800ed3a:	2b01      	cmp	r3, #1
 800ed3c:	d00a      	beq.n	800ed54 <_raise_r+0x4c>
 800ed3e:	1c59      	adds	r1, r3, #1
 800ed40:	d103      	bne.n	800ed4a <_raise_r+0x42>
 800ed42:	2316      	movs	r3, #22
 800ed44:	6003      	str	r3, [r0, #0]
 800ed46:	2001      	movs	r0, #1
 800ed48:	e7e7      	b.n	800ed1a <_raise_r+0x12>
 800ed4a:	2100      	movs	r1, #0
 800ed4c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800ed50:	4620      	mov	r0, r4
 800ed52:	4798      	blx	r3
 800ed54:	2000      	movs	r0, #0
 800ed56:	e7e0      	b.n	800ed1a <_raise_r+0x12>

0800ed58 <raise>:
 800ed58:	4b02      	ldr	r3, [pc, #8]	@ (800ed64 <raise+0xc>)
 800ed5a:	4601      	mov	r1, r0
 800ed5c:	6818      	ldr	r0, [r3, #0]
 800ed5e:	f7ff bfd3 	b.w	800ed08 <_raise_r>
 800ed62:	bf00      	nop
 800ed64:	200001c0 	.word	0x200001c0

0800ed68 <_kill_r>:
 800ed68:	b538      	push	{r3, r4, r5, lr}
 800ed6a:	4d07      	ldr	r5, [pc, #28]	@ (800ed88 <_kill_r+0x20>)
 800ed6c:	2300      	movs	r3, #0
 800ed6e:	4604      	mov	r4, r0
 800ed70:	4608      	mov	r0, r1
 800ed72:	4611      	mov	r1, r2
 800ed74:	602b      	str	r3, [r5, #0]
 800ed76:	f7f4 f9e3 	bl	8003140 <_kill>
 800ed7a:	1c43      	adds	r3, r0, #1
 800ed7c:	d102      	bne.n	800ed84 <_kill_r+0x1c>
 800ed7e:	682b      	ldr	r3, [r5, #0]
 800ed80:	b103      	cbz	r3, 800ed84 <_kill_r+0x1c>
 800ed82:	6023      	str	r3, [r4, #0]
 800ed84:	bd38      	pop	{r3, r4, r5, pc}
 800ed86:	bf00      	nop
 800ed88:	20000da8 	.word	0x20000da8

0800ed8c <_getpid_r>:
 800ed8c:	f7f4 b9d0 	b.w	8003130 <_getpid>

0800ed90 <__swhatbuf_r>:
 800ed90:	b570      	push	{r4, r5, r6, lr}
 800ed92:	460c      	mov	r4, r1
 800ed94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ed98:	2900      	cmp	r1, #0
 800ed9a:	b096      	sub	sp, #88	@ 0x58
 800ed9c:	4615      	mov	r5, r2
 800ed9e:	461e      	mov	r6, r3
 800eda0:	da0d      	bge.n	800edbe <__swhatbuf_r+0x2e>
 800eda2:	89a3      	ldrh	r3, [r4, #12]
 800eda4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800eda8:	f04f 0100 	mov.w	r1, #0
 800edac:	bf14      	ite	ne
 800edae:	2340      	movne	r3, #64	@ 0x40
 800edb0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800edb4:	2000      	movs	r0, #0
 800edb6:	6031      	str	r1, [r6, #0]
 800edb8:	602b      	str	r3, [r5, #0]
 800edba:	b016      	add	sp, #88	@ 0x58
 800edbc:	bd70      	pop	{r4, r5, r6, pc}
 800edbe:	466a      	mov	r2, sp
 800edc0:	f000 f848 	bl	800ee54 <_fstat_r>
 800edc4:	2800      	cmp	r0, #0
 800edc6:	dbec      	blt.n	800eda2 <__swhatbuf_r+0x12>
 800edc8:	9901      	ldr	r1, [sp, #4]
 800edca:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800edce:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800edd2:	4259      	negs	r1, r3
 800edd4:	4159      	adcs	r1, r3
 800edd6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800edda:	e7eb      	b.n	800edb4 <__swhatbuf_r+0x24>

0800eddc <__smakebuf_r>:
 800eddc:	898b      	ldrh	r3, [r1, #12]
 800edde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ede0:	079d      	lsls	r5, r3, #30
 800ede2:	4606      	mov	r6, r0
 800ede4:	460c      	mov	r4, r1
 800ede6:	d507      	bpl.n	800edf8 <__smakebuf_r+0x1c>
 800ede8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800edec:	6023      	str	r3, [r4, #0]
 800edee:	6123      	str	r3, [r4, #16]
 800edf0:	2301      	movs	r3, #1
 800edf2:	6163      	str	r3, [r4, #20]
 800edf4:	b003      	add	sp, #12
 800edf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800edf8:	ab01      	add	r3, sp, #4
 800edfa:	466a      	mov	r2, sp
 800edfc:	f7ff ffc8 	bl	800ed90 <__swhatbuf_r>
 800ee00:	9f00      	ldr	r7, [sp, #0]
 800ee02:	4605      	mov	r5, r0
 800ee04:	4639      	mov	r1, r7
 800ee06:	4630      	mov	r0, r6
 800ee08:	f7fe fc08 	bl	800d61c <_malloc_r>
 800ee0c:	b948      	cbnz	r0, 800ee22 <__smakebuf_r+0x46>
 800ee0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ee12:	059a      	lsls	r2, r3, #22
 800ee14:	d4ee      	bmi.n	800edf4 <__smakebuf_r+0x18>
 800ee16:	f023 0303 	bic.w	r3, r3, #3
 800ee1a:	f043 0302 	orr.w	r3, r3, #2
 800ee1e:	81a3      	strh	r3, [r4, #12]
 800ee20:	e7e2      	b.n	800ede8 <__smakebuf_r+0xc>
 800ee22:	89a3      	ldrh	r3, [r4, #12]
 800ee24:	6020      	str	r0, [r4, #0]
 800ee26:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800ee2a:	81a3      	strh	r3, [r4, #12]
 800ee2c:	9b01      	ldr	r3, [sp, #4]
 800ee2e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800ee32:	b15b      	cbz	r3, 800ee4c <__smakebuf_r+0x70>
 800ee34:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ee38:	4630      	mov	r0, r6
 800ee3a:	f000 f81d 	bl	800ee78 <_isatty_r>
 800ee3e:	b128      	cbz	r0, 800ee4c <__smakebuf_r+0x70>
 800ee40:	89a3      	ldrh	r3, [r4, #12]
 800ee42:	f023 0303 	bic.w	r3, r3, #3
 800ee46:	f043 0301 	orr.w	r3, r3, #1
 800ee4a:	81a3      	strh	r3, [r4, #12]
 800ee4c:	89a3      	ldrh	r3, [r4, #12]
 800ee4e:	431d      	orrs	r5, r3
 800ee50:	81a5      	strh	r5, [r4, #12]
 800ee52:	e7cf      	b.n	800edf4 <__smakebuf_r+0x18>

0800ee54 <_fstat_r>:
 800ee54:	b538      	push	{r3, r4, r5, lr}
 800ee56:	4d07      	ldr	r5, [pc, #28]	@ (800ee74 <_fstat_r+0x20>)
 800ee58:	2300      	movs	r3, #0
 800ee5a:	4604      	mov	r4, r0
 800ee5c:	4608      	mov	r0, r1
 800ee5e:	4611      	mov	r1, r2
 800ee60:	602b      	str	r3, [r5, #0]
 800ee62:	f7f4 f9cd 	bl	8003200 <_fstat>
 800ee66:	1c43      	adds	r3, r0, #1
 800ee68:	d102      	bne.n	800ee70 <_fstat_r+0x1c>
 800ee6a:	682b      	ldr	r3, [r5, #0]
 800ee6c:	b103      	cbz	r3, 800ee70 <_fstat_r+0x1c>
 800ee6e:	6023      	str	r3, [r4, #0]
 800ee70:	bd38      	pop	{r3, r4, r5, pc}
 800ee72:	bf00      	nop
 800ee74:	20000da8 	.word	0x20000da8

0800ee78 <_isatty_r>:
 800ee78:	b538      	push	{r3, r4, r5, lr}
 800ee7a:	4d06      	ldr	r5, [pc, #24]	@ (800ee94 <_isatty_r+0x1c>)
 800ee7c:	2300      	movs	r3, #0
 800ee7e:	4604      	mov	r4, r0
 800ee80:	4608      	mov	r0, r1
 800ee82:	602b      	str	r3, [r5, #0]
 800ee84:	f7f4 f9cc 	bl	8003220 <_isatty>
 800ee88:	1c43      	adds	r3, r0, #1
 800ee8a:	d102      	bne.n	800ee92 <_isatty_r+0x1a>
 800ee8c:	682b      	ldr	r3, [r5, #0]
 800ee8e:	b103      	cbz	r3, 800ee92 <_isatty_r+0x1a>
 800ee90:	6023      	str	r3, [r4, #0]
 800ee92:	bd38      	pop	{r3, r4, r5, pc}
 800ee94:	20000da8 	.word	0x20000da8

0800ee98 <fmod>:
 800ee98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ee9a:	ed2d 8b02 	vpush	{d8}
 800ee9e:	ec57 6b10 	vmov	r6, r7, d0
 800eea2:	ec55 4b11 	vmov	r4, r5, d1
 800eea6:	f000 f8a3 	bl	800eff0 <__ieee754_fmod>
 800eeaa:	4622      	mov	r2, r4
 800eeac:	462b      	mov	r3, r5
 800eeae:	4630      	mov	r0, r6
 800eeb0:	4639      	mov	r1, r7
 800eeb2:	eeb0 8a40 	vmov.f32	s16, s0
 800eeb6:	eef0 8a60 	vmov.f32	s17, s1
 800eeba:	f7f1 fe5f 	bl	8000b7c <__aeabi_dcmpun>
 800eebe:	b990      	cbnz	r0, 800eee6 <fmod+0x4e>
 800eec0:	2200      	movs	r2, #0
 800eec2:	2300      	movs	r3, #0
 800eec4:	4620      	mov	r0, r4
 800eec6:	4629      	mov	r1, r5
 800eec8:	f7f1 fe26 	bl	8000b18 <__aeabi_dcmpeq>
 800eecc:	b158      	cbz	r0, 800eee6 <fmod+0x4e>
 800eece:	f7fd ffb9 	bl	800ce44 <__errno>
 800eed2:	2321      	movs	r3, #33	@ 0x21
 800eed4:	6003      	str	r3, [r0, #0]
 800eed6:	2200      	movs	r2, #0
 800eed8:	2300      	movs	r3, #0
 800eeda:	4610      	mov	r0, r2
 800eedc:	4619      	mov	r1, r3
 800eede:	f7f1 fcdd 	bl	800089c <__aeabi_ddiv>
 800eee2:	ec41 0b18 	vmov	d8, r0, r1
 800eee6:	eeb0 0a48 	vmov.f32	s0, s16
 800eeea:	eef0 0a68 	vmov.f32	s1, s17
 800eeee:	ecbd 8b02 	vpop	{d8}
 800eef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eef4:	0000      	movs	r0, r0
	...

0800eef8 <floor>:
 800eef8:	ec51 0b10 	vmov	r0, r1, d0
 800eefc:	f3c1 530a 	ubfx	r3, r1, #20, #11
 800ef00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef04:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 800ef08:	2e13      	cmp	r6, #19
 800ef0a:	460c      	mov	r4, r1
 800ef0c:	4605      	mov	r5, r0
 800ef0e:	4680      	mov	r8, r0
 800ef10:	dc34      	bgt.n	800ef7c <floor+0x84>
 800ef12:	2e00      	cmp	r6, #0
 800ef14:	da17      	bge.n	800ef46 <floor+0x4e>
 800ef16:	a332      	add	r3, pc, #200	@ (adr r3, 800efe0 <floor+0xe8>)
 800ef18:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ef1c:	f7f1 f9de 	bl	80002dc <__adddf3>
 800ef20:	2200      	movs	r2, #0
 800ef22:	2300      	movs	r3, #0
 800ef24:	f7f1 fe20 	bl	8000b68 <__aeabi_dcmpgt>
 800ef28:	b150      	cbz	r0, 800ef40 <floor+0x48>
 800ef2a:	2c00      	cmp	r4, #0
 800ef2c:	da55      	bge.n	800efda <floor+0xe2>
 800ef2e:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 800ef32:	432c      	orrs	r4, r5
 800ef34:	2500      	movs	r5, #0
 800ef36:	42ac      	cmp	r4, r5
 800ef38:	4c2b      	ldr	r4, [pc, #172]	@ (800efe8 <floor+0xf0>)
 800ef3a:	bf08      	it	eq
 800ef3c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 800ef40:	4621      	mov	r1, r4
 800ef42:	4628      	mov	r0, r5
 800ef44:	e023      	b.n	800ef8e <floor+0x96>
 800ef46:	4f29      	ldr	r7, [pc, #164]	@ (800efec <floor+0xf4>)
 800ef48:	4137      	asrs	r7, r6
 800ef4a:	ea01 0307 	and.w	r3, r1, r7
 800ef4e:	4303      	orrs	r3, r0
 800ef50:	d01d      	beq.n	800ef8e <floor+0x96>
 800ef52:	a323      	add	r3, pc, #140	@ (adr r3, 800efe0 <floor+0xe8>)
 800ef54:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ef58:	f7f1 f9c0 	bl	80002dc <__adddf3>
 800ef5c:	2200      	movs	r2, #0
 800ef5e:	2300      	movs	r3, #0
 800ef60:	f7f1 fe02 	bl	8000b68 <__aeabi_dcmpgt>
 800ef64:	2800      	cmp	r0, #0
 800ef66:	d0eb      	beq.n	800ef40 <floor+0x48>
 800ef68:	2c00      	cmp	r4, #0
 800ef6a:	bfbe      	ittt	lt
 800ef6c:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 800ef70:	4133      	asrlt	r3, r6
 800ef72:	18e4      	addlt	r4, r4, r3
 800ef74:	ea24 0407 	bic.w	r4, r4, r7
 800ef78:	2500      	movs	r5, #0
 800ef7a:	e7e1      	b.n	800ef40 <floor+0x48>
 800ef7c:	2e33      	cmp	r6, #51	@ 0x33
 800ef7e:	dd0a      	ble.n	800ef96 <floor+0x9e>
 800ef80:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 800ef84:	d103      	bne.n	800ef8e <floor+0x96>
 800ef86:	4602      	mov	r2, r0
 800ef88:	460b      	mov	r3, r1
 800ef8a:	f7f1 f9a7 	bl	80002dc <__adddf3>
 800ef8e:	ec41 0b10 	vmov	d0, r0, r1
 800ef92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ef96:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 800ef9a:	f04f 37ff 	mov.w	r7, #4294967295
 800ef9e:	40df      	lsrs	r7, r3
 800efa0:	4207      	tst	r7, r0
 800efa2:	d0f4      	beq.n	800ef8e <floor+0x96>
 800efa4:	a30e      	add	r3, pc, #56	@ (adr r3, 800efe0 <floor+0xe8>)
 800efa6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800efaa:	f7f1 f997 	bl	80002dc <__adddf3>
 800efae:	2200      	movs	r2, #0
 800efb0:	2300      	movs	r3, #0
 800efb2:	f7f1 fdd9 	bl	8000b68 <__aeabi_dcmpgt>
 800efb6:	2800      	cmp	r0, #0
 800efb8:	d0c2      	beq.n	800ef40 <floor+0x48>
 800efba:	2c00      	cmp	r4, #0
 800efbc:	da0a      	bge.n	800efd4 <floor+0xdc>
 800efbe:	2e14      	cmp	r6, #20
 800efc0:	d101      	bne.n	800efc6 <floor+0xce>
 800efc2:	3401      	adds	r4, #1
 800efc4:	e006      	b.n	800efd4 <floor+0xdc>
 800efc6:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 800efca:	2301      	movs	r3, #1
 800efcc:	40b3      	lsls	r3, r6
 800efce:	441d      	add	r5, r3
 800efd0:	4545      	cmp	r5, r8
 800efd2:	d3f6      	bcc.n	800efc2 <floor+0xca>
 800efd4:	ea25 0507 	bic.w	r5, r5, r7
 800efd8:	e7b2      	b.n	800ef40 <floor+0x48>
 800efda:	2500      	movs	r5, #0
 800efdc:	462c      	mov	r4, r5
 800efde:	e7af      	b.n	800ef40 <floor+0x48>
 800efe0:	8800759c 	.word	0x8800759c
 800efe4:	7e37e43c 	.word	0x7e37e43c
 800efe8:	bff00000 	.word	0xbff00000
 800efec:	000fffff 	.word	0x000fffff

0800eff0 <__ieee754_fmod>:
 800eff0:	ec53 2b11 	vmov	r2, r3, d1
 800eff4:	f023 4c00 	bic.w	ip, r3, #2147483648	@ 0x80000000
 800eff8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800effc:	ea52 040c 	orrs.w	r4, r2, ip
 800f000:	ec51 0b10 	vmov	r0, r1, d0
 800f004:	461e      	mov	r6, r3
 800f006:	4617      	mov	r7, r2
 800f008:	4696      	mov	lr, r2
 800f00a:	d00c      	beq.n	800f026 <__ieee754_fmod+0x36>
 800f00c:	4c77      	ldr	r4, [pc, #476]	@ (800f1ec <__ieee754_fmod+0x1fc>)
 800f00e:	f021 4800 	bic.w	r8, r1, #2147483648	@ 0x80000000
 800f012:	45a0      	cmp	r8, r4
 800f014:	4689      	mov	r9, r1
 800f016:	d806      	bhi.n	800f026 <__ieee754_fmod+0x36>
 800f018:	4254      	negs	r4, r2
 800f01a:	4d75      	ldr	r5, [pc, #468]	@ (800f1f0 <__ieee754_fmod+0x200>)
 800f01c:	4314      	orrs	r4, r2
 800f01e:	ea4c 74d4 	orr.w	r4, ip, r4, lsr #31
 800f022:	42ac      	cmp	r4, r5
 800f024:	d909      	bls.n	800f03a <__ieee754_fmod+0x4a>
 800f026:	f7f1 fb0f 	bl	8000648 <__aeabi_dmul>
 800f02a:	4602      	mov	r2, r0
 800f02c:	460b      	mov	r3, r1
 800f02e:	f7f1 fc35 	bl	800089c <__aeabi_ddiv>
 800f032:	ec41 0b10 	vmov	d0, r0, r1
 800f036:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f03a:	45e0      	cmp	r8, ip
 800f03c:	4682      	mov	sl, r0
 800f03e:	4604      	mov	r4, r0
 800f040:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800f044:	dc09      	bgt.n	800f05a <__ieee754_fmod+0x6a>
 800f046:	dbf4      	blt.n	800f032 <__ieee754_fmod+0x42>
 800f048:	4282      	cmp	r2, r0
 800f04a:	d8f2      	bhi.n	800f032 <__ieee754_fmod+0x42>
 800f04c:	d105      	bne.n	800f05a <__ieee754_fmod+0x6a>
 800f04e:	4b69      	ldr	r3, [pc, #420]	@ (800f1f4 <__ieee754_fmod+0x204>)
 800f050:	eb03 7315 	add.w	r3, r3, r5, lsr #28
 800f054:	e9d3 0100 	ldrd	r0, r1, [r3]
 800f058:	e7eb      	b.n	800f032 <__ieee754_fmod+0x42>
 800f05a:	4a65      	ldr	r2, [pc, #404]	@ (800f1f0 <__ieee754_fmod+0x200>)
 800f05c:	ea19 0f02 	tst.w	r9, r2
 800f060:	d148      	bne.n	800f0f4 <__ieee754_fmod+0x104>
 800f062:	f1b8 0f00 	cmp.w	r8, #0
 800f066:	d13d      	bne.n	800f0e4 <__ieee754_fmod+0xf4>
 800f068:	4963      	ldr	r1, [pc, #396]	@ (800f1f8 <__ieee754_fmod+0x208>)
 800f06a:	4653      	mov	r3, sl
 800f06c:	2b00      	cmp	r3, #0
 800f06e:	dc36      	bgt.n	800f0de <__ieee754_fmod+0xee>
 800f070:	4216      	tst	r6, r2
 800f072:	d14f      	bne.n	800f114 <__ieee754_fmod+0x124>
 800f074:	f1bc 0f00 	cmp.w	ip, #0
 800f078:	d144      	bne.n	800f104 <__ieee754_fmod+0x114>
 800f07a:	4a5f      	ldr	r2, [pc, #380]	@ (800f1f8 <__ieee754_fmod+0x208>)
 800f07c:	463b      	mov	r3, r7
 800f07e:	2b00      	cmp	r3, #0
 800f080:	dc3d      	bgt.n	800f0fe <__ieee754_fmod+0x10e>
 800f082:	485e      	ldr	r0, [pc, #376]	@ (800f1fc <__ieee754_fmod+0x20c>)
 800f084:	4281      	cmp	r1, r0
 800f086:	db4a      	blt.n	800f11e <__ieee754_fmod+0x12e>
 800f088:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800f08c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800f090:	485a      	ldr	r0, [pc, #360]	@ (800f1fc <__ieee754_fmod+0x20c>)
 800f092:	4282      	cmp	r2, r0
 800f094:	db57      	blt.n	800f146 <__ieee754_fmod+0x156>
 800f096:	f3c6 0613 	ubfx	r6, r6, #0, #20
 800f09a:	f446 1680 	orr.w	r6, r6, #1048576	@ 0x100000
 800f09e:	1a89      	subs	r1, r1, r2
 800f0a0:	1b98      	subs	r0, r3, r6
 800f0a2:	eba4 070e 	sub.w	r7, r4, lr
 800f0a6:	2900      	cmp	r1, #0
 800f0a8:	d162      	bne.n	800f170 <__ieee754_fmod+0x180>
 800f0aa:	4574      	cmp	r4, lr
 800f0ac:	bf38      	it	cc
 800f0ae:	f100 30ff 	addcc.w	r0, r0, #4294967295
 800f0b2:	2800      	cmp	r0, #0
 800f0b4:	bfa4      	itt	ge
 800f0b6:	463c      	movge	r4, r7
 800f0b8:	4603      	movge	r3, r0
 800f0ba:	ea53 0104 	orrs.w	r1, r3, r4
 800f0be:	d0c6      	beq.n	800f04e <__ieee754_fmod+0x5e>
 800f0c0:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800f0c4:	db69      	blt.n	800f19a <__ieee754_fmod+0x1aa>
 800f0c6:	494d      	ldr	r1, [pc, #308]	@ (800f1fc <__ieee754_fmod+0x20c>)
 800f0c8:	428a      	cmp	r2, r1
 800f0ca:	db6c      	blt.n	800f1a6 <__ieee754_fmod+0x1b6>
 800f0cc:	f5a3 1380 	sub.w	r3, r3, #1048576	@ 0x100000
 800f0d0:	432b      	orrs	r3, r5
 800f0d2:	f202 32ff 	addw	r2, r2, #1023	@ 0x3ff
 800f0d6:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 800f0da:	4620      	mov	r0, r4
 800f0dc:	e7a9      	b.n	800f032 <__ieee754_fmod+0x42>
 800f0de:	3901      	subs	r1, #1
 800f0e0:	005b      	lsls	r3, r3, #1
 800f0e2:	e7c3      	b.n	800f06c <__ieee754_fmod+0x7c>
 800f0e4:	4945      	ldr	r1, [pc, #276]	@ (800f1fc <__ieee754_fmod+0x20c>)
 800f0e6:	ea4f 23c8 	mov.w	r3, r8, lsl #11
 800f0ea:	2b00      	cmp	r3, #0
 800f0ec:	ddc0      	ble.n	800f070 <__ieee754_fmod+0x80>
 800f0ee:	3901      	subs	r1, #1
 800f0f0:	005b      	lsls	r3, r3, #1
 800f0f2:	e7fa      	b.n	800f0ea <__ieee754_fmod+0xfa>
 800f0f4:	ea4f 5128 	mov.w	r1, r8, asr #20
 800f0f8:	f2a1 31ff 	subw	r1, r1, #1023	@ 0x3ff
 800f0fc:	e7b8      	b.n	800f070 <__ieee754_fmod+0x80>
 800f0fe:	3a01      	subs	r2, #1
 800f100:	005b      	lsls	r3, r3, #1
 800f102:	e7bc      	b.n	800f07e <__ieee754_fmod+0x8e>
 800f104:	4a3d      	ldr	r2, [pc, #244]	@ (800f1fc <__ieee754_fmod+0x20c>)
 800f106:	ea4f 23cc 	mov.w	r3, ip, lsl #11
 800f10a:	2b00      	cmp	r3, #0
 800f10c:	ddb9      	ble.n	800f082 <__ieee754_fmod+0x92>
 800f10e:	3a01      	subs	r2, #1
 800f110:	005b      	lsls	r3, r3, #1
 800f112:	e7fa      	b.n	800f10a <__ieee754_fmod+0x11a>
 800f114:	ea4f 522c 	mov.w	r2, ip, asr #20
 800f118:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 800f11c:	e7b1      	b.n	800f082 <__ieee754_fmod+0x92>
 800f11e:	1a40      	subs	r0, r0, r1
 800f120:	281f      	cmp	r0, #31
 800f122:	dc0a      	bgt.n	800f13a <__ieee754_fmod+0x14a>
 800f124:	f201 431e 	addw	r3, r1, #1054	@ 0x41e
 800f128:	fa08 f800 	lsl.w	r8, r8, r0
 800f12c:	fa2a f303 	lsr.w	r3, sl, r3
 800f130:	ea43 0308 	orr.w	r3, r3, r8
 800f134:	fa0a f400 	lsl.w	r4, sl, r0
 800f138:	e7aa      	b.n	800f090 <__ieee754_fmod+0xa0>
 800f13a:	4b31      	ldr	r3, [pc, #196]	@ (800f200 <__ieee754_fmod+0x210>)
 800f13c:	1a5b      	subs	r3, r3, r1
 800f13e:	fa0a f303 	lsl.w	r3, sl, r3
 800f142:	2400      	movs	r4, #0
 800f144:	e7a4      	b.n	800f090 <__ieee754_fmod+0xa0>
 800f146:	1a80      	subs	r0, r0, r2
 800f148:	281f      	cmp	r0, #31
 800f14a:	dc0a      	bgt.n	800f162 <__ieee754_fmod+0x172>
 800f14c:	f202 461e 	addw	r6, r2, #1054	@ 0x41e
 800f150:	fa0c fc00 	lsl.w	ip, ip, r0
 800f154:	fa27 f606 	lsr.w	r6, r7, r6
 800f158:	ea46 060c 	orr.w	r6, r6, ip
 800f15c:	fa07 fe00 	lsl.w	lr, r7, r0
 800f160:	e79d      	b.n	800f09e <__ieee754_fmod+0xae>
 800f162:	4e27      	ldr	r6, [pc, #156]	@ (800f200 <__ieee754_fmod+0x210>)
 800f164:	1ab6      	subs	r6, r6, r2
 800f166:	fa07 f606 	lsl.w	r6, r7, r6
 800f16a:	f04f 0e00 	mov.w	lr, #0
 800f16e:	e796      	b.n	800f09e <__ieee754_fmod+0xae>
 800f170:	4574      	cmp	r4, lr
 800f172:	bf38      	it	cc
 800f174:	f100 30ff 	addcc.w	r0, r0, #4294967295
 800f178:	2800      	cmp	r0, #0
 800f17a:	da05      	bge.n	800f188 <__ieee754_fmod+0x198>
 800f17c:	0fe0      	lsrs	r0, r4, #31
 800f17e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800f182:	0064      	lsls	r4, r4, #1
 800f184:	3901      	subs	r1, #1
 800f186:	e78b      	b.n	800f0a0 <__ieee754_fmod+0xb0>
 800f188:	ea50 0307 	orrs.w	r3, r0, r7
 800f18c:	f43f af5f 	beq.w	800f04e <__ieee754_fmod+0x5e>
 800f190:	0ffb      	lsrs	r3, r7, #31
 800f192:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 800f196:	007c      	lsls	r4, r7, #1
 800f198:	e7f4      	b.n	800f184 <__ieee754_fmod+0x194>
 800f19a:	0fe1      	lsrs	r1, r4, #31
 800f19c:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 800f1a0:	0064      	lsls	r4, r4, #1
 800f1a2:	3a01      	subs	r2, #1
 800f1a4:	e78c      	b.n	800f0c0 <__ieee754_fmod+0xd0>
 800f1a6:	1a89      	subs	r1, r1, r2
 800f1a8:	2914      	cmp	r1, #20
 800f1aa:	dc0a      	bgt.n	800f1c2 <__ieee754_fmod+0x1d2>
 800f1ac:	f202 421e 	addw	r2, r2, #1054	@ 0x41e
 800f1b0:	fa03 f202 	lsl.w	r2, r3, r2
 800f1b4:	40cc      	lsrs	r4, r1
 800f1b6:	4322      	orrs	r2, r4
 800f1b8:	410b      	asrs	r3, r1
 800f1ba:	ea43 0105 	orr.w	r1, r3, r5
 800f1be:	4610      	mov	r0, r2
 800f1c0:	e737      	b.n	800f032 <__ieee754_fmod+0x42>
 800f1c2:	291f      	cmp	r1, #31
 800f1c4:	dc07      	bgt.n	800f1d6 <__ieee754_fmod+0x1e6>
 800f1c6:	f202 421e 	addw	r2, r2, #1054	@ 0x41e
 800f1ca:	40cc      	lsrs	r4, r1
 800f1cc:	fa03 f202 	lsl.w	r2, r3, r2
 800f1d0:	4322      	orrs	r2, r4
 800f1d2:	462b      	mov	r3, r5
 800f1d4:	e7f1      	b.n	800f1ba <__ieee754_fmod+0x1ca>
 800f1d6:	f1c2 427f 	rsb	r2, r2, #4278190080	@ 0xff000000
 800f1da:	f502 027f 	add.w	r2, r2, #16711680	@ 0xff0000
 800f1de:	f502 427b 	add.w	r2, r2, #64256	@ 0xfb00
 800f1e2:	32e2      	adds	r2, #226	@ 0xe2
 800f1e4:	fa43 f202 	asr.w	r2, r3, r2
 800f1e8:	e7f3      	b.n	800f1d2 <__ieee754_fmod+0x1e2>
 800f1ea:	bf00      	nop
 800f1ec:	7fefffff 	.word	0x7fefffff
 800f1f0:	7ff00000 	.word	0x7ff00000
 800f1f4:	0800f648 	.word	0x0800f648
 800f1f8:	fffffbed 	.word	0xfffffbed
 800f1fc:	fffffc02 	.word	0xfffffc02
 800f200:	fffffbe2 	.word	0xfffffbe2

0800f204 <_init>:
 800f204:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f206:	bf00      	nop
 800f208:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f20a:	bc08      	pop	{r3}
 800f20c:	469e      	mov	lr, r3
 800f20e:	4770      	bx	lr

0800f210 <_fini>:
 800f210:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f212:	bf00      	nop
 800f214:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800f216:	bc08      	pop	{r3}
 800f218:	469e      	mov	lr, r3
 800f21a:	4770      	bx	lr
